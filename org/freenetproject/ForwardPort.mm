//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/freenetproject/ForwardPort.java
//

#include "J2ObjC_source.h"
#include "org/freenetproject/ForwardPort.h"

@interface OrgFreenetprojectForwardPort () {
 @public
  jint hashCode_;
}

@end

@implementation OrgFreenetprojectForwardPort

+ (jint)PROTOCOL_UDP_IPV4 {
  return OrgFreenetprojectForwardPort_PROTOCOL_UDP_IPV4;
}

+ (jint)PROTOCOL_TCP_IPV4 {
  return OrgFreenetprojectForwardPort_PROTOCOL_TCP_IPV4;
}

- (instancetype)initWithNSString:(NSString *)name
                     withBoolean:(jboolean)isIP6
                         withInt:(jint)protocol
                         withInt:(jint)portNumber {
  OrgFreenetprojectForwardPort_initWithNSString_withBoolean_withInt_withInt_(self, name, isIP6, protocol, portNumber);
  return self;
}

- (NSUInteger)hash {
  return hashCode_;
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (!([o isKindOfClass:[OrgFreenetprojectForwardPort class]])) return false;
  OrgFreenetprojectForwardPort *f = (OrgFreenetprojectForwardPort *) cast_chk(o, [OrgFreenetprojectForwardPort class]);
  return ([((NSString *) nil_chk(((OrgFreenetprojectForwardPort *) nil_chk(f))->name_)) isEqual:name_]) && f->isIP6_ == isIP6_ && f->protocol_ == protocol_ && f->portNumber_ == portNumber_;
}

- (void)dealloc {
  RELEASE_(name_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withBoolean:withInt:withInt:);
  methods[1].selector = @selector(hash);
  methods[2].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "isIP6_", "Z", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "protocol_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "PROTOCOL_UDP_IPV4", "I", .constantValue.asInt = OrgFreenetprojectForwardPort_PROTOCOL_UDP_IPV4, 0x19, -1, -1, -1, -1 },
    { "PROTOCOL_TCP_IPV4", "I", .constantValue.asInt = OrgFreenetprojectForwardPort_PROTOCOL_TCP_IPV4, 0x19, -1, -1, -1, -1 },
    { "portNumber_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "hashCode_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;ZII", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _OrgFreenetprojectForwardPort = { "ForwardPort", "org.freenetproject", ptrTable, methods, fields, 7, 0x1, 3, 7, -1, -1, -1, -1, -1 };
  return &_OrgFreenetprojectForwardPort;
}

@end

void OrgFreenetprojectForwardPort_initWithNSString_withBoolean_withInt_withInt_(OrgFreenetprojectForwardPort *self, NSString *name, jboolean isIP6, jint protocol, jint portNumber) {
  NSObject_init(self);
  JreStrongAssign(&self->name_, name);
  self->isIP6_ = isIP6;
  self->protocol_ = protocol;
  self->portNumber_ = portNumber;
  self->hashCode_ = ((jint) [((NSString *) nil_chk(name)) hash]) | (isIP6 ? 1 : 0) | protocol | portNumber;
}

OrgFreenetprojectForwardPort *new_OrgFreenetprojectForwardPort_initWithNSString_withBoolean_withInt_withInt_(NSString *name, jboolean isIP6, jint protocol, jint portNumber) {
  J2OBJC_NEW_IMPL(OrgFreenetprojectForwardPort, initWithNSString_withBoolean_withInt_withInt_, name, isIP6, protocol, portNumber)
}

OrgFreenetprojectForwardPort *create_OrgFreenetprojectForwardPort_initWithNSString_withBoolean_withInt_withInt_(NSString *name, jboolean isIP6, jint protocol, jint portNumber) {
  J2OBJC_CREATE_IMPL(OrgFreenetprojectForwardPort, initWithNSString_withBoolean_withInt_withInt_, name, isIP6, protocol, portNumber)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgFreenetprojectForwardPort)
