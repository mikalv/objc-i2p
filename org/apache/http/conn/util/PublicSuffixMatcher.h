//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/org/apache/http/conn/util/PublicSuffixMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheHttpConnUtilPublicSuffixMatcher")
#ifdef RESTRICT_OrgApacheHttpConnUtilPublicSuffixMatcher
#define INCLUDE_ALL_OrgApacheHttpConnUtilPublicSuffixMatcher 0
#else
#define INCLUDE_ALL_OrgApacheHttpConnUtilPublicSuffixMatcher 1
#endif
#undef RESTRICT_OrgApacheHttpConnUtilPublicSuffixMatcher

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheHttpConnUtilPublicSuffixMatcher_) && (INCLUDE_ALL_OrgApacheHttpConnUtilPublicSuffixMatcher || defined(INCLUDE_OrgApacheHttpConnUtilPublicSuffixMatcher))
#define OrgApacheHttpConnUtilPublicSuffixMatcher_

@protocol JavaUtilCollection;

@interface OrgApacheHttpConnUtilPublicSuffixMatcher : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)rules
                              withJavaUtilCollection:(id<JavaUtilCollection>)exceptions;

- (NSString *)getDomainRootWithNSString:(NSString *)domain;

- (jboolean)matchesWithNSString:(NSString *)domain;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheHttpConnUtilPublicSuffixMatcher)

FOUNDATION_EXPORT void OrgApacheHttpConnUtilPublicSuffixMatcher_initWithJavaUtilCollection_withJavaUtilCollection_(OrgApacheHttpConnUtilPublicSuffixMatcher *self, id<JavaUtilCollection> rules, id<JavaUtilCollection> exceptions);

FOUNDATION_EXPORT OrgApacheHttpConnUtilPublicSuffixMatcher *new_OrgApacheHttpConnUtilPublicSuffixMatcher_initWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> rules, id<JavaUtilCollection> exceptions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheHttpConnUtilPublicSuffixMatcher *create_OrgApacheHttpConnUtilPublicSuffixMatcher_initWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> rules, id<JavaUtilCollection> exceptions);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHttpConnUtilPublicSuffixMatcher)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheHttpConnUtilPublicSuffixMatcher")
