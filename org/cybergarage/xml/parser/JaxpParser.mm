//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/xml/parser/JaxpParser.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/FilterInputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/AbstractMethodError.h"
#include "java/lang/Exception.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/NullPointerException.h"
#include "javax/xml/parsers/DocumentBuilder.h"
#include "javax/xml/parsers/DocumentBuilderFactory.h"
#include "javax/xml/parsers/ParserConfigurationException.h"
#include "org/cybergarage/xml/Node.h"
#include "org/cybergarage/xml/Parser.h"
#include "org/cybergarage/xml/ParserException.h"
#include "org/cybergarage/xml/parser/JaxpParser.h"
#include "org/w3c/dom/Document.h"
#include "org/w3c/dom/Element.h"
#include "org/w3c/dom/NamedNodeMap.h"
#include "org/w3c/dom/Node.h"
#include "org/xml/sax/EntityResolver.h"
#include "org/xml/sax/InputSource.h"

@interface OrgCybergarageXmlParserJaxpParser_NullFilterInputStream : JavaIoFilterInputStream

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCybergarageXmlParserJaxpParser_NullFilterInputStream)

__attribute__((unused)) static void OrgCybergarageXmlParserJaxpParser_NullFilterInputStream_initWithJavaIoInputStream_(OrgCybergarageXmlParserJaxpParser_NullFilterInputStream *self, JavaIoInputStream *is);

__attribute__((unused)) static OrgCybergarageXmlParserJaxpParser_NullFilterInputStream *new_OrgCybergarageXmlParserJaxpParser_NullFilterInputStream_initWithJavaIoInputStream_(JavaIoInputStream *is) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgCybergarageXmlParserJaxpParser_NullFilterInputStream *create_OrgCybergarageXmlParserJaxpParser_NullFilterInputStream_initWithJavaIoInputStream_(JavaIoInputStream *is);

J2OBJC_TYPE_LITERAL_HEADER(OrgCybergarageXmlParserJaxpParser_NullFilterInputStream)

@interface OrgCybergarageXmlParserJaxpParser_BlankingResolver : NSObject < OrgXmlSaxEntityResolver >

- (instancetype)init;

- (OrgXmlSaxInputSource *)resolveEntityWithNSString:(NSString *)arg0
                                       withNSString:(NSString *)arg1;

@end

J2OBJC_STATIC_INIT(OrgCybergarageXmlParserJaxpParser_BlankingResolver)

inline IOSByteArray *OrgCybergarageXmlParserJaxpParser_BlankingResolver_get_DUMMY(void);
static IOSByteArray *OrgCybergarageXmlParserJaxpParser_BlankingResolver_DUMMY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageXmlParserJaxpParser_BlankingResolver, DUMMY, IOSByteArray *)

__attribute__((unused)) static void OrgCybergarageXmlParserJaxpParser_BlankingResolver_init(OrgCybergarageXmlParserJaxpParser_BlankingResolver *self);

__attribute__((unused)) static OrgCybergarageXmlParserJaxpParser_BlankingResolver *new_OrgCybergarageXmlParserJaxpParser_BlankingResolver_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgCybergarageXmlParserJaxpParser_BlankingResolver *create_OrgCybergarageXmlParserJaxpParser_BlankingResolver_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgCybergarageXmlParserJaxpParser_BlankingResolver)

@implementation OrgCybergarageXmlParserJaxpParser

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageXmlParserJaxpParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgCybergarageXmlNode *)parseWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)parentNode
                                        withOrgW3cDomNode:(id<OrgW3cDomNode>)domNode
                                                  withInt:(jint)rank {
  jint domNodeType = [((id<OrgW3cDomNode>) nil_chk(domNode)) getNodeType];
  NSString *domNodeName = [domNode getNodeName];
  NSString *domNodeValue = [domNode getNodeValue];
  id<OrgW3cDomNamedNodeMap> attrs = [domNode getAttributes];
  jint arrrsLen = (attrs != nil) ? [((id<OrgW3cDomNamedNodeMap>) nil_chk(attrs)) getLength] : 0;
  if (domNodeType == OrgW3cDomNode_TEXT_NODE) {
    [((OrgCybergarageXmlNode *) nil_chk(parentNode)) addValueWithNSString:domNodeValue];
    return parentNode;
  }
  if (domNodeType != OrgW3cDomNode_ELEMENT_NODE) return parentNode;
  OrgCybergarageXmlNode *node = create_OrgCybergarageXmlNode_init();
  [node setNameWithNSString:domNodeName];
  [node setValueWithNSString:domNodeValue];
  if (parentNode != nil) [parentNode addNodeWithOrgCybergarageXmlNode:node];
  id<OrgW3cDomNamedNodeMap> attrMap = [domNode getAttributes];
  if (attrMap != nil) {
    jint attrLen = [attrMap getLength];
    for (jint n = 0; n < attrLen; n++) {
      id<OrgW3cDomNode> attr = [attrMap itemWithInt:n];
      NSString *attrName = [((id<OrgW3cDomNode>) nil_chk(attr)) getNodeName];
      NSString *attrValue = [attr getNodeValue];
      [node setAttributeWithNSString:attrName withNSString:attrValue];
    }
  }
  id<OrgW3cDomNode> child = [domNode getFirstChild];
  if (child == nil) {
    [node setValueWithNSString:@""];
    return node;
  }
  do {
    [self parseWithOrgCybergarageXmlNode:node withOrgW3cDomNode:child withInt:rank + 1];
    child = [child getNextSibling];
  }
  while (child != nil);
  return node;
}

- (OrgCybergarageXmlNode *)parseWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)parentNode
                                        withOrgW3cDomNode:(id<OrgW3cDomNode>)domNode {
  return [self parseWithOrgCybergarageXmlNode:parentNode withOrgW3cDomNode:domNode withInt:0];
}

- (OrgCybergarageXmlNode *)parseWithJavaIoInputStream:(JavaIoInputStream *)inStream {
  OrgCybergarageXmlNode *root = nil;
  @try {
    JavaxXmlParsersDocumentBuilderFactory *factory = JavaxXmlParsersDocumentBuilderFactory_newInstance();
    [((JavaxXmlParsersDocumentBuilderFactory *) nil_chk(factory)) setValidatingWithBoolean:false];
    [factory setNamespaceAwareWithBoolean:true];
    [factory setExpandEntityReferencesWithBoolean:false];
    @try {
      @try {
        [factory setFeatureWithNSString:@"http://xml.org/sax/features/external-general-entities" withBoolean:false];
      }
      @catch (JavaxXmlParsersParserConfigurationException *pce) {
      }
      @try {
        [factory setFeatureWithNSString:@"http://xml.org/sax/features/external-parameter-entities" withBoolean:false];
      }
      @catch (JavaxXmlParsersParserConfigurationException *pce) {
      }
      @try {
        [factory setFeatureWithNSString:@"http://apache.org/xml/features/disallow-doctype-decl" withBoolean:true];
      }
      @catch (JavaxXmlParsersParserConfigurationException *pce) {
      }
      @try {
        [factory setFeatureWithNSString:@"http://apache.org/xml/features/nonvalidating/load-external-dtd" withBoolean:false];
      }
      @catch (JavaxXmlParsersParserConfigurationException *pce) {
      }
    }
    @catch (JavaLangAbstractMethodError *ame) {
    }
    JavaxXmlParsersDocumentBuilder *builder = [factory newDocumentBuilder];
    [((JavaxXmlParsersDocumentBuilder *) nil_chk(builder)) setEntityResolverWithOrgXmlSaxEntityResolver:create_OrgCybergarageXmlParserJaxpParser_BlankingResolver_init()];
    OrgXmlSaxInputSource *inSrc = create_OrgXmlSaxInputSource_initWithJavaIoInputStream_(create_OrgCybergarageXmlParserJaxpParser_NullFilterInputStream_initWithJavaIoInputStream_(inStream));
    id<OrgW3cDomDocument> doc = [builder parseWithOrgXmlSaxInputSource:inSrc];
    id<OrgW3cDomElement> docElem = [((id<OrgW3cDomDocument>) nil_chk(doc)) getDocumentElement];
    if (docElem != nil) root = [self parseWithOrgCybergarageXmlNode:root withOrgW3cDomNode:docElem];
  }
  @catch (JavaLangException *e) {
    @throw create_OrgCybergarageXmlParserException_initWithJavaLangException_(e);
  }
  return root;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, 0, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(parseWithOrgCybergarageXmlNode:withOrgW3cDomNode:withInt:);
  methods[2].selector = @selector(parseWithOrgCybergarageXmlNode:withOrgW3cDomNode:);
  methods[3].selector = @selector(parseWithJavaIoInputStream:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "parse", "LOrgCybergarageXmlNode;LOrgW3cDomNode;I", "LOrgCybergarageXmlNode;LOrgW3cDomNode;", "LJavaIoInputStream;", "LOrgCybergarageXmlParserException;", "LOrgCybergarageXmlParserJaxpParser_NullFilterInputStream;LOrgCybergarageXmlParserJaxpParser_BlankingResolver;" };
  static const J2ObjcClassInfo _OrgCybergarageXmlParserJaxpParser = { "JaxpParser", "org.cybergarage.xml.parser", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, 5, -1, -1, -1 };
  return &_OrgCybergarageXmlParserJaxpParser;
}

@end

void OrgCybergarageXmlParserJaxpParser_init(OrgCybergarageXmlParserJaxpParser *self) {
  OrgCybergarageXmlParser_init(self);
}

OrgCybergarageXmlParserJaxpParser *new_OrgCybergarageXmlParserJaxpParser_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageXmlParserJaxpParser, init)
}

OrgCybergarageXmlParserJaxpParser *create_OrgCybergarageXmlParserJaxpParser_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageXmlParserJaxpParser, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageXmlParserJaxpParser)

@implementation OrgCybergarageXmlParserJaxpParser_NullFilterInputStream

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is {
  OrgCybergarageXmlParserJaxpParser_NullFilterInputStream_initWithJavaIoInputStream_(self, is);
  return self;
}

- (jint)read {
  jint rv;
  while ((rv = [super read]) == 0) {
  }
  return rv;
}

- (jint)readWithByteArray:(IOSByteArray *)b {
  return [self readWithByteArray:b withInt:0 withInt:((IOSByteArray *) nil_chk(b))->size_];
}

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len {
  if (b == nil) {
    @throw create_JavaLangNullPointerException_init();
  }
  else if (off < 0 || len < 0 || len > b->size_ - off) {
    @throw create_JavaLangIndexOutOfBoundsException_init();
  }
  else if (len == 0) {
    return 0;
  }
  jint rv = [self read];
  if (-1 == rv) {
    return -1;
  }
  jint i = 1;
  *IOSByteArray_GetRef(b, off) = (jbyte) rv;
  for (; i < len; i++) {
    rv = [self read];
    if (-1 == rv) {
      break;
    }
    *IOSByteArray_GetRef(b, off + i) = (jbyte) rv;
  }
  return i;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 4, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoInputStream:);
  methods[1].selector = @selector(read);
  methods[2].selector = @selector(readWithByteArray:);
  methods[3].selector = @selector(readWithByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoInputStream;", "LJavaIoIOException;", "read", "[B", "[BII", "LOrgCybergarageXmlParserJaxpParser;" };
  static const J2ObjcClassInfo _OrgCybergarageXmlParserJaxpParser_NullFilterInputStream = { "NullFilterInputStream", "org.cybergarage.xml.parser", ptrTable, methods, NULL, 7, 0xa, 4, 0, 5, -1, -1, -1, -1 };
  return &_OrgCybergarageXmlParserJaxpParser_NullFilterInputStream;
}

@end

void OrgCybergarageXmlParserJaxpParser_NullFilterInputStream_initWithJavaIoInputStream_(OrgCybergarageXmlParserJaxpParser_NullFilterInputStream *self, JavaIoInputStream *is) {
  JavaIoFilterInputStream_initWithJavaIoInputStream_(self, is);
}

OrgCybergarageXmlParserJaxpParser_NullFilterInputStream *new_OrgCybergarageXmlParserJaxpParser_NullFilterInputStream_initWithJavaIoInputStream_(JavaIoInputStream *is) {
  J2OBJC_NEW_IMPL(OrgCybergarageXmlParserJaxpParser_NullFilterInputStream, initWithJavaIoInputStream_, is)
}

OrgCybergarageXmlParserJaxpParser_NullFilterInputStream *create_OrgCybergarageXmlParserJaxpParser_NullFilterInputStream_initWithJavaIoInputStream_(JavaIoInputStream *is) {
  J2OBJC_CREATE_IMPL(OrgCybergarageXmlParserJaxpParser_NullFilterInputStream, initWithJavaIoInputStream_, is)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageXmlParserJaxpParser_NullFilterInputStream)

J2OBJC_INITIALIZED_DEFN(OrgCybergarageXmlParserJaxpParser_BlankingResolver)

@implementation OrgCybergarageXmlParserJaxpParser_BlankingResolver

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageXmlParserJaxpParser_BlankingResolver_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgXmlSaxInputSource *)resolveEntityWithNSString:(NSString *)arg0
                                       withNSString:(NSString *)arg1 {
  return create_OrgXmlSaxInputSource_initWithJavaIoInputStream_(create_JavaIoByteArrayInputStream_initWithByteArray_(OrgCybergarageXmlParserJaxpParser_BlankingResolver_DUMMY));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgXmlSaxInputSource;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(resolveEntityWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DUMMY", "[B", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "resolveEntity", "LNSString;LNSString;", &OrgCybergarageXmlParserJaxpParser_BlankingResolver_DUMMY, "LOrgCybergarageXmlParserJaxpParser;" };
  static const J2ObjcClassInfo _OrgCybergarageXmlParserJaxpParser_BlankingResolver = { "BlankingResolver", "org.cybergarage.xml.parser", ptrTable, methods, fields, 7, 0xa, 2, 1, 3, -1, -1, -1, -1 };
  return &_OrgCybergarageXmlParserJaxpParser_BlankingResolver;
}

+ (void)initialize {
  if (self == [OrgCybergarageXmlParserJaxpParser_BlankingResolver class]) {
    JreStrongAssignAndConsume(&OrgCybergarageXmlParserJaxpParser_BlankingResolver_DUMMY, [IOSByteArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgCybergarageXmlParserJaxpParser_BlankingResolver)
  }
}

@end

void OrgCybergarageXmlParserJaxpParser_BlankingResolver_init(OrgCybergarageXmlParserJaxpParser_BlankingResolver *self) {
  NSObject_init(self);
}

OrgCybergarageXmlParserJaxpParser_BlankingResolver *new_OrgCybergarageXmlParserJaxpParser_BlankingResolver_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageXmlParserJaxpParser_BlankingResolver, init)
}

OrgCybergarageXmlParserJaxpParser_BlankingResolver *create_OrgCybergarageXmlParserJaxpParser_BlankingResolver_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageXmlParserJaxpParser_BlankingResolver, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageXmlParserJaxpParser_BlankingResolver)
