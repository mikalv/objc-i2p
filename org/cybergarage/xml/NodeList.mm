//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/xml/NodeList.java
//

#include "J2ObjC_source.h"
#include "java/util/Vector.h"
#include "org/cybergarage/xml/Node.h"
#include "org/cybergarage/xml/NodeList.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgCybergarageXmlNodeList

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageXmlNodeList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgCybergarageXmlNode *)getNodeWithInt:(jint)n {
  return [self getWithInt:n];
}

- (OrgCybergarageXmlNode *)getNodeWithNSString:(NSString *)name {
  if (name == nil) return nil;
  jint nLists = [self size];
  for (jint n = 0; n < nLists; n++) {
    OrgCybergarageXmlNode *node = [self getNodeWithInt:n];
    NSString *nodeName = [((OrgCybergarageXmlNode *) nil_chk(node)) getName];
    if ([name compareToWithId:nodeName] == 0) return node;
  }
  return nil;
}

- (OrgCybergarageXmlNode *)getEndsWithWithNSString:(NSString *)name {
  if (name == nil) return nil;
  jint nLists = [self size];
  for (jint n = 0; n < nLists; n++) {
    OrgCybergarageXmlNode *node = [self getNodeWithInt:n];
    NSString *nodeName = [((OrgCybergarageXmlNode *) nil_chk(node)) getName];
    if (nodeName == nil) continue;
    if ([nodeName java_hasSuffix:name] == true) return node;
  }
  return nil;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getNodeWithInt:);
  methods[2].selector = @selector(getNodeWithNSString:);
  methods[3].selector = @selector(getEndsWithWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getNode", "I", "LNSString;", "getEndsWith", "Ljava/util/Vector<Lorg/cybergarage/xml/Node;>;" };
  static const J2ObjcClassInfo _OrgCybergarageXmlNodeList = { "NodeList", "org.cybergarage.xml", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, 4, -1 };
  return &_OrgCybergarageXmlNodeList;
}

@end

void OrgCybergarageXmlNodeList_init(OrgCybergarageXmlNodeList *self) {
  JavaUtilVector_init(self);
}

OrgCybergarageXmlNodeList *new_OrgCybergarageXmlNodeList_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageXmlNodeList, init)
}

OrgCybergarageXmlNodeList *create_OrgCybergarageXmlNodeList_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageXmlNodeList, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageXmlNodeList)
