//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/http/Parameter.java
//

#include "J2ObjC_source.h"
#include "org/cybergarage/http/Parameter.h"

@interface OrgCybergarageHttpParameter () {
 @public
  NSString *name_;
  NSString *value_;
}

@end

J2OBJC_FIELD_SETTER(OrgCybergarageHttpParameter, name_, NSString *)
J2OBJC_FIELD_SETTER(OrgCybergarageHttpParameter, value_, NSString *)

@implementation OrgCybergarageHttpParameter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageHttpParameter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  OrgCybergarageHttpParameter_initWithNSString_withNSString_(self, name, value);
  return self;
}

- (void)setNameWithNSString:(NSString *)name {
  JreStrongAssign(&self->name_, name);
}

- (NSString *)getName {
  return name_;
}

- (void)setValueWithNSString:(NSString *)value {
  JreStrongAssign(&self->value_, value);
}

- (NSString *)getValue {
  return value_;
}

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:withNSString:);
  methods[2].selector = @selector(setNameWithNSString:);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(setValueWithNSString:);
  methods[5].selector = @selector(getValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "setName", "LNSString;", "setValue" };
  static const J2ObjcClassInfo _OrgCybergarageHttpParameter = { "Parameter", "org.cybergarage.http", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageHttpParameter;
}

@end

void OrgCybergarageHttpParameter_init(OrgCybergarageHttpParameter *self) {
  NSObject_init(self);
  JreStrongAssign(&self->name_, [NSString string]);
  JreStrongAssign(&self->value_, [NSString string]);
}

OrgCybergarageHttpParameter *new_OrgCybergarageHttpParameter_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageHttpParameter, init)
}

OrgCybergarageHttpParameter *create_OrgCybergarageHttpParameter_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageHttpParameter, init)
}

void OrgCybergarageHttpParameter_initWithNSString_withNSString_(OrgCybergarageHttpParameter *self, NSString *name, NSString *value) {
  NSObject_init(self);
  JreStrongAssign(&self->name_, [NSString string]);
  JreStrongAssign(&self->value_, [NSString string]);
  [self setNameWithNSString:name];
  [self setValueWithNSString:value];
}

OrgCybergarageHttpParameter *new_OrgCybergarageHttpParameter_initWithNSString_withNSString_(NSString *name, NSString *value) {
  J2OBJC_NEW_IMPL(OrgCybergarageHttpParameter, initWithNSString_withNSString_, name, value)
}

OrgCybergarageHttpParameter *create_OrgCybergarageHttpParameter_initWithNSString_withNSString_(NSString *name, NSString *value) {
  J2OBJC_CREATE_IMPL(OrgCybergarageHttpParameter, initWithNSString_withNSString_, name, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageHttpParameter)
