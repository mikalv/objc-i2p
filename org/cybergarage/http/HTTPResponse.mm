//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/http/HTTPResponse.java
//

#include "J2ObjC_source.h"
#include "java/io/InputStream.h"
#include "java/lang/StringBuffer.h"
#include "org/cybergarage/http/HTML.h"
#include "org/cybergarage/http/HTTP.h"
#include "org/cybergarage/http/HTTPPacket.h"
#include "org/cybergarage/http/HTTPResponse.h"
#include "org/cybergarage/http/HTTPServer.h"
#include "org/cybergarage/http/HTTPSocket.h"
#include "org/cybergarage/http/HTTPStatus.h"
#include "org/cybergarage/util/Debug.h"

@interface OrgCybergarageHttpHTTPResponse () {
 @public
  jint statusCode_;
}

@end

@implementation OrgCybergarageHttpHTTPResponse

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageHttpHTTPResponse_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgCybergarageHttpHTTPResponse:(OrgCybergarageHttpHTTPResponse *)httpRes {
  OrgCybergarageHttpHTTPResponse_initWithOrgCybergarageHttpHTTPResponse_(self, httpRes);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  OrgCybergarageHttpHTTPResponse_initWithJavaIoInputStream_(self, inArg);
  return self;
}

- (instancetype)initWithOrgCybergarageHttpHTTPSocket:(OrgCybergarageHttpHTTPSocket *)httpSock {
  OrgCybergarageHttpHTTPResponse_initWithOrgCybergarageHttpHTTPSocket_(self, httpSock);
  return self;
}

- (void)setStatusCodeWithInt:(jint)code {
  statusCode_ = code;
}

- (jint)getStatusCode {
  if (statusCode_ != 0) return statusCode_;
  OrgCybergarageHttpHTTPStatus *httpStatus = create_OrgCybergarageHttpHTTPStatus_initWithNSString_([self getFirstLine]);
  return [httpStatus getStatusCode];
}

- (jboolean)isSuccessful {
  return OrgCybergarageHttpHTTPStatus_isSuccessfulWithInt_([self getStatusCode]);
}

- (NSString *)getStatusLineString {
  return JreStrcat("$$CIC$$", @"HTTP/", [self getVersion], ' ', [self getStatusCode], ' ', OrgCybergarageHttpHTTPStatus_code2StringWithInt_(statusCode_), OrgCybergarageHttpHTTP_CRLF);
}

- (NSString *)getHeader {
  JavaLangStringBuffer *str = create_JavaLangStringBuffer_init();
  [str appendWithNSString:[self getStatusLineString]];
  [str appendWithNSString:[self getHeaderString]];
  return [str description];
}

- (NSString *)description {
  JavaLangStringBuffer *str = create_JavaLangStringBuffer_init();
  [str appendWithNSString:[self getStatusLineString]];
  [str appendWithNSString:[self getHeaderString]];
  [str appendWithNSString:OrgCybergarageHttpHTTP_CRLF];
  [str appendWithNSString:[self getContentString]];
  return [str description];
}

- (void)print {
  OrgCybergarageUtilDebug_messageWithNSString_([self description]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgCybergarageHttpHTTPResponse:);
  methods[2].selector = @selector(initWithJavaIoInputStream:);
  methods[3].selector = @selector(initWithOrgCybergarageHttpHTTPSocket:);
  methods[4].selector = @selector(setStatusCodeWithInt:);
  methods[5].selector = @selector(getStatusCode);
  methods[6].selector = @selector(isSuccessful);
  methods[7].selector = @selector(getStatusLineString);
  methods[8].selector = @selector(getHeader);
  methods[9].selector = @selector(description);
  methods[10].selector = @selector(print);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "statusCode_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgCybergarageHttpHTTPResponse;", "LJavaIoInputStream;", "LOrgCybergarageHttpHTTPSocket;", "setStatusCode", "I", "toString" };
  static const J2ObjcClassInfo _OrgCybergarageHttpHTTPResponse = { "HTTPResponse", "org.cybergarage.http", ptrTable, methods, fields, 7, 0x1, 11, 1, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageHttpHTTPResponse;
}

@end

void OrgCybergarageHttpHTTPResponse_init(OrgCybergarageHttpHTTPResponse *self) {
  OrgCybergarageHttpHTTPPacket_init(self);
  self->statusCode_ = 0;
  [self setVersionWithNSString:OrgCybergarageHttpHTTP_VERSION_11];
  [self setContentTypeWithNSString:OrgCybergarageHttpHTML_CONTENT_TYPE];
  [self setServerWithNSString:OrgCybergarageHttpHTTPServer_getName()];
  [self setContentWithNSString:@""];
}

OrgCybergarageHttpHTTPResponse *new_OrgCybergarageHttpHTTPResponse_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageHttpHTTPResponse, init)
}

OrgCybergarageHttpHTTPResponse *create_OrgCybergarageHttpHTTPResponse_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageHttpHTTPResponse, init)
}

void OrgCybergarageHttpHTTPResponse_initWithOrgCybergarageHttpHTTPResponse_(OrgCybergarageHttpHTTPResponse *self, OrgCybergarageHttpHTTPResponse *httpRes) {
  OrgCybergarageHttpHTTPPacket_init(self);
  self->statusCode_ = 0;
  [self setWithOrgCybergarageHttpHTTPPacket:httpRes];
}

OrgCybergarageHttpHTTPResponse *new_OrgCybergarageHttpHTTPResponse_initWithOrgCybergarageHttpHTTPResponse_(OrgCybergarageHttpHTTPResponse *httpRes) {
  J2OBJC_NEW_IMPL(OrgCybergarageHttpHTTPResponse, initWithOrgCybergarageHttpHTTPResponse_, httpRes)
}

OrgCybergarageHttpHTTPResponse *create_OrgCybergarageHttpHTTPResponse_initWithOrgCybergarageHttpHTTPResponse_(OrgCybergarageHttpHTTPResponse *httpRes) {
  J2OBJC_CREATE_IMPL(OrgCybergarageHttpHTTPResponse, initWithOrgCybergarageHttpHTTPResponse_, httpRes)
}

void OrgCybergarageHttpHTTPResponse_initWithJavaIoInputStream_(OrgCybergarageHttpHTTPResponse *self, JavaIoInputStream *inArg) {
  OrgCybergarageHttpHTTPPacket_initWithJavaIoInputStream_(self, inArg);
  self->statusCode_ = 0;
}

OrgCybergarageHttpHTTPResponse *new_OrgCybergarageHttpHTTPResponse_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_NEW_IMPL(OrgCybergarageHttpHTTPResponse, initWithJavaIoInputStream_, inArg)
}

OrgCybergarageHttpHTTPResponse *create_OrgCybergarageHttpHTTPResponse_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_CREATE_IMPL(OrgCybergarageHttpHTTPResponse, initWithJavaIoInputStream_, inArg)
}

void OrgCybergarageHttpHTTPResponse_initWithOrgCybergarageHttpHTTPSocket_(OrgCybergarageHttpHTTPResponse *self, OrgCybergarageHttpHTTPSocket *httpSock) {
  OrgCybergarageHttpHTTPResponse_initWithJavaIoInputStream_(self, [((OrgCybergarageHttpHTTPSocket *) nil_chk(httpSock)) getInputStream]);
}

OrgCybergarageHttpHTTPResponse *new_OrgCybergarageHttpHTTPResponse_initWithOrgCybergarageHttpHTTPSocket_(OrgCybergarageHttpHTTPSocket *httpSock) {
  J2OBJC_NEW_IMPL(OrgCybergarageHttpHTTPResponse, initWithOrgCybergarageHttpHTTPSocket_, httpSock)
}

OrgCybergarageHttpHTTPResponse *create_OrgCybergarageHttpHTTPResponse_initWithOrgCybergarageHttpHTTPSocket_(OrgCybergarageHttpHTTPSocket *httpSock) {
  J2OBJC_CREATE_IMPL(OrgCybergarageHttpHTTPResponse, initWithOrgCybergarageHttpHTTPSocket_, httpSock)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageHttpHTTPResponse)
