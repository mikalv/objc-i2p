//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/util/ListenerList.java
//

#include "J2ObjC_source.h"
#include "java/util/Vector.h"
#include "org/cybergarage/util/ListenerList.h"

@implementation OrgCybergarageUtilListenerList

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUtilListenerList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)addWithId:(id)obj {
  if (0 <= [self indexOfWithId:obj]) return false;
  return [super addWithId:obj];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "add", "LNSObject;", "Ljava/util/Vector<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _OrgCybergarageUtilListenerList = { "ListenerList", "org.cybergarage.util", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, 2, -1 };
  return &_OrgCybergarageUtilListenerList;
}

@end

void OrgCybergarageUtilListenerList_init(OrgCybergarageUtilListenerList *self) {
  JavaUtilVector_init(self);
}

OrgCybergarageUtilListenerList *new_OrgCybergarageUtilListenerList_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUtilListenerList, init)
}

OrgCybergarageUtilListenerList *create_OrgCybergarageUtilListenerList_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUtilListenerList, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUtilListenerList)
