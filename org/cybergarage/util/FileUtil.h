//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/util/FileUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCybergarageUtilFileUtil")
#ifdef RESTRICT_OrgCybergarageUtilFileUtil
#define INCLUDE_ALL_OrgCybergarageUtilFileUtil 0
#else
#define INCLUDE_ALL_OrgCybergarageUtilFileUtil 1
#endif
#undef RESTRICT_OrgCybergarageUtilFileUtil

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCybergarageUtilFileUtil_) && (INCLUDE_ALL_OrgCybergarageUtilFileUtil || defined(INCLUDE_OrgCybergarageUtilFileUtil))
#define OrgCybergarageUtilFileUtil_

@class IOSByteArray;
@class JavaIoFile;
@class JavaIoFileInputStream;

@interface OrgCybergarageUtilFileUtil : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (jboolean)isXMLFileNameWithNSString:(NSString *)name;

+ (IOSByteArray *)load__WithJavaIoFile:(JavaIoFile *)file;

+ (IOSByteArray *)load__WithJavaIoFileInputStream:(JavaIoFileInputStream *)fin;

+ (IOSByteArray *)load__WithNSString:(NSString *)fileName;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCybergarageUtilFileUtil)

FOUNDATION_EXPORT void OrgCybergarageUtilFileUtil_init(OrgCybergarageUtilFileUtil *self);

FOUNDATION_EXPORT OrgCybergarageUtilFileUtil *new_OrgCybergarageUtilFileUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUtilFileUtil *create_OrgCybergarageUtilFileUtil_init(void);

FOUNDATION_EXPORT IOSByteArray *OrgCybergarageUtilFileUtil_load__WithNSString_(NSString *fileName);

FOUNDATION_EXPORT IOSByteArray *OrgCybergarageUtilFileUtil_load__WithJavaIoFile_(JavaIoFile *file);

FOUNDATION_EXPORT IOSByteArray *OrgCybergarageUtilFileUtil_load__WithJavaIoFileInputStream_(JavaIoFileInputStream *fin);

FOUNDATION_EXPORT jboolean OrgCybergarageUtilFileUtil_isXMLFileNameWithNSString_(NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(OrgCybergarageUtilFileUtil)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgCybergarageUtilFileUtil")
