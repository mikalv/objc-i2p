//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/util/Debug.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "net/i2p/I2PAppContext.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"
#include "net/i2p/util/SystemVersion.h"
#include "org/cybergarage/util/Debug.h"

inline NetI2pUtilLog *OrgCybergarageUtilDebug_get__log(void);
inline NetI2pUtilLog *OrgCybergarageUtilDebug_set__log(NetI2pUtilLog *value);
static NetI2pUtilLog *OrgCybergarageUtilDebug__log;
J2OBJC_STATIC_FIELD_OBJ(OrgCybergarageUtilDebug, _log, NetI2pUtilLog *)

jboolean OrgCybergarageUtilDebug_enabled = false;

@implementation OrgCybergarageUtilDebug

+ (jboolean)enabled {
  return OrgCybergarageUtilDebug_enabled;
}

+ (void)setEnabled:(jboolean)value {
  OrgCybergarageUtilDebug_enabled = value;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUtilDebug_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize__WithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx {
  OrgCybergarageUtilDebug_initialize__WithNetI2pI2PAppContext_(ctx);
}

+ (void)on {
  OrgCybergarageUtilDebug_on();
}

+ (void)off {
  OrgCybergarageUtilDebug_off();
}

+ (jboolean)isOn {
  return OrgCybergarageUtilDebug_isOn();
}

+ (void)messageWithNSString:(NSString *)s {
  OrgCybergarageUtilDebug_messageWithNSString_(s);
}

+ (void)messageWithNSString:(NSString *)m1
               withNSString:(NSString *)m2 {
  OrgCybergarageUtilDebug_messageWithNSString_withNSString_(m1, m2);
}

+ (void)warningWithNSString:(NSString *)s {
  OrgCybergarageUtilDebug_warningWithNSString_(s);
}

+ (void)warningWithNSString:(NSString *)m
      withJavaLangException:(JavaLangException *)e {
  OrgCybergarageUtilDebug_warningWithNSString_withJavaLangException_(m, e);
}

+ (void)warningWithJavaLangException:(JavaLangException *)e {
  OrgCybergarageUtilDebug_warningWithJavaLangException_(e);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x19, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x19, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x19, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x19, 2, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x19, 5, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x19, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x19, 5, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initialize__WithNetI2pI2PAppContext:);
  methods[2].selector = @selector(on);
  methods[3].selector = @selector(off);
  methods[4].selector = @selector(isOn);
  methods[5].selector = @selector(messageWithNSString:);
  methods[6].selector = @selector(messageWithNSString:withNSString:);
  methods[7].selector = @selector(warningWithNSString:);
  methods[8].selector = @selector(warningWithNSString:withJavaLangException:);
  methods[9].selector = @selector(warningWithJavaLangException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_log", "LNetI2pUtilLog;", .constantValue.asLong = 0, 0xa, -1, 8, -1, -1 },
    { "enabled", "Z", .constantValue.asLong = 0, 0x9, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "LNetI2pI2PAppContext;", "message", "LNSString;", "LNSString;LNSString;", "warning", "LNSString;LJavaLangException;", "LJavaLangException;", &OrgCybergarageUtilDebug__log, &OrgCybergarageUtilDebug_enabled };
  static const J2ObjcClassInfo _OrgCybergarageUtilDebug = { "Debug", "org.cybergarage.util", ptrTable, methods, fields, 7, 0x11, 10, 2, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUtilDebug;
}

@end

void OrgCybergarageUtilDebug_init(OrgCybergarageUtilDebug *self) {
  NSObject_init(self);
}

OrgCybergarageUtilDebug *new_OrgCybergarageUtilDebug_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUtilDebug, init)
}

OrgCybergarageUtilDebug *create_OrgCybergarageUtilDebug_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUtilDebug, init)
}

void OrgCybergarageUtilDebug_initialize__WithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx) {
  OrgCybergarageUtilDebug_initialize();
  if (NetI2pUtilSystemVersion_isAndroid()) return;
  JreStrongAssign(&OrgCybergarageUtilDebug__log, [((NetI2pUtilLogManager *) nil_chk([((NetI2pI2PAppContext *) nil_chk(ctx)) logManager])) getLogWithIOSClass:OrgCybergarageUtilDebug_class_()]);
  OrgCybergarageUtilDebug_enabled = [((NetI2pUtilLog *) nil_chk(OrgCybergarageUtilDebug__log)) shouldLogWithInt:NetI2pUtilLog_DEBUG];
}

void OrgCybergarageUtilDebug_on() {
  OrgCybergarageUtilDebug_initialize();
  OrgCybergarageUtilDebug_enabled = true;
}

void OrgCybergarageUtilDebug_off() {
  OrgCybergarageUtilDebug_initialize();
  OrgCybergarageUtilDebug_enabled = false;
}

jboolean OrgCybergarageUtilDebug_isOn() {
  OrgCybergarageUtilDebug_initialize();
  return OrgCybergarageUtilDebug_enabled;
}

void OrgCybergarageUtilDebug_messageWithNSString_(NSString *s) {
  OrgCybergarageUtilDebug_initialize();
  if (OrgCybergarageUtilDebug__log != nil) [OrgCybergarageUtilDebug__log debugWithNSString:s];
}

void OrgCybergarageUtilDebug_messageWithNSString_withNSString_(NSString *m1, NSString *m2) {
  OrgCybergarageUtilDebug_initialize();
  if (OrgCybergarageUtilDebug__log != nil) {
    [OrgCybergarageUtilDebug__log debugWithNSString:m1];
    [((NetI2pUtilLog *) nil_chk(OrgCybergarageUtilDebug__log)) debugWithNSString:m2];
  }
}

void OrgCybergarageUtilDebug_warningWithNSString_(NSString *s) {
  OrgCybergarageUtilDebug_initialize();
  if (OrgCybergarageUtilDebug__log != nil) [OrgCybergarageUtilDebug__log warnWithNSString:s];
}

void OrgCybergarageUtilDebug_warningWithNSString_withJavaLangException_(NSString *m, JavaLangException *e) {
  OrgCybergarageUtilDebug_initialize();
  if (OrgCybergarageUtilDebug__log != nil) [OrgCybergarageUtilDebug__log warnWithNSString:m withJavaLangThrowable:e];
}

void OrgCybergarageUtilDebug_warningWithJavaLangException_(JavaLangException *e) {
  OrgCybergarageUtilDebug_initialize();
  if (OrgCybergarageUtilDebug__log != nil) [OrgCybergarageUtilDebug__log warnWithNSString:@"" withJavaLangThrowable:e];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUtilDebug)
