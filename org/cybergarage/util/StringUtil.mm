//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/util/StringUtil.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "org/cybergarage/util/Debug.h"
#include "org/cybergarage/util/StringUtil.h"

@implementation OrgCybergarageUtilStringUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUtilStringUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)hasDataWithNSString:(NSString *)value {
  return OrgCybergarageUtilStringUtil_hasDataWithNSString_(value);
}

+ (jint)toIntegerWithNSString:(NSString *)value {
  return OrgCybergarageUtilStringUtil_toIntegerWithNSString_(value);
}

+ (jlong)toLongWithNSString:(NSString *)value {
  return OrgCybergarageUtilStringUtil_toLongWithNSString_(value);
}

+ (jint)findOfWithNSString:(NSString *)str
              withNSString:(NSString *)chars
                   withInt:(jint)startIdx
                   withInt:(jint)endIdx
                   withInt:(jint)offset
               withBoolean:(jboolean)isEqual {
  return OrgCybergarageUtilStringUtil_findOfWithNSString_withNSString_withInt_withInt_withInt_withBoolean_(str, chars, startIdx, endIdx, offset, isEqual);
}

+ (jint)findFirstOfWithNSString:(NSString *)str
                   withNSString:(NSString *)chars {
  return OrgCybergarageUtilStringUtil_findFirstOfWithNSString_withNSString_(str, chars);
}

+ (jint)findFirstNotOfWithNSString:(NSString *)str
                      withNSString:(NSString *)chars {
  return OrgCybergarageUtilStringUtil_findFirstNotOfWithNSString_withNSString_(str, chars);
}

+ (jint)findLastOfWithNSString:(NSString *)str
                  withNSString:(NSString *)chars {
  return OrgCybergarageUtilStringUtil_findLastOfWithNSString_withNSString_(str, chars);
}

+ (jint)findLastNotOfWithNSString:(NSString *)str
                     withNSString:(NSString *)chars {
  return OrgCybergarageUtilStringUtil_findLastNotOfWithNSString_withNSString_(str, chars);
}

+ (NSString *)trimWithNSString:(NSString *)trimStr
                  withNSString:(NSString *)trimChars {
  return OrgCybergarageUtilStringUtil_trimWithNSString_withNSString_(trimStr, trimChars);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x19, 2, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x19, 3, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x19, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x19, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x19, 8, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x19, 9, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x19, 10, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x19, 11, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(hasDataWithNSString:);
  methods[2].selector = @selector(toIntegerWithNSString:);
  methods[3].selector = @selector(toLongWithNSString:);
  methods[4].selector = @selector(findOfWithNSString:withNSString:withInt:withInt:withInt:withBoolean:);
  methods[5].selector = @selector(findFirstOfWithNSString:withNSString:);
  methods[6].selector = @selector(findFirstNotOfWithNSString:withNSString:);
  methods[7].selector = @selector(findLastOfWithNSString:withNSString:);
  methods[8].selector = @selector(findLastNotOfWithNSString:withNSString:);
  methods[9].selector = @selector(trimWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "hasData", "LNSString;", "toInteger", "toLong", "findOf", "LNSString;LNSString;IIIZ", "findFirstOf", "LNSString;LNSString;", "findFirstNotOf", "findLastOf", "findLastNotOf", "trim" };
  static const J2ObjcClassInfo _OrgCybergarageUtilStringUtil = { "StringUtil", "org.cybergarage.util", ptrTable, methods, NULL, 7, 0x11, 10, 0, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUtilStringUtil;
}

@end

void OrgCybergarageUtilStringUtil_init(OrgCybergarageUtilStringUtil *self) {
  NSObject_init(self);
}

OrgCybergarageUtilStringUtil *new_OrgCybergarageUtilStringUtil_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUtilStringUtil, init)
}

OrgCybergarageUtilStringUtil *create_OrgCybergarageUtilStringUtil_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUtilStringUtil, init)
}

jboolean OrgCybergarageUtilStringUtil_hasDataWithNSString_(NSString *value) {
  OrgCybergarageUtilStringUtil_initialize();
  if (value == nil) return false;
  if ([value java_length] <= 0) return false;
  return true;
}

jint OrgCybergarageUtilStringUtil_toIntegerWithNSString_(NSString *value) {
  OrgCybergarageUtilStringUtil_initialize();
  @try {
    return JavaLangInteger_parseIntWithNSString_(value);
  }
  @catch (JavaLangException *e) {
    OrgCybergarageUtilDebug_warningWithJavaLangException_(e);
  }
  return 0;
}

jlong OrgCybergarageUtilStringUtil_toLongWithNSString_(NSString *value) {
  OrgCybergarageUtilStringUtil_initialize();
  @try {
    return JavaLangLong_parseLongWithNSString_(value);
  }
  @catch (JavaLangException *e) {
    OrgCybergarageUtilDebug_warningWithJavaLangException_(e);
  }
  return 0;
}

jint OrgCybergarageUtilStringUtil_findOfWithNSString_withNSString_withInt_withInt_withInt_withBoolean_(NSString *str, NSString *chars, jint startIdx, jint endIdx, jint offset, jboolean isEqual) {
  OrgCybergarageUtilStringUtil_initialize();
  if (offset == 0) return -1;
  jint charCnt = [((NSString *) nil_chk(chars)) java_length];
  jint idx = startIdx;
  while (true) {
    if (0 < offset) {
      if (endIdx < idx) break;
    }
    else {
      if (idx < endIdx) break;
    }
    jchar strc = [((NSString *) nil_chk(str)) charAtWithInt:idx];
    jint noEqualCnt = 0;
    for (jint n = 0; n < charCnt; n++) {
      jchar charc = [chars charAtWithInt:n];
      if (isEqual == true) {
        if (strc == charc) return idx;
      }
      else {
        if (strc != charc) noEqualCnt++;
        if (noEqualCnt == charCnt) return idx;
      }
    }
    idx += offset;
  }
  return -1;
}

jint OrgCybergarageUtilStringUtil_findFirstOfWithNSString_withNSString_(NSString *str, NSString *chars) {
  OrgCybergarageUtilStringUtil_initialize();
  return OrgCybergarageUtilStringUtil_findOfWithNSString_withNSString_withInt_withInt_withInt_withBoolean_(str, chars, 0, ([((NSString *) nil_chk(str)) java_length] - 1), 1, true);
}

jint OrgCybergarageUtilStringUtil_findFirstNotOfWithNSString_withNSString_(NSString *str, NSString *chars) {
  OrgCybergarageUtilStringUtil_initialize();
  return OrgCybergarageUtilStringUtil_findOfWithNSString_withNSString_withInt_withInt_withInt_withBoolean_(str, chars, 0, ([((NSString *) nil_chk(str)) java_length] - 1), 1, false);
}

jint OrgCybergarageUtilStringUtil_findLastOfWithNSString_withNSString_(NSString *str, NSString *chars) {
  OrgCybergarageUtilStringUtil_initialize();
  return OrgCybergarageUtilStringUtil_findOfWithNSString_withNSString_withInt_withInt_withInt_withBoolean_(str, chars, ([((NSString *) nil_chk(str)) java_length] - 1), 0, -1, true);
}

jint OrgCybergarageUtilStringUtil_findLastNotOfWithNSString_withNSString_(NSString *str, NSString *chars) {
  OrgCybergarageUtilStringUtil_initialize();
  return OrgCybergarageUtilStringUtil_findOfWithNSString_withNSString_withInt_withInt_withInt_withBoolean_(str, chars, ([((NSString *) nil_chk(str)) java_length] - 1), 0, -1, false);
}

NSString *OrgCybergarageUtilStringUtil_trimWithNSString_withNSString_(NSString *trimStr, NSString *trimChars) {
  OrgCybergarageUtilStringUtil_initialize();
  jint spIdx = OrgCybergarageUtilStringUtil_findFirstNotOfWithNSString_withNSString_(trimStr, trimChars);
  if (spIdx < 0) {
    NSString *buf = trimStr;
    return buf;
  }
  NSString *trimStr2 = [((NSString *) nil_chk(trimStr)) java_substring:spIdx endIndex:[trimStr java_length]];
  spIdx = OrgCybergarageUtilStringUtil_findLastNotOfWithNSString_withNSString_(trimStr2, trimChars);
  if (spIdx < 0) {
    NSString *buf = trimStr2;
    return buf;
  }
  NSString *buf = [((NSString *) nil_chk(trimStr2)) java_substring:0 endIndex:spIdx + 1];
  return buf;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUtilStringUtil)
