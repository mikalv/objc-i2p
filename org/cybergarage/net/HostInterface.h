//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/net/HostInterface.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCybergarageNetHostInterface")
#ifdef RESTRICT_OrgCybergarageNetHostInterface
#define INCLUDE_ALL_OrgCybergarageNetHostInterface 0
#else
#define INCLUDE_ALL_OrgCybergarageNetHostInterface 1
#endif
#undef RESTRICT_OrgCybergarageNetHostInterface

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCybergarageNetHostInterface_) && (INCLUDE_ALL_OrgCybergarageNetHostInterface || defined(INCLUDE_OrgCybergarageNetHostInterface))
#define OrgCybergarageNetHostInterface_

@class IOSObjectArray;

@interface OrgCybergarageNetHostInterface : NSObject
@property (class) jboolean USE_LOOPBACK_ADDR NS_SWIFT_NAME(USE_LOOPBACK_ADDR);
@property (class) jboolean USE_ONLY_IPV4_ADDR NS_SWIFT_NAME(USE_ONLY_IPV4_ADDR);
@property (class) jboolean USE_ONLY_IPV6_ADDR NS_SWIFT_NAME(USE_ONLY_IPV6_ADDR);
@property (readonly, class) jint IPV4_BITMASK NS_SWIFT_NAME(IPV4_BITMASK);
@property (readonly, class) jint IPV6_BITMASK NS_SWIFT_NAME(IPV6_BITMASK);
@property (readonly, class) jint LOCAL_BITMASK NS_SWIFT_NAME(LOCAL_BITMASK);

+ (jboolean)USE_LOOPBACK_ADDR;

+ (void)setUSE_LOOPBACK_ADDR:(jboolean)value;

+ (jboolean)USE_ONLY_IPV4_ADDR;

+ (void)setUSE_ONLY_IPV4_ADDR:(jboolean)value;

+ (jboolean)USE_ONLY_IPV6_ADDR;

+ (void)setUSE_ONLY_IPV6_ADDR:(jboolean)value;

+ (jint)IPV4_BITMASK;

+ (jint)IPV6_BITMASK;

+ (jint)LOCAL_BITMASK;

#pragma mark Public

- (instancetype __nonnull)init;

+ (NSString *)getHostAddressWithInt:(jint)n;

+ (NSString *)getHostURLWithNSString:(NSString *)host
                             withInt:(jint)port
                        withNSString:(NSString *)uri;

+ (IOSObjectArray *)getInetAddressWithInt:(jint)ipfilter
                        withNSStringArray:(IOSObjectArray *)interfaces;

+ (NSString *)getInterface;

+ (NSString *)getIPv4Address;

+ (NSString *)getIPv6Address;

+ (jint)getNHostAddresses;

+ (jboolean)hasIPv4Addresses;

+ (jboolean)hasIPv6Addresses;

+ (jboolean)isIPv4AddressWithNSString:(NSString *)host;

+ (jboolean)isIPv6AddressWithNSString:(NSString *)host;

+ (void)setInterfaceWithNSString:(NSString *)ifaddr;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCybergarageNetHostInterface)

inline jboolean OrgCybergarageNetHostInterface_get_USE_LOOPBACK_ADDR(void);
inline jboolean OrgCybergarageNetHostInterface_set_USE_LOOPBACK_ADDR(jboolean value);
inline jboolean *OrgCybergarageNetHostInterface_getRef_USE_LOOPBACK_ADDR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean OrgCybergarageNetHostInterface_USE_LOOPBACK_ADDR;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgCybergarageNetHostInterface, USE_LOOPBACK_ADDR, jboolean)

inline jboolean OrgCybergarageNetHostInterface_get_USE_ONLY_IPV4_ADDR(void);
inline jboolean OrgCybergarageNetHostInterface_set_USE_ONLY_IPV4_ADDR(jboolean value);
inline jboolean *OrgCybergarageNetHostInterface_getRef_USE_ONLY_IPV4_ADDR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean OrgCybergarageNetHostInterface_USE_ONLY_IPV4_ADDR;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgCybergarageNetHostInterface, USE_ONLY_IPV4_ADDR, jboolean)

inline jboolean OrgCybergarageNetHostInterface_get_USE_ONLY_IPV6_ADDR(void);
inline jboolean OrgCybergarageNetHostInterface_set_USE_ONLY_IPV6_ADDR(jboolean value);
inline jboolean *OrgCybergarageNetHostInterface_getRef_USE_ONLY_IPV6_ADDR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean OrgCybergarageNetHostInterface_USE_ONLY_IPV6_ADDR;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgCybergarageNetHostInterface, USE_ONLY_IPV6_ADDR, jboolean)

inline jint OrgCybergarageNetHostInterface_get_IPV4_BITMASK(void);
#define OrgCybergarageNetHostInterface_IPV4_BITMASK 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgCybergarageNetHostInterface, IPV4_BITMASK, jint)

inline jint OrgCybergarageNetHostInterface_get_IPV6_BITMASK(void);
#define OrgCybergarageNetHostInterface_IPV6_BITMASK 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgCybergarageNetHostInterface, IPV6_BITMASK, jint)

inline jint OrgCybergarageNetHostInterface_get_LOCAL_BITMASK(void);
#define OrgCybergarageNetHostInterface_LOCAL_BITMASK 256
J2OBJC_STATIC_FIELD_CONSTANT(OrgCybergarageNetHostInterface, LOCAL_BITMASK, jint)

FOUNDATION_EXPORT void OrgCybergarageNetHostInterface_init(OrgCybergarageNetHostInterface *self);

FOUNDATION_EXPORT OrgCybergarageNetHostInterface *new_OrgCybergarageNetHostInterface_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageNetHostInterface *create_OrgCybergarageNetHostInterface_init(void);

FOUNDATION_EXPORT void OrgCybergarageNetHostInterface_setInterfaceWithNSString_(NSString *ifaddr);

FOUNDATION_EXPORT NSString *OrgCybergarageNetHostInterface_getInterface(void);

FOUNDATION_EXPORT jint OrgCybergarageNetHostInterface_getNHostAddresses(void);

FOUNDATION_EXPORT IOSObjectArray *OrgCybergarageNetHostInterface_getInetAddressWithInt_withNSStringArray_(jint ipfilter, IOSObjectArray *interfaces);

FOUNDATION_EXPORT NSString *OrgCybergarageNetHostInterface_getHostAddressWithInt_(jint n);

FOUNDATION_EXPORT jboolean OrgCybergarageNetHostInterface_isIPv6AddressWithNSString_(NSString *host);

FOUNDATION_EXPORT jboolean OrgCybergarageNetHostInterface_isIPv4AddressWithNSString_(NSString *host);

FOUNDATION_EXPORT jboolean OrgCybergarageNetHostInterface_hasIPv4Addresses(void);

FOUNDATION_EXPORT jboolean OrgCybergarageNetHostInterface_hasIPv6Addresses(void);

FOUNDATION_EXPORT NSString *OrgCybergarageNetHostInterface_getIPv4Address(void);

FOUNDATION_EXPORT NSString *OrgCybergarageNetHostInterface_getIPv6Address(void);

FOUNDATION_EXPORT NSString *OrgCybergarageNetHostInterface_getHostURLWithNSString_withInt_withNSString_(NSString *host, jint port, NSString *uri);

J2OBJC_TYPE_LITERAL_HEADER(OrgCybergarageNetHostInterface)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgCybergarageNetHostInterface")
