//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/AllowedValueRange.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCybergarageUpnpAllowedValueRange")
#ifdef RESTRICT_OrgCybergarageUpnpAllowedValueRange
#define INCLUDE_ALL_OrgCybergarageUpnpAllowedValueRange 0
#else
#define INCLUDE_ALL_OrgCybergarageUpnpAllowedValueRange 1
#endif
#undef RESTRICT_OrgCybergarageUpnpAllowedValueRange

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCybergarageUpnpAllowedValueRange_) && (INCLUDE_ALL_OrgCybergarageUpnpAllowedValueRange || defined(INCLUDE_OrgCybergarageUpnpAllowedValueRange))
#define OrgCybergarageUpnpAllowedValueRange_

@class OrgCybergarageXmlNode;

@interface OrgCybergarageUpnpAllowedValueRange : NSObject
@property (readonly, copy, class) NSString *ELEM_NAME NS_SWIFT_NAME(ELEM_NAME);

+ (NSString *)ELEM_NAME;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node;

- (instancetype __nonnull)initWithNSNumber:(NSNumber *)max
                              withNSNumber:(NSNumber *)min
                              withNSNumber:(NSNumber *)step;

- (OrgCybergarageXmlNode *)getAllowedValueRangeNode;

- (NSString *)getMaximum;

- (NSString *)getMinimum;

- (NSString *)getStep;

+ (jboolean)isAllowedValueRangeNodeWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node;

- (void)setMaximumWithNSString:(NSString *)value;

- (void)setMinimumWithNSString:(NSString *)value;

- (void)setStepWithNSString:(NSString *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCybergarageUpnpAllowedValueRange)

inline NSString *OrgCybergarageUpnpAllowedValueRange_get_ELEM_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpAllowedValueRange_ELEM_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpAllowedValueRange, ELEM_NAME, NSString *)

FOUNDATION_EXPORT void OrgCybergarageUpnpAllowedValueRange_initWithOrgCybergarageXmlNode_(OrgCybergarageUpnpAllowedValueRange *self, OrgCybergarageXmlNode *node);

FOUNDATION_EXPORT OrgCybergarageUpnpAllowedValueRange *new_OrgCybergarageUpnpAllowedValueRange_initWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *node) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpAllowedValueRange *create_OrgCybergarageUpnpAllowedValueRange_initWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *node);

FOUNDATION_EXPORT void OrgCybergarageUpnpAllowedValueRange_init(OrgCybergarageUpnpAllowedValueRange *self);

FOUNDATION_EXPORT OrgCybergarageUpnpAllowedValueRange *new_OrgCybergarageUpnpAllowedValueRange_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpAllowedValueRange *create_OrgCybergarageUpnpAllowedValueRange_init(void);

FOUNDATION_EXPORT void OrgCybergarageUpnpAllowedValueRange_initWithNSNumber_withNSNumber_withNSNumber_(OrgCybergarageUpnpAllowedValueRange *self, NSNumber *max, NSNumber *min, NSNumber *step);

FOUNDATION_EXPORT OrgCybergarageUpnpAllowedValueRange *new_OrgCybergarageUpnpAllowedValueRange_initWithNSNumber_withNSNumber_withNSNumber_(NSNumber *max, NSNumber *min, NSNumber *step) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpAllowedValueRange *create_OrgCybergarageUpnpAllowedValueRange_initWithNSNumber_withNSNumber_withNSNumber_(NSNumber *max, NSNumber *min, NSNumber *step);

FOUNDATION_EXPORT jboolean OrgCybergarageUpnpAllowedValueRange_isAllowedValueRangeNodeWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *node);

J2OBJC_TYPE_LITERAL_HEADER(OrgCybergarageUpnpAllowedValueRange)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgCybergarageUpnpAllowedValueRange")
