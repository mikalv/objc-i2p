//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/event/Subscriber.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Long.h"
#include "java/lang/System.h"
#include "java/net/URL.h"
#include "org/cybergarage/upnp/event/Subscriber.h"
#include "org/cybergarage/upnp/event/Subscription.h"

@interface OrgCybergarageUpnpEventSubscriber () {
 @public
  NSString *SID_;
  NSString *ifAddr_;
  NSString *deliveryURL_;
  NSString *deliveryHost_;
  NSString *deliveryPath_;
  jint deliveryPort_;
  jlong timeOut_;
  jlong subscriptionTime_;
  jlong notifyCount_;
}

@end

J2OBJC_FIELD_SETTER(OrgCybergarageUpnpEventSubscriber, SID_, NSString *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpEventSubscriber, ifAddr_, NSString *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpEventSubscriber, deliveryURL_, NSString *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpEventSubscriber, deliveryHost_, NSString *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpEventSubscriber, deliveryPath_, NSString *)

@implementation OrgCybergarageUpnpEventSubscriber

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpEventSubscriber_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getSID {
  return SID_;
}

- (void)setSIDWithNSString:(NSString *)sid {
  JreStrongAssign(&SID_, sid);
}

- (void)setInterfaceAddressWithNSString:(NSString *)addr {
  JreStrongAssign(&ifAddr_, addr);
}

- (NSString *)getInterfaceAddress {
  return ifAddr_;
}

- (NSString *)getDeliveryURL {
  return deliveryURL_;
}

- (void)setDeliveryURLWithNSString:(NSString *)deliveryURL {
  JreStrongAssign(&self->deliveryURL_, deliveryURL);
  @try {
    JavaNetURL *url = create_JavaNetURL_initWithNSString_(deliveryURL);
    JreStrongAssign(&deliveryHost_, [url getHost]);
    JreStrongAssign(&deliveryPath_, [url getPath]);
    deliveryPort_ = [url getPort];
  }
  @catch (JavaLangException *e) {
  }
}

- (NSString *)getDeliveryHost {
  return deliveryHost_;
}

- (NSString *)getDeliveryPath {
  return deliveryPath_;
}

- (jint)getDeliveryPort {
  return deliveryPort_;
}

- (jlong)getTimeOut {
  return timeOut_;
}

- (void)setTimeOutWithLong:(jlong)value {
  timeOut_ = value;
}

- (jboolean)isExpired {
  jlong currTime = JavaLangSystem_currentTimeMillis();
  if (timeOut_ == OrgCybergarageUpnpEventSubscription_INFINITE_VALUE) return false;
  jlong expiredTime = [self getSubscriptionTime] + [self getTimeOut] * 1000;
  if (expiredTime < currTime) return true;
  return false;
}

- (jlong)getSubscriptionTime {
  return subscriptionTime_;
}

- (void)setSubscriptionTimeWithLong:(jlong)time {
  subscriptionTime_ = time;
}

- (jlong)getNotifyCount {
  return notifyCount_;
}

- (void)setNotifyCountWithInt:(jint)cnt {
  notifyCount_ = cnt;
}

- (void)incrementNotifyCount {
  if (notifyCount_ == JavaLangLong_MAX_VALUE) {
    notifyCount_ = 1;
    return;
  }
  notifyCount_++;
}

- (void)renew {
  [self setSubscriptionTimeWithLong:JavaLangSystem_currentTimeMillis()];
  [self setNotifyCountWithInt:0];
}

- (void)dealloc {
  RELEASE_(SID_);
  RELEASE_(ifAddr_);
  RELEASE_(deliveryURL_);
  RELEASE_(deliveryHost_);
  RELEASE_(deliveryPath_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getSID);
  methods[2].selector = @selector(setSIDWithNSString:);
  methods[3].selector = @selector(setInterfaceAddressWithNSString:);
  methods[4].selector = @selector(getInterfaceAddress);
  methods[5].selector = @selector(getDeliveryURL);
  methods[6].selector = @selector(setDeliveryURLWithNSString:);
  methods[7].selector = @selector(getDeliveryHost);
  methods[8].selector = @selector(getDeliveryPath);
  methods[9].selector = @selector(getDeliveryPort);
  methods[10].selector = @selector(getTimeOut);
  methods[11].selector = @selector(setTimeOutWithLong:);
  methods[12].selector = @selector(isExpired);
  methods[13].selector = @selector(getSubscriptionTime);
  methods[14].selector = @selector(setSubscriptionTimeWithLong:);
  methods[15].selector = @selector(getNotifyCount);
  methods[16].selector = @selector(setNotifyCountWithInt:);
  methods[17].selector = @selector(incrementNotifyCount);
  methods[18].selector = @selector(renew);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SID_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ifAddr_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "deliveryURL_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "deliveryHost_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "deliveryPath_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "deliveryPort_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "timeOut_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "subscriptionTime_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "notifyCount_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setSID", "LNSString;", "setInterfaceAddress", "setDeliveryURL", "setTimeOut", "J", "setSubscriptionTime", "setNotifyCount", "I" };
  static const J2ObjcClassInfo _OrgCybergarageUpnpEventSubscriber = { "Subscriber", "org.cybergarage.upnp.event", ptrTable, methods, fields, 7, 0x1, 19, 9, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpEventSubscriber;
}

@end

void OrgCybergarageUpnpEventSubscriber_init(OrgCybergarageUpnpEventSubscriber *self) {
  NSObject_init(self);
  JreStrongAssign(&self->SID_, nil);
  JreStrongAssign(&self->ifAddr_, @"");
  JreStrongAssign(&self->deliveryURL_, @"");
  JreStrongAssign(&self->deliveryHost_, @"");
  JreStrongAssign(&self->deliveryPath_, @"");
  self->deliveryPort_ = 0;
  self->timeOut_ = 0;
  self->subscriptionTime_ = 0;
  self->notifyCount_ = 0;
  [self renew];
}

OrgCybergarageUpnpEventSubscriber *new_OrgCybergarageUpnpEventSubscriber_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpEventSubscriber, init)
}

OrgCybergarageUpnpEventSubscriber *create_OrgCybergarageUpnpEventSubscriber_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpEventSubscriber, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpEventSubscriber)
