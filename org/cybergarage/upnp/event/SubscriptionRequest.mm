//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/event/SubscriptionRequest.java
//

#include "J2ObjC_source.h"
#include "org/cybergarage/http/HTTP.h"
#include "org/cybergarage/http/HTTPRequest.h"
#include "org/cybergarage/http/HTTPResponse.h"
#include "org/cybergarage/upnp/Device.h"
#include "org/cybergarage/upnp/Service.h"
#include "org/cybergarage/upnp/device/NT.h"
#include "org/cybergarage/upnp/event/Subscription.h"
#include "org/cybergarage/upnp/event/SubscriptionRequest.h"
#include "org/cybergarage/upnp/event/SubscriptionResponse.h"

@interface OrgCybergarageUpnpEventSubscriptionRequest ()

- (void)setServiceWithOrgCybergarageUpnpService:(OrgCybergarageUpnpService *)service;

@end

inline NSString *OrgCybergarageUpnpEventSubscriptionRequest_get_CALLBACK_START_WITH(void);
static NSString *OrgCybergarageUpnpEventSubscriptionRequest_CALLBACK_START_WITH = @"<";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpEventSubscriptionRequest, CALLBACK_START_WITH, NSString *)

inline NSString *OrgCybergarageUpnpEventSubscriptionRequest_get_CALLBACK_END_WITH(void);
static NSString *OrgCybergarageUpnpEventSubscriptionRequest_CALLBACK_END_WITH = @">";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpEventSubscriptionRequest, CALLBACK_END_WITH, NSString *)

__attribute__((unused)) static void OrgCybergarageUpnpEventSubscriptionRequest_setServiceWithOrgCybergarageUpnpService_(OrgCybergarageUpnpEventSubscriptionRequest *self, OrgCybergarageUpnpService *service);

__attribute__((unused)) static void OrgCybergarageUpnpEventSubscriptionRequest_setTimeoutWithLong_(OrgCybergarageUpnpEventSubscriptionRequest *self, jlong value);

@implementation OrgCybergarageUpnpEventSubscriptionRequest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpEventSubscriptionRequest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgCybergarageHttpHTTPRequest:(OrgCybergarageHttpHTTPRequest *)httpReq {
  OrgCybergarageUpnpEventSubscriptionRequest_initWithOrgCybergarageHttpHTTPRequest_(self, httpReq);
  return self;
}

- (void)setServiceWithOrgCybergarageUpnpService:(OrgCybergarageUpnpService *)service {
  OrgCybergarageUpnpEventSubscriptionRequest_setServiceWithOrgCybergarageUpnpService_(self, service);
}

- (void)setSubscribeRequestWithOrgCybergarageUpnpService:(OrgCybergarageUpnpService *)service
                                            withNSString:(NSString *)callback
                                                withLong:(jlong)timeout {
  [self setMethodWithNSString:OrgCybergarageUpnpEventSubscription_SUBSCRIBE_METHOD];
  OrgCybergarageUpnpEventSubscriptionRequest_setServiceWithOrgCybergarageUpnpService_(self, service);
  [self setCallbackWithNSString:callback];
  [self setNTWithNSString:OrgCybergarageUpnpDeviceNT_EVENT];
  OrgCybergarageUpnpEventSubscriptionRequest_setTimeoutWithLong_(self, timeout);
}

- (void)setRenewRequestWithOrgCybergarageUpnpService:(OrgCybergarageUpnpService *)service
                                        withNSString:(NSString *)uuid
                                            withLong:(jlong)timeout {
  [self setMethodWithNSString:OrgCybergarageUpnpEventSubscription_SUBSCRIBE_METHOD];
  OrgCybergarageUpnpEventSubscriptionRequest_setServiceWithOrgCybergarageUpnpService_(self, service);
  [self setSIDWithNSString:uuid];
  OrgCybergarageUpnpEventSubscriptionRequest_setTimeoutWithLong_(self, timeout);
}

- (void)setUnsubscribeRequestWithOrgCybergarageUpnpService:(OrgCybergarageUpnpService *)service {
  [self setMethodWithNSString:OrgCybergarageUpnpEventSubscription_UNSUBSCRIBE_METHOD];
  OrgCybergarageUpnpEventSubscriptionRequest_setServiceWithOrgCybergarageUpnpService_(self, service);
  [self setSIDWithNSString:[((OrgCybergarageUpnpService *) nil_chk(service)) getSID]];
}

- (void)setNTWithNSString:(NSString *)value {
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_NT withNSString:value];
}

- (NSString *)getNT {
  return [self getHeaderValueWithNSString:OrgCybergarageHttpHTTP_NT];
}

- (jboolean)hasNT {
  NSString *nt = [self getNT];
  return (nt != nil && 0 < [nt java_length]) ? true : false;
}

- (void)setCallbackWithNSString:(NSString *)value {
  [self setStringHeaderWithNSString:OrgCybergarageHttpHTTP_CALLBACK withNSString:value withNSString:OrgCybergarageUpnpEventSubscriptionRequest_CALLBACK_START_WITH withNSString:OrgCybergarageUpnpEventSubscriptionRequest_CALLBACK_END_WITH];
}

- (NSString *)getCallback {
  return [self getStringHeaderValueWithNSString:OrgCybergarageHttpHTTP_CALLBACK withNSString:OrgCybergarageUpnpEventSubscriptionRequest_CALLBACK_START_WITH withNSString:OrgCybergarageUpnpEventSubscriptionRequest_CALLBACK_END_WITH];
}

- (jboolean)hasCallback {
  NSString *callback = [self getCallback];
  return (callback != nil && 0 < [callback java_length]) ? true : false;
}

- (void)setSIDWithNSString:(NSString *)id_ {
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_SID withNSString:OrgCybergarageUpnpEventSubscription_toSIDHeaderStringWithNSString_(id_)];
}

- (NSString *)getSID {
  NSString *sid = OrgCybergarageUpnpEventSubscription_getSIDWithNSString_([self getHeaderValueWithNSString:OrgCybergarageHttpHTTP_SID]);
  if (sid == nil) return @"";
  return sid;
}

- (jboolean)hasSID {
  NSString *sid = [self getSID];
  return (sid != nil && 0 < [sid java_length]) ? true : false;
}

- (void)setTimeoutWithLong:(jlong)value {
  OrgCybergarageUpnpEventSubscriptionRequest_setTimeoutWithLong_(self, value);
}

- (jlong)getTimeout {
  return OrgCybergarageUpnpEventSubscription_getTimeoutWithNSString_([self getHeaderValueWithNSString:OrgCybergarageHttpHTTP_TIMEOUT]);
}

- (void)postWithOrgCybergarageUpnpEventSubscriptionResponse:(OrgCybergarageUpnpEventSubscriptionResponse *)subRes {
  [super postWithOrgCybergarageHttpHTTPResponse:subRes];
}

- (OrgCybergarageUpnpEventSubscriptionResponse *)post {
  OrgCybergarageHttpHTTPResponse *httpRes = [self postWithNSString:[self getRequestHost] withInt:[self getRequestPort]];
  return create_OrgCybergarageUpnpEventSubscriptionResponse_initWithOrgCybergarageHttpHTTPResponse_(httpRes);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 11, 12, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpEventSubscriptionResponse;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgCybergarageHttpHTTPRequest:);
  methods[2].selector = @selector(setServiceWithOrgCybergarageUpnpService:);
  methods[3].selector = @selector(setSubscribeRequestWithOrgCybergarageUpnpService:withNSString:withLong:);
  methods[4].selector = @selector(setRenewRequestWithOrgCybergarageUpnpService:withNSString:withLong:);
  methods[5].selector = @selector(setUnsubscribeRequestWithOrgCybergarageUpnpService:);
  methods[6].selector = @selector(setNTWithNSString:);
  methods[7].selector = @selector(getNT);
  methods[8].selector = @selector(hasNT);
  methods[9].selector = @selector(setCallbackWithNSString:);
  methods[10].selector = @selector(getCallback);
  methods[11].selector = @selector(hasCallback);
  methods[12].selector = @selector(setSIDWithNSString:);
  methods[13].selector = @selector(getSID);
  methods[14].selector = @selector(hasSID);
  methods[15].selector = @selector(setTimeoutWithLong:);
  methods[16].selector = @selector(getTimeout);
  methods[17].selector = @selector(postWithOrgCybergarageUpnpEventSubscriptionResponse:);
  methods[18].selector = @selector(post);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CALLBACK_START_WITH", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
    { "CALLBACK_END_WITH", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgCybergarageHttpHTTPRequest;", "setService", "LOrgCybergarageUpnpService;", "setSubscribeRequest", "LOrgCybergarageUpnpService;LNSString;J", "setRenewRequest", "setUnsubscribeRequest", "setNT", "LNSString;", "setCallback", "setSID", "setTimeout", "J", "post", "LOrgCybergarageUpnpEventSubscriptionResponse;", &OrgCybergarageUpnpEventSubscriptionRequest_CALLBACK_START_WITH, &OrgCybergarageUpnpEventSubscriptionRequest_CALLBACK_END_WITH };
  static const J2ObjcClassInfo _OrgCybergarageUpnpEventSubscriptionRequest = { "SubscriptionRequest", "org.cybergarage.upnp.event", ptrTable, methods, fields, 7, 0x1, 19, 2, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpEventSubscriptionRequest;
}

@end

void OrgCybergarageUpnpEventSubscriptionRequest_init(OrgCybergarageUpnpEventSubscriptionRequest *self) {
  OrgCybergarageHttpHTTPRequest_init(self);
  [self setContentLengthWithLong:0];
}

OrgCybergarageUpnpEventSubscriptionRequest *new_OrgCybergarageUpnpEventSubscriptionRequest_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpEventSubscriptionRequest, init)
}

OrgCybergarageUpnpEventSubscriptionRequest *create_OrgCybergarageUpnpEventSubscriptionRequest_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpEventSubscriptionRequest, init)
}

void OrgCybergarageUpnpEventSubscriptionRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageUpnpEventSubscriptionRequest *self, OrgCybergarageHttpHTTPRequest *httpReq) {
  OrgCybergarageUpnpEventSubscriptionRequest_init(self);
  [self setWithOrgCybergarageHttpHTTPRequest:httpReq];
}

OrgCybergarageUpnpEventSubscriptionRequest *new_OrgCybergarageUpnpEventSubscriptionRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageHttpHTTPRequest *httpReq) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpEventSubscriptionRequest, initWithOrgCybergarageHttpHTTPRequest_, httpReq)
}

OrgCybergarageUpnpEventSubscriptionRequest *create_OrgCybergarageUpnpEventSubscriptionRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageHttpHTTPRequest *httpReq) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpEventSubscriptionRequest, initWithOrgCybergarageHttpHTTPRequest_, httpReq)
}

void OrgCybergarageUpnpEventSubscriptionRequest_setServiceWithOrgCybergarageUpnpService_(OrgCybergarageUpnpEventSubscriptionRequest *self, OrgCybergarageUpnpService *service) {
  NSString *eventSubURL = [((OrgCybergarageUpnpService *) nil_chk(service)) getEventSubURL];
  [self setURIWithNSString:eventSubURL withBoolean:true];
  NSString *urlBaseStr = @"";
  OrgCybergarageUpnpDevice *dev = [service getDevice];
  if (dev != nil) urlBaseStr = [dev getURLBase];
  if (urlBaseStr == nil || [urlBaseStr java_length] <= 0) {
    OrgCybergarageUpnpDevice *rootDev = [service getRootDevice];
    if (rootDev != nil) urlBaseStr = [rootDev getURLBase];
  }
  if (urlBaseStr == nil || [urlBaseStr java_length] <= 0) {
    OrgCybergarageUpnpDevice *rootDev = [service getRootDevice];
    if (rootDev != nil) urlBaseStr = [rootDev getLocation];
  }
  if (urlBaseStr == nil || [urlBaseStr java_length] <= 0) {
    if (OrgCybergarageHttpHTTP_isAbsoluteURLWithNSString_(eventSubURL)) urlBaseStr = eventSubURL;
  }
  NSString *reqHost = OrgCybergarageHttpHTTP_getHostWithNSString_(urlBaseStr);
  jint reqPort = OrgCybergarageHttpHTTP_getPortWithNSString_(urlBaseStr);
  [self setHostWithNSString:reqHost withInt:reqPort];
  [self setRequestHostWithNSString:reqHost];
  [self setRequestPortWithInt:reqPort];
}

void OrgCybergarageUpnpEventSubscriptionRequest_setTimeoutWithLong_(OrgCybergarageUpnpEventSubscriptionRequest *self, jlong value) {
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_TIMEOUT withNSString:OrgCybergarageUpnpEventSubscription_toTimeoutHeaderStringWithLong_(value)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpEventSubscriptionRequest)
