//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/xml/ServiceData.java
//

#include "J2ObjC_source.h"
#include "org/cybergarage/upnp/event/SubscriberList.h"
#include "org/cybergarage/upnp/xml/NodeData.h"
#include "org/cybergarage/upnp/xml/ServiceData.h"
#include "org/cybergarage/util/ListenerList.h"
#include "org/cybergarage/xml/Node.h"

@interface OrgCybergarageUpnpXmlServiceData () {
 @public
  OrgCybergarageUtilListenerList *controlActionListenerList_;
  OrgCybergarageXmlNode *scpdNode_;
  OrgCybergarageUpnpEventSubscriberList *subscriberList_;
  NSString *descriptionURL_;
  NSString *sid_;
  jlong timeout_;
}

@end

J2OBJC_FIELD_SETTER(OrgCybergarageUpnpXmlServiceData, controlActionListenerList_, OrgCybergarageUtilListenerList *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpXmlServiceData, scpdNode_, OrgCybergarageXmlNode *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpXmlServiceData, subscriberList_, OrgCybergarageUpnpEventSubscriberList *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpXmlServiceData, descriptionURL_, NSString *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpXmlServiceData, sid_, NSString *)

@implementation OrgCybergarageUpnpXmlServiceData

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpXmlServiceData_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgCybergarageUtilListenerList *)getControlActionListenerList {
  return controlActionListenerList_;
}

- (OrgCybergarageXmlNode *)getSCPDNode {
  return scpdNode_;
}

- (void)setSCPDNodeWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node {
  JreStrongAssign(&scpdNode_, node);
}

- (OrgCybergarageUpnpEventSubscriberList *)getSubscriberList {
  return subscriberList_;
}

- (NSString *)getDescriptionURL {
  return descriptionURL_;
}

- (void)setDescriptionURLWithNSString:(NSString *)descriptionURL {
  JreStrongAssign(&self->descriptionURL_, descriptionURL);
}

- (NSString *)getSID {
  return sid_;
}

- (void)setSIDWithNSString:(NSString *)id_ {
  JreStrongAssign(&sid_, id_);
}

- (jlong)getTimeout {
  return timeout_;
}

- (void)setTimeoutWithLong:(jlong)value {
  timeout_ = value;
}

- (void)dealloc {
  RELEASE_(controlActionListenerList_);
  RELEASE_(scpdNode_);
  RELEASE_(subscriberList_);
  RELEASE_(descriptionURL_);
  RELEASE_(sid_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUtilListenerList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpEventSubscriberList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getControlActionListenerList);
  methods[2].selector = @selector(getSCPDNode);
  methods[3].selector = @selector(setSCPDNodeWithOrgCybergarageXmlNode:);
  methods[4].selector = @selector(getSubscriberList);
  methods[5].selector = @selector(getDescriptionURL);
  methods[6].selector = @selector(setDescriptionURLWithNSString:);
  methods[7].selector = @selector(getSID);
  methods[8].selector = @selector(setSIDWithNSString:);
  methods[9].selector = @selector(getTimeout);
  methods[10].selector = @selector(setTimeoutWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "controlActionListenerList_", "LOrgCybergarageUtilListenerList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "scpdNode_", "LOrgCybergarageXmlNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "subscriberList_", "LOrgCybergarageUpnpEventSubscriberList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "descriptionURL_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sid_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "timeout_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setSCPDNode", "LOrgCybergarageXmlNode;", "setDescriptionURL", "LNSString;", "setSID", "setTimeout", "J" };
  static const J2ObjcClassInfo _OrgCybergarageUpnpXmlServiceData = { "ServiceData", "org.cybergarage.upnp.xml", ptrTable, methods, fields, 7, 0x1, 11, 6, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpXmlServiceData;
}

@end

void OrgCybergarageUpnpXmlServiceData_init(OrgCybergarageUpnpXmlServiceData *self) {
  OrgCybergarageUpnpXmlNodeData_init(self);
  JreStrongAssignAndConsume(&self->controlActionListenerList_, new_OrgCybergarageUtilListenerList_init());
  JreStrongAssign(&self->scpdNode_, nil);
  JreStrongAssignAndConsume(&self->subscriberList_, new_OrgCybergarageUpnpEventSubscriberList_init());
  JreStrongAssign(&self->descriptionURL_, @"");
  JreStrongAssign(&self->sid_, @"");
  self->timeout_ = 0;
}

OrgCybergarageUpnpXmlServiceData *new_OrgCybergarageUpnpXmlServiceData_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpXmlServiceData, init)
}

OrgCybergarageUpnpXmlServiceData *create_OrgCybergarageUpnpXmlServiceData_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpXmlServiceData, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpXmlServiceData)
