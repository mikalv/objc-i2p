//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/ssdp/SSDPRequest.java
//

#include "J2ObjC_source.h"
#include "java/io/InputStream.h"
#include "java/lang/Integer.h"
#include "org/cybergarage/http/HTTP.h"
#include "org/cybergarage/http/HTTPRequest.h"
#include "org/cybergarage/upnp/ssdp/SSDP.h"
#include "org/cybergarage/upnp/ssdp/SSDPRequest.h"

@implementation OrgCybergarageUpnpSsdpSSDPRequest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpSsdpSSDPRequest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  OrgCybergarageUpnpSsdpSSDPRequest_initWithJavaIoInputStream_(self, inArg);
  return self;
}

- (void)setNTWithNSString:(NSString *)value {
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_NT withNSString:value];
}

- (NSString *)getNT {
  return [self getHeaderValueWithNSString:OrgCybergarageHttpHTTP_NT];
}

- (void)setNTSWithNSString:(NSString *)value {
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_NTS withNSString:value];
}

- (NSString *)getNTS {
  return [self getHeaderValueWithNSString:OrgCybergarageHttpHTTP_NTS];
}

- (void)setLocationWithNSString:(NSString *)value {
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_LOCATION withNSString:value];
}

- (NSString *)getLocation {
  return [self getHeaderValueWithNSString:OrgCybergarageHttpHTTP_LOCATION];
}

- (void)setUSNWithNSString:(NSString *)value {
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_USN withNSString:value];
}

- (NSString *)getUSN {
  return [self getHeaderValueWithNSString:OrgCybergarageHttpHTTP_USN];
}

- (void)setLeaseTimeWithInt:(jint)len {
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_CACHE_CONTROL withNSString:JreStrcat("$$", @"max-age=", JavaLangInteger_toStringWithInt_(len))];
}

- (jint)getLeaseTime {
  NSString *cacheCtrl = [self getHeaderValueWithNSString:OrgCybergarageHttpHTTP_CACHE_CONTROL];
  return OrgCybergarageUpnpSsdpSSDP_getLeaseTimeWithNSString_(cacheCtrl);
}

- (void)setBootIdWithInt:(jint)bootId {
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_BOOTID_UPNP_ORG withInt:bootId];
}

- (jint)getBootId {
  return [self getIntegerHeaderValueWithNSString:OrgCybergarageHttpHTTP_BOOTID_UPNP_ORG];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaIoInputStream:);
  methods[2].selector = @selector(setNTWithNSString:);
  methods[3].selector = @selector(getNT);
  methods[4].selector = @selector(setNTSWithNSString:);
  methods[5].selector = @selector(getNTS);
  methods[6].selector = @selector(setLocationWithNSString:);
  methods[7].selector = @selector(getLocation);
  methods[8].selector = @selector(setUSNWithNSString:);
  methods[9].selector = @selector(getUSN);
  methods[10].selector = @selector(setLeaseTimeWithInt:);
  methods[11].selector = @selector(getLeaseTime);
  methods[12].selector = @selector(setBootIdWithInt:);
  methods[13].selector = @selector(getBootId);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoInputStream;", "setNT", "LNSString;", "setNTS", "setLocation", "setUSN", "setLeaseTime", "I", "setBootId" };
  static const J2ObjcClassInfo _OrgCybergarageUpnpSsdpSSDPRequest = { "SSDPRequest", "org.cybergarage.upnp.ssdp", ptrTable, methods, NULL, 7, 0x1, 14, 0, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpSsdpSSDPRequest;
}

@end

void OrgCybergarageUpnpSsdpSSDPRequest_init(OrgCybergarageUpnpSsdpSSDPRequest *self) {
  OrgCybergarageHttpHTTPRequest_init(self);
  [self setVersionWithNSString:OrgCybergarageHttpHTTP_VERSION_11];
}

OrgCybergarageUpnpSsdpSSDPRequest *new_OrgCybergarageUpnpSsdpSSDPRequest_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpSsdpSSDPRequest, init)
}

OrgCybergarageUpnpSsdpSSDPRequest *create_OrgCybergarageUpnpSsdpSSDPRequest_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpSsdpSSDPRequest, init)
}

void OrgCybergarageUpnpSsdpSSDPRequest_initWithJavaIoInputStream_(OrgCybergarageUpnpSsdpSSDPRequest *self, JavaIoInputStream *inArg) {
  OrgCybergarageHttpHTTPRequest_initWithJavaIoInputStream_(self, inArg);
}

OrgCybergarageUpnpSsdpSSDPRequest *new_OrgCybergarageUpnpSsdpSSDPRequest_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpSsdpSSDPRequest, initWithJavaIoInputStream_, inArg)
}

OrgCybergarageUpnpSsdpSSDPRequest *create_OrgCybergarageUpnpSsdpSSDPRequest_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpSsdpSSDPRequest, initWithJavaIoInputStream_, inArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpSsdpSSDPRequest)
