//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/ssdp/SSDPSearchRequest.java
//

#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/cybergarage/http/HTTP.h"
#include "org/cybergarage/net/HostInterface.h"
#include "org/cybergarage/upnp/device/MAN.h"
#include "org/cybergarage/upnp/device/ST.h"
#include "org/cybergarage/upnp/ssdp/SSDP.h"
#include "org/cybergarage/upnp/ssdp/SSDPRequest.h"
#include "org/cybergarage/upnp/ssdp/SSDPSearchRequest.h"

@implementation OrgCybergarageUpnpSsdpSSDPSearchRequest

- (instancetype)initWithNSString:(NSString *)serachTarget
                         withInt:(jint)mx {
  OrgCybergarageUpnpSsdpSSDPSearchRequest_initWithNSString_withInt_(self, serachTarget, mx);
  return self;
}

- (instancetype)initWithNSString:(NSString *)serachTarget {
  OrgCybergarageUpnpSsdpSSDPSearchRequest_initWithNSString_(self, serachTarget);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpSsdpSSDPSearchRequest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setLocalAddressWithNSString:(NSString *)bindAddr {
  NSString *ssdpAddr = OrgCybergarageUpnpSsdpSSDP_ADDRESS;
  if (OrgCybergarageNetHostInterface_isIPv6AddressWithNSString_(bindAddr) == true) ssdpAddr = OrgCybergarageUpnpSsdpSSDP_getIPv6Address();
  [self setHostWithNSString:ssdpAddr withInt:OrgCybergarageUpnpSsdpSSDP_PORT];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withInt:);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(setLocalAddressWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;I", "LNSString;", "setLocalAddress" };
  static const J2ObjcClassInfo _OrgCybergarageUpnpSsdpSSDPSearchRequest = { "SSDPSearchRequest", "org.cybergarage.upnp.ssdp", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpSsdpSSDPSearchRequest;
}

@end

void OrgCybergarageUpnpSsdpSSDPSearchRequest_initWithNSString_withInt_(OrgCybergarageUpnpSsdpSSDPSearchRequest *self, NSString *serachTarget, jint mx) {
  OrgCybergarageUpnpSsdpSSDPRequest_init(self);
  [self setMethodWithNSString:OrgCybergarageHttpHTTP_M_SEARCH];
  [self setURIWithNSString:@"*"];
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_ST withNSString:serachTarget];
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_MX withNSString:JavaLangInteger_toStringWithInt_(mx)];
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_MAN withNSString:JreStrcat("C$C", '"', OrgCybergarageUpnpDeviceMAN_DISCOVER, '"')];
}

OrgCybergarageUpnpSsdpSSDPSearchRequest *new_OrgCybergarageUpnpSsdpSSDPSearchRequest_initWithNSString_withInt_(NSString *serachTarget, jint mx) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpSsdpSSDPSearchRequest, initWithNSString_withInt_, serachTarget, mx)
}

OrgCybergarageUpnpSsdpSSDPSearchRequest *create_OrgCybergarageUpnpSsdpSSDPSearchRequest_initWithNSString_withInt_(NSString *serachTarget, jint mx) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpSsdpSSDPSearchRequest, initWithNSString_withInt_, serachTarget, mx)
}

void OrgCybergarageUpnpSsdpSSDPSearchRequest_initWithNSString_(OrgCybergarageUpnpSsdpSSDPSearchRequest *self, NSString *serachTarget) {
  OrgCybergarageUpnpSsdpSSDPSearchRequest_initWithNSString_withInt_(self, serachTarget, OrgCybergarageUpnpSsdpSSDP_DEFAULT_MSEARCH_MX);
}

OrgCybergarageUpnpSsdpSSDPSearchRequest *new_OrgCybergarageUpnpSsdpSSDPSearchRequest_initWithNSString_(NSString *serachTarget) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpSsdpSSDPSearchRequest, initWithNSString_, serachTarget)
}

OrgCybergarageUpnpSsdpSSDPSearchRequest *create_OrgCybergarageUpnpSsdpSSDPSearchRequest_initWithNSString_(NSString *serachTarget) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpSsdpSSDPSearchRequest, initWithNSString_, serachTarget)
}

void OrgCybergarageUpnpSsdpSSDPSearchRequest_init(OrgCybergarageUpnpSsdpSSDPSearchRequest *self) {
  OrgCybergarageUpnpSsdpSSDPSearchRequest_initWithNSString_(self, OrgCybergarageUpnpDeviceST_ROOT_DEVICE);
}

OrgCybergarageUpnpSsdpSSDPSearchRequest *new_OrgCybergarageUpnpSsdpSSDPSearchRequest_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpSsdpSSDPSearchRequest, init)
}

OrgCybergarageUpnpSsdpSSDPSearchRequest *create_OrgCybergarageUpnpSsdpSSDPSearchRequest_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpSsdpSSDPSearchRequest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpSsdpSSDPSearchRequest)
