//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/ssdp/SSDP.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCybergarageUpnpSsdpSSDP")
#ifdef RESTRICT_OrgCybergarageUpnpSsdpSSDP
#define INCLUDE_ALL_OrgCybergarageUpnpSsdpSSDP 0
#else
#define INCLUDE_ALL_OrgCybergarageUpnpSsdpSSDP 1
#endif
#undef RESTRICT_OrgCybergarageUpnpSsdpSSDP

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCybergarageUpnpSsdpSSDP_) && (INCLUDE_ALL_OrgCybergarageUpnpSsdpSSDP || defined(INCLUDE_OrgCybergarageUpnpSsdpSSDP))
#define OrgCybergarageUpnpSsdpSSDP_

@interface OrgCybergarageUpnpSsdpSSDP : NSObject
@property (readonly, class) jint PORT NS_SWIFT_NAME(PORT);
@property (readonly, copy, class) NSString *ADDRESS NS_SWIFT_NAME(ADDRESS);
@property (readonly, copy, class) NSString *IPV6_LINK_LOCAL_ADDRESS NS_SWIFT_NAME(IPV6_LINK_LOCAL_ADDRESS);
@property (readonly, copy, class) NSString *IPV6_SUBNET_ADDRESS NS_SWIFT_NAME(IPV6_SUBNET_ADDRESS);
@property (readonly, copy, class) NSString *IPV6_ADMINISTRATIVE_ADDRESS NS_SWIFT_NAME(IPV6_ADMINISTRATIVE_ADDRESS);
@property (readonly, copy, class) NSString *IPV6_SITE_LOCAL_ADDRESS NS_SWIFT_NAME(IPV6_SITE_LOCAL_ADDRESS);
@property (readonly, copy, class) NSString *IPV6_GLOBAL_ADDRESS NS_SWIFT_NAME(IPV6_GLOBAL_ADDRESS);
@property (readonly, class) jint DEFAULT_MSEARCH_MX NS_SWIFT_NAME(DEFAULT_MSEARCH_MX);
@property (readonly, class) jint RECV_MESSAGE_BUFSIZE NS_SWIFT_NAME(RECV_MESSAGE_BUFSIZE);

+ (jint)PORT;

+ (NSString *)ADDRESS;

+ (NSString *)IPV6_LINK_LOCAL_ADDRESS;

+ (NSString *)IPV6_SUBNET_ADDRESS;

+ (NSString *)IPV6_ADMINISTRATIVE_ADDRESS;

+ (NSString *)IPV6_SITE_LOCAL_ADDRESS;

+ (NSString *)IPV6_GLOBAL_ADDRESS;

+ (jint)DEFAULT_MSEARCH_MX;

+ (jint)RECV_MESSAGE_BUFSIZE;

#pragma mark Public

- (instancetype __nonnull)init;

+ (NSString *)getIPv6Address;

+ (jint)getLeaseTimeWithNSString:(NSString *)cacheCont;

+ (void)setIPv6AddressWithNSString:(NSString *)addr;

@end

J2OBJC_STATIC_INIT(OrgCybergarageUpnpSsdpSSDP)

inline jint OrgCybergarageUpnpSsdpSSDP_get_PORT(void);
#define OrgCybergarageUpnpSsdpSSDP_PORT 1900
J2OBJC_STATIC_FIELD_CONSTANT(OrgCybergarageUpnpSsdpSSDP, PORT, jint)

inline NSString *OrgCybergarageUpnpSsdpSSDP_get_ADDRESS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpSsdpSSDP_ADDRESS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpSsdpSSDP, ADDRESS, NSString *)

inline NSString *OrgCybergarageUpnpSsdpSSDP_get_IPV6_LINK_LOCAL_ADDRESS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpSsdpSSDP_IPV6_LINK_LOCAL_ADDRESS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpSsdpSSDP, IPV6_LINK_LOCAL_ADDRESS, NSString *)

inline NSString *OrgCybergarageUpnpSsdpSSDP_get_IPV6_SUBNET_ADDRESS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpSsdpSSDP_IPV6_SUBNET_ADDRESS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpSsdpSSDP, IPV6_SUBNET_ADDRESS, NSString *)

inline NSString *OrgCybergarageUpnpSsdpSSDP_get_IPV6_ADMINISTRATIVE_ADDRESS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpSsdpSSDP_IPV6_ADMINISTRATIVE_ADDRESS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpSsdpSSDP, IPV6_ADMINISTRATIVE_ADDRESS, NSString *)

inline NSString *OrgCybergarageUpnpSsdpSSDP_get_IPV6_SITE_LOCAL_ADDRESS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpSsdpSSDP_IPV6_SITE_LOCAL_ADDRESS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpSsdpSSDP, IPV6_SITE_LOCAL_ADDRESS, NSString *)

inline NSString *OrgCybergarageUpnpSsdpSSDP_get_IPV6_GLOBAL_ADDRESS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpSsdpSSDP_IPV6_GLOBAL_ADDRESS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpSsdpSSDP, IPV6_GLOBAL_ADDRESS, NSString *)

inline jint OrgCybergarageUpnpSsdpSSDP_get_DEFAULT_MSEARCH_MX(void);
#define OrgCybergarageUpnpSsdpSSDP_DEFAULT_MSEARCH_MX 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgCybergarageUpnpSsdpSSDP, DEFAULT_MSEARCH_MX, jint)

inline jint OrgCybergarageUpnpSsdpSSDP_get_RECV_MESSAGE_BUFSIZE(void);
#define OrgCybergarageUpnpSsdpSSDP_RECV_MESSAGE_BUFSIZE 1024
J2OBJC_STATIC_FIELD_CONSTANT(OrgCybergarageUpnpSsdpSSDP, RECV_MESSAGE_BUFSIZE, jint)

FOUNDATION_EXPORT void OrgCybergarageUpnpSsdpSSDP_init(OrgCybergarageUpnpSsdpSSDP *self);

FOUNDATION_EXPORT OrgCybergarageUpnpSsdpSSDP *new_OrgCybergarageUpnpSsdpSSDP_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpSsdpSSDP *create_OrgCybergarageUpnpSsdpSSDP_init(void);

FOUNDATION_EXPORT void OrgCybergarageUpnpSsdpSSDP_setIPv6AddressWithNSString_(NSString *addr);

FOUNDATION_EXPORT NSString *OrgCybergarageUpnpSsdpSSDP_getIPv6Address(void);

FOUNDATION_EXPORT jint OrgCybergarageUpnpSsdpSSDP_getLeaseTimeWithNSString_(NSString *cacheCont);

J2OBJC_TYPE_LITERAL_HEADER(OrgCybergarageUpnpSsdpSSDP)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgCybergarageUpnpSsdpSSDP")
