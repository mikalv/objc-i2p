//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/ssdp/SSDPSearchSocket.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCybergarageUpnpSsdpSSDPSearchSocket")
#ifdef RESTRICT_OrgCybergarageUpnpSsdpSSDPSearchSocket
#define INCLUDE_ALL_OrgCybergarageUpnpSsdpSSDPSearchSocket 0
#else
#define INCLUDE_ALL_OrgCybergarageUpnpSsdpSSDPSearchSocket 1
#endif
#undef RESTRICT_OrgCybergarageUpnpSsdpSSDPSearchSocket

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCybergarageUpnpSsdpSSDPSearchSocket_) && (INCLUDE_ALL_OrgCybergarageUpnpSsdpSSDPSearchSocket || defined(INCLUDE_OrgCybergarageUpnpSsdpSSDPSearchSocket))
#define OrgCybergarageUpnpSsdpSSDPSearchSocket_

#define RESTRICT_OrgCybergarageUpnpSsdpHTTPMUSocket 1
#define INCLUDE_OrgCybergarageUpnpSsdpHTTPMUSocket 1
#include "org/cybergarage/upnp/ssdp/HTTPMUSocket.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class JavaNetInet4Address;
@class JavaNetInet6Address;
@class JavaNetInetAddress;
@class OrgCybergarageUpnpSsdpSSDPPacket;
@protocol OrgCybergarageUpnpDeviceSearchListener;

@interface OrgCybergarageUpnpSsdpSSDPSearchSocket : OrgCybergarageUpnpSsdpHTTPMUSocket < JavaLangRunnable >

#pragma mark Public

- (instancetype __nonnull)initWithJavaNetInetAddress:(JavaNetInetAddress *)bindAddr;

- (instancetype __nonnull)initWithNSString:(NSString *)bindAddr
                                   withInt:(jint)port
                              withNSString:(NSString *)multicast;

- (void)addSearchListenerWithOrgCybergarageUpnpDeviceSearchListener:(id<OrgCybergarageUpnpDeviceSearchListener>)listener;

- (jboolean)openWithJavaNetInet4Address:(JavaNetInet4Address *)bindAddr;

- (jboolean)openWithJavaNetInet6Address:(JavaNetInet6Address *)bindAddr;

- (jboolean)openWithNSString:(NSString *)bindAddr;

- (jboolean)openWithNSString:(NSString *)bind
                withNSString:(NSString *)multicast;

- (void)performSearchListenerWithOrgCybergarageUpnpSsdpSSDPPacket:(OrgCybergarageUpnpSsdpSSDPPacket *)ssdpPacket;

- (void)removeSearchListenerWithOrgCybergarageUpnpDeviceSearchListener:(id<OrgCybergarageUpnpDeviceSearchListener>)listener;

- (void)run;

- (void)start;

- (void)stop;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCybergarageUpnpSsdpSSDPSearchSocket)

FOUNDATION_EXPORT void OrgCybergarageUpnpSsdpSSDPSearchSocket_initWithNSString_withInt_withNSString_(OrgCybergarageUpnpSsdpSSDPSearchSocket *self, NSString *bindAddr, jint port, NSString *multicast);

FOUNDATION_EXPORT OrgCybergarageUpnpSsdpSSDPSearchSocket *new_OrgCybergarageUpnpSsdpSSDPSearchSocket_initWithNSString_withInt_withNSString_(NSString *bindAddr, jint port, NSString *multicast) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpSsdpSSDPSearchSocket *create_OrgCybergarageUpnpSsdpSSDPSearchSocket_initWithNSString_withInt_withNSString_(NSString *bindAddr, jint port, NSString *multicast);

FOUNDATION_EXPORT void OrgCybergarageUpnpSsdpSSDPSearchSocket_initWithJavaNetInetAddress_(OrgCybergarageUpnpSsdpSSDPSearchSocket *self, JavaNetInetAddress *bindAddr);

FOUNDATION_EXPORT OrgCybergarageUpnpSsdpSSDPSearchSocket *new_OrgCybergarageUpnpSsdpSSDPSearchSocket_initWithJavaNetInetAddress_(JavaNetInetAddress *bindAddr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpSsdpSSDPSearchSocket *create_OrgCybergarageUpnpSsdpSSDPSearchSocket_initWithJavaNetInetAddress_(JavaNetInetAddress *bindAddr);

J2OBJC_TYPE_LITERAL_HEADER(OrgCybergarageUpnpSsdpSSDPSearchSocket)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgCybergarageUpnpSsdpSSDPSearchSocket")
