//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/ssdp/SSDP.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "org/cybergarage/upnp/ssdp/SSDP.h"
#include "org/cybergarage/util/Debug.h"

inline NSString *OrgCybergarageUpnpSsdpSSDP_get_IPV6_ADDRESS(void);
inline NSString *OrgCybergarageUpnpSsdpSSDP_set_IPV6_ADDRESS(NSString *value);
static NSString *OrgCybergarageUpnpSsdpSSDP_IPV6_ADDRESS;
J2OBJC_STATIC_FIELD_OBJ(OrgCybergarageUpnpSsdpSSDP, IPV6_ADDRESS, NSString *)

J2OBJC_INITIALIZED_DEFN(OrgCybergarageUpnpSsdpSSDP)

NSString *OrgCybergarageUpnpSsdpSSDP_ADDRESS = @"239.255.255.250";
NSString *OrgCybergarageUpnpSsdpSSDP_IPV6_LINK_LOCAL_ADDRESS = @"FF02::C";
NSString *OrgCybergarageUpnpSsdpSSDP_IPV6_SUBNET_ADDRESS = @"FF03::C";
NSString *OrgCybergarageUpnpSsdpSSDP_IPV6_ADMINISTRATIVE_ADDRESS = @"FF04::C";
NSString *OrgCybergarageUpnpSsdpSSDP_IPV6_SITE_LOCAL_ADDRESS = @"FF05::C";
NSString *OrgCybergarageUpnpSsdpSSDP_IPV6_GLOBAL_ADDRESS = @"FF0E::C";

@implementation OrgCybergarageUpnpSsdpSSDP

+ (jint)PORT {
  return OrgCybergarageUpnpSsdpSSDP_PORT;
}

+ (NSString *)ADDRESS {
  return OrgCybergarageUpnpSsdpSSDP_ADDRESS;
}

+ (NSString *)IPV6_LINK_LOCAL_ADDRESS {
  return OrgCybergarageUpnpSsdpSSDP_IPV6_LINK_LOCAL_ADDRESS;
}

+ (NSString *)IPV6_SUBNET_ADDRESS {
  return OrgCybergarageUpnpSsdpSSDP_IPV6_SUBNET_ADDRESS;
}

+ (NSString *)IPV6_ADMINISTRATIVE_ADDRESS {
  return OrgCybergarageUpnpSsdpSSDP_IPV6_ADMINISTRATIVE_ADDRESS;
}

+ (NSString *)IPV6_SITE_LOCAL_ADDRESS {
  return OrgCybergarageUpnpSsdpSSDP_IPV6_SITE_LOCAL_ADDRESS;
}

+ (NSString *)IPV6_GLOBAL_ADDRESS {
  return OrgCybergarageUpnpSsdpSSDP_IPV6_GLOBAL_ADDRESS;
}

+ (jint)DEFAULT_MSEARCH_MX {
  return OrgCybergarageUpnpSsdpSSDP_DEFAULT_MSEARCH_MX;
}

+ (jint)RECV_MESSAGE_BUFSIZE {
  return OrgCybergarageUpnpSsdpSSDP_RECV_MESSAGE_BUFSIZE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpSsdpSSDP_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)setIPv6AddressWithNSString:(NSString *)addr {
  OrgCybergarageUpnpSsdpSSDP_setIPv6AddressWithNSString_(addr);
}

+ (NSString *)getIPv6Address {
  return OrgCybergarageUpnpSsdpSSDP_getIPv6Address();
}

+ (jint)getLeaseTimeWithNSString:(NSString *)cacheCont {
  return OrgCybergarageUpnpSsdpSSDP_getLeaseTimeWithNSString_(cacheCont);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x19, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x19, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x19, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setIPv6AddressWithNSString:);
  methods[2].selector = @selector(getIPv6Address);
  methods[3].selector = @selector(getLeaseTimeWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PORT", "I", .constantValue.asInt = OrgCybergarageUpnpSsdpSSDP_PORT, 0x19, -1, -1, -1, -1 },
    { "ADDRESS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "IPV6_LINK_LOCAL_ADDRESS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "IPV6_SUBNET_ADDRESS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "IPV6_ADMINISTRATIVE_ADDRESS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "IPV6_SITE_LOCAL_ADDRESS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "IPV6_GLOBAL_ADDRESS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "IPV6_ADDRESS", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 9, -1, -1 },
    { "DEFAULT_MSEARCH_MX", "I", .constantValue.asInt = OrgCybergarageUpnpSsdpSSDP_DEFAULT_MSEARCH_MX, 0x19, -1, -1, -1, -1 },
    { "RECV_MESSAGE_BUFSIZE", "I", .constantValue.asInt = OrgCybergarageUpnpSsdpSSDP_RECV_MESSAGE_BUFSIZE, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setIPv6Address", "LNSString;", "getLeaseTime", &OrgCybergarageUpnpSsdpSSDP_ADDRESS, &OrgCybergarageUpnpSsdpSSDP_IPV6_LINK_LOCAL_ADDRESS, &OrgCybergarageUpnpSsdpSSDP_IPV6_SUBNET_ADDRESS, &OrgCybergarageUpnpSsdpSSDP_IPV6_ADMINISTRATIVE_ADDRESS, &OrgCybergarageUpnpSsdpSSDP_IPV6_SITE_LOCAL_ADDRESS, &OrgCybergarageUpnpSsdpSSDP_IPV6_GLOBAL_ADDRESS, &OrgCybergarageUpnpSsdpSSDP_IPV6_ADDRESS };
  static const J2ObjcClassInfo _OrgCybergarageUpnpSsdpSSDP = { "SSDP", "org.cybergarage.upnp.ssdp", ptrTable, methods, fields, 7, 0x1, 4, 10, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpSsdpSSDP;
}

+ (void)initialize {
  if (self == [OrgCybergarageUpnpSsdpSSDP class]) {
    {
      OrgCybergarageUpnpSsdpSSDP_setIPv6AddressWithNSString_(OrgCybergarageUpnpSsdpSSDP_IPV6_LINK_LOCAL_ADDRESS);
    }
    J2OBJC_SET_INITIALIZED(OrgCybergarageUpnpSsdpSSDP)
  }
}

@end

void OrgCybergarageUpnpSsdpSSDP_init(OrgCybergarageUpnpSsdpSSDP *self) {
  NSObject_init(self);
}

OrgCybergarageUpnpSsdpSSDP *new_OrgCybergarageUpnpSsdpSSDP_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpSsdpSSDP, init)
}

OrgCybergarageUpnpSsdpSSDP *create_OrgCybergarageUpnpSsdpSSDP_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpSsdpSSDP, init)
}

void OrgCybergarageUpnpSsdpSSDP_setIPv6AddressWithNSString_(NSString *addr) {
  OrgCybergarageUpnpSsdpSSDP_initialize();
  JreStrongAssign(&OrgCybergarageUpnpSsdpSSDP_IPV6_ADDRESS, addr);
}

NSString *OrgCybergarageUpnpSsdpSSDP_getIPv6Address() {
  OrgCybergarageUpnpSsdpSSDP_initialize();
  return OrgCybergarageUpnpSsdpSSDP_IPV6_ADDRESS;
}

jint OrgCybergarageUpnpSsdpSSDP_getLeaseTimeWithNSString_(NSString *cacheCont) {
  OrgCybergarageUpnpSsdpSSDP_initialize();
  jint mx = 0;
  jint maxAgeIdx = [((NSString *) nil_chk(cacheCont)) java_indexOfString:@"max-age"];
  if (maxAgeIdx >= 0) {
    jint endIdx = [cacheCont java_indexOf:',' fromIndex:maxAgeIdx];
    if (endIdx < 0) endIdx = [cacheCont java_length];
    @try {
      maxAgeIdx = [cacheCont java_indexOfString:@"=" fromIndex:maxAgeIdx];
      NSString *mxStr = [((NSString *) nil_chk([cacheCont java_substring:maxAgeIdx + 1 endIndex:endIdx])) java_trim];
      mx = JavaLangInteger_parseIntWithNSString_(mxStr);
    }
    @catch (JavaLangException *e) {
      OrgCybergarageUtilDebug_warningWithJavaLangException_(e);
    }
  }
  return mx;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpSsdpSSDP)
