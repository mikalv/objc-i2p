//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/control/ActionRequest.java
//

#include "J2ObjC_source.h"
#include "org/cybergarage/http/HTTPRequest.h"
#include "org/cybergarage/soap/SOAP.h"
#include "org/cybergarage/soap/SOAPResponse.h"
#include "org/cybergarage/upnp/Action.h"
#include "org/cybergarage/upnp/Argument.h"
#include "org/cybergarage/upnp/ArgumentList.h"
#include "org/cybergarage/upnp/Service.h"
#include "org/cybergarage/upnp/control/ActionRequest.h"
#include "org/cybergarage/upnp/control/ActionResponse.h"
#include "org/cybergarage/upnp/control/Control.h"
#include "org/cybergarage/upnp/control/ControlRequest.h"
#include "org/cybergarage/xml/Node.h"

@interface OrgCybergarageUpnpControlActionRequest ()

- (OrgCybergarageXmlNode *)createContentNodeWithOrgCybergarageUpnpService:(OrgCybergarageUpnpService *)service
                                             withOrgCybergarageUpnpAction:(OrgCybergarageUpnpAction *)action
                                       withOrgCybergarageUpnpArgumentList:(OrgCybergarageUpnpArgumentList *)argList;

@end

__attribute__((unused)) static OrgCybergarageXmlNode *OrgCybergarageUpnpControlActionRequest_createContentNodeWithOrgCybergarageUpnpService_withOrgCybergarageUpnpAction_withOrgCybergarageUpnpArgumentList_(OrgCybergarageUpnpControlActionRequest *self, OrgCybergarageUpnpService *service, OrgCybergarageUpnpAction *action, OrgCybergarageUpnpArgumentList *argList);

@implementation OrgCybergarageUpnpControlActionRequest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpControlActionRequest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgCybergarageHttpHTTPRequest:(OrgCybergarageHttpHTTPRequest *)httpReq {
  OrgCybergarageUpnpControlActionRequest_initWithOrgCybergarageHttpHTTPRequest_(self, httpReq);
  return self;
}

- (OrgCybergarageXmlNode *)getActionNode {
  OrgCybergarageXmlNode *bodyNode = [self getBodyNode];
  if (bodyNode == nil) return nil;
  if ([bodyNode hasNodes] == false) return nil;
  return [bodyNode getNodeWithInt:0];
}

- (NSString *)getActionName {
  OrgCybergarageXmlNode *node = [self getActionNode];
  if (node == nil) return @"";
  NSString *name = [node getName];
  if (name == nil) return @"";
  jint idx = [name java_indexOfString:OrgCybergarageSoapSOAP_DELIM] + 1;
  if (idx < 0) return @"";
  return [name java_substring:idx endIndex:[name java_length]];
}

- (OrgCybergarageUpnpArgumentList *)getArgumentList {
  OrgCybergarageXmlNode *actNode = [self getActionNode];
  jint nArgNodes = [((OrgCybergarageXmlNode *) nil_chk(actNode)) getNNodes];
  OrgCybergarageUpnpArgumentList *argList = create_OrgCybergarageUpnpArgumentList_init();
  for (jint n = 0; n < nArgNodes; n++) {
    OrgCybergarageUpnpArgument *arg = create_OrgCybergarageUpnpArgument_init();
    OrgCybergarageXmlNode *argNode = [actNode getNodeWithInt:n];
    [arg setNameWithNSString:[((OrgCybergarageXmlNode *) nil_chk(argNode)) getName]];
    [arg setValueWithNSString:[argNode getValue]];
    [argList addWithId:arg];
  }
  return argList;
}

- (void)setRequestWithOrgCybergarageUpnpAction:(OrgCybergarageUpnpAction *)action
            withOrgCybergarageUpnpArgumentList:(OrgCybergarageUpnpArgumentList *)argList {
  OrgCybergarageUpnpService *service = [((OrgCybergarageUpnpAction *) nil_chk(action)) getService];
  [self setRequestHostWithOrgCybergarageUpnpService:service];
  [self setEnvelopeNodeWithOrgCybergarageXmlNode:OrgCybergarageSoapSOAP_createEnvelopeBodyNode()];
  OrgCybergarageXmlNode *envNode = [self getEnvelopeNode];
  OrgCybergarageXmlNode *bodyNode = [self getBodyNode];
  OrgCybergarageXmlNode *argNode = OrgCybergarageUpnpControlActionRequest_createContentNodeWithOrgCybergarageUpnpService_withOrgCybergarageUpnpAction_withOrgCybergarageUpnpArgumentList_(self, service, action, argList);
  [((OrgCybergarageXmlNode *) nil_chk(bodyNode)) addNodeWithOrgCybergarageXmlNode:argNode];
  [self setContentWithOrgCybergarageXmlNode:envNode];
  NSString *serviceType = [((OrgCybergarageUpnpService *) nil_chk(service)) getServiceType];
  NSString *actionName = [action getName];
  NSString *soapAction = JreStrcat("C$C$C", '"', serviceType, '#', actionName, '"');
  [self setSOAPActionWithNSString:soapAction];
}

- (OrgCybergarageXmlNode *)createContentNodeWithOrgCybergarageUpnpService:(OrgCybergarageUpnpService *)service
                                             withOrgCybergarageUpnpAction:(OrgCybergarageUpnpAction *)action
                                       withOrgCybergarageUpnpArgumentList:(OrgCybergarageUpnpArgumentList *)argList {
  return OrgCybergarageUpnpControlActionRequest_createContentNodeWithOrgCybergarageUpnpService_withOrgCybergarageUpnpAction_withOrgCybergarageUpnpArgumentList_(self, service, action, argList);
}

- (OrgCybergarageUpnpControlActionResponse *)post {
  OrgCybergarageSoapSOAPResponse *soapRes = [self postMessageWithNSString:[self getRequestHost] withInt:[self getRequestPort]];
  return create_OrgCybergarageUpnpControlActionResponse_initWithOrgCybergarageSoapSOAPResponse_(soapRes);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpArgumentList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpControlActionResponse;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgCybergarageHttpHTTPRequest:);
  methods[2].selector = @selector(getActionNode);
  methods[3].selector = @selector(getActionName);
  methods[4].selector = @selector(getArgumentList);
  methods[5].selector = @selector(setRequestWithOrgCybergarageUpnpAction:withOrgCybergarageUpnpArgumentList:);
  methods[6].selector = @selector(createContentNodeWithOrgCybergarageUpnpService:withOrgCybergarageUpnpAction:withOrgCybergarageUpnpArgumentList:);
  methods[7].selector = @selector(post);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgCybergarageHttpHTTPRequest;", "setRequest", "LOrgCybergarageUpnpAction;LOrgCybergarageUpnpArgumentList;", "createContentNode", "LOrgCybergarageUpnpService;LOrgCybergarageUpnpAction;LOrgCybergarageUpnpArgumentList;" };
  static const J2ObjcClassInfo _OrgCybergarageUpnpControlActionRequest = { "ActionRequest", "org.cybergarage.upnp.control", ptrTable, methods, NULL, 7, 0x1, 8, 0, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpControlActionRequest;
}

@end

void OrgCybergarageUpnpControlActionRequest_init(OrgCybergarageUpnpControlActionRequest *self) {
  OrgCybergarageUpnpControlControlRequest_init(self);
}

OrgCybergarageUpnpControlActionRequest *new_OrgCybergarageUpnpControlActionRequest_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpControlActionRequest, init)
}

OrgCybergarageUpnpControlActionRequest *create_OrgCybergarageUpnpControlActionRequest_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpControlActionRequest, init)
}

void OrgCybergarageUpnpControlActionRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageUpnpControlActionRequest *self, OrgCybergarageHttpHTTPRequest *httpReq) {
  OrgCybergarageUpnpControlControlRequest_init(self);
  [self setWithOrgCybergarageHttpHTTPRequest:httpReq];
}

OrgCybergarageUpnpControlActionRequest *new_OrgCybergarageUpnpControlActionRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageHttpHTTPRequest *httpReq) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpControlActionRequest, initWithOrgCybergarageHttpHTTPRequest_, httpReq)
}

OrgCybergarageUpnpControlActionRequest *create_OrgCybergarageUpnpControlActionRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageHttpHTTPRequest *httpReq) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpControlActionRequest, initWithOrgCybergarageHttpHTTPRequest_, httpReq)
}

OrgCybergarageXmlNode *OrgCybergarageUpnpControlActionRequest_createContentNodeWithOrgCybergarageUpnpService_withOrgCybergarageUpnpAction_withOrgCybergarageUpnpArgumentList_(OrgCybergarageUpnpControlActionRequest *self, OrgCybergarageUpnpService *service, OrgCybergarageUpnpAction *action, OrgCybergarageUpnpArgumentList *argList) {
  NSString *actionName = [((OrgCybergarageUpnpAction *) nil_chk(action)) getName];
  NSString *serviceType = [((OrgCybergarageUpnpService *) nil_chk(service)) getServiceType];
  OrgCybergarageXmlNode *actionNode = create_OrgCybergarageXmlNode_init();
  [actionNode setNameWithNSString:OrgCybergarageUpnpControlControl_NS withNSString:actionName];
  [actionNode setNameSpaceWithNSString:OrgCybergarageUpnpControlControl_NS withNSString:serviceType];
  jint argListCnt = [((OrgCybergarageUpnpArgumentList *) nil_chk(argList)) size];
  for (jint n = 0; n < argListCnt; n++) {
    OrgCybergarageUpnpArgument *arg = [argList getArgumentWithInt:n];
    OrgCybergarageXmlNode *argNode = create_OrgCybergarageXmlNode_init();
    [argNode setNameWithNSString:[((OrgCybergarageUpnpArgument *) nil_chk(arg)) getName]];
    [argNode setValueWithNSString:[arg getValue]];
    [actionNode addNodeWithOrgCybergarageXmlNode:argNode];
  }
  return actionNode;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpControlActionRequest)
