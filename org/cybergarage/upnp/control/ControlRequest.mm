//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/control/ControlRequest.java
//

#include "J2ObjC_source.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URL.h"
#include "org/cybergarage/http/HTTP.h"
#include "org/cybergarage/http/HTTPRequest.h"
#include "org/cybergarage/soap/SOAPRequest.h"
#include "org/cybergarage/upnp/Device.h"
#include "org/cybergarage/upnp/Service.h"
#include "org/cybergarage/upnp/control/Control.h"
#include "org/cybergarage/upnp/control/ControlRequest.h"

@implementation OrgCybergarageUpnpControlControlRequest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpControlControlRequest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgCybergarageHttpHTTPRequest:(OrgCybergarageHttpHTTPRequest *)httpReq {
  OrgCybergarageUpnpControlControlRequest_initWithOrgCybergarageHttpHTTPRequest_(self, httpReq);
  return self;
}

- (jboolean)isQueryControl {
  return [self isSOAPActionWithNSString:OrgCybergarageUpnpControlControl_QUERY_SOAPACTION];
}

- (jboolean)isActionControl {
  return ![self isQueryControl];
}

- (void)setRequestHostWithOrgCybergarageUpnpService:(OrgCybergarageUpnpService *)service {
  NSString *ctrlURL = [((OrgCybergarageUpnpService *) nil_chk(service)) getControlURL];
  NSString *urlBase = [((OrgCybergarageUpnpDevice *) nil_chk([service getRootDevice])) getURLBase];
  if (urlBase != nil && 0 < [urlBase java_length]) {
    @try {
      JavaNetURL *url = create_JavaNetURL_initWithNSString_(urlBase);
      NSString *basePath = [url getPath];
      jint baseLen = [((NSString *) nil_chk(basePath)) java_length];
      if (0 < baseLen) {
        if (1 < baseLen || ([basePath charAtWithInt:0] != '/')) ctrlURL = JreStrcat("$$", basePath, ctrlURL);
      }
    }
    @catch (JavaNetMalformedURLException *e) {
    }
  }
  [self setURIWithNSString:ctrlURL withBoolean:true];
  NSString *postURL = @"";
  if (OrgCybergarageHttpHTTP_isAbsoluteURLWithNSString_(ctrlURL) == true) postURL = ctrlURL;
  if (postURL == nil || [postURL java_length] <= 0) postURL = [((OrgCybergarageUpnpDevice *) nil_chk([service getRootDevice])) getURLBase];
  if (postURL == nil || [postURL java_length] <= 0) postURL = [((OrgCybergarageUpnpDevice *) nil_chk([service getRootDevice])) getLocation];
  NSString *reqHost = OrgCybergarageHttpHTTP_getHostWithNSString_(postURL);
  jint reqPort = OrgCybergarageHttpHTTP_getPortWithNSString_(postURL);
  [self setHostWithNSString:reqHost withInt:reqPort];
  [self setRequestHostWithNSString:reqHost];
  [self setRequestPortWithInt:reqPort];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgCybergarageHttpHTTPRequest:);
  methods[2].selector = @selector(isQueryControl);
  methods[3].selector = @selector(isActionControl);
  methods[4].selector = @selector(setRequestHostWithOrgCybergarageUpnpService:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgCybergarageHttpHTTPRequest;", "setRequestHost", "LOrgCybergarageUpnpService;" };
  static const J2ObjcClassInfo _OrgCybergarageUpnpControlControlRequest = { "ControlRequest", "org.cybergarage.upnp.control", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpControlControlRequest;
}

@end

void OrgCybergarageUpnpControlControlRequest_init(OrgCybergarageUpnpControlControlRequest *self) {
  OrgCybergarageSoapSOAPRequest_init(self);
}

OrgCybergarageUpnpControlControlRequest *new_OrgCybergarageUpnpControlControlRequest_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpControlControlRequest, init)
}

OrgCybergarageUpnpControlControlRequest *create_OrgCybergarageUpnpControlControlRequest_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpControlControlRequest, init)
}

void OrgCybergarageUpnpControlControlRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageUpnpControlControlRequest *self, OrgCybergarageHttpHTTPRequest *httpReq) {
  OrgCybergarageSoapSOAPRequest_init(self);
  [self setWithOrgCybergarageHttpHTTPRequest:httpReq];
}

OrgCybergarageUpnpControlControlRequest *new_OrgCybergarageUpnpControlControlRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageHttpHTTPRequest *httpReq) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpControlControlRequest, initWithOrgCybergarageHttpHTTPRequest_, httpReq)
}

OrgCybergarageUpnpControlControlRequest *create_OrgCybergarageUpnpControlControlRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageHttpHTTPRequest *httpReq) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpControlControlRequest, initWithOrgCybergarageHttpHTTPRequest_, httpReq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpControlControlRequest)
