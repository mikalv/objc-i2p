//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/control/ActionResponse.java
//

#include "J2ObjC_source.h"
#include "org/cybergarage/http/HTTP.h"
#include "org/cybergarage/http/HTTPStatus.h"
#include "org/cybergarage/soap/SOAP.h"
#include "org/cybergarage/soap/SOAPResponse.h"
#include "org/cybergarage/upnp/Action.h"
#include "org/cybergarage/upnp/Argument.h"
#include "org/cybergarage/upnp/ArgumentList.h"
#include "org/cybergarage/upnp/Service.h"
#include "org/cybergarage/upnp/control/ActionResponse.h"
#include "org/cybergarage/upnp/control/ControlResponse.h"
#include "org/cybergarage/xml/Node.h"

@interface OrgCybergarageUpnpControlActionResponse ()

- (OrgCybergarageXmlNode *)createResponseNodeWithOrgCybergarageUpnpAction:(OrgCybergarageUpnpAction *)action;

- (OrgCybergarageXmlNode *)getActionResponseNode;

@end

__attribute__((unused)) static OrgCybergarageXmlNode *OrgCybergarageUpnpControlActionResponse_createResponseNodeWithOrgCybergarageUpnpAction_(OrgCybergarageUpnpControlActionResponse *self, OrgCybergarageUpnpAction *action);

__attribute__((unused)) static OrgCybergarageXmlNode *OrgCybergarageUpnpControlActionResponse_getActionResponseNode(OrgCybergarageUpnpControlActionResponse *self);

@implementation OrgCybergarageUpnpControlActionResponse

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpControlActionResponse_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgCybergarageSoapSOAPResponse:(OrgCybergarageSoapSOAPResponse *)soapRes {
  OrgCybergarageUpnpControlActionResponse_initWithOrgCybergarageSoapSOAPResponse_(self, soapRes);
  return self;
}

- (void)setResponseWithOrgCybergarageUpnpAction:(OrgCybergarageUpnpAction *)action {
  [self setStatusCodeWithInt:OrgCybergarageHttpHTTPStatus_OK];
  OrgCybergarageXmlNode *bodyNode = [self getBodyNode];
  OrgCybergarageXmlNode *resNode = OrgCybergarageUpnpControlActionResponse_createResponseNodeWithOrgCybergarageUpnpAction_(self, action);
  [((OrgCybergarageXmlNode *) nil_chk(bodyNode)) addNodeWithOrgCybergarageXmlNode:resNode];
  OrgCybergarageXmlNode *envNode = [self getEnvelopeNode];
  [self setContentWithOrgCybergarageXmlNode:envNode];
}

- (OrgCybergarageXmlNode *)createResponseNodeWithOrgCybergarageUpnpAction:(OrgCybergarageUpnpAction *)action {
  return OrgCybergarageUpnpControlActionResponse_createResponseNodeWithOrgCybergarageUpnpAction_(self, action);
}

- (OrgCybergarageXmlNode *)getActionResponseNode {
  return OrgCybergarageUpnpControlActionResponse_getActionResponseNode(self);
}

- (OrgCybergarageUpnpArgumentList *)getResponse {
  OrgCybergarageUpnpArgumentList *argList = create_OrgCybergarageUpnpArgumentList_init();
  OrgCybergarageXmlNode *resNode = OrgCybergarageUpnpControlActionResponse_getActionResponseNode(self);
  if (resNode == nil) return argList;
  jint nArgs = [resNode getNNodes];
  for (jint n = 0; n < nArgs; n++) {
    OrgCybergarageXmlNode *node = [resNode getNodeWithInt:n];
    NSString *name = [((OrgCybergarageXmlNode *) nil_chk(node)) getName];
    NSString *value = [node getValue];
    OrgCybergarageUpnpArgument *arg = create_OrgCybergarageUpnpArgument_initWithNSString_withNSString_(name, value);
    [argList addWithId:arg];
  }
  return argList;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x2, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpArgumentList;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgCybergarageSoapSOAPResponse:);
  methods[2].selector = @selector(setResponseWithOrgCybergarageUpnpAction:);
  methods[3].selector = @selector(createResponseNodeWithOrgCybergarageUpnpAction:);
  methods[4].selector = @selector(getActionResponseNode);
  methods[5].selector = @selector(getResponse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgCybergarageSoapSOAPResponse;", "setResponse", "LOrgCybergarageUpnpAction;", "createResponseNode" };
  static const J2ObjcClassInfo _OrgCybergarageUpnpControlActionResponse = { "ActionResponse", "org.cybergarage.upnp.control", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpControlActionResponse;
}

@end

void OrgCybergarageUpnpControlActionResponse_init(OrgCybergarageUpnpControlActionResponse *self) {
  OrgCybergarageUpnpControlControlResponse_init(self);
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_EXT withNSString:@""];
}

OrgCybergarageUpnpControlActionResponse *new_OrgCybergarageUpnpControlActionResponse_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpControlActionResponse, init)
}

OrgCybergarageUpnpControlActionResponse *create_OrgCybergarageUpnpControlActionResponse_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpControlActionResponse, init)
}

void OrgCybergarageUpnpControlActionResponse_initWithOrgCybergarageSoapSOAPResponse_(OrgCybergarageUpnpControlActionResponse *self, OrgCybergarageSoapSOAPResponse *soapRes) {
  OrgCybergarageUpnpControlControlResponse_initWithOrgCybergarageSoapSOAPResponse_(self, soapRes);
  [self setHeaderWithNSString:OrgCybergarageHttpHTTP_EXT withNSString:@""];
}

OrgCybergarageUpnpControlActionResponse *new_OrgCybergarageUpnpControlActionResponse_initWithOrgCybergarageSoapSOAPResponse_(OrgCybergarageSoapSOAPResponse *soapRes) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpControlActionResponse, initWithOrgCybergarageSoapSOAPResponse_, soapRes)
}

OrgCybergarageUpnpControlActionResponse *create_OrgCybergarageUpnpControlActionResponse_initWithOrgCybergarageSoapSOAPResponse_(OrgCybergarageSoapSOAPResponse *soapRes) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpControlActionResponse, initWithOrgCybergarageSoapSOAPResponse_, soapRes)
}

OrgCybergarageXmlNode *OrgCybergarageUpnpControlActionResponse_createResponseNodeWithOrgCybergarageUpnpAction_(OrgCybergarageUpnpControlActionResponse *self, OrgCybergarageUpnpAction *action) {
  NSString *actionName = [((OrgCybergarageUpnpAction *) nil_chk(action)) getName];
  OrgCybergarageXmlNode *actionNameResNode = create_OrgCybergarageXmlNode_initWithNSString_(JreStrcat("$$$$", OrgCybergarageSoapSOAP_METHODNS, OrgCybergarageSoapSOAP_DELIM, actionName, OrgCybergarageSoapSOAP_RESPONSE));
  OrgCybergarageUpnpService *service = [action getService];
  if (service != nil) {
    [actionNameResNode setAttributeWithNSString:JreStrcat("$$", @"xmlns:", OrgCybergarageSoapSOAP_METHODNS) withNSString:[service getServiceType]];
  }
  OrgCybergarageUpnpArgumentList *argList = [action getArgumentList];
  jint nArgs = [((OrgCybergarageUpnpArgumentList *) nil_chk(argList)) size];
  for (jint n = 0; n < nArgs; n++) {
    OrgCybergarageUpnpArgument *arg = [argList getArgumentWithInt:n];
    if ([((OrgCybergarageUpnpArgument *) nil_chk(arg)) isOutDirection] == false) continue;
    OrgCybergarageXmlNode *argNode = create_OrgCybergarageXmlNode_init();
    [argNode setNameWithNSString:[arg getName]];
    [argNode setValueWithNSString:[arg getValue]];
    [actionNameResNode addNodeWithOrgCybergarageXmlNode:argNode];
  }
  return actionNameResNode;
}

OrgCybergarageXmlNode *OrgCybergarageUpnpControlActionResponse_getActionResponseNode(OrgCybergarageUpnpControlActionResponse *self) {
  OrgCybergarageXmlNode *bodyNode = [self getBodyNode];
  if (bodyNode == nil || [bodyNode hasNodes] == false) return nil;
  return [bodyNode getNodeWithInt:0];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpControlActionResponse)
