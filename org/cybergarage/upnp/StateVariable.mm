//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/StateVariable.java
//

#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/Iterator.h"
#include "org/cybergarage/upnp/AllowedValue.h"
#include "org/cybergarage/upnp/AllowedValueList.h"
#include "org/cybergarage/upnp/AllowedValueRange.h"
#include "org/cybergarage/upnp/Service.h"
#include "org/cybergarage/upnp/StateVariable.h"
#include "org/cybergarage/upnp/UPnPStatus.h"
#include "org/cybergarage/upnp/control/QueryListener.h"
#include "org/cybergarage/upnp/control/QueryRequest.h"
#include "org/cybergarage/upnp/control/QueryResponse.h"
#include "org/cybergarage/upnp/xml/NodeData.h"
#include "org/cybergarage/upnp/xml/StateVariableData.h"
#include "org/cybergarage/util/Debug.h"
#include "org/cybergarage/xml/Node.h"

@interface OrgCybergarageUpnpStateVariable () {
 @public
  OrgCybergarageXmlNode *stateVariableNode_;
  OrgCybergarageXmlNode *serviceNode_;
  OrgCybergarageUpnpUPnPStatus *upnpStatus_;
  id userData_;
}

- (void)setQueryResponseWithOrgCybergarageUpnpControlQueryResponse:(OrgCybergarageUpnpControlQueryResponse *)res;

@end

J2OBJC_FIELD_SETTER(OrgCybergarageUpnpStateVariable, stateVariableNode_, OrgCybergarageXmlNode *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpStateVariable, serviceNode_, OrgCybergarageXmlNode *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpStateVariable, upnpStatus_, OrgCybergarageUpnpUPnPStatus *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpStateVariable, userData_, id)

inline NSString *OrgCybergarageUpnpStateVariable_get_NAME(void);
static NSString *OrgCybergarageUpnpStateVariable_NAME = @"name";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpStateVariable, NAME, NSString *)

inline NSString *OrgCybergarageUpnpStateVariable_get_DATATYPE(void);
static NSString *OrgCybergarageUpnpStateVariable_DATATYPE = @"dataType";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpStateVariable, DATATYPE, NSString *)

inline NSString *OrgCybergarageUpnpStateVariable_get_SENDEVENTS(void);
static NSString *OrgCybergarageUpnpStateVariable_SENDEVENTS = @"sendEvents";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpStateVariable, SENDEVENTS, NSString *)

inline NSString *OrgCybergarageUpnpStateVariable_get_SENDEVENTS_YES(void);
static NSString *OrgCybergarageUpnpStateVariable_SENDEVENTS_YES = @"yes";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpStateVariable, SENDEVENTS_YES, NSString *)

inline NSString *OrgCybergarageUpnpStateVariable_get_SENDEVENTS_NO(void);
static NSString *OrgCybergarageUpnpStateVariable_SENDEVENTS_NO = @"no";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpStateVariable, SENDEVENTS_NO, NSString *)

inline NSString *OrgCybergarageUpnpStateVariable_get_DEFAULT_VALUE(void);
static NSString *OrgCybergarageUpnpStateVariable_DEFAULT_VALUE = @"defaultValue";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpStateVariable, DEFAULT_VALUE, NSString *)

__attribute__((unused)) static void OrgCybergarageUpnpStateVariable_setQueryResponseWithOrgCybergarageUpnpControlQueryResponse_(OrgCybergarageUpnpStateVariable *self, OrgCybergarageUpnpControlQueryResponse *res);

NSString *OrgCybergarageUpnpStateVariable_ELEM_NAME = @"stateVariable";

@implementation OrgCybergarageUpnpStateVariable

+ (NSString *)ELEM_NAME {
  return OrgCybergarageUpnpStateVariable_ELEM_NAME;
}

- (OrgCybergarageXmlNode *)getServiceNode {
  return serviceNode_;
}

- (void)setServiceNodeWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)n {
  JreStrongAssign(&serviceNode_, n);
}

- (OrgCybergarageUpnpService *)getService {
  OrgCybergarageXmlNode *serviceNode = [self getServiceNode];
  if (serviceNode == nil) return nil;
  return create_OrgCybergarageUpnpService_initWithOrgCybergarageXmlNode_(serviceNode);
}

- (OrgCybergarageXmlNode *)getStateVariableNode {
  return stateVariableNode_;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpStateVariable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)serviceNode
                    withOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)stateVarNode {
  OrgCybergarageUpnpStateVariable_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(self, serviceNode, stateVarNode);
  return self;
}

+ (jboolean)isStateVariableNodeWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node {
  return OrgCybergarageUpnpStateVariable_isStateVariableNodeWithOrgCybergarageXmlNode_(node);
}

- (void)setNameWithNSString:(NSString *)value {
  [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) setNodeWithNSString:OrgCybergarageUpnpStateVariable_NAME withNSString:value];
}

- (NSString *)getName {
  return [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) getNodeValueWithNSString:OrgCybergarageUpnpStateVariable_NAME];
}

- (void)setDataTypeWithNSString:(NSString *)value {
  [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) setNodeWithNSString:OrgCybergarageUpnpStateVariable_DATATYPE withNSString:value];
}

- (NSString *)getDataType {
  return [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) getNodeValueWithNSString:OrgCybergarageUpnpStateVariable_DATATYPE];
}

- (void)setSendEventsWithBoolean:(jboolean)state {
  [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) setAttributeWithNSString:OrgCybergarageUpnpStateVariable_SENDEVENTS withNSString:(state == true) ? OrgCybergarageUpnpStateVariable_SENDEVENTS_YES : OrgCybergarageUpnpStateVariable_SENDEVENTS_NO];
}

- (jboolean)isSendEvents {
  NSString *state = [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) getAttributeValueWithNSString:OrgCybergarageUpnpStateVariable_SENDEVENTS];
  if (state == nil) return false;
  if ([state java_equalsIgnoreCase:OrgCybergarageUpnpStateVariable_SENDEVENTS_YES] == true) return true;
  return false;
}

- (void)setWithOrgCybergarageUpnpStateVariable:(OrgCybergarageUpnpStateVariable *)stateVar {
  [self setNameWithNSString:[((OrgCybergarageUpnpStateVariable *) nil_chk(stateVar)) getName]];
  [self setValueWithNSString:[stateVar getValue]];
  [self setDataTypeWithNSString:[stateVar getDataType]];
  [self setSendEventsWithBoolean:[stateVar isSendEvents]];
}

- (OrgCybergarageUpnpXmlStateVariableData *)getStateVariableData {
  OrgCybergarageXmlNode *node = [self getStateVariableNode];
  OrgCybergarageUpnpXmlStateVariableData *userData = (OrgCybergarageUpnpXmlStateVariableData *) cast_chk([((OrgCybergarageXmlNode *) nil_chk(node)) getUserData], [OrgCybergarageUpnpXmlStateVariableData class]);
  if (userData == nil) {
    userData = create_OrgCybergarageUpnpXmlStateVariableData_init();
    [node setUserDataWithId:userData];
    [userData setNodeWithOrgCybergarageXmlNode:node];
  }
  return userData;
}

- (void)setValueWithNSString:(NSString *)value {
  NSString *currValue = [((OrgCybergarageUpnpXmlStateVariableData *) nil_chk([self getStateVariableData])) getValue];
  if (currValue != nil && [currValue isEqual:value] == true) return;
  [((OrgCybergarageUpnpXmlStateVariableData *) nil_chk([self getStateVariableData])) setValueWithNSString:value];
  OrgCybergarageUpnpService *service = [self getService];
  if (service == nil) return;
  if ([self isSendEvents] == false) return;
  [service notifyWithOrgCybergarageUpnpStateVariable:self];
}

- (void)setValueWithInt:(jint)value {
  [self setValueWithNSString:JavaLangInteger_toStringWithInt_(value)];
}

- (void)setValueWithLong:(jlong)value {
  [self setValueWithNSString:JavaLangLong_toStringWithLong_(value)];
}

- (NSString *)getValue {
  return [((OrgCybergarageUpnpXmlStateVariableData *) nil_chk([self getStateVariableData])) getValue];
}

- (OrgCybergarageUpnpAllowedValueList *)getAllowedValueList {
  OrgCybergarageUpnpAllowedValueList *valueList = create_OrgCybergarageUpnpAllowedValueList_init();
  OrgCybergarageXmlNode *valueListNode = [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) getNodeWithNSString:OrgCybergarageUpnpAllowedValueList_ELEM_NAME];
  if (valueListNode == nil) return nil;
  jint nNode = [valueListNode getNNodes];
  for (jint n = 0; n < nNode; n++) {
    OrgCybergarageXmlNode *node = [valueListNode getNodeWithInt:n];
    if (OrgCybergarageUpnpAllowedValue_isAllowedValueNodeWithOrgCybergarageXmlNode_(node) == false) continue;
    OrgCybergarageUpnpAllowedValue *allowedVal = create_OrgCybergarageUpnpAllowedValue_initWithOrgCybergarageXmlNode_(node);
    [valueList addWithId:allowedVal];
  }
  return valueList;
}

- (void)setAllowedValueListWithOrgCybergarageUpnpAllowedValueList:(OrgCybergarageUpnpAllowedValueList *)avl {
  [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) removeNodeWithNSString:OrgCybergarageUpnpAllowedValueList_ELEM_NAME];
  [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) removeNodeWithNSString:OrgCybergarageUpnpAllowedValueRange_ELEM_NAME];
  OrgCybergarageXmlNode *n = create_OrgCybergarageXmlNode_initWithNSString_(OrgCybergarageUpnpAllowedValueList_ELEM_NAME);
  id<JavaUtilIterator> i = [((OrgCybergarageUpnpAllowedValueList *) nil_chk(avl)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) {
    OrgCybergarageUpnpAllowedValue *av = [i next];
    [n addNodeWithOrgCybergarageXmlNode:[((OrgCybergarageUpnpAllowedValue *) nil_chk(av)) getAllowedValueNode]];
  }
  [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) addNodeWithOrgCybergarageXmlNode:n];
}

- (jboolean)hasAllowedValueList {
  OrgCybergarageUpnpAllowedValueList *valueList = [self getAllowedValueList];
  return (valueList != nil) ? true : false;
}

- (OrgCybergarageUpnpAllowedValueRange *)getAllowedValueRange {
  OrgCybergarageXmlNode *valueRangeNode = [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) getNodeWithNSString:OrgCybergarageUpnpAllowedValueRange_ELEM_NAME];
  if (valueRangeNode == nil) return nil;
  return create_OrgCybergarageUpnpAllowedValueRange_initWithOrgCybergarageXmlNode_(valueRangeNode);
}

- (void)setAllowedValueRangeWithOrgCybergarageUpnpAllowedValueRange:(OrgCybergarageUpnpAllowedValueRange *)avr {
  [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) removeNodeWithNSString:OrgCybergarageUpnpAllowedValueList_ELEM_NAME];
  [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) removeNodeWithNSString:OrgCybergarageUpnpAllowedValueRange_ELEM_NAME];
  [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) addNodeWithOrgCybergarageXmlNode:[((OrgCybergarageUpnpAllowedValueRange *) nil_chk(avr)) getAllowedValueRangeNode]];
}

- (jboolean)hasAllowedValueRange {
  return ([self getAllowedValueRange] != nil) ? true : false;
}

- (id<OrgCybergarageUpnpControlQueryListener>)getQueryListener {
  return [((OrgCybergarageUpnpXmlStateVariableData *) nil_chk([self getStateVariableData])) getQueryListener];
}

- (void)setQueryListenerWithOrgCybergarageUpnpControlQueryListener:(id<OrgCybergarageUpnpControlQueryListener>)listener {
  [((OrgCybergarageUpnpXmlStateVariableData *) nil_chk([self getStateVariableData])) setQueryListenerWithOrgCybergarageUpnpControlQueryListener:listener];
}

- (jboolean)performQueryListenerWithOrgCybergarageUpnpControlQueryRequest:(OrgCybergarageUpnpControlQueryRequest *)queryReq {
  id<OrgCybergarageUpnpControlQueryListener> listener = [self getQueryListener];
  if (listener == nil) return false;
  OrgCybergarageUpnpControlQueryResponse *queryRes = create_OrgCybergarageUpnpControlQueryResponse_init();
  OrgCybergarageUpnpStateVariable *retVar = create_OrgCybergarageUpnpStateVariable_init();
  [retVar setWithOrgCybergarageUpnpStateVariable:self];
  [retVar setValueWithNSString:@""];
  [retVar setStatusWithInt:OrgCybergarageUpnpUPnPStatus_INVALID_VAR];
  if ([listener queryControlReceivedWithOrgCybergarageUpnpStateVariable:retVar] == true) {
    [queryRes setResponseWithOrgCybergarageUpnpStateVariable:retVar];
  }
  else {
    OrgCybergarageUpnpUPnPStatus *upnpStatus = [retVar getStatus];
    [queryRes setFaultResponseWithInt:[((OrgCybergarageUpnpUPnPStatus *) nil_chk(upnpStatus)) getCode] withNSString:[upnpStatus getDescription]];
  }
  [((OrgCybergarageUpnpControlQueryRequest *) nil_chk(queryReq)) postWithOrgCybergarageHttpHTTPResponse:queryRes];
  return true;
}

- (OrgCybergarageUpnpControlQueryResponse *)getQueryResponse {
  return [((OrgCybergarageUpnpXmlStateVariableData *) nil_chk([self getStateVariableData])) getQueryResponse];
}

- (void)setQueryResponseWithOrgCybergarageUpnpControlQueryResponse:(OrgCybergarageUpnpControlQueryResponse *)res {
  OrgCybergarageUpnpStateVariable_setQueryResponseWithOrgCybergarageUpnpControlQueryResponse_(self, res);
}

- (OrgCybergarageUpnpUPnPStatus *)getQueryStatus {
  return [((OrgCybergarageUpnpControlQueryResponse *) nil_chk([self getQueryResponse])) getUPnPError];
}

- (jboolean)postQuerylAction {
  OrgCybergarageUpnpControlQueryRequest *queryReq = create_OrgCybergarageUpnpControlQueryRequest_init();
  [queryReq setRequestWithOrgCybergarageUpnpStateVariable:self];
  if (OrgCybergarageUtilDebug_isOn() == true) [queryReq print];
  OrgCybergarageUpnpControlQueryResponse *queryRes = [queryReq post];
  if (OrgCybergarageUtilDebug_isOn() == true) [((OrgCybergarageUpnpControlQueryResponse *) nil_chk(queryRes)) print];
  OrgCybergarageUpnpStateVariable_setQueryResponseWithOrgCybergarageUpnpControlQueryResponse_(self, queryRes);
  if ([((OrgCybergarageUpnpControlQueryResponse *) nil_chk(queryRes)) isSuccessful] == false) {
    [self setValueWithNSString:[queryRes getReturnValue]];
    return false;
  }
  [self setValueWithNSString:[queryRes getReturnValue]];
  return true;
}

- (void)setStatusWithInt:(jint)code
            withNSString:(NSString *)descr {
  [((OrgCybergarageUpnpUPnPStatus *) nil_chk(upnpStatus_)) setCodeWithInt:code];
  [((OrgCybergarageUpnpUPnPStatus *) nil_chk(upnpStatus_)) setDescriptionWithNSString:descr];
}

- (void)setStatusWithInt:(jint)code {
  [self setStatusWithInt:code withNSString:OrgCybergarageUpnpUPnPStatus_code2StringWithInt_(code)];
}

- (OrgCybergarageUpnpUPnPStatus *)getStatus {
  return upnpStatus_;
}

- (NSString *)getDefaultValue {
  return [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) getNodeValueWithNSString:OrgCybergarageUpnpStateVariable_DEFAULT_VALUE];
}

- (void)setDefaultValueWithNSString:(NSString *)value {
  [((OrgCybergarageXmlNode *) nil_chk([self getStateVariableNode])) setNodeWithNSString:OrgCybergarageUpnpStateVariable_DEFAULT_VALUE withNSString:value];
}

- (void)setUserDataWithId:(id)data {
  JreStrongAssign(&userData_, data);
}

- (id)getUserData {
  return userData_;
}

- (void)dealloc {
  RELEASE_(stateVariableNode_);
  RELEASE_(serviceNode_);
  RELEASE_(upnpStatus_);
  RELEASE_(userData_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgCybergarageXmlNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpService;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpXmlStateVariableData;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpAllowedValueList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpAllowedValueRange;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpControlQueryListener;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpControlQueryResponse;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 22, 23, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpUPnPStatus;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 12, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpUPnPStatus;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 28, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getServiceNode);
  methods[1].selector = @selector(setServiceNodeWithOrgCybergarageXmlNode:);
  methods[2].selector = @selector(getService);
  methods[3].selector = @selector(getStateVariableNode);
  methods[4].selector = @selector(init);
  methods[5].selector = @selector(initWithOrgCybergarageXmlNode:withOrgCybergarageXmlNode:);
  methods[6].selector = @selector(isStateVariableNodeWithOrgCybergarageXmlNode:);
  methods[7].selector = @selector(setNameWithNSString:);
  methods[8].selector = @selector(getName);
  methods[9].selector = @selector(setDataTypeWithNSString:);
  methods[10].selector = @selector(getDataType);
  methods[11].selector = @selector(setSendEventsWithBoolean:);
  methods[12].selector = @selector(isSendEvents);
  methods[13].selector = @selector(setWithOrgCybergarageUpnpStateVariable:);
  methods[14].selector = @selector(getStateVariableData);
  methods[15].selector = @selector(setValueWithNSString:);
  methods[16].selector = @selector(setValueWithInt:);
  methods[17].selector = @selector(setValueWithLong:);
  methods[18].selector = @selector(getValue);
  methods[19].selector = @selector(getAllowedValueList);
  methods[20].selector = @selector(setAllowedValueListWithOrgCybergarageUpnpAllowedValueList:);
  methods[21].selector = @selector(hasAllowedValueList);
  methods[22].selector = @selector(getAllowedValueRange);
  methods[23].selector = @selector(setAllowedValueRangeWithOrgCybergarageUpnpAllowedValueRange:);
  methods[24].selector = @selector(hasAllowedValueRange);
  methods[25].selector = @selector(getQueryListener);
  methods[26].selector = @selector(setQueryListenerWithOrgCybergarageUpnpControlQueryListener:);
  methods[27].selector = @selector(performQueryListenerWithOrgCybergarageUpnpControlQueryRequest:);
  methods[28].selector = @selector(getQueryResponse);
  methods[29].selector = @selector(setQueryResponseWithOrgCybergarageUpnpControlQueryResponse:);
  methods[30].selector = @selector(getQueryStatus);
  methods[31].selector = @selector(postQuerylAction);
  methods[32].selector = @selector(setStatusWithInt:withNSString:);
  methods[33].selector = @selector(setStatusWithInt:);
  methods[34].selector = @selector(getStatus);
  methods[35].selector = @selector(getDefaultValue);
  methods[36].selector = @selector(setDefaultValueWithNSString:);
  methods[37].selector = @selector(setUserDataWithId:);
  methods[38].selector = @selector(getUserData);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ELEM_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 29, -1, -1 },
    { "stateVariableNode_", "LOrgCybergarageXmlNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serviceNode_", "LOrgCybergarageXmlNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "NAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "DATATYPE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
    { "SENDEVENTS", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 32, -1, -1 },
    { "SENDEVENTS_YES", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "SENDEVENTS_NO", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
    { "upnpStatus_", "LOrgCybergarageUpnpUPnPStatus;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "DEFAULT_VALUE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 35, -1, -1 },
    { "userData_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setServiceNode", "LOrgCybergarageXmlNode;", "LOrgCybergarageXmlNode;LOrgCybergarageXmlNode;", "isStateVariableNode", "setName", "LNSString;", "setDataType", "setSendEvents", "Z", "set", "LOrgCybergarageUpnpStateVariable;", "setValue", "I", "J", "setAllowedValueList", "LOrgCybergarageUpnpAllowedValueList;", "setAllowedValueRange", "LOrgCybergarageUpnpAllowedValueRange;", "setQueryListener", "LOrgCybergarageUpnpControlQueryListener;", "performQueryListener", "LOrgCybergarageUpnpControlQueryRequest;", "setQueryResponse", "LOrgCybergarageUpnpControlQueryResponse;", "setStatus", "ILNSString;", "setDefaultValue", "setUserData", "LNSObject;", &OrgCybergarageUpnpStateVariable_ELEM_NAME, &OrgCybergarageUpnpStateVariable_NAME, &OrgCybergarageUpnpStateVariable_DATATYPE, &OrgCybergarageUpnpStateVariable_SENDEVENTS, &OrgCybergarageUpnpStateVariable_SENDEVENTS_YES, &OrgCybergarageUpnpStateVariable_SENDEVENTS_NO, &OrgCybergarageUpnpStateVariable_DEFAULT_VALUE };
  static const J2ObjcClassInfo _OrgCybergarageUpnpStateVariable = { "StateVariable", "org.cybergarage.upnp", ptrTable, methods, fields, 7, 0x1, 39, 11, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpStateVariable;
}

@end

void OrgCybergarageUpnpStateVariable_init(OrgCybergarageUpnpStateVariable *self) {
  OrgCybergarageUpnpXmlNodeData_init(self);
  JreStrongAssignAndConsume(&self->upnpStatus_, new_OrgCybergarageUpnpUPnPStatus_init());
  JreStrongAssign(&self->userData_, nil);
  JreStrongAssign(&self->serviceNode_, nil);
  JreStrongAssignAndConsume(&self->stateVariableNode_, new_OrgCybergarageXmlNode_initWithNSString_(OrgCybergarageUpnpStateVariable_ELEM_NAME));
}

OrgCybergarageUpnpStateVariable *new_OrgCybergarageUpnpStateVariable_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpStateVariable, init)
}

OrgCybergarageUpnpStateVariable *create_OrgCybergarageUpnpStateVariable_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpStateVariable, init)
}

void OrgCybergarageUpnpStateVariable_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(OrgCybergarageUpnpStateVariable *self, OrgCybergarageXmlNode *serviceNode, OrgCybergarageXmlNode *stateVarNode) {
  OrgCybergarageUpnpXmlNodeData_init(self);
  JreStrongAssignAndConsume(&self->upnpStatus_, new_OrgCybergarageUpnpUPnPStatus_init());
  JreStrongAssign(&self->userData_, nil);
  JreStrongAssign(&self->serviceNode_, serviceNode);
  JreStrongAssign(&self->stateVariableNode_, stateVarNode);
}

OrgCybergarageUpnpStateVariable *new_OrgCybergarageUpnpStateVariable_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(OrgCybergarageXmlNode *serviceNode, OrgCybergarageXmlNode *stateVarNode) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpStateVariable, initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_, serviceNode, stateVarNode)
}

OrgCybergarageUpnpStateVariable *create_OrgCybergarageUpnpStateVariable_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(OrgCybergarageXmlNode *serviceNode, OrgCybergarageXmlNode *stateVarNode) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpStateVariable, initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_, serviceNode, stateVarNode)
}

jboolean OrgCybergarageUpnpStateVariable_isStateVariableNodeWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *node) {
  OrgCybergarageUpnpStateVariable_initialize();
  return [((NSString *) nil_chk(OrgCybergarageUpnpStateVariable_ELEM_NAME)) isEqual:[((OrgCybergarageXmlNode *) nil_chk(node)) getName]];
}

void OrgCybergarageUpnpStateVariable_setQueryResponseWithOrgCybergarageUpnpControlQueryResponse_(OrgCybergarageUpnpStateVariable *self, OrgCybergarageUpnpControlQueryResponse *res) {
  [((OrgCybergarageUpnpXmlStateVariableData *) nil_chk([self getStateVariableData])) setQueryResponseWithOrgCybergarageUpnpControlQueryResponse:res];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpStateVariable)
