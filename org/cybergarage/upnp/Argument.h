//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/Argument.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCybergarageUpnpArgument")
#ifdef RESTRICT_OrgCybergarageUpnpArgument
#define INCLUDE_ALL_OrgCybergarageUpnpArgument 0
#else
#define INCLUDE_ALL_OrgCybergarageUpnpArgument 1
#endif
#undef RESTRICT_OrgCybergarageUpnpArgument

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCybergarageUpnpArgument_) && (INCLUDE_ALL_OrgCybergarageUpnpArgument || defined(INCLUDE_OrgCybergarageUpnpArgument))
#define OrgCybergarageUpnpArgument_

@class OrgCybergarageUpnpAction;
@class OrgCybergarageUpnpService;
@class OrgCybergarageUpnpStateVariable;
@class OrgCybergarageXmlNode;

@interface OrgCybergarageUpnpArgument : NSObject
@property (readonly, copy, class) NSString *ELEM_NAME NS_SWIFT_NAME(ELEM_NAME);
@property (readonly, copy, class) NSString *IN NS_SWIFT_NAME(IN);
@property (readonly, copy, class) NSString *OUT NS_SWIFT_NAME(OUT);

+ (NSString *)ELEM_NAME;

+ (NSString *)IN;

+ (NSString *)OUT;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)servNode;

- (instancetype __nonnull)initWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)servNode
                              withOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)argNode;

- (instancetype __nonnull)initWithNSString:(NSString *)name
                              withNSString:(NSString *)value;

- (OrgCybergarageUpnpAction *)getAction;

- (OrgCybergarageXmlNode *)getActionNode;

- (OrgCybergarageXmlNode *)getArgumentNode;

- (NSString *)getDirection;

- (jint)getIntegerValue;

- (NSString *)getName;

- (OrgCybergarageUpnpStateVariable *)getRelatedStateVariable;

- (NSString *)getRelatedStateVariableName;

- (OrgCybergarageUpnpService *)getService;

- (id)getUserData;

- (NSString *)getValue;

+ (jboolean)isArgumentNodeWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node;

- (jboolean)isInDirection;

- (jboolean)isOutDirection;

- (void)setDirectionWithNSString:(NSString *)value;

- (void)setNameWithNSString:(NSString *)value;

- (void)setRelatedStateVariableNameWithNSString:(NSString *)value;

- (void)setUserDataWithId:(id)data;

- (void)setValueWithInt:(jint)value;

- (void)setValueWithNSString:(NSString *)value;

#pragma mark Package-Private

- (void)setServiceWithOrgCybergarageUpnpService:(OrgCybergarageUpnpService *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCybergarageUpnpArgument)

inline NSString *OrgCybergarageUpnpArgument_get_ELEM_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpArgument_ELEM_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpArgument, ELEM_NAME, NSString *)

inline NSString *OrgCybergarageUpnpArgument_get_IN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpArgument_IN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpArgument, IN, NSString *)

inline NSString *OrgCybergarageUpnpArgument_get_OUT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpArgument_OUT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpArgument, OUT, NSString *)

FOUNDATION_EXPORT void OrgCybergarageUpnpArgument_init(OrgCybergarageUpnpArgument *self);

FOUNDATION_EXPORT OrgCybergarageUpnpArgument *new_OrgCybergarageUpnpArgument_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpArgument *create_OrgCybergarageUpnpArgument_init(void);

FOUNDATION_EXPORT void OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_(OrgCybergarageUpnpArgument *self, OrgCybergarageXmlNode *servNode);

FOUNDATION_EXPORT OrgCybergarageUpnpArgument *new_OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *servNode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpArgument *create_OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *servNode);

FOUNDATION_EXPORT void OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(OrgCybergarageUpnpArgument *self, OrgCybergarageXmlNode *servNode, OrgCybergarageXmlNode *argNode);

FOUNDATION_EXPORT OrgCybergarageUpnpArgument *new_OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(OrgCybergarageXmlNode *servNode, OrgCybergarageXmlNode *argNode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpArgument *create_OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(OrgCybergarageXmlNode *servNode, OrgCybergarageXmlNode *argNode);

FOUNDATION_EXPORT void OrgCybergarageUpnpArgument_initWithNSString_withNSString_(OrgCybergarageUpnpArgument *self, NSString *name, NSString *value);

FOUNDATION_EXPORT OrgCybergarageUpnpArgument *new_OrgCybergarageUpnpArgument_initWithNSString_withNSString_(NSString *name, NSString *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpArgument *create_OrgCybergarageUpnpArgument_initWithNSString_withNSString_(NSString *name, NSString *value);

FOUNDATION_EXPORT jboolean OrgCybergarageUpnpArgument_isArgumentNodeWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *node);

J2OBJC_TYPE_LITERAL_HEADER(OrgCybergarageUpnpArgument)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgCybergarageUpnpArgument")
