//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/device/USN.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/cybergarage/upnp/device/USN.h"

NSString *OrgCybergarageUpnpDeviceUSN_ROOTDEVICE = @"upnp:rootdevice";

@implementation OrgCybergarageUpnpDeviceUSN

+ (NSString *)ROOTDEVICE {
  return OrgCybergarageUpnpDeviceUSN_ROOTDEVICE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpDeviceUSN_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)isRootDeviceWithNSString:(NSString *)usnValue {
  return OrgCybergarageUpnpDeviceUSN_isRootDeviceWithNSString_(usnValue);
}

+ (NSString *)getUDNWithNSString:(NSString *)usnValue {
  return OrgCybergarageUpnpDeviceUSN_getUDNWithNSString_(usnValue);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x19, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isRootDeviceWithNSString:);
  methods[2].selector = @selector(getUDNWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ROOTDEVICE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "isRootDevice", "LNSString;", "getUDN", &OrgCybergarageUpnpDeviceUSN_ROOTDEVICE };
  static const J2ObjcClassInfo _OrgCybergarageUpnpDeviceUSN = { "USN", "org.cybergarage.upnp.device", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpDeviceUSN;
}

@end

void OrgCybergarageUpnpDeviceUSN_init(OrgCybergarageUpnpDeviceUSN *self) {
  NSObject_init(self);
}

OrgCybergarageUpnpDeviceUSN *new_OrgCybergarageUpnpDeviceUSN_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpDeviceUSN, init)
}

OrgCybergarageUpnpDeviceUSN *create_OrgCybergarageUpnpDeviceUSN_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpDeviceUSN, init)
}

jboolean OrgCybergarageUpnpDeviceUSN_isRootDeviceWithNSString_(NSString *usnValue) {
  OrgCybergarageUpnpDeviceUSN_initialize();
  if (usnValue == nil) return false;
  return [usnValue java_hasSuffix:OrgCybergarageUpnpDeviceUSN_ROOTDEVICE];
}

NSString *OrgCybergarageUpnpDeviceUSN_getUDNWithNSString_(NSString *usnValue) {
  OrgCybergarageUpnpDeviceUSN_initialize();
  if (usnValue == nil) return @"";
  jint idx = [usnValue java_indexOfString:@"::"];
  if (idx < 0) return [usnValue java_trim];
  NSString *udnValue = [NSString java_stringWithBytes:[usnValue java_getBytes] offset:0 length:idx];
  return [udnValue java_trim];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpDeviceUSN)
