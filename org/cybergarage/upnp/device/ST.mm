//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/device/ST.java
//

#include "J2ObjC_source.h"
#include "org/cybergarage/upnp/device/ST.h"

NSString *OrgCybergarageUpnpDeviceST_ALL_DEVICE = @"ssdp:all";
NSString *OrgCybergarageUpnpDeviceST_ROOT_DEVICE = @"upnp:rootdevice";
NSString *OrgCybergarageUpnpDeviceST_UUID_DEVICE = @"uuid";
NSString *OrgCybergarageUpnpDeviceST_URN_DEVICE = @"urn:schemas-upnp-org:device:";
NSString *OrgCybergarageUpnpDeviceST_URN_SERVICE = @"urn:schemas-upnp-org:service:";

@implementation OrgCybergarageUpnpDeviceST

+ (NSString *)ALL_DEVICE {
  return OrgCybergarageUpnpDeviceST_ALL_DEVICE;
}

+ (NSString *)ROOT_DEVICE {
  return OrgCybergarageUpnpDeviceST_ROOT_DEVICE;
}

+ (NSString *)UUID_DEVICE {
  return OrgCybergarageUpnpDeviceST_UUID_DEVICE;
}

+ (NSString *)URN_DEVICE {
  return OrgCybergarageUpnpDeviceST_URN_DEVICE;
}

+ (NSString *)URN_SERVICE {
  return OrgCybergarageUpnpDeviceST_URN_SERVICE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpDeviceST_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)isAllDeviceWithNSString:(NSString *)value {
  return OrgCybergarageUpnpDeviceST_isAllDeviceWithNSString_(value);
}

+ (jboolean)isRootDeviceWithNSString:(NSString *)value {
  return OrgCybergarageUpnpDeviceST_isRootDeviceWithNSString_(value);
}

+ (jboolean)isUUIDDeviceWithNSString:(NSString *)value {
  return OrgCybergarageUpnpDeviceST_isUUIDDeviceWithNSString_(value);
}

+ (jboolean)isURNDeviceWithNSString:(NSString *)value {
  return OrgCybergarageUpnpDeviceST_isURNDeviceWithNSString_(value);
}

+ (jboolean)isURNServiceWithNSString:(NSString *)value {
  return OrgCybergarageUpnpDeviceST_isURNServiceWithNSString_(value);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 3, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 4, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 5, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isAllDeviceWithNSString:);
  methods[2].selector = @selector(isRootDeviceWithNSString:);
  methods[3].selector = @selector(isUUIDDeviceWithNSString:);
  methods[4].selector = @selector(isURNDeviceWithNSString:);
  methods[5].selector = @selector(isURNServiceWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ALL_DEVICE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "ROOT_DEVICE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "UUID_DEVICE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "URN_DEVICE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "URN_SERVICE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
  };
  static const void *ptrTable[] = { "isAllDevice", "LNSString;", "isRootDevice", "isUUIDDevice", "isURNDevice", "isURNService", &OrgCybergarageUpnpDeviceST_ALL_DEVICE, &OrgCybergarageUpnpDeviceST_ROOT_DEVICE, &OrgCybergarageUpnpDeviceST_UUID_DEVICE, &OrgCybergarageUpnpDeviceST_URN_DEVICE, &OrgCybergarageUpnpDeviceST_URN_SERVICE };
  static const J2ObjcClassInfo _OrgCybergarageUpnpDeviceST = { "ST", "org.cybergarage.upnp.device", ptrTable, methods, fields, 7, 0x1, 6, 5, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpDeviceST;
}

@end

void OrgCybergarageUpnpDeviceST_init(OrgCybergarageUpnpDeviceST *self) {
  NSObject_init(self);
}

OrgCybergarageUpnpDeviceST *new_OrgCybergarageUpnpDeviceST_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpDeviceST, init)
}

OrgCybergarageUpnpDeviceST *create_OrgCybergarageUpnpDeviceST_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpDeviceST, init)
}

jboolean OrgCybergarageUpnpDeviceST_isAllDeviceWithNSString_(NSString *value) {
  OrgCybergarageUpnpDeviceST_initialize();
  if (value == nil) return false;
  if ([value isEqual:OrgCybergarageUpnpDeviceST_ALL_DEVICE] == true) return true;
  return [value isEqual:JreStrcat("C$C", '"', OrgCybergarageUpnpDeviceST_ALL_DEVICE, '"')];
}

jboolean OrgCybergarageUpnpDeviceST_isRootDeviceWithNSString_(NSString *value) {
  OrgCybergarageUpnpDeviceST_initialize();
  if (value == nil) return false;
  if ([value isEqual:OrgCybergarageUpnpDeviceST_ROOT_DEVICE] == true) return true;
  return [value isEqual:JreStrcat("C$C", '"', OrgCybergarageUpnpDeviceST_ROOT_DEVICE, '"')];
}

jboolean OrgCybergarageUpnpDeviceST_isUUIDDeviceWithNSString_(NSString *value) {
  OrgCybergarageUpnpDeviceST_initialize();
  if (value == nil) return false;
  if ([value java_hasPrefix:OrgCybergarageUpnpDeviceST_UUID_DEVICE] == true) return true;
  return [value java_hasPrefix:JreStrcat("C$", '"', OrgCybergarageUpnpDeviceST_UUID_DEVICE)];
}

jboolean OrgCybergarageUpnpDeviceST_isURNDeviceWithNSString_(NSString *value) {
  OrgCybergarageUpnpDeviceST_initialize();
  if (value == nil) return false;
  if ([value java_hasPrefix:OrgCybergarageUpnpDeviceST_URN_DEVICE] == true) return true;
  return [value java_hasPrefix:JreStrcat("C$", '"', OrgCybergarageUpnpDeviceST_URN_DEVICE)];
}

jboolean OrgCybergarageUpnpDeviceST_isURNServiceWithNSString_(NSString *value) {
  OrgCybergarageUpnpDeviceST_initialize();
  if (value == nil) return false;
  if ([value java_hasPrefix:OrgCybergarageUpnpDeviceST_URN_SERVICE] == true) return true;
  return [value java_hasPrefix:JreStrcat("C$", '"', OrgCybergarageUpnpDeviceST_URN_SERVICE)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpDeviceST)
