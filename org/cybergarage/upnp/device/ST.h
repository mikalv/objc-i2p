//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/device/ST.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCybergarageUpnpDeviceST")
#ifdef RESTRICT_OrgCybergarageUpnpDeviceST
#define INCLUDE_ALL_OrgCybergarageUpnpDeviceST 0
#else
#define INCLUDE_ALL_OrgCybergarageUpnpDeviceST 1
#endif
#undef RESTRICT_OrgCybergarageUpnpDeviceST

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCybergarageUpnpDeviceST_) && (INCLUDE_ALL_OrgCybergarageUpnpDeviceST || defined(INCLUDE_OrgCybergarageUpnpDeviceST))
#define OrgCybergarageUpnpDeviceST_

@interface OrgCybergarageUpnpDeviceST : NSObject
@property (readonly, copy, class) NSString *ALL_DEVICE NS_SWIFT_NAME(ALL_DEVICE);
@property (readonly, copy, class) NSString *ROOT_DEVICE NS_SWIFT_NAME(ROOT_DEVICE);
@property (readonly, copy, class) NSString *UUID_DEVICE NS_SWIFT_NAME(UUID_DEVICE);
@property (readonly, copy, class) NSString *URN_DEVICE NS_SWIFT_NAME(URN_DEVICE);
@property (readonly, copy, class) NSString *URN_SERVICE NS_SWIFT_NAME(URN_SERVICE);

+ (NSString *)ALL_DEVICE;

+ (NSString *)ROOT_DEVICE;

+ (NSString *)UUID_DEVICE;

+ (NSString *)URN_DEVICE;

+ (NSString *)URN_SERVICE;

#pragma mark Public

- (instancetype __nonnull)init;

+ (jboolean)isAllDeviceWithNSString:(NSString *)value;

+ (jboolean)isRootDeviceWithNSString:(NSString *)value;

+ (jboolean)isURNDeviceWithNSString:(NSString *)value;

+ (jboolean)isURNServiceWithNSString:(NSString *)value;

+ (jboolean)isUUIDDeviceWithNSString:(NSString *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCybergarageUpnpDeviceST)

inline NSString *OrgCybergarageUpnpDeviceST_get_ALL_DEVICE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpDeviceST_ALL_DEVICE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpDeviceST, ALL_DEVICE, NSString *)

inline NSString *OrgCybergarageUpnpDeviceST_get_ROOT_DEVICE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpDeviceST_ROOT_DEVICE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpDeviceST, ROOT_DEVICE, NSString *)

inline NSString *OrgCybergarageUpnpDeviceST_get_UUID_DEVICE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpDeviceST_UUID_DEVICE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpDeviceST, UUID_DEVICE, NSString *)

inline NSString *OrgCybergarageUpnpDeviceST_get_URN_DEVICE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpDeviceST_URN_DEVICE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpDeviceST, URN_DEVICE, NSString *)

inline NSString *OrgCybergarageUpnpDeviceST_get_URN_SERVICE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpDeviceST_URN_SERVICE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpDeviceST, URN_SERVICE, NSString *)

FOUNDATION_EXPORT void OrgCybergarageUpnpDeviceST_init(OrgCybergarageUpnpDeviceST *self);

FOUNDATION_EXPORT OrgCybergarageUpnpDeviceST *new_OrgCybergarageUpnpDeviceST_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpDeviceST *create_OrgCybergarageUpnpDeviceST_init(void);

FOUNDATION_EXPORT jboolean OrgCybergarageUpnpDeviceST_isAllDeviceWithNSString_(NSString *value);

FOUNDATION_EXPORT jboolean OrgCybergarageUpnpDeviceST_isRootDeviceWithNSString_(NSString *value);

FOUNDATION_EXPORT jboolean OrgCybergarageUpnpDeviceST_isUUIDDeviceWithNSString_(NSString *value);

FOUNDATION_EXPORT jboolean OrgCybergarageUpnpDeviceST_isURNDeviceWithNSString_(NSString *value);

FOUNDATION_EXPORT jboolean OrgCybergarageUpnpDeviceST_isURNServiceWithNSString_(NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgCybergarageUpnpDeviceST)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgCybergarageUpnpDeviceST")
