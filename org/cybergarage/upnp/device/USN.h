//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/device/USN.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCybergarageUpnpDeviceUSN")
#ifdef RESTRICT_OrgCybergarageUpnpDeviceUSN
#define INCLUDE_ALL_OrgCybergarageUpnpDeviceUSN 0
#else
#define INCLUDE_ALL_OrgCybergarageUpnpDeviceUSN 1
#endif
#undef RESTRICT_OrgCybergarageUpnpDeviceUSN

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCybergarageUpnpDeviceUSN_) && (INCLUDE_ALL_OrgCybergarageUpnpDeviceUSN || defined(INCLUDE_OrgCybergarageUpnpDeviceUSN))
#define OrgCybergarageUpnpDeviceUSN_

@interface OrgCybergarageUpnpDeviceUSN : NSObject
@property (readonly, copy, class) NSString *ROOTDEVICE NS_SWIFT_NAME(ROOTDEVICE);

+ (NSString *)ROOTDEVICE;

#pragma mark Public

- (instancetype __nonnull)init;

+ (NSString *)getUDNWithNSString:(NSString *)usnValue;

+ (jboolean)isRootDeviceWithNSString:(NSString *)usnValue;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCybergarageUpnpDeviceUSN)

inline NSString *OrgCybergarageUpnpDeviceUSN_get_ROOTDEVICE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgCybergarageUpnpDeviceUSN_ROOTDEVICE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpDeviceUSN, ROOTDEVICE, NSString *)

FOUNDATION_EXPORT void OrgCybergarageUpnpDeviceUSN_init(OrgCybergarageUpnpDeviceUSN *self);

FOUNDATION_EXPORT OrgCybergarageUpnpDeviceUSN *new_OrgCybergarageUpnpDeviceUSN_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgCybergarageUpnpDeviceUSN *create_OrgCybergarageUpnpDeviceUSN_init(void);

FOUNDATION_EXPORT jboolean OrgCybergarageUpnpDeviceUSN_isRootDeviceWithNSString_(NSString *usnValue);

FOUNDATION_EXPORT NSString *OrgCybergarageUpnpDeviceUSN_getUDNWithNSString_(NSString *usnValue);

J2OBJC_TYPE_LITERAL_HEADER(OrgCybergarageUpnpDeviceUSN)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgCybergarageUpnpDeviceUSN")
