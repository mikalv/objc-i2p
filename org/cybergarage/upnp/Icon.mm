//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/Icon.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "org/cybergarage/upnp/Icon.h"
#include "org/cybergarage/xml/Node.h"

@interface OrgCybergarageUpnpIcon () {
 @public
  OrgCybergarageXmlNode *iconNode_;
  id userData_;
  IOSByteArray *bytes_;
}

@end

J2OBJC_FIELD_SETTER(OrgCybergarageUpnpIcon, iconNode_, OrgCybergarageXmlNode *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpIcon, userData_, id)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpIcon, bytes_, IOSByteArray *)

inline NSString *OrgCybergarageUpnpIcon_get_MIME_TYPE(void);
static NSString *OrgCybergarageUpnpIcon_MIME_TYPE = @"mimeType";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpIcon, MIME_TYPE, NSString *)

inline NSString *OrgCybergarageUpnpIcon_get_WIDTH(void);
static NSString *OrgCybergarageUpnpIcon_WIDTH = @"width";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpIcon, WIDTH, NSString *)

inline NSString *OrgCybergarageUpnpIcon_get_HEIGHT(void);
static NSString *OrgCybergarageUpnpIcon_HEIGHT = @"height";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpIcon, HEIGHT, NSString *)

inline NSString *OrgCybergarageUpnpIcon_get_DEPTH(void);
static NSString *OrgCybergarageUpnpIcon_DEPTH = @"depth";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpIcon, DEPTH, NSString *)

inline NSString *OrgCybergarageUpnpIcon_get_URL(void);
static NSString *OrgCybergarageUpnpIcon_URL = @"url";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpIcon, URL, NSString *)

NSString *OrgCybergarageUpnpIcon_ELEM_NAME = @"icon";

@implementation OrgCybergarageUpnpIcon

+ (NSString *)ELEM_NAME {
  return OrgCybergarageUpnpIcon_ELEM_NAME;
}

- (OrgCybergarageXmlNode *)getIconNode {
  return iconNode_;
}

- (instancetype)initWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node {
  OrgCybergarageUpnpIcon_initWithOrgCybergarageXmlNode_(self, node);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpIcon_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)isIconNodeWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node {
  return OrgCybergarageUpnpIcon_isIconNodeWithOrgCybergarageXmlNode_(node);
}

- (void)setMimeTypeWithNSString:(NSString *)value {
  [((OrgCybergarageXmlNode *) nil_chk([self getIconNode])) setNodeWithNSString:OrgCybergarageUpnpIcon_MIME_TYPE withNSString:value];
}

- (NSString *)getMimeType {
  return [((OrgCybergarageXmlNode *) nil_chk([self getIconNode])) getNodeValueWithNSString:OrgCybergarageUpnpIcon_MIME_TYPE];
}

- (jboolean)hasMimeType {
  NSString *iconMimeType = [self getMimeType];
  if (iconMimeType == nil) return false;
  return (0 < [iconMimeType java_length]) ? true : false;
}

- (void)setWidthWithNSString:(NSString *)value {
  [((OrgCybergarageXmlNode *) nil_chk([self getIconNode])) setNodeWithNSString:OrgCybergarageUpnpIcon_WIDTH withNSString:value];
}

- (void)setWidthWithInt:(jint)value {
  @try {
    [self setWidthWithNSString:JavaLangInteger_toStringWithInt_(value)];
  }
  @catch (JavaLangException *e) {
  }
  
  ;
}

- (jint)getWidth {
  @try {
    return JavaLangInteger_parseIntWithNSString_([((OrgCybergarageXmlNode *) nil_chk([self getIconNode])) getNodeValueWithNSString:OrgCybergarageUpnpIcon_WIDTH]);
  }
  @catch (JavaLangException *e) {
  }
  
  ;
  return 0;
}

- (void)setHeightWithNSString:(NSString *)value {
  [((OrgCybergarageXmlNode *) nil_chk([self getIconNode])) setNodeWithNSString:OrgCybergarageUpnpIcon_HEIGHT withNSString:value];
}

- (void)setHeightWithInt:(jint)value {
  @try {
    [self setHeightWithNSString:JavaLangInteger_toStringWithInt_(value)];
  }
  @catch (JavaLangException *e) {
  }
  
  ;
}

- (jint)getHeight {
  @try {
    return JavaLangInteger_parseIntWithNSString_([((OrgCybergarageXmlNode *) nil_chk([self getIconNode])) getNodeValueWithNSString:OrgCybergarageUpnpIcon_HEIGHT]);
  }
  @catch (JavaLangException *e) {
  }
  
  ;
  return 0;
}

- (void)setDepthWithNSString:(NSString *)value {
  [((OrgCybergarageXmlNode *) nil_chk([self getIconNode])) setNodeWithNSString:OrgCybergarageUpnpIcon_DEPTH withNSString:value];
}

- (void)setDepthWithInt:(jint)value {
  @try {
    [self setDepthWithNSString:JavaLangInteger_toStringWithInt_(value)];
  }
  @catch (JavaLangException *e) {
  }
  
  ;
}

- (jint)getDepth {
  @try {
    return JavaLangInteger_parseIntWithNSString_([((OrgCybergarageXmlNode *) nil_chk([self getIconNode])) getNodeValueWithNSString:OrgCybergarageUpnpIcon_DEPTH]);
  }
  @catch (JavaLangException *e) {
  }
  
  ;
  return 0;
}

- (void)setURLWithNSString:(NSString *)value {
  [((OrgCybergarageXmlNode *) nil_chk([self getIconNode])) setNodeWithNSString:OrgCybergarageUpnpIcon_URL withNSString:value];
}

- (NSString *)getURL {
  return [((OrgCybergarageXmlNode *) nil_chk([self getIconNode])) getNodeValueWithNSString:OrgCybergarageUpnpIcon_URL];
}

- (jboolean)hasURL {
  NSString *iconURL = [self getURL];
  if (iconURL == nil) return false;
  return (0 < [iconURL java_length]) ? true : false;
}

- (jboolean)isURLWithNSString:(NSString *)url {
  if (url == nil) return false;
  NSString *iconURL = [self getURL];
  if (iconURL == nil) return false;
  return [iconURL isEqual:url];
}

- (void)setUserDataWithId:(id)data {
  JreStrongAssign(&userData_, data);
}

- (id)getUserData {
  return userData_;
}

- (void)setBytesWithByteArray:(IOSByteArray *)data {
  JreStrongAssign(&bytes_, data);
}

- (jboolean)hasBytes {
  return (bytes_ != nil) ? true : false;
}

- (IOSByteArray *)getBytes {
  return bytes_;
}

- (void)dealloc {
  RELEASE_(iconNode_);
  RELEASE_(userData_);
  RELEASE_(bytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgCybergarageXmlNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getIconNode);
  methods[1].selector = @selector(initWithOrgCybergarageXmlNode:);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(isIconNodeWithOrgCybergarageXmlNode:);
  methods[4].selector = @selector(setMimeTypeWithNSString:);
  methods[5].selector = @selector(getMimeType);
  methods[6].selector = @selector(hasMimeType);
  methods[7].selector = @selector(setWidthWithNSString:);
  methods[8].selector = @selector(setWidthWithInt:);
  methods[9].selector = @selector(getWidth);
  methods[10].selector = @selector(setHeightWithNSString:);
  methods[11].selector = @selector(setHeightWithInt:);
  methods[12].selector = @selector(getHeight);
  methods[13].selector = @selector(setDepthWithNSString:);
  methods[14].selector = @selector(setDepthWithInt:);
  methods[15].selector = @selector(getDepth);
  methods[16].selector = @selector(setURLWithNSString:);
  methods[17].selector = @selector(getURL);
  methods[18].selector = @selector(hasURL);
  methods[19].selector = @selector(isURLWithNSString:);
  methods[20].selector = @selector(setUserDataWithId:);
  methods[21].selector = @selector(getUserData);
  methods[22].selector = @selector(setBytesWithByteArray:);
  methods[23].selector = @selector(hasBytes);
  methods[24].selector = @selector(getBytes);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ELEM_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "iconNode_", "LOrgCybergarageXmlNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "MIME_TYPE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
    { "WIDTH", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "HEIGHT", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "DEPTH", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "URL", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "userData_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bytes_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgCybergarageXmlNode;", "isIconNode", "setMimeType", "LNSString;", "setWidth", "I", "setHeight", "setDepth", "setURL", "isURL", "setUserData", "LNSObject;", "setBytes", "[B", &OrgCybergarageUpnpIcon_ELEM_NAME, &OrgCybergarageUpnpIcon_MIME_TYPE, &OrgCybergarageUpnpIcon_WIDTH, &OrgCybergarageUpnpIcon_HEIGHT, &OrgCybergarageUpnpIcon_DEPTH, &OrgCybergarageUpnpIcon_URL };
  static const J2ObjcClassInfo _OrgCybergarageUpnpIcon = { "Icon", "org.cybergarage.upnp", ptrTable, methods, fields, 7, 0x1, 25, 9, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpIcon;
}

@end

void OrgCybergarageUpnpIcon_initWithOrgCybergarageXmlNode_(OrgCybergarageUpnpIcon *self, OrgCybergarageXmlNode *node) {
  NSObject_init(self);
  JreStrongAssign(&self->userData_, nil);
  JreStrongAssign(&self->bytes_, nil);
  JreStrongAssign(&self->iconNode_, node);
}

OrgCybergarageUpnpIcon *new_OrgCybergarageUpnpIcon_initWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *node) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpIcon, initWithOrgCybergarageXmlNode_, node)
}

OrgCybergarageUpnpIcon *create_OrgCybergarageUpnpIcon_initWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *node) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpIcon, initWithOrgCybergarageXmlNode_, node)
}

void OrgCybergarageUpnpIcon_init(OrgCybergarageUpnpIcon *self) {
  OrgCybergarageUpnpIcon_initWithOrgCybergarageXmlNode_(self, create_OrgCybergarageXmlNode_initWithNSString_(OrgCybergarageUpnpIcon_ELEM_NAME));
}

OrgCybergarageUpnpIcon *new_OrgCybergarageUpnpIcon_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpIcon, init)
}

OrgCybergarageUpnpIcon *create_OrgCybergarageUpnpIcon_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpIcon, init)
}

jboolean OrgCybergarageUpnpIcon_isIconNodeWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *node) {
  OrgCybergarageUpnpIcon_initialize();
  return [((NSString *) nil_chk(OrgCybergarageUpnpIcon_ELEM_NAME)) isEqual:[((OrgCybergarageXmlNode *) nil_chk(node)) getName]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpIcon)
