//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/AllowedValueList.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Iterator.h"
#include "java/util/Vector.h"
#include "org/cybergarage/upnp/AllowedValue.h"
#include "org/cybergarage/upnp/AllowedValueList.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

NSString *OrgCybergarageUpnpAllowedValueList_ELEM_NAME = @"allowedValueList";

@implementation OrgCybergarageUpnpAllowedValueList

+ (NSString *)ELEM_NAME {
  return OrgCybergarageUpnpAllowedValueList_ELEM_NAME;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpAllowedValueList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSStringArray:(IOSObjectArray *)values {
  OrgCybergarageUpnpAllowedValueList_initWithNSStringArray_(self, values);
  return self;
}

- (OrgCybergarageUpnpAllowedValue *)getAllowedValueWithInt:(jint)n {
  return [self getWithInt:n];
}

- (jboolean)isAllowedWithNSString:(NSString *)v {
  for (id<JavaUtilIterator> i = [self iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    OrgCybergarageUpnpAllowedValue *av = [i next];
    if ([((NSString *) nil_chk([((OrgCybergarageUpnpAllowedValue *) nil_chk(av)) getValue])) isEqual:v]) return true;
  }
  return false;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpAllowedValue;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSStringArray:);
  methods[2].selector = @selector(getAllowedValueWithInt:);
  methods[3].selector = @selector(isAllowedWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ELEM_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "[LNSString;", "getAllowedValue", "I", "isAllowed", "LNSString;", &OrgCybergarageUpnpAllowedValueList_ELEM_NAME, "Ljava/util/Vector<Lorg/cybergarage/upnp/AllowedValue;>;" };
  static const J2ObjcClassInfo _OrgCybergarageUpnpAllowedValueList = { "AllowedValueList", "org.cybergarage.upnp", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, 6, -1 };
  return &_OrgCybergarageUpnpAllowedValueList;
}

@end

void OrgCybergarageUpnpAllowedValueList_init(OrgCybergarageUpnpAllowedValueList *self) {
  JavaUtilVector_init(self);
}

OrgCybergarageUpnpAllowedValueList *new_OrgCybergarageUpnpAllowedValueList_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpAllowedValueList, init)
}

OrgCybergarageUpnpAllowedValueList *create_OrgCybergarageUpnpAllowedValueList_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpAllowedValueList, init)
}

void OrgCybergarageUpnpAllowedValueList_initWithNSStringArray_(OrgCybergarageUpnpAllowedValueList *self, IOSObjectArray *values) {
  JavaUtilVector_init(self);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(values))->size_; i++) {
    [self addWithId:create_OrgCybergarageUpnpAllowedValue_initWithNSString_(IOSObjectArray_Get(values, i))];
  }
  
  ;
}

OrgCybergarageUpnpAllowedValueList *new_OrgCybergarageUpnpAllowedValueList_initWithNSStringArray_(IOSObjectArray *values) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpAllowedValueList, initWithNSStringArray_, values)
}

OrgCybergarageUpnpAllowedValueList *create_OrgCybergarageUpnpAllowedValueList_initWithNSStringArray_(IOSObjectArray *values) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpAllowedValueList, initWithNSStringArray_, values)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpAllowedValueList)
