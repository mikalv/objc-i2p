//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/upnp/Argument.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "org/cybergarage/upnp/Action.h"
#include "org/cybergarage/upnp/Argument.h"
#include "org/cybergarage/upnp/Service.h"
#include "org/cybergarage/upnp/StateVariable.h"
#include "org/cybergarage/upnp/xml/ArgumentData.h"
#include "org/cybergarage/xml/Node.h"

@interface OrgCybergarageUpnpArgument () {
 @public
  OrgCybergarageXmlNode *argumentNode_;
  OrgCybergarageXmlNode *serviceNode_;
  id userData_;
}

- (OrgCybergarageXmlNode *)getServiceNode;

- (OrgCybergarageUpnpXmlArgumentData *)getArgumentData;

@end

J2OBJC_FIELD_SETTER(OrgCybergarageUpnpArgument, argumentNode_, OrgCybergarageXmlNode *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpArgument, serviceNode_, OrgCybergarageXmlNode *)
J2OBJC_FIELD_SETTER(OrgCybergarageUpnpArgument, userData_, id)

inline NSString *OrgCybergarageUpnpArgument_get_NAME(void);
static NSString *OrgCybergarageUpnpArgument_NAME = @"name";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpArgument, NAME, NSString *)

inline NSString *OrgCybergarageUpnpArgument_get_DIRECTION(void);
static NSString *OrgCybergarageUpnpArgument_DIRECTION = @"direction";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpArgument, DIRECTION, NSString *)

inline NSString *OrgCybergarageUpnpArgument_get_RELATED_STATE_VARIABLE(void);
static NSString *OrgCybergarageUpnpArgument_RELATED_STATE_VARIABLE = @"relatedStateVariable";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageUpnpArgument, RELATED_STATE_VARIABLE, NSString *)

__attribute__((unused)) static OrgCybergarageXmlNode *OrgCybergarageUpnpArgument_getServiceNode(OrgCybergarageUpnpArgument *self);

__attribute__((unused)) static OrgCybergarageUpnpXmlArgumentData *OrgCybergarageUpnpArgument_getArgumentData(OrgCybergarageUpnpArgument *self);

NSString *OrgCybergarageUpnpArgument_ELEM_NAME = @"argument";
NSString *OrgCybergarageUpnpArgument_IN = @"in";
NSString *OrgCybergarageUpnpArgument_OUT = @"out";

@implementation OrgCybergarageUpnpArgument

+ (NSString *)ELEM_NAME {
  return OrgCybergarageUpnpArgument_ELEM_NAME;
}

+ (NSString *)IN {
  return OrgCybergarageUpnpArgument_IN;
}

+ (NSString *)OUT {
  return OrgCybergarageUpnpArgument_OUT;
}

- (OrgCybergarageXmlNode *)getArgumentNode {
  return argumentNode_;
}

- (OrgCybergarageXmlNode *)getServiceNode {
  return OrgCybergarageUpnpArgument_getServiceNode(self);
}

- (OrgCybergarageUpnpService *)getService {
  return create_OrgCybergarageUpnpService_initWithOrgCybergarageXmlNode_(OrgCybergarageUpnpArgument_getServiceNode(self));
}

- (void)setServiceWithOrgCybergarageUpnpService:(OrgCybergarageUpnpService *)s {
  [((OrgCybergarageUpnpService *) nil_chk(s)) getServiceNode];
}

- (OrgCybergarageXmlNode *)getActionNode {
  OrgCybergarageXmlNode *argumentLinstNode = [((OrgCybergarageXmlNode *) nil_chk([self getArgumentNode])) getParentNode];
  if (argumentLinstNode == nil) return nil;
  OrgCybergarageXmlNode *actionNode = [argumentLinstNode getParentNode];
  if (actionNode == nil) return nil;
  if (OrgCybergarageUpnpAction_isActionNodeWithOrgCybergarageXmlNode_(actionNode) == false) return nil;
  return actionNode;
}

- (OrgCybergarageUpnpAction *)getAction {
  return create_OrgCybergarageUpnpAction_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(OrgCybergarageUpnpArgument_getServiceNode(self), [self getActionNode]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageUpnpArgument_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)servNode {
  OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_(self, servNode);
  return self;
}

- (instancetype)initWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)servNode
                    withOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)argNode {
  OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(self, servNode, argNode);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  OrgCybergarageUpnpArgument_initWithNSString_withNSString_(self, name, value);
  return self;
}

+ (jboolean)isArgumentNodeWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node {
  return OrgCybergarageUpnpArgument_isArgumentNodeWithOrgCybergarageXmlNode_(node);
}

- (void)setNameWithNSString:(NSString *)value {
  [((OrgCybergarageXmlNode *) nil_chk([self getArgumentNode])) setNodeWithNSString:OrgCybergarageUpnpArgument_NAME withNSString:value];
}

- (NSString *)getName {
  return [((OrgCybergarageXmlNode *) nil_chk([self getArgumentNode])) getNodeValueWithNSString:OrgCybergarageUpnpArgument_NAME];
}

- (void)setDirectionWithNSString:(NSString *)value {
  [((OrgCybergarageXmlNode *) nil_chk([self getArgumentNode])) setNodeWithNSString:OrgCybergarageUpnpArgument_DIRECTION withNSString:value];
}

- (NSString *)getDirection {
  return [((OrgCybergarageXmlNode *) nil_chk([self getArgumentNode])) getNodeValueWithNSString:OrgCybergarageUpnpArgument_DIRECTION];
}

- (jboolean)isInDirection {
  NSString *dir = [self getDirection];
  if (dir == nil) return false;
  return [dir java_equalsIgnoreCase:OrgCybergarageUpnpArgument_IN];
}

- (jboolean)isOutDirection {
  return ![self isInDirection];
}

- (void)setRelatedStateVariableNameWithNSString:(NSString *)value {
  [((OrgCybergarageXmlNode *) nil_chk([self getArgumentNode])) setNodeWithNSString:OrgCybergarageUpnpArgument_RELATED_STATE_VARIABLE withNSString:value];
}

- (NSString *)getRelatedStateVariableName {
  return [((OrgCybergarageXmlNode *) nil_chk([self getArgumentNode])) getNodeValueWithNSString:OrgCybergarageUpnpArgument_RELATED_STATE_VARIABLE];
}

- (OrgCybergarageUpnpStateVariable *)getRelatedStateVariable {
  OrgCybergarageUpnpService *service = [self getService];
  if (service == nil) return nil;
  NSString *relatedStatVarName = [self getRelatedStateVariableName];
  return [service getStateVariableWithNSString:relatedStatVarName];
}

- (OrgCybergarageUpnpXmlArgumentData *)getArgumentData {
  return OrgCybergarageUpnpArgument_getArgumentData(self);
}

- (void)setValueWithNSString:(NSString *)value {
  [((OrgCybergarageUpnpXmlArgumentData *) nil_chk(OrgCybergarageUpnpArgument_getArgumentData(self))) setValueWithNSString:value];
}

- (void)setValueWithInt:(jint)value {
  [self setValueWithNSString:JavaLangInteger_toStringWithInt_(value)];
}

- (NSString *)getValue {
  return [((OrgCybergarageUpnpXmlArgumentData *) nil_chk(OrgCybergarageUpnpArgument_getArgumentData(self))) getValue];
}

- (jint)getIntegerValue {
  NSString *value = [self getValue];
  @try {
    return JavaLangInteger_parseIntWithNSString_(value);
  }
  @catch (JavaLangException *e) {
  }
  return 0;
}

- (void)setUserDataWithId:(id)data {
  JreStrongAssign(&userData_, data);
}

- (id)getUserData {
  return userData_;
}

- (void)dealloc {
  RELEASE_(argumentNode_);
  RELEASE_(serviceNode_);
  RELEASE_(userData_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgCybergarageXmlNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpService;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpAction;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpStateVariable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageUpnpXmlArgumentData;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getArgumentNode);
  methods[1].selector = @selector(getServiceNode);
  methods[2].selector = @selector(getService);
  methods[3].selector = @selector(setServiceWithOrgCybergarageUpnpService:);
  methods[4].selector = @selector(getActionNode);
  methods[5].selector = @selector(getAction);
  methods[6].selector = @selector(init);
  methods[7].selector = @selector(initWithOrgCybergarageXmlNode:);
  methods[8].selector = @selector(initWithOrgCybergarageXmlNode:withOrgCybergarageXmlNode:);
  methods[9].selector = @selector(initWithNSString:withNSString:);
  methods[10].selector = @selector(isArgumentNodeWithOrgCybergarageXmlNode:);
  methods[11].selector = @selector(setNameWithNSString:);
  methods[12].selector = @selector(getName);
  methods[13].selector = @selector(setDirectionWithNSString:);
  methods[14].selector = @selector(getDirection);
  methods[15].selector = @selector(isInDirection);
  methods[16].selector = @selector(isOutDirection);
  methods[17].selector = @selector(setRelatedStateVariableNameWithNSString:);
  methods[18].selector = @selector(getRelatedStateVariableName);
  methods[19].selector = @selector(getRelatedStateVariable);
  methods[20].selector = @selector(getArgumentData);
  methods[21].selector = @selector(setValueWithNSString:);
  methods[22].selector = @selector(setValueWithInt:);
  methods[23].selector = @selector(getValue);
  methods[24].selector = @selector(getIntegerValue);
  methods[25].selector = @selector(setUserDataWithId:);
  methods[26].selector = @selector(getUserData);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ELEM_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "IN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "OUT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "argumentNode_", "LOrgCybergarageXmlNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serviceNode_", "LOrgCybergarageXmlNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "NAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "DIRECTION", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "RELATED_STATE_VARIABLE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "userData_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setService", "LOrgCybergarageUpnpService;", "LOrgCybergarageXmlNode;", "LOrgCybergarageXmlNode;LOrgCybergarageXmlNode;", "LNSString;LNSString;", "isArgumentNode", "setName", "LNSString;", "setDirection", "setRelatedStateVariableName", "setValue", "I", "setUserData", "LNSObject;", &OrgCybergarageUpnpArgument_ELEM_NAME, &OrgCybergarageUpnpArgument_IN, &OrgCybergarageUpnpArgument_OUT, &OrgCybergarageUpnpArgument_NAME, &OrgCybergarageUpnpArgument_DIRECTION, &OrgCybergarageUpnpArgument_RELATED_STATE_VARIABLE };
  static const J2ObjcClassInfo _OrgCybergarageUpnpArgument = { "Argument", "org.cybergarage.upnp", ptrTable, methods, fields, 7, 0x1, 27, 9, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageUpnpArgument;
}

@end

OrgCybergarageXmlNode *OrgCybergarageUpnpArgument_getServiceNode(OrgCybergarageUpnpArgument *self) {
  return self->serviceNode_;
}

void OrgCybergarageUpnpArgument_init(OrgCybergarageUpnpArgument *self) {
  NSObject_init(self);
  JreStrongAssign(&self->userData_, nil);
  JreStrongAssignAndConsume(&self->argumentNode_, new_OrgCybergarageXmlNode_initWithNSString_(OrgCybergarageUpnpArgument_ELEM_NAME));
  JreStrongAssign(&self->serviceNode_, nil);
}

OrgCybergarageUpnpArgument *new_OrgCybergarageUpnpArgument_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpArgument, init)
}

OrgCybergarageUpnpArgument *create_OrgCybergarageUpnpArgument_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpArgument, init)
}

void OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_(OrgCybergarageUpnpArgument *self, OrgCybergarageXmlNode *servNode) {
  NSObject_init(self);
  JreStrongAssign(&self->userData_, nil);
  JreStrongAssignAndConsume(&self->argumentNode_, new_OrgCybergarageXmlNode_initWithNSString_(OrgCybergarageUpnpArgument_ELEM_NAME));
  JreStrongAssign(&self->serviceNode_, servNode);
}

OrgCybergarageUpnpArgument *new_OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *servNode) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpArgument, initWithOrgCybergarageXmlNode_, servNode)
}

OrgCybergarageUpnpArgument *create_OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *servNode) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpArgument, initWithOrgCybergarageXmlNode_, servNode)
}

void OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(OrgCybergarageUpnpArgument *self, OrgCybergarageXmlNode *servNode, OrgCybergarageXmlNode *argNode) {
  NSObject_init(self);
  JreStrongAssign(&self->userData_, nil);
  JreStrongAssign(&self->serviceNode_, servNode);
  JreStrongAssign(&self->argumentNode_, argNode);
}

OrgCybergarageUpnpArgument *new_OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(OrgCybergarageXmlNode *servNode, OrgCybergarageXmlNode *argNode) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpArgument, initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_, servNode, argNode)
}

OrgCybergarageUpnpArgument *create_OrgCybergarageUpnpArgument_initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_(OrgCybergarageXmlNode *servNode, OrgCybergarageXmlNode *argNode) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpArgument, initWithOrgCybergarageXmlNode_withOrgCybergarageXmlNode_, servNode, argNode)
}

void OrgCybergarageUpnpArgument_initWithNSString_withNSString_(OrgCybergarageUpnpArgument *self, NSString *name, NSString *value) {
  OrgCybergarageUpnpArgument_init(self);
  [self setNameWithNSString:name];
  [self setValueWithNSString:value];
}

OrgCybergarageUpnpArgument *new_OrgCybergarageUpnpArgument_initWithNSString_withNSString_(NSString *name, NSString *value) {
  J2OBJC_NEW_IMPL(OrgCybergarageUpnpArgument, initWithNSString_withNSString_, name, value)
}

OrgCybergarageUpnpArgument *create_OrgCybergarageUpnpArgument_initWithNSString_withNSString_(NSString *name, NSString *value) {
  J2OBJC_CREATE_IMPL(OrgCybergarageUpnpArgument, initWithNSString_withNSString_, name, value)
}

jboolean OrgCybergarageUpnpArgument_isArgumentNodeWithOrgCybergarageXmlNode_(OrgCybergarageXmlNode *node) {
  OrgCybergarageUpnpArgument_initialize();
  return [((NSString *) nil_chk(OrgCybergarageUpnpArgument_ELEM_NAME)) isEqual:[((OrgCybergarageXmlNode *) nil_chk(node)) getName]];
}

OrgCybergarageUpnpXmlArgumentData *OrgCybergarageUpnpArgument_getArgumentData(OrgCybergarageUpnpArgument *self) {
  OrgCybergarageXmlNode *node = [self getArgumentNode];
  OrgCybergarageUpnpXmlArgumentData *userData = (OrgCybergarageUpnpXmlArgumentData *) cast_chk([((OrgCybergarageXmlNode *) nil_chk(node)) getUserData], [OrgCybergarageUpnpXmlArgumentData class]);
  if (userData == nil) {
    userData = create_OrgCybergarageUpnpXmlArgumentData_init();
    [node setUserDataWithId:userData];
    [userData setNodeWithOrgCybergarageXmlNode:node];
  }
  return userData;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageUpnpArgument)
