//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/soap/SOAP.java
//

#include "J2ObjC_source.h"
#include "org/cybergarage/soap/SOAP.h"
#include "org/cybergarage/xml/Node.h"
#include "org/cybergarage/xml/Parser.h"

inline OrgCybergarageXmlParser *OrgCybergarageSoapSOAP_get_xmlParser(void);
inline OrgCybergarageXmlParser *OrgCybergarageSoapSOAP_set_xmlParser(OrgCybergarageXmlParser *value);
static OrgCybergarageXmlParser *OrgCybergarageSoapSOAP_xmlParser;
J2OBJC_STATIC_FIELD_OBJ(OrgCybergarageSoapSOAP, xmlParser, OrgCybergarageXmlParser *)

NSString *OrgCybergarageSoapSOAP_ENVELOPE = @"Envelope";
NSString *OrgCybergarageSoapSOAP_BODY = @"Body";
NSString *OrgCybergarageSoapSOAP_RESPONSE = @"Response";
NSString *OrgCybergarageSoapSOAP_FAULT = @"Fault";
NSString *OrgCybergarageSoapSOAP_FAULT_CODE = @"faultcode";
NSString *OrgCybergarageSoapSOAP_FAULT_STRING = @"faultstring";
NSString *OrgCybergarageSoapSOAP_FAULTACTOR = @"faultactor";
NSString *OrgCybergarageSoapSOAP_DETAIL = @"detail";
NSString *OrgCybergarageSoapSOAP_RESULTSTATUS = @"ResultStatus";
NSString *OrgCybergarageSoapSOAP_UPNP_ERROR = @"UPnPError";
NSString *OrgCybergarageSoapSOAP_ERROR_CODE = @"errorCode";
NSString *OrgCybergarageSoapSOAP_ERROR_DESCRIPTION = @"errorDescription";
NSString *OrgCybergarageSoapSOAP_XMLNS = @"s";
NSString *OrgCybergarageSoapSOAP_METHODNS = @"u";
NSString *OrgCybergarageSoapSOAP_DELIM = @":";
NSString *OrgCybergarageSoapSOAP_XMLNS_URL = @"http://schemas.xmlsoap.org/soap/envelope/";
NSString *OrgCybergarageSoapSOAP_ENCSTYLE_URL = @"http://schemas.xmlsoap.org/soap/encoding/";
NSString *OrgCybergarageSoapSOAP_CONTENT_TYPE = @"text/xml; charset=\"utf-8\"";
NSString *OrgCybergarageSoapSOAP_VERSION_HEADER = @"<?xml version=\"1.0\" encoding=\"utf-8\"?>";

@implementation OrgCybergarageSoapSOAP

+ (NSString *)ENVELOPE {
  return OrgCybergarageSoapSOAP_ENVELOPE;
}

+ (NSString *)BODY {
  return OrgCybergarageSoapSOAP_BODY;
}

+ (NSString *)RESPONSE {
  return OrgCybergarageSoapSOAP_RESPONSE;
}

+ (NSString *)FAULT {
  return OrgCybergarageSoapSOAP_FAULT;
}

+ (NSString *)FAULT_CODE {
  return OrgCybergarageSoapSOAP_FAULT_CODE;
}

+ (NSString *)FAULT_STRING {
  return OrgCybergarageSoapSOAP_FAULT_STRING;
}

+ (NSString *)FAULTACTOR {
  return OrgCybergarageSoapSOAP_FAULTACTOR;
}

+ (NSString *)DETAIL {
  return OrgCybergarageSoapSOAP_DETAIL;
}

+ (NSString *)RESULTSTATUS {
  return OrgCybergarageSoapSOAP_RESULTSTATUS;
}

+ (NSString *)UPNP_ERROR {
  return OrgCybergarageSoapSOAP_UPNP_ERROR;
}

+ (NSString *)ERROR_CODE {
  return OrgCybergarageSoapSOAP_ERROR_CODE;
}

+ (NSString *)ERROR_DESCRIPTION {
  return OrgCybergarageSoapSOAP_ERROR_DESCRIPTION;
}

+ (NSString *)XMLNS {
  return OrgCybergarageSoapSOAP_XMLNS;
}

+ (NSString *)METHODNS {
  return OrgCybergarageSoapSOAP_METHODNS;
}

+ (NSString *)DELIM {
  return OrgCybergarageSoapSOAP_DELIM;
}

+ (NSString *)XMLNS_URL {
  return OrgCybergarageSoapSOAP_XMLNS_URL;
}

+ (NSString *)ENCSTYLE_URL {
  return OrgCybergarageSoapSOAP_ENCSTYLE_URL;
}

+ (NSString *)CONTENT_TYPE {
  return OrgCybergarageSoapSOAP_CONTENT_TYPE;
}

+ (NSString *)VERSION_HEADER {
  return OrgCybergarageSoapSOAP_VERSION_HEADER;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageSoapSOAP_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgCybergarageXmlNode *)createEnvelopeBodyNode {
  return OrgCybergarageSoapSOAP_createEnvelopeBodyNode();
}

+ (void)setXMLParserWithOrgCybergarageXmlParser:(OrgCybergarageXmlParser *)parser {
  OrgCybergarageSoapSOAP_setXMLParserWithOrgCybergarageXmlParser_(parser);
}

+ (OrgCybergarageXmlParser *)getXMLParser {
  return OrgCybergarageSoapSOAP_getXMLParser();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x19, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x19, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlParser;", 0x19, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createEnvelopeBodyNode);
  methods[2].selector = @selector(setXMLParserWithOrgCybergarageXmlParser:);
  methods[3].selector = @selector(getXMLParser);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ENVELOPE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "BODY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "RESPONSE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "FAULT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "FAULT_CODE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "FAULT_STRING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "FAULTACTOR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "DETAIL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "RESULTSTATUS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "UPNP_ERROR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "ERROR_CODE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "ERROR_DESCRIPTION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "XMLNS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "METHODNS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "DELIM", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "XMLNS_URL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "ENCSTYLE_URL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "CONTENT_TYPE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "VERSION_HEADER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "xmlParser", "LOrgCybergarageXmlParser;", .constantValue.asLong = 0, 0xa, -1, 21, -1, -1 },
  };
  static const void *ptrTable[] = { "setXMLParser", "LOrgCybergarageXmlParser;", &OrgCybergarageSoapSOAP_ENVELOPE, &OrgCybergarageSoapSOAP_BODY, &OrgCybergarageSoapSOAP_RESPONSE, &OrgCybergarageSoapSOAP_FAULT, &OrgCybergarageSoapSOAP_FAULT_CODE, &OrgCybergarageSoapSOAP_FAULT_STRING, &OrgCybergarageSoapSOAP_FAULTACTOR, &OrgCybergarageSoapSOAP_DETAIL, &OrgCybergarageSoapSOAP_RESULTSTATUS, &OrgCybergarageSoapSOAP_UPNP_ERROR, &OrgCybergarageSoapSOAP_ERROR_CODE, &OrgCybergarageSoapSOAP_ERROR_DESCRIPTION, &OrgCybergarageSoapSOAP_XMLNS, &OrgCybergarageSoapSOAP_METHODNS, &OrgCybergarageSoapSOAP_DELIM, &OrgCybergarageSoapSOAP_XMLNS_URL, &OrgCybergarageSoapSOAP_ENCSTYLE_URL, &OrgCybergarageSoapSOAP_CONTENT_TYPE, &OrgCybergarageSoapSOAP_VERSION_HEADER, &OrgCybergarageSoapSOAP_xmlParser };
  static const J2ObjcClassInfo _OrgCybergarageSoapSOAP = { "SOAP", "org.cybergarage.soap", ptrTable, methods, fields, 7, 0x1, 4, 20, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageSoapSOAP;
}

@end

void OrgCybergarageSoapSOAP_init(OrgCybergarageSoapSOAP *self) {
  NSObject_init(self);
}

OrgCybergarageSoapSOAP *new_OrgCybergarageSoapSOAP_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageSoapSOAP, init)
}

OrgCybergarageSoapSOAP *create_OrgCybergarageSoapSOAP_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageSoapSOAP, init)
}

OrgCybergarageXmlNode *OrgCybergarageSoapSOAP_createEnvelopeBodyNode() {
  OrgCybergarageSoapSOAP_initialize();
  OrgCybergarageXmlNode *envNode = create_OrgCybergarageXmlNode_initWithNSString_(JreStrcat("$$$", OrgCybergarageSoapSOAP_XMLNS, OrgCybergarageSoapSOAP_DELIM, OrgCybergarageSoapSOAP_ENVELOPE));
  [envNode setAttributeWithNSString:JreStrcat("$$$", @"xmlns", OrgCybergarageSoapSOAP_DELIM, OrgCybergarageSoapSOAP_XMLNS) withNSString:OrgCybergarageSoapSOAP_XMLNS_URL];
  [envNode setAttributeWithNSString:JreStrcat("$$$", OrgCybergarageSoapSOAP_XMLNS, OrgCybergarageSoapSOAP_DELIM, @"encodingStyle") withNSString:OrgCybergarageSoapSOAP_ENCSTYLE_URL];
  OrgCybergarageXmlNode *bodyNode = create_OrgCybergarageXmlNode_initWithNSString_(JreStrcat("$$$", OrgCybergarageSoapSOAP_XMLNS, OrgCybergarageSoapSOAP_DELIM, OrgCybergarageSoapSOAP_BODY));
  [envNode addNodeWithOrgCybergarageXmlNode:bodyNode];
  return envNode;
}

void OrgCybergarageSoapSOAP_setXMLParserWithOrgCybergarageXmlParser_(OrgCybergarageXmlParser *parser) {
  OrgCybergarageSoapSOAP_initialize();
  JreStrongAssign(&OrgCybergarageSoapSOAP_xmlParser, parser);
}

OrgCybergarageXmlParser *OrgCybergarageSoapSOAP_getXMLParser() {
  OrgCybergarageSoapSOAP_initialize();
  return OrgCybergarageSoapSOAP_xmlParser;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageSoapSOAP)
