//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/org/cybergarage/soap/SOAPRequest.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/lang/Exception.h"
#include "org/cybergarage/http/HTTP.h"
#include "org/cybergarage/http/HTTPRequest.h"
#include "org/cybergarage/http/HTTPResponse.h"
#include "org/cybergarage/soap/SOAP.h"
#include "org/cybergarage/soap/SOAPRequest.h"
#include "org/cybergarage/soap/SOAPResponse.h"
#include "org/cybergarage/util/Debug.h"
#include "org/cybergarage/xml/Node.h"
#include "org/cybergarage/xml/Parser.h"
#include "org/cybergarage/xml/ParserException.h"

@interface OrgCybergarageSoapSOAPRequest () {
 @public
  OrgCybergarageXmlNode *rootNode_;
}

- (void)setRootNodeWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node;

- (OrgCybergarageXmlNode *)getRootNode;

@end

J2OBJC_FIELD_SETTER(OrgCybergarageSoapSOAPRequest, rootNode_, OrgCybergarageXmlNode *)

inline NSString *OrgCybergarageSoapSOAPRequest_get_SOAPACTION(void);
static NSString *OrgCybergarageSoapSOAPRequest_SOAPACTION = @"SOAPACTION";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgCybergarageSoapSOAPRequest, SOAPACTION, NSString *)

__attribute__((unused)) static void OrgCybergarageSoapSOAPRequest_setRootNodeWithOrgCybergarageXmlNode_(OrgCybergarageSoapSOAPRequest *self, OrgCybergarageXmlNode *node);

__attribute__((unused)) static OrgCybergarageXmlNode *OrgCybergarageSoapSOAPRequest_getRootNode(OrgCybergarageSoapSOAPRequest *self);

@implementation OrgCybergarageSoapSOAPRequest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgCybergarageSoapSOAPRequest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgCybergarageHttpHTTPRequest:(OrgCybergarageHttpHTTPRequest *)httpReq {
  OrgCybergarageSoapSOAPRequest_initWithOrgCybergarageHttpHTTPRequest_(self, httpReq);
  return self;
}

- (void)setSOAPActionWithNSString:(NSString *)action {
  [self setStringHeaderWithNSString:OrgCybergarageSoapSOAPRequest_SOAPACTION withNSString:action];
}

- (NSString *)getSOAPAction {
  return [self getStringHeaderValueWithNSString:OrgCybergarageSoapSOAPRequest_SOAPACTION];
}

- (jboolean)isSOAPActionWithNSString:(NSString *)value {
  NSString *headerValue = [self getHeaderValueWithNSString:OrgCybergarageSoapSOAPRequest_SOAPACTION];
  if (headerValue == nil) return false;
  if ([headerValue isEqual:value] == true) return true;
  NSString *soapAction = [self getSOAPAction];
  if (soapAction == nil) return false;
  return [soapAction isEqual:value];
}

- (OrgCybergarageSoapSOAPResponse *)postMessageWithNSString:(NSString *)host
                                                    withInt:(jint)port {
  OrgCybergarageHttpHTTPResponse *httpRes = [self postWithNSString:host withInt:port];
  OrgCybergarageSoapSOAPResponse *soapRes = create_OrgCybergarageSoapSOAPResponse_initWithOrgCybergarageHttpHTTPResponse_(httpRes);
  IOSByteArray *content = [soapRes getContent];
  if (((IOSByteArray *) nil_chk(content))->size_ <= 0) return soapRes;
  @try {
    JavaIoByteArrayInputStream *byteIn = create_JavaIoByteArrayInputStream_initWithByteArray_(content);
    OrgCybergarageXmlParser *xmlParser = OrgCybergarageSoapSOAP_getXMLParser();
    OrgCybergarageXmlNode *rootNode = [((OrgCybergarageXmlParser *) nil_chk(xmlParser)) parseWithJavaIoInputStream:byteIn];
    [soapRes setEnvelopeNodeWithOrgCybergarageXmlNode:rootNode];
  }
  @catch (JavaLangException *e) {
    OrgCybergarageUtilDebug_warningWithJavaLangException_(e);
  }
  return soapRes;
}

- (void)setRootNodeWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node {
  OrgCybergarageSoapSOAPRequest_setRootNodeWithOrgCybergarageXmlNode_(self, node);
}

- (OrgCybergarageXmlNode *)getRootNode {
  return OrgCybergarageSoapSOAPRequest_getRootNode(self);
}

- (void)setEnvelopeNodeWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node {
  OrgCybergarageSoapSOAPRequest_setRootNodeWithOrgCybergarageXmlNode_(self, node);
}

- (OrgCybergarageXmlNode *)getEnvelopeNode {
  return OrgCybergarageSoapSOAPRequest_getRootNode(self);
}

- (OrgCybergarageXmlNode *)getBodyNode {
  OrgCybergarageXmlNode *envNode = [self getEnvelopeNode];
  if (envNode == nil) return nil;
  if ([envNode hasNodes] == false) return nil;
  return [envNode getNodeWithInt:0];
}

- (void)setContentWithOrgCybergarageXmlNode:(OrgCybergarageXmlNode *)node {
  NSString *conStr = @"";
  JreStrAppend(&conStr, "$", OrgCybergarageSoapSOAP_VERSION_HEADER);
  JreStrAppend(&conStr, "$", @"\n");
  JreStrAppend(&conStr, "$", [((OrgCybergarageXmlNode *) nil_chk(node)) description]);
  [self setContentWithNSString:conStr];
}

- (void)print {
  OrgCybergarageUtilDebug_messageWithNSString_([self description]);
  if ([self hasContent] == true) return;
  OrgCybergarageXmlNode *rootElem = OrgCybergarageSoapSOAPRequest_getRootNode(self);
  if (rootElem == nil) return;
  OrgCybergarageUtilDebug_messageWithNSString_([rootElem description]);
}

- (void)dealloc {
  RELEASE_(rootNode_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageSoapSOAPResponse;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x22, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgCybergarageXmlNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgCybergarageHttpHTTPRequest:);
  methods[2].selector = @selector(setSOAPActionWithNSString:);
  methods[3].selector = @selector(getSOAPAction);
  methods[4].selector = @selector(isSOAPActionWithNSString:);
  methods[5].selector = @selector(postMessageWithNSString:withInt:);
  methods[6].selector = @selector(setRootNodeWithOrgCybergarageXmlNode:);
  methods[7].selector = @selector(getRootNode);
  methods[8].selector = @selector(setEnvelopeNodeWithOrgCybergarageXmlNode:);
  methods[9].selector = @selector(getEnvelopeNode);
  methods[10].selector = @selector(getBodyNode);
  methods[11].selector = @selector(setContentWithOrgCybergarageXmlNode:);
  methods[12].selector = @selector(print);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SOAPACTION", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "rootNode_", "LOrgCybergarageXmlNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgCybergarageHttpHTTPRequest;", "setSOAPAction", "LNSString;", "isSOAPAction", "postMessage", "LNSString;I", "setRootNode", "LOrgCybergarageXmlNode;", "setEnvelopeNode", "setContent", &OrgCybergarageSoapSOAPRequest_SOAPACTION };
  static const J2ObjcClassInfo _OrgCybergarageSoapSOAPRequest = { "SOAPRequest", "org.cybergarage.soap", ptrTable, methods, fields, 7, 0x1, 13, 2, -1, -1, -1, -1, -1 };
  return &_OrgCybergarageSoapSOAPRequest;
}

@end

void OrgCybergarageSoapSOAPRequest_init(OrgCybergarageSoapSOAPRequest *self) {
  OrgCybergarageHttpHTTPRequest_init(self);
  [self setContentTypeWithNSString:OrgCybergarageSoapSOAP_CONTENT_TYPE];
  [self setMethodWithNSString:OrgCybergarageHttpHTTP_POST];
}

OrgCybergarageSoapSOAPRequest *new_OrgCybergarageSoapSOAPRequest_init() {
  J2OBJC_NEW_IMPL(OrgCybergarageSoapSOAPRequest, init)
}

OrgCybergarageSoapSOAPRequest *create_OrgCybergarageSoapSOAPRequest_init() {
  J2OBJC_CREATE_IMPL(OrgCybergarageSoapSOAPRequest, init)
}

void OrgCybergarageSoapSOAPRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageSoapSOAPRequest *self, OrgCybergarageHttpHTTPRequest *httpReq) {
  OrgCybergarageHttpHTTPRequest_init(self);
  [self setWithOrgCybergarageHttpHTTPRequest:httpReq];
}

OrgCybergarageSoapSOAPRequest *new_OrgCybergarageSoapSOAPRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageHttpHTTPRequest *httpReq) {
  J2OBJC_NEW_IMPL(OrgCybergarageSoapSOAPRequest, initWithOrgCybergarageHttpHTTPRequest_, httpReq)
}

OrgCybergarageSoapSOAPRequest *create_OrgCybergarageSoapSOAPRequest_initWithOrgCybergarageHttpHTTPRequest_(OrgCybergarageHttpHTTPRequest *httpReq) {
  J2OBJC_CREATE_IMPL(OrgCybergarageSoapSOAPRequest, initWithOrgCybergarageHttpHTTPRequest_, httpReq)
}

void OrgCybergarageSoapSOAPRequest_setRootNodeWithOrgCybergarageXmlNode_(OrgCybergarageSoapSOAPRequest *self, OrgCybergarageXmlNode *node) {
  JreStrongAssign(&self->rootNode_, node);
}

OrgCybergarageXmlNode *OrgCybergarageSoapSOAPRequest_getRootNode(OrgCybergarageSoapSOAPRequest *self) {
  @synchronized(self) {
    if (self->rootNode_ != nil) return JreRetainedLocalValue(self->rootNode_);
    @try {
      IOSByteArray *content = [self getContent];
      JavaIoByteArrayInputStream *contentIn = create_JavaIoByteArrayInputStream_initWithByteArray_(content);
      OrgCybergarageXmlParser *parser = OrgCybergarageSoapSOAP_getXMLParser();
      JreStrongAssign(&self->rootNode_, [((OrgCybergarageXmlParser *) nil_chk(parser)) parseWithJavaIoInputStream:contentIn]);
    }
    @catch (OrgCybergarageXmlParserException *e) {
      OrgCybergarageUtilDebug_warningWithJavaLangException_(e);
    }
    return JreRetainedLocalValue(self->rootNode_);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgCybergarageSoapSOAPRequest)
