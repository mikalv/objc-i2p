//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/com/maxmind/geoip/InvalidDatabaseException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComMaxmindGeoipInvalidDatabaseException")
#ifdef RESTRICT_ComMaxmindGeoipInvalidDatabaseException
#define INCLUDE_ALL_ComMaxmindGeoipInvalidDatabaseException 0
#else
#define INCLUDE_ALL_ComMaxmindGeoipInvalidDatabaseException 1
#endif
#undef RESTRICT_ComMaxmindGeoipInvalidDatabaseException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComMaxmindGeoipInvalidDatabaseException_) && (INCLUDE_ALL_ComMaxmindGeoipInvalidDatabaseException || defined(INCLUDE_ComMaxmindGeoipInvalidDatabaseException))
#define ComMaxmindGeoipInvalidDatabaseException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;

@interface ComMaxmindGeoipInvalidDatabaseException : JavaLangRuntimeException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)message;

- (instancetype __nonnull)initWithNSString:(NSString *)message
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComMaxmindGeoipInvalidDatabaseException)

FOUNDATION_EXPORT void ComMaxmindGeoipInvalidDatabaseException_initWithNSString_(ComMaxmindGeoipInvalidDatabaseException *self, NSString *message);

FOUNDATION_EXPORT ComMaxmindGeoipInvalidDatabaseException *new_ComMaxmindGeoipInvalidDatabaseException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMaxmindGeoipInvalidDatabaseException *create_ComMaxmindGeoipInvalidDatabaseException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void ComMaxmindGeoipInvalidDatabaseException_initWithNSString_withJavaLangThrowable_(ComMaxmindGeoipInvalidDatabaseException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT ComMaxmindGeoipInvalidDatabaseException *new_ComMaxmindGeoipInvalidDatabaseException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMaxmindGeoipInvalidDatabaseException *create_ComMaxmindGeoipInvalidDatabaseException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(ComMaxmindGeoipInvalidDatabaseException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComMaxmindGeoipInvalidDatabaseException")
