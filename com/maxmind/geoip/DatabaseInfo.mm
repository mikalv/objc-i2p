//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/com/maxmind/geoip/DatabaseInfo.java
//

#include "J2ObjC_source.h"
#include "com/maxmind/geoip/DatabaseInfo.h"
#include "java/lang/Character.h"
#include "java/lang/Integer.h"
#include "java/text/ParseException.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"

@interface ComMaxmindGeoipDatabaseInfo () {
 @public
  NSString *info_;
}

@end

J2OBJC_FIELD_SETTER(ComMaxmindGeoipDatabaseInfo, info_, NSString *)

inline JavaTextSimpleDateFormat *ComMaxmindGeoipDatabaseInfo_get_formatter(void);
inline JavaTextSimpleDateFormat *ComMaxmindGeoipDatabaseInfo_set_formatter(JavaTextSimpleDateFormat *value);
static JavaTextSimpleDateFormat *ComMaxmindGeoipDatabaseInfo_formatter;
J2OBJC_STATIC_FIELD_OBJ(ComMaxmindGeoipDatabaseInfo, formatter, JavaTextSimpleDateFormat *)

J2OBJC_INITIALIZED_DEFN(ComMaxmindGeoipDatabaseInfo)

@implementation ComMaxmindGeoipDatabaseInfo

+ (jint)COUNTRY_EDITION {
  return ComMaxmindGeoipDatabaseInfo_COUNTRY_EDITION;
}

+ (jint)REGION_EDITION_REV0 {
  return ComMaxmindGeoipDatabaseInfo_REGION_EDITION_REV0;
}

+ (jint)REGION_EDITION_REV1 {
  return ComMaxmindGeoipDatabaseInfo_REGION_EDITION_REV1;
}

+ (jint)CITY_EDITION_REV0 {
  return ComMaxmindGeoipDatabaseInfo_CITY_EDITION_REV0;
}

+ (jint)CITY_EDITION_REV1 {
  return ComMaxmindGeoipDatabaseInfo_CITY_EDITION_REV1;
}

+ (jint)ORG_EDITION {
  return ComMaxmindGeoipDatabaseInfo_ORG_EDITION;
}

+ (jint)ISP_EDITION {
  return ComMaxmindGeoipDatabaseInfo_ISP_EDITION;
}

+ (jint)PROXY_EDITION {
  return ComMaxmindGeoipDatabaseInfo_PROXY_EDITION;
}

+ (jint)ASNUM_EDITION {
  return ComMaxmindGeoipDatabaseInfo_ASNUM_EDITION;
}

+ (jint)NETSPEED_EDITION {
  return ComMaxmindGeoipDatabaseInfo_NETSPEED_EDITION;
}

+ (jint)DOMAIN_EDITION {
  return ComMaxmindGeoipDatabaseInfo_DOMAIN_EDITION;
}

+ (jint)COUNTRY_EDITION_V6 {
  return ComMaxmindGeoipDatabaseInfo_COUNTRY_EDITION_V6;
}

+ (jint)ASNUM_EDITION_V6 {
  return ComMaxmindGeoipDatabaseInfo_ASNUM_EDITION_V6;
}

+ (jint)ISP_EDITION_V6 {
  return ComMaxmindGeoipDatabaseInfo_ISP_EDITION_V6;
}

+ (jint)ORG_EDITION_V6 {
  return ComMaxmindGeoipDatabaseInfo_ORG_EDITION_V6;
}

+ (jint)DOMAIN_EDITION_V6 {
  return ComMaxmindGeoipDatabaseInfo_DOMAIN_EDITION_V6;
}

+ (jint)CITY_EDITION_REV1_V6 {
  return ComMaxmindGeoipDatabaseInfo_CITY_EDITION_REV1_V6;
}

+ (jint)CITY_EDITION_REV0_V6 {
  return ComMaxmindGeoipDatabaseInfo_CITY_EDITION_REV0_V6;
}

+ (jint)NETSPEED_EDITION_REV1 {
  return ComMaxmindGeoipDatabaseInfo_NETSPEED_EDITION_REV1;
}

+ (jint)NETSPEED_EDITION_REV1_V6 {
  return ComMaxmindGeoipDatabaseInfo_NETSPEED_EDITION_REV1_V6;
}

- (instancetype)initWithNSString:(NSString *)info {
  ComMaxmindGeoipDatabaseInfo_initWithNSString_(self, info);
  return self;
}

- (jint)getType {
  if (info_ == nil || [info_ java_length] == 0) {
    return ComMaxmindGeoipDatabaseInfo_COUNTRY_EDITION;
  }
  else {
    return JavaLangInteger_parseIntWithNSString_([info_ java_substring:4 endIndex:7]) - 105;
  }
}

- (jboolean)isPremium {
  return ![((NSString *) nil_chk(info_)) java_contains:@"FREE"];
}

- (JavaUtilDate *)getDate {
  for (jint i = 0; i < [((NSString *) nil_chk(info_)) java_length] - 9; i++) {
    if (JavaLangCharacter_isWhitespaceWithChar_([((NSString *) nil_chk(info_)) charAtWithInt:i])) {
      NSString *dateString = [((NSString *) nil_chk(info_)) java_substring:i + 1 endIndex:i + 9];
      @try {
        @synchronized(ComMaxmindGeoipDatabaseInfo_formatter) {
          return JreRetainedLocalValue([((JavaTextSimpleDateFormat *) nil_chk(ComMaxmindGeoipDatabaseInfo_formatter)) parseWithNSString:dateString]);
        }
      }
      @catch (JavaTextParseException *pe) {
      }
      break;
    }
  }
  return nil;
}

- (NSString *)description {
  return info_;
}

- (void)dealloc {
  RELEASE_(info_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getType);
  methods[2].selector = @selector(isPremium);
  methods[3].selector = @selector(getDate);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "COUNTRY_EDITION", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_COUNTRY_EDITION, 0x19, -1, -1, -1, -1 },
    { "REGION_EDITION_REV0", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_REGION_EDITION_REV0, 0x19, -1, -1, -1, -1 },
    { "REGION_EDITION_REV1", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_REGION_EDITION_REV1, 0x19, -1, -1, -1, -1 },
    { "CITY_EDITION_REV0", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_CITY_EDITION_REV0, 0x19, -1, -1, -1, -1 },
    { "CITY_EDITION_REV1", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_CITY_EDITION_REV1, 0x19, -1, -1, -1, -1 },
    { "ORG_EDITION", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_ORG_EDITION, 0x19, -1, -1, -1, -1 },
    { "ISP_EDITION", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_ISP_EDITION, 0x19, -1, -1, -1, -1 },
    { "PROXY_EDITION", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_PROXY_EDITION, 0x19, -1, -1, -1, -1 },
    { "ASNUM_EDITION", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_ASNUM_EDITION, 0x19, -1, -1, -1, -1 },
    { "NETSPEED_EDITION", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_NETSPEED_EDITION, 0x19, -1, -1, -1, -1 },
    { "DOMAIN_EDITION", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_DOMAIN_EDITION, 0x19, -1, -1, -1, -1 },
    { "COUNTRY_EDITION_V6", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_COUNTRY_EDITION_V6, 0x19, -1, -1, -1, -1 },
    { "ASNUM_EDITION_V6", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_ASNUM_EDITION_V6, 0x19, -1, -1, -1, -1 },
    { "ISP_EDITION_V6", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_ISP_EDITION_V6, 0x19, -1, -1, -1, -1 },
    { "ORG_EDITION_V6", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_ORG_EDITION_V6, 0x19, -1, -1, -1, -1 },
    { "DOMAIN_EDITION_V6", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_DOMAIN_EDITION_V6, 0x19, -1, -1, -1, -1 },
    { "CITY_EDITION_REV1_V6", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_CITY_EDITION_REV1_V6, 0x19, -1, -1, -1, -1 },
    { "CITY_EDITION_REV0_V6", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_CITY_EDITION_REV0_V6, 0x19, -1, -1, -1, -1 },
    { "NETSPEED_EDITION_REV1", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_NETSPEED_EDITION_REV1, 0x19, -1, -1, -1, -1 },
    { "NETSPEED_EDITION_REV1_V6", "I", .constantValue.asInt = ComMaxmindGeoipDatabaseInfo_NETSPEED_EDITION_REV1_V6, 0x19, -1, -1, -1, -1 },
    { "formatter", "LJavaTextSimpleDateFormat;", .constantValue.asLong = 0, 0xa, -1, 2, -1, -1 },
    { "info_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "toString", &ComMaxmindGeoipDatabaseInfo_formatter };
  static const J2ObjcClassInfo _ComMaxmindGeoipDatabaseInfo = { "DatabaseInfo", "com.maxmind.geoip", ptrTable, methods, fields, 7, 0x1, 5, 22, -1, -1, -1, -1, -1 };
  return &_ComMaxmindGeoipDatabaseInfo;
}

+ (void)initialize {
  if (self == [ComMaxmindGeoipDatabaseInfo class]) {
    JreStrongAssignAndConsume(&ComMaxmindGeoipDatabaseInfo_formatter, new_JavaTextSimpleDateFormat_initWithNSString_(@"yyyyMMdd"));
    J2OBJC_SET_INITIALIZED(ComMaxmindGeoipDatabaseInfo)
  }
}

@end

void ComMaxmindGeoipDatabaseInfo_initWithNSString_(ComMaxmindGeoipDatabaseInfo *self, NSString *info) {
  NSObject_init(self);
  JreStrongAssign(&self->info_, info);
}

ComMaxmindGeoipDatabaseInfo *new_ComMaxmindGeoipDatabaseInfo_initWithNSString_(NSString *info) {
  J2OBJC_NEW_IMPL(ComMaxmindGeoipDatabaseInfo, initWithNSString_, info)
}

ComMaxmindGeoipDatabaseInfo *create_ComMaxmindGeoipDatabaseInfo_initWithNSString_(NSString *info) {
  J2OBJC_CREATE_IMPL(ComMaxmindGeoipDatabaseInfo, initWithNSString_, info)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMaxmindGeoipDatabaseInfo)
