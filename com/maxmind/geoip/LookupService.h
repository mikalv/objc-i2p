//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/com/maxmind/geoip/LookupService.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComMaxmindGeoipLookupService")
#ifdef RESTRICT_ComMaxmindGeoipLookupService
#define INCLUDE_ALL_ComMaxmindGeoipLookupService 0
#else
#define INCLUDE_ALL_ComMaxmindGeoipLookupService 1
#endif
#undef RESTRICT_ComMaxmindGeoipLookupService

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComMaxmindGeoipLookupService_) && (INCLUDE_ALL_ComMaxmindGeoipLookupService || defined(INCLUDE_ComMaxmindGeoipLookupService))
#define ComMaxmindGeoipLookupService_

@class ComMaxmindGeoipCountry;
@class ComMaxmindGeoipDatabaseInfo;
@class ComMaxmindGeoipLocation;
@class ComMaxmindGeoipRegion;
@class JavaIoFile;
@class JavaNetInetAddress;
@protocol JavaUtilList;

@interface ComMaxmindGeoipLookupService : NSObject
@property (readonly, class) jint GEOIP_STANDARD NS_SWIFT_NAME(GEOIP_STANDARD);
@property (readonly, class) jint GEOIP_MEMORY_CACHE NS_SWIFT_NAME(GEOIP_MEMORY_CACHE);
@property (readonly, class) jint GEOIP_CHECK_CACHE NS_SWIFT_NAME(GEOIP_CHECK_CACHE);
@property (readonly, class) jint GEOIP_INDEX_CACHE NS_SWIFT_NAME(GEOIP_INDEX_CACHE);
@property (readonly, class) jint GEOIP_UNKNOWN_SPEED NS_SWIFT_NAME(GEOIP_UNKNOWN_SPEED);
@property (readonly, class) jint GEOIP_DIALUP_SPEED NS_SWIFT_NAME(GEOIP_DIALUP_SPEED);
@property (readonly, class) jint GEOIP_CABLEDSL_SPEED NS_SWIFT_NAME(GEOIP_CABLEDSL_SPEED);
@property (readonly, class) jint GEOIP_CORPORATE_SPEED NS_SWIFT_NAME(GEOIP_CORPORATE_SPEED);

+ (jint)GEOIP_STANDARD;

+ (jint)GEOIP_MEMORY_CACHE;

+ (jint)GEOIP_CHECK_CACHE;

+ (jint)GEOIP_INDEX_CACHE;

+ (jint)GEOIP_UNKNOWN_SPEED;

+ (jint)GEOIP_DIALUP_SPEED;

+ (jint)GEOIP_CABLEDSL_SPEED;

+ (jint)GEOIP_CORPORATE_SPEED;

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)databaseFile;

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)databaseFile
                                     withInt:(jint)options;

- (instancetype __nonnull)initWithNSString:(NSString *)databaseFile;

- (instancetype __nonnull)initWithNSString:(NSString *)databaseFile
                                   withInt:(jint)options;

- (void)close;

- (id<JavaUtilList>)getAllCountryCodes;

- (id<JavaUtilList>)getAllCountryNames;

- (ComMaxmindGeoipCountry *)getCountryWithJavaNetInetAddress:(JavaNetInetAddress *)ipAddress;

- (ComMaxmindGeoipCountry *)getCountryWithLong:(jlong)ipAddress;

- (ComMaxmindGeoipCountry *)getCountryWithNSString:(NSString *)ipAddress;

- (ComMaxmindGeoipCountry *)getCountryV6WithJavaNetInetAddress:(JavaNetInetAddress *)addr;

- (ComMaxmindGeoipCountry *)getCountryV6WithNSString:(NSString *)ipAddress;

- (ComMaxmindGeoipDatabaseInfo *)getDatabaseInfo;

- (jint)getIDWithJavaNetInetAddress:(JavaNetInetAddress *)ipAddress;

- (jint)getIDWithLong:(jlong)ipAddress;

- (jint)getIDWithNSString:(NSString *)ipAddress;

- (ComMaxmindGeoipLocation *)getLocationWithJavaNetInetAddress:(JavaNetInetAddress *)addr;

- (ComMaxmindGeoipLocation *)getLocationWithLong:(jlong)ipnum;

- (ComMaxmindGeoipLocation *)getLocationWithNSString:(NSString *)str;

- (ComMaxmindGeoipLocation *)getLocationV6WithJavaNetInetAddress:(JavaNetInetAddress *)addr;

- (ComMaxmindGeoipLocation *)getLocationV6WithNSString:(NSString *)str;

- (NSString *)getOrgWithJavaNetInetAddress:(JavaNetInetAddress *)addr;

- (NSString *)getOrgWithLong:(jlong)ipnum;

- (NSString *)getOrgWithNSString:(NSString *)str;

- (NSString *)getOrgV6WithJavaNetInetAddress:(JavaNetInetAddress *)addr;

- (NSString *)getOrgV6WithNSString:(NSString *)str;

- (ComMaxmindGeoipRegion *)getRegionWithJavaNetInetAddress:(JavaNetInetAddress *)addr;

- (ComMaxmindGeoipRegion *)getRegionWithLong:(jlong)ipnum;

- (ComMaxmindGeoipRegion *)getRegionWithNSString:(NSString *)str;

- (jint)last_netmask;

- (void)netmaskWithInt:(jint)nm;

#pragma mark Package-Private

- (void)_check_mtime;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComMaxmindGeoipLookupService)

inline jint ComMaxmindGeoipLookupService_get_GEOIP_STANDARD(void);
#define ComMaxmindGeoipLookupService_GEOIP_STANDARD 0
J2OBJC_STATIC_FIELD_CONSTANT(ComMaxmindGeoipLookupService, GEOIP_STANDARD, jint)

inline jint ComMaxmindGeoipLookupService_get_GEOIP_MEMORY_CACHE(void);
#define ComMaxmindGeoipLookupService_GEOIP_MEMORY_CACHE 1
J2OBJC_STATIC_FIELD_CONSTANT(ComMaxmindGeoipLookupService, GEOIP_MEMORY_CACHE, jint)

inline jint ComMaxmindGeoipLookupService_get_GEOIP_CHECK_CACHE(void);
#define ComMaxmindGeoipLookupService_GEOIP_CHECK_CACHE 2
J2OBJC_STATIC_FIELD_CONSTANT(ComMaxmindGeoipLookupService, GEOIP_CHECK_CACHE, jint)

inline jint ComMaxmindGeoipLookupService_get_GEOIP_INDEX_CACHE(void);
#define ComMaxmindGeoipLookupService_GEOIP_INDEX_CACHE 4
J2OBJC_STATIC_FIELD_CONSTANT(ComMaxmindGeoipLookupService, GEOIP_INDEX_CACHE, jint)

inline jint ComMaxmindGeoipLookupService_get_GEOIP_UNKNOWN_SPEED(void);
#define ComMaxmindGeoipLookupService_GEOIP_UNKNOWN_SPEED 0
J2OBJC_STATIC_FIELD_CONSTANT(ComMaxmindGeoipLookupService, GEOIP_UNKNOWN_SPEED, jint)

inline jint ComMaxmindGeoipLookupService_get_GEOIP_DIALUP_SPEED(void);
#define ComMaxmindGeoipLookupService_GEOIP_DIALUP_SPEED 1
J2OBJC_STATIC_FIELD_CONSTANT(ComMaxmindGeoipLookupService, GEOIP_DIALUP_SPEED, jint)

inline jint ComMaxmindGeoipLookupService_get_GEOIP_CABLEDSL_SPEED(void);
#define ComMaxmindGeoipLookupService_GEOIP_CABLEDSL_SPEED 2
J2OBJC_STATIC_FIELD_CONSTANT(ComMaxmindGeoipLookupService, GEOIP_CABLEDSL_SPEED, jint)

inline jint ComMaxmindGeoipLookupService_get_GEOIP_CORPORATE_SPEED(void);
#define ComMaxmindGeoipLookupService_GEOIP_CORPORATE_SPEED 3
J2OBJC_STATIC_FIELD_CONSTANT(ComMaxmindGeoipLookupService, GEOIP_CORPORATE_SPEED, jint)

FOUNDATION_EXPORT void ComMaxmindGeoipLookupService_initWithNSString_(ComMaxmindGeoipLookupService *self, NSString *databaseFile);

FOUNDATION_EXPORT ComMaxmindGeoipLookupService *new_ComMaxmindGeoipLookupService_initWithNSString_(NSString *databaseFile) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMaxmindGeoipLookupService *create_ComMaxmindGeoipLookupService_initWithNSString_(NSString *databaseFile);

FOUNDATION_EXPORT void ComMaxmindGeoipLookupService_initWithJavaIoFile_(ComMaxmindGeoipLookupService *self, JavaIoFile *databaseFile);

FOUNDATION_EXPORT ComMaxmindGeoipLookupService *new_ComMaxmindGeoipLookupService_initWithJavaIoFile_(JavaIoFile *databaseFile) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMaxmindGeoipLookupService *create_ComMaxmindGeoipLookupService_initWithJavaIoFile_(JavaIoFile *databaseFile);

FOUNDATION_EXPORT void ComMaxmindGeoipLookupService_initWithNSString_withInt_(ComMaxmindGeoipLookupService *self, NSString *databaseFile, jint options);

FOUNDATION_EXPORT ComMaxmindGeoipLookupService *new_ComMaxmindGeoipLookupService_initWithNSString_withInt_(NSString *databaseFile, jint options) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMaxmindGeoipLookupService *create_ComMaxmindGeoipLookupService_initWithNSString_withInt_(NSString *databaseFile, jint options);

FOUNDATION_EXPORT void ComMaxmindGeoipLookupService_initWithJavaIoFile_withInt_(ComMaxmindGeoipLookupService *self, JavaIoFile *databaseFile, jint options);

FOUNDATION_EXPORT ComMaxmindGeoipLookupService *new_ComMaxmindGeoipLookupService_initWithJavaIoFile_withInt_(JavaIoFile *databaseFile, jint options) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMaxmindGeoipLookupService *create_ComMaxmindGeoipLookupService_initWithJavaIoFile_withInt_(JavaIoFile *databaseFile, jint options);

J2OBJC_TYPE_LITERAL_HEADER(ComMaxmindGeoipLookupService)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComMaxmindGeoipLookupService")
