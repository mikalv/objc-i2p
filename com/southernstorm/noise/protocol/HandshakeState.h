//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/com/southernstorm/noise/protocol/HandshakeState.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComSouthernstormNoiseProtocolHandshakeState")
#ifdef RESTRICT_ComSouthernstormNoiseProtocolHandshakeState
#define INCLUDE_ALL_ComSouthernstormNoiseProtocolHandshakeState 0
#else
#define INCLUDE_ALL_ComSouthernstormNoiseProtocolHandshakeState 1
#endif
#undef RESTRICT_ComSouthernstormNoiseProtocolHandshakeState

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComSouthernstormNoiseProtocolHandshakeState_) && (INCLUDE_ALL_ComSouthernstormNoiseProtocolHandshakeState || defined(INCLUDE_ComSouthernstormNoiseProtocolHandshakeState))
#define ComSouthernstormNoiseProtocolHandshakeState_

#define RESTRICT_ComSouthernstormNoiseProtocolDestroyable 1
#define INCLUDE_ComSouthernstormNoiseProtocolDestroyable 1
#include "com/southernstorm/noise/protocol/Destroyable.h"

@class ComSouthernstormNoiseProtocolCipherStatePair;
@class IOSByteArray;
@class NetI2pRouterTransportCryptoX25519KeyFactory;
@protocol ComSouthernstormNoiseProtocolDHState;

@interface ComSouthernstormNoiseProtocolHandshakeState : NSObject < ComSouthernstormNoiseProtocolDestroyable >
@property (readonly, class) jint INITIATOR NS_SWIFT_NAME(INITIATOR);
@property (readonly, class) jint RESPONDER NS_SWIFT_NAME(RESPONDER);
@property (readonly, class) jint NO_ACTION NS_SWIFT_NAME(NO_ACTION);
@property (readonly, class) jint WRITE_MESSAGE NS_SWIFT_NAME(WRITE_MESSAGE);
@property (readonly, class) jint READ_MESSAGE NS_SWIFT_NAME(READ_MESSAGE);
@property (readonly, class) jint FAILED NS_SWIFT_NAME(FAILED);
@property (readonly, class) jint SPLIT NS_SWIFT_NAME(SPLIT);
@property (readonly, class) jint COMPLETE NS_SWIFT_NAME(COMPLETE);
@property (readonly, copy, class) NSString *protocolName NS_SWIFT_NAME(protocolName);

+ (jint)INITIATOR;

+ (jint)RESPONDER;

+ (jint)NO_ACTION;

+ (jint)WRITE_MESSAGE;

+ (jint)READ_MESSAGE;

+ (jint)FAILED;

+ (jint)SPLIT;

+ (jint)COMPLETE;

+ (NSString *)protocolName;

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)role
withNetI2pRouterTransportCryptoX25519KeyFactory:(NetI2pRouterTransportCryptoX25519KeyFactory *)xdh;

- (void)destroy;

- (jint)getAction;

- (IOSByteArray *)getChainingKey;

- (IOSByteArray *)getHandshakeHash;

- (id<ComSouthernstormNoiseProtocolDHState>)getLocalKeyPair;

- (NSString *)getProtocolName;

- (id<ComSouthernstormNoiseProtocolDHState>)getRemotePublicKey;

- (jint)getRole;

- (jboolean)hasLocalKeyPair;

- (jboolean)hasRemotePublicKey;

- (void)mixHashWithByteArray:(IOSByteArray *)data
                     withInt:(jint)offset
                     withInt:(jint)length;

- (jboolean)needsLocalKeyPair;

- (jboolean)needsRemotePublicKey;

- (jint)readMessageWithByteArray:(IOSByteArray *)message
                         withInt:(jint)messageOffset
                         withInt:(jint)messageLength
                   withByteArray:(IOSByteArray *)payload
                         withInt:(jint)payloadOffset;

- (ComSouthernstormNoiseProtocolCipherStatePair *)split;

- (ComSouthernstormNoiseProtocolCipherStatePair *)splitWithByteArray:(IOSByteArray *)secondaryKey
                                                             withInt:(jint)offset
                                                             withInt:(jint)length;

- (void)start;

- (NSString *)description;

- (jint)writeMessageWithByteArray:(IOSByteArray *)message
                          withInt:(jint)messageOffset
                    withByteArray:(IOSByteArray *)payload
                          withInt:(jint)payloadOffset
                          withInt:(jint)payloadLength;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComSouthernstormNoiseProtocolHandshakeState)

inline jint ComSouthernstormNoiseProtocolHandshakeState_get_INITIATOR(void);
#define ComSouthernstormNoiseProtocolHandshakeState_INITIATOR 1
J2OBJC_STATIC_FIELD_CONSTANT(ComSouthernstormNoiseProtocolHandshakeState, INITIATOR, jint)

inline jint ComSouthernstormNoiseProtocolHandshakeState_get_RESPONDER(void);
#define ComSouthernstormNoiseProtocolHandshakeState_RESPONDER 2
J2OBJC_STATIC_FIELD_CONSTANT(ComSouthernstormNoiseProtocolHandshakeState, RESPONDER, jint)

inline jint ComSouthernstormNoiseProtocolHandshakeState_get_NO_ACTION(void);
#define ComSouthernstormNoiseProtocolHandshakeState_NO_ACTION 0
J2OBJC_STATIC_FIELD_CONSTANT(ComSouthernstormNoiseProtocolHandshakeState, NO_ACTION, jint)

inline jint ComSouthernstormNoiseProtocolHandshakeState_get_WRITE_MESSAGE(void);
#define ComSouthernstormNoiseProtocolHandshakeState_WRITE_MESSAGE 1
J2OBJC_STATIC_FIELD_CONSTANT(ComSouthernstormNoiseProtocolHandshakeState, WRITE_MESSAGE, jint)

inline jint ComSouthernstormNoiseProtocolHandshakeState_get_READ_MESSAGE(void);
#define ComSouthernstormNoiseProtocolHandshakeState_READ_MESSAGE 2
J2OBJC_STATIC_FIELD_CONSTANT(ComSouthernstormNoiseProtocolHandshakeState, READ_MESSAGE, jint)

inline jint ComSouthernstormNoiseProtocolHandshakeState_get_FAILED(void);
#define ComSouthernstormNoiseProtocolHandshakeState_FAILED 3
J2OBJC_STATIC_FIELD_CONSTANT(ComSouthernstormNoiseProtocolHandshakeState, FAILED, jint)

inline jint ComSouthernstormNoiseProtocolHandshakeState_get_SPLIT(void);
#define ComSouthernstormNoiseProtocolHandshakeState_SPLIT 4
J2OBJC_STATIC_FIELD_CONSTANT(ComSouthernstormNoiseProtocolHandshakeState, SPLIT, jint)

inline jint ComSouthernstormNoiseProtocolHandshakeState_get_COMPLETE(void);
#define ComSouthernstormNoiseProtocolHandshakeState_COMPLETE 5
J2OBJC_STATIC_FIELD_CONSTANT(ComSouthernstormNoiseProtocolHandshakeState, COMPLETE, jint)

inline NSString *ComSouthernstormNoiseProtocolHandshakeState_get_protocolName(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComSouthernstormNoiseProtocolHandshakeState_protocolName;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSouthernstormNoiseProtocolHandshakeState, protocolName, NSString *)

FOUNDATION_EXPORT void ComSouthernstormNoiseProtocolHandshakeState_initWithInt_withNetI2pRouterTransportCryptoX25519KeyFactory_(ComSouthernstormNoiseProtocolHandshakeState *self, jint role, NetI2pRouterTransportCryptoX25519KeyFactory *xdh);

FOUNDATION_EXPORT ComSouthernstormNoiseProtocolHandshakeState *new_ComSouthernstormNoiseProtocolHandshakeState_initWithInt_withNetI2pRouterTransportCryptoX25519KeyFactory_(jint role, NetI2pRouterTransportCryptoX25519KeyFactory *xdh) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComSouthernstormNoiseProtocolHandshakeState *create_ComSouthernstormNoiseProtocolHandshakeState_initWithInt_withNetI2pRouterTransportCryptoX25519KeyFactory_(jint role, NetI2pRouterTransportCryptoX25519KeyFactory *xdh);

J2OBJC_TYPE_LITERAL_HEADER(ComSouthernstormNoiseProtocolHandshakeState)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComSouthernstormNoiseProtocolHandshakeState")
