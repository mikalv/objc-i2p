//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/com/southernstorm/noise/protocol/SymmetricState.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComSouthernstormNoiseProtocolSymmetricState")
#ifdef RESTRICT_ComSouthernstormNoiseProtocolSymmetricState
#define INCLUDE_ALL_ComSouthernstormNoiseProtocolSymmetricState 0
#else
#define INCLUDE_ALL_ComSouthernstormNoiseProtocolSymmetricState 1
#endif
#undef RESTRICT_ComSouthernstormNoiseProtocolSymmetricState

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComSouthernstormNoiseProtocolSymmetricState_) && (INCLUDE_ALL_ComSouthernstormNoiseProtocolSymmetricState || defined(INCLUDE_ComSouthernstormNoiseProtocolSymmetricState))
#define ComSouthernstormNoiseProtocolSymmetricState_

#define RESTRICT_ComSouthernstormNoiseProtocolDestroyable 1
#define INCLUDE_ComSouthernstormNoiseProtocolDestroyable 1
#include "com/southernstorm/noise/protocol/Destroyable.h"

@class ComSouthernstormNoiseProtocolCipherStatePair;
@class IOSByteArray;
@protocol ComSouthernstormNoiseProtocolDHState;

@interface ComSouthernstormNoiseProtocolSymmetricState : NSObject < ComSouthernstormNoiseProtocolDestroyable >

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)cipherName
                              withNSString:(NSString *)hashName;

- (jint)decryptAndHashWithByteArray:(IOSByteArray *)ciphertext
                            withInt:(jint)ciphertextOffset
                      withByteArray:(IOSByteArray *)plaintext
                            withInt:(jint)plaintextOffset
                            withInt:(jint)length;

- (void)destroy;

- (jint)encryptAndHashWithByteArray:(IOSByteArray *)plaintext
                            withInt:(jint)plaintextOffset
                      withByteArray:(IOSByteArray *)ciphertext
                            withInt:(jint)ciphertextOffset
                            withInt:(jint)length;

- (IOSByteArray *)getChainingKey;

- (IOSByteArray *)getHandshakeHash;

- (jint)getMACLength;

- (NSString *)getProtocolName;

- (void)mixHashWithByteArray:(IOSByteArray *)data
                     withInt:(jint)offset
                     withInt:(jint)length;

- (void)mixKeyWithByteArray:(IOSByteArray *)data
                    withInt:(jint)offset
                    withInt:(jint)length;

- (void)mixPreSharedKeyWithByteArray:(IOSByteArray *)key;

- (void)mixPublicKeyWithComSouthernstormNoiseProtocolDHState:(id<ComSouthernstormNoiseProtocolDHState>)dh;

- (void)mixPublicKeyIntoCKWithComSouthernstormNoiseProtocolDHState:(id<ComSouthernstormNoiseProtocolDHState>)dh;

- (ComSouthernstormNoiseProtocolCipherStatePair *)split;

- (ComSouthernstormNoiseProtocolCipherStatePair *)splitWithByteArray:(IOSByteArray *)secondaryKey
                                                             withInt:(jint)offset
                                                             withInt:(jint)length;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComSouthernstormNoiseProtocolSymmetricState)

FOUNDATION_EXPORT void ComSouthernstormNoiseProtocolSymmetricState_initWithNSString_withNSString_(ComSouthernstormNoiseProtocolSymmetricState *self, NSString *cipherName, NSString *hashName);

FOUNDATION_EXPORT ComSouthernstormNoiseProtocolSymmetricState *new_ComSouthernstormNoiseProtocolSymmetricState_initWithNSString_withNSString_(NSString *cipherName, NSString *hashName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComSouthernstormNoiseProtocolSymmetricState *create_ComSouthernstormNoiseProtocolSymmetricState_initWithNSString_withNSString_(NSString *cipherName, NSString *hashName);

J2OBJC_TYPE_LITERAL_HEADER(ComSouthernstormNoiseProtocolSymmetricState)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComSouthernstormNoiseProtocolSymmetricState")
