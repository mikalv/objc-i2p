//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/com/southernstorm/noise/protocol/Noise.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/southernstorm/noise/protocol/ChaChaPolyCipherState.h"
#include "com/southernstorm/noise/protocol/CipherState.h"
#include "com/southernstorm/noise/protocol/Noise.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/System.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/security/MessageDigest.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "java/util/Arrays.h"
#include "javax/crypto/BadPaddingException.h"

@implementation ComSouthernstormNoiseProtocolNoise

+ (jint)MAX_PACKET_LEN {
  return ComSouthernstormNoiseProtocolNoise_MAX_PACKET_LEN;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSouthernstormNoiseProtocolNoise_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<ComSouthernstormNoiseProtocolCipherState>)createCipherWithNSString:(NSString *)name {
  return ComSouthernstormNoiseProtocolNoise_createCipherWithNSString_(name);
}

+ (JavaSecurityMessageDigest *)createHashWithNSString:(NSString *)name {
  return ComSouthernstormNoiseProtocolNoise_createHashWithNSString_(name);
}

+ (void)destroyWithByteArray:(IOSByteArray *)array {
  ComSouthernstormNoiseProtocolNoise_destroyWithByteArray_(array);
}

+ (IOSByteArray *)copySubArrayWithByteArray:(IOSByteArray *)data
                                    withInt:(jint)offset
                                    withInt:(jint)length {
  return ComSouthernstormNoiseProtocolNoise_copySubArrayWithByteArray_withInt_withInt_(data, offset, length);
}

+ (void)throwBadTagException {
  ComSouthernstormNoiseProtocolNoise_throwBadTagException();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComSouthernstormNoiseProtocolCipherState;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityMessageDigest;", 0x9, 3, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x8, 4, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x8, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x8, -1, -1, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createCipherWithNSString:);
  methods[2].selector = @selector(createHashWithNSString:);
  methods[3].selector = @selector(destroyWithByteArray:);
  methods[4].selector = @selector(copySubArrayWithByteArray:withInt:withInt:);
  methods[5].selector = @selector(throwBadTagException);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_PACKET_LEN", "I", .constantValue.asInt = ComSouthernstormNoiseProtocolNoise_MAX_PACKET_LEN, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "createCipher", "LNSString;", "LJavaSecurityNoSuchAlgorithmException;", "createHash", "destroy", "[B", "copySubArray", "[BII", "LJavaxCryptoBadPaddingException;" };
  static const J2ObjcClassInfo _ComSouthernstormNoiseProtocolNoise = { "Noise", "com.southernstorm.noise.protocol", ptrTable, methods, fields, 7, 0x11, 6, 1, -1, -1, -1, -1, -1 };
  return &_ComSouthernstormNoiseProtocolNoise;
}

@end

void ComSouthernstormNoiseProtocolNoise_init(ComSouthernstormNoiseProtocolNoise *self) {
  NSObject_init(self);
}

ComSouthernstormNoiseProtocolNoise *new_ComSouthernstormNoiseProtocolNoise_init() {
  J2OBJC_NEW_IMPL(ComSouthernstormNoiseProtocolNoise, init)
}

ComSouthernstormNoiseProtocolNoise *create_ComSouthernstormNoiseProtocolNoise_init() {
  J2OBJC_CREATE_IMPL(ComSouthernstormNoiseProtocolNoise, init)
}

id<ComSouthernstormNoiseProtocolCipherState> ComSouthernstormNoiseProtocolNoise_createCipherWithNSString_(NSString *name) {
  ComSouthernstormNoiseProtocolNoise_initialize();
  if ([((NSString *) nil_chk(name)) isEqual:@"ChaChaPoly"]) {
    return create_ComSouthernstormNoiseProtocolChaChaPolyCipherState_init();
  }
  @throw create_JavaSecurityNoSuchAlgorithmException_initWithNSString_(JreStrcat("$$", @"Unknown Noise cipher algorithm name: ", name));
}

JavaSecurityMessageDigest *ComSouthernstormNoiseProtocolNoise_createHashWithNSString_(NSString *name) {
  ComSouthernstormNoiseProtocolNoise_initialize();
  if ([((NSString *) nil_chk(name)) isEqual:@"SHA256"]) {
    @try {
      return JavaSecurityMessageDigest_getInstanceWithNSString_(@"SHA-256");
    }
    @catch (JavaSecurityNoSuchAlgorithmException *e) {
    }
  }
  @throw create_JavaSecurityNoSuchAlgorithmException_initWithNSString_(JreStrcat("$$", @"Unknown Noise hash algorithm name: ", name));
}

void ComSouthernstormNoiseProtocolNoise_destroyWithByteArray_(IOSByteArray *array) {
  ComSouthernstormNoiseProtocolNoise_initialize();
  JavaUtilArrays_fillWithByteArray_withByte_(array, (jbyte) 0);
}

IOSByteArray *ComSouthernstormNoiseProtocolNoise_copySubArrayWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint length) {
  ComSouthernstormNoiseProtocolNoise_initialize();
  IOSByteArray *copy_ = [IOSByteArray arrayWithLength:length];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, offset, copy_, 0, length);
  return copy_;
}

void ComSouthernstormNoiseProtocolNoise_throwBadTagException() {
  ComSouthernstormNoiseProtocolNoise_initialize();
  @try {
    IOSClass *c = IOSClass_forName_(@"javax.crypto.AEADBadTagException");
    @throw nil_chk((JavaxCryptoBadPaddingException *) cast_chk(([((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(c)) getDeclaredConstructor:[IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]]), [JavaxCryptoBadPaddingException class]));
  }
  @catch (JavaLangClassNotFoundException *e) {
  }
  @catch (JavaLangInstantiationException *e) {
  }
  @catch (JavaLangIllegalAccessException *e) {
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
  }
  @catch (JavaLangNoSuchMethodException *e) {
  }
  @throw create_JavaxCryptoBadPaddingException_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSouthernstormNoiseProtocolNoise)
