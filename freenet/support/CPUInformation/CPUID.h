//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/freenet/support/CPUInformation/CPUID.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_FreenetSupportCPUInformationCPUID")
#ifdef RESTRICT_FreenetSupportCPUInformationCPUID
#define INCLUDE_ALL_FreenetSupportCPUInformationCPUID 0
#else
#define INCLUDE_ALL_FreenetSupportCPUInformationCPUID 1
#endif
#undef RESTRICT_FreenetSupportCPUInformationCPUID

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (FreenetSupportCPUInformationCPUID_) && (INCLUDE_ALL_FreenetSupportCPUInformationCPUID || defined(INCLUDE_FreenetSupportCPUInformationCPUID))
#define FreenetSupportCPUInformationCPUID_

@class IOSObjectArray;
@protocol FreenetSupportCPUInformationCPUInfo;

@interface FreenetSupportCPUInformationCPUID : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (id<FreenetSupportCPUInformationCPUInfo>)getInfo;

+ (jint)getJcpuidVersion;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

#pragma mark Package-Private

+ (jint)getCPUExtendedFamily;

+ (jint)getCPUExtendedModel;

+ (jint)getCPUFamily;

+ (jint)getCPUModel;

+ (NSString *)getCPUModelName;

+ (jint)getCPUStepping;

+ (jint)getCPUType;

+ (NSString *)getCPUVendorID;

+ (jint)getECXCPUFlags;

+ (jint)getEDXCPUFlags;

+ (jint)getExtendedEBXFeatureFlags;

+ (jint)getExtendedECXCPUFlags;

+ (jint)getExtendedECXFeatureFlags;

+ (jint)getExtendedEDXCPUFlags;

@end

J2OBJC_STATIC_INIT(FreenetSupportCPUInformationCPUID)

FOUNDATION_EXPORT void FreenetSupportCPUInformationCPUID_init(FreenetSupportCPUInformationCPUID *self);

FOUNDATION_EXPORT FreenetSupportCPUInformationCPUID *new_FreenetSupportCPUInformationCPUID_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT FreenetSupportCPUInformationCPUID *create_FreenetSupportCPUInformationCPUID_init(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getJcpuidVersion(void);

FOUNDATION_EXPORT NSString *FreenetSupportCPUInformationCPUID_getCPUVendorID(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getCPUFamily(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getCPUModel(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getCPUExtendedModel(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getCPUType(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getCPUExtendedFamily(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getCPUStepping(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getEDXCPUFlags(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getECXCPUFlags(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getExtendedECXCPUFlags(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getExtendedEDXCPUFlags(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getExtendedEBXFeatureFlags(void);

FOUNDATION_EXPORT jint FreenetSupportCPUInformationCPUID_getExtendedECXFeatureFlags(void);

FOUNDATION_EXPORT NSString *FreenetSupportCPUInformationCPUID_getCPUModelName(void);

FOUNDATION_EXPORT id<FreenetSupportCPUInformationCPUInfo> FreenetSupportCPUInformationCPUID_getInfo(void);

FOUNDATION_EXPORT void FreenetSupportCPUInformationCPUID_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(FreenetSupportCPUInformationCPUID)

#endif

#if !defined (FreenetSupportCPUInformationCPUID_CPUIDResult_) && (INCLUDE_ALL_FreenetSupportCPUInformationCPUID || defined(INCLUDE_FreenetSupportCPUInformationCPUID_CPUIDResult))
#define FreenetSupportCPUInformationCPUID_CPUIDResult_

@interface FreenetSupportCPUInformationCPUID_CPUIDResult : NSObject {
 @public
  jint EAX_;
  jint EBX_;
  jint ECX_;
  jint EDX_;
}

#pragma mark Package-Private

- (instancetype __nonnull)initWithInt:(jint)EAX
                              withInt:(jint)EBX
                              withInt:(jint)ECX
                              withInt:(jint)EDX;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(FreenetSupportCPUInformationCPUID_CPUIDResult)

FOUNDATION_EXPORT void FreenetSupportCPUInformationCPUID_CPUIDResult_initWithInt_withInt_withInt_withInt_(FreenetSupportCPUInformationCPUID_CPUIDResult *self, jint EAX, jint EBX, jint ECX, jint EDX);

FOUNDATION_EXPORT FreenetSupportCPUInformationCPUID_CPUIDResult *new_FreenetSupportCPUInformationCPUID_CPUIDResult_initWithInt_withInt_withInt_withInt_(jint EAX, jint EBX, jint ECX, jint EDX) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT FreenetSupportCPUInformationCPUID_CPUIDResult *create_FreenetSupportCPUInformationCPUID_CPUIDResult_initWithInt_withInt_withInt_withInt_(jint EAX, jint EBX, jint ECX, jint EDX);

J2OBJC_TYPE_LITERAL_HEADER(FreenetSupportCPUInformationCPUID_CPUIDResult)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_FreenetSupportCPUInformationCPUID")
