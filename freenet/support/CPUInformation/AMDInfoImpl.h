//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/freenet/support/CPUInformation/AMDInfoImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_FreenetSupportCPUInformationAMDInfoImpl")
#ifdef RESTRICT_FreenetSupportCPUInformationAMDInfoImpl
#define INCLUDE_ALL_FreenetSupportCPUInformationAMDInfoImpl 0
#else
#define INCLUDE_ALL_FreenetSupportCPUInformationAMDInfoImpl 1
#endif
#undef RESTRICT_FreenetSupportCPUInformationAMDInfoImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (FreenetSupportCPUInformationAMDInfoImpl_) && (INCLUDE_ALL_FreenetSupportCPUInformationAMDInfoImpl || defined(INCLUDE_FreenetSupportCPUInformationAMDInfoImpl))
#define FreenetSupportCPUInformationAMDInfoImpl_

#define RESTRICT_FreenetSupportCPUInformationCPUIDCPUInfo 1
#define INCLUDE_FreenetSupportCPUInformationCPUIDCPUInfo 1
#include "freenet/support/CPUInformation/CPUIDCPUInfo.h"

#define RESTRICT_FreenetSupportCPUInformationAMDCPUInfo 1
#define INCLUDE_FreenetSupportCPUInformationAMDCPUInfo 1
#include "freenet/support/CPUInformation/AMDCPUInfo.h"

@interface FreenetSupportCPUInformationAMDInfoImpl : FreenetSupportCPUInformationCPUIDCPUInfo < FreenetSupportCPUInformationAMDCPUInfo >

#pragma mark Public

- (NSString *)getCPUModelString;

- (jboolean)IsAthlon64Compatible;

- (jboolean)IsAthlonCompatible;

- (jboolean)IsBobcatCompatible;

- (jboolean)IsBulldozerCompatible;

- (jboolean)IsExcavatorCompatible;

- (jboolean)IsGeodeCompatible;

- (jboolean)IsJaguarCompatible;

- (jboolean)IsK10Compatible;

- (jboolean)IsK6_2_Compatible;

- (jboolean)IsK6_3_Compatible;

- (jboolean)IsK6Compatible;

- (jboolean)IsPiledriverCompatible;

- (jboolean)IsSteamrollerCompatible;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(FreenetSupportCPUInformationAMDInfoImpl)

FOUNDATION_EXPORT void FreenetSupportCPUInformationAMDInfoImpl_init(FreenetSupportCPUInformationAMDInfoImpl *self);

FOUNDATION_EXPORT FreenetSupportCPUInformationAMDInfoImpl *new_FreenetSupportCPUInformationAMDInfoImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT FreenetSupportCPUInformationAMDInfoImpl *create_FreenetSupportCPUInformationAMDInfoImpl_init(void);

J2OBJC_TYPE_LITERAL_HEADER(FreenetSupportCPUInformationAMDInfoImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_FreenetSupportCPUInformationAMDInfoImpl")
