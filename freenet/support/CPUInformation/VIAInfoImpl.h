//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/freenet/support/CPUInformation/VIAInfoImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_FreenetSupportCPUInformationVIAInfoImpl")
#ifdef RESTRICT_FreenetSupportCPUInformationVIAInfoImpl
#define INCLUDE_ALL_FreenetSupportCPUInformationVIAInfoImpl 0
#else
#define INCLUDE_ALL_FreenetSupportCPUInformationVIAInfoImpl 1
#endif
#undef RESTRICT_FreenetSupportCPUInformationVIAInfoImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (FreenetSupportCPUInformationVIAInfoImpl_) && (INCLUDE_ALL_FreenetSupportCPUInformationVIAInfoImpl || defined(INCLUDE_FreenetSupportCPUInformationVIAInfoImpl))
#define FreenetSupportCPUInformationVIAInfoImpl_

#define RESTRICT_FreenetSupportCPUInformationCPUIDCPUInfo 1
#define INCLUDE_FreenetSupportCPUInformationCPUIDCPUInfo 1
#include "freenet/support/CPUInformation/CPUIDCPUInfo.h"

#define RESTRICT_FreenetSupportCPUInformationVIACPUInfo 1
#define INCLUDE_FreenetSupportCPUInformationVIACPUInfo 1
#include "freenet/support/CPUInformation/VIACPUInfo.h"

@interface FreenetSupportCPUInformationVIAInfoImpl : FreenetSupportCPUInformationCPUIDCPUInfo < FreenetSupportCPUInformationVIACPUInfo >

#pragma mark Public

- (NSString *)getCPUModelString;

- (jboolean)hasX64;

- (jboolean)IsC3Compatible;

- (jboolean)IsNanoCompatible;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_STATIC_INIT(FreenetSupportCPUInformationVIAInfoImpl)

FOUNDATION_EXPORT void FreenetSupportCPUInformationVIAInfoImpl_init(FreenetSupportCPUInformationVIAInfoImpl *self);

FOUNDATION_EXPORT FreenetSupportCPUInformationVIAInfoImpl *new_FreenetSupportCPUInformationVIAInfoImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT FreenetSupportCPUInformationVIAInfoImpl *create_FreenetSupportCPUInformationVIAInfoImpl_init(void);

J2OBJC_TYPE_LITERAL_HEADER(FreenetSupportCPUInformationVIAInfoImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_FreenetSupportCPUInformationVIAInfoImpl")
