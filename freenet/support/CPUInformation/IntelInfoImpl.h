//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/freenet/support/CPUInformation/IntelInfoImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_FreenetSupportCPUInformationIntelInfoImpl")
#ifdef RESTRICT_FreenetSupportCPUInformationIntelInfoImpl
#define INCLUDE_ALL_FreenetSupportCPUInformationIntelInfoImpl 0
#else
#define INCLUDE_ALL_FreenetSupportCPUInformationIntelInfoImpl 1
#endif
#undef RESTRICT_FreenetSupportCPUInformationIntelInfoImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (FreenetSupportCPUInformationIntelInfoImpl_) && (INCLUDE_ALL_FreenetSupportCPUInformationIntelInfoImpl || defined(INCLUDE_FreenetSupportCPUInformationIntelInfoImpl))
#define FreenetSupportCPUInformationIntelInfoImpl_

#define RESTRICT_FreenetSupportCPUInformationCPUIDCPUInfo 1
#define INCLUDE_FreenetSupportCPUInformationCPUIDCPUInfo 1
#include "freenet/support/CPUInformation/CPUIDCPUInfo.h"

#define RESTRICT_FreenetSupportCPUInformationIntelCPUInfo 1
#define INCLUDE_FreenetSupportCPUInformationIntelCPUInfo 1
#include "freenet/support/CPUInformation/IntelCPUInfo.h"

@interface FreenetSupportCPUInformationIntelInfoImpl : FreenetSupportCPUInformationCPUIDCPUInfo < FreenetSupportCPUInformationIntelCPUInfo >

#pragma mark Public

- (NSString *)getCPUModelString;

- (jboolean)IsAtomCompatible;

- (jboolean)IsBroadwellCompatible;

- (jboolean)IsCore2Compatible;

- (jboolean)IsCoreiCompatible;

- (jboolean)IsHaswellCompatible;

- (jboolean)IsIvyCompatible;

- (jboolean)IsPentium2Compatible;

- (jboolean)IsPentium3Compatible;

- (jboolean)IsPentium4Compatible;

- (jboolean)IsPentiumCompatible;

- (jboolean)IsPentiumMCompatible;

- (jboolean)IsPentiumMMXCompatible;

- (jboolean)IsSandyCompatible;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_STATIC_INIT(FreenetSupportCPUInformationIntelInfoImpl)

FOUNDATION_EXPORT void FreenetSupportCPUInformationIntelInfoImpl_init(FreenetSupportCPUInformationIntelInfoImpl *self);

FOUNDATION_EXPORT FreenetSupportCPUInformationIntelInfoImpl *new_FreenetSupportCPUInformationIntelInfoImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT FreenetSupportCPUInformationIntelInfoImpl *create_FreenetSupportCPUInformationIntelInfoImpl_init(void);

J2OBJC_TYPE_LITERAL_HEADER(FreenetSupportCPUInformationIntelInfoImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_FreenetSupportCPUInformationIntelInfoImpl")
