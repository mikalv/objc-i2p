//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/LinkLoopException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingLinkLoopException")
#ifdef RESTRICT_JavaxNamingLinkLoopException
#define INCLUDE_ALL_JavaxNamingLinkLoopException 0
#else
#define INCLUDE_ALL_JavaxNamingLinkLoopException 1
#endif
#undef RESTRICT_JavaxNamingLinkLoopException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingLinkLoopException_) && (INCLUDE_ALL_JavaxNamingLinkLoopException || defined(INCLUDE_JavaxNamingLinkLoopException))
#define JavaxNamingLinkLoopException_

#define RESTRICT_JavaxNamingLinkException 1
#define INCLUDE_JavaxNamingLinkException 1
#include "javax/naming/LinkException.h"

@interface JavaxNamingLinkLoopException : JavaxNamingLinkException

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)explanation;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingLinkLoopException)

FOUNDATION_EXPORT void JavaxNamingLinkLoopException_initWithNSString_(JavaxNamingLinkLoopException *self, NSString *explanation);

FOUNDATION_EXPORT JavaxNamingLinkLoopException *new_JavaxNamingLinkLoopException_initWithNSString_(NSString *explanation) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLinkLoopException *create_JavaxNamingLinkLoopException_initWithNSString_(NSString *explanation);

FOUNDATION_EXPORT void JavaxNamingLinkLoopException_init(JavaxNamingLinkLoopException *self);

FOUNDATION_EXPORT JavaxNamingLinkLoopException *new_JavaxNamingLinkLoopException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLinkLoopException *create_JavaxNamingLinkLoopException_init(void);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingLinkLoopException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingLinkLoopException")
