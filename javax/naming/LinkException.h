//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/LinkException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingLinkException")
#ifdef RESTRICT_JavaxNamingLinkException
#define INCLUDE_ALL_JavaxNamingLinkException 0
#else
#define INCLUDE_ALL_JavaxNamingLinkException 1
#endif
#undef RESTRICT_JavaxNamingLinkException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingLinkException_) && (INCLUDE_ALL_JavaxNamingLinkException || defined(INCLUDE_JavaxNamingLinkException))
#define JavaxNamingLinkException_

#define RESTRICT_JavaxNamingNamingException 1
#define INCLUDE_JavaxNamingNamingException 1
#include "javax/naming/NamingException.h"

@protocol JavaxNamingName;

@interface JavaxNamingLinkException : JavaxNamingNamingException {
 @public
  id<JavaxNamingName> linkResolvedName_;
  id linkResolvedObj_;
  id<JavaxNamingName> linkRemainingName_;
  NSString *linkExplanation_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)explanation;

- (NSString *)getLinkExplanation;

- (id<JavaxNamingName>)getLinkRemainingName;

- (id<JavaxNamingName>)getLinkResolvedName;

- (id)getLinkResolvedObj;

- (void)setLinkExplanationWithNSString:(NSString *)msg;

- (void)setLinkRemainingNameWithJavaxNamingName:(id<JavaxNamingName>)name;

- (void)setLinkResolvedNameWithJavaxNamingName:(id<JavaxNamingName>)name;

- (void)setLinkResolvedObjWithId:(id)obj;

- (NSString *)description;

- (NSString *)toStringWithBoolean:(jboolean)detail;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingLinkException)

J2OBJC_FIELD_SETTER(JavaxNamingLinkException, linkResolvedName_, id<JavaxNamingName>)
J2OBJC_FIELD_SETTER(JavaxNamingLinkException, linkResolvedObj_, id)
J2OBJC_FIELD_SETTER(JavaxNamingLinkException, linkRemainingName_, id<JavaxNamingName>)
J2OBJC_FIELD_SETTER(JavaxNamingLinkException, linkExplanation_, NSString *)

FOUNDATION_EXPORT void JavaxNamingLinkException_initWithNSString_(JavaxNamingLinkException *self, NSString *explanation);

FOUNDATION_EXPORT JavaxNamingLinkException *new_JavaxNamingLinkException_initWithNSString_(NSString *explanation) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLinkException *create_JavaxNamingLinkException_initWithNSString_(NSString *explanation);

FOUNDATION_EXPORT void JavaxNamingLinkException_init(JavaxNamingLinkException *self);

FOUNDATION_EXPORT JavaxNamingLinkException *new_JavaxNamingLinkException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLinkException *create_JavaxNamingLinkException_init(void);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingLinkException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingLinkException")
