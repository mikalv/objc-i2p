//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/StringRefAddr.java
//

#include "J2ObjC_source.h"
#include "javax/naming/RefAddr.h"
#include "javax/naming/StringRefAddr.h"

@interface JavaxNamingStringRefAddr () {
 @public
  NSString *contents_;
}

@end

J2OBJC_FIELD_SETTER(JavaxNamingStringRefAddr, contents_, NSString *)

inline jlong JavaxNamingStringRefAddr_get_serialVersionUID(void);
#define JavaxNamingStringRefAddr_serialVersionUID -8913762495138505527LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingStringRefAddr, serialVersionUID, jlong)

@implementation JavaxNamingStringRefAddr

- (instancetype)initWithNSString:(NSString *)addrType
                    withNSString:(NSString *)addr {
  JavaxNamingStringRefAddr_initWithNSString_withNSString_(self, addrType, addr);
  return self;
}

- (id)getContent {
  return contents_;
}

- (void)dealloc {
  RELEASE_(contents_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(getContent);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "contents_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = JavaxNamingStringRefAddr_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;" };
  static const J2ObjcClassInfo _JavaxNamingStringRefAddr = { "StringRefAddr", "javax.naming", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, -1, -1, -1, -1 };
  return &_JavaxNamingStringRefAddr;
}

@end

void JavaxNamingStringRefAddr_initWithNSString_withNSString_(JavaxNamingStringRefAddr *self, NSString *addrType, NSString *addr) {
  JavaxNamingRefAddr_initWithNSString_(self, addrType);
  JreStrongAssign(&self->contents_, addr);
}

JavaxNamingStringRefAddr *new_JavaxNamingStringRefAddr_initWithNSString_withNSString_(NSString *addrType, NSString *addr) {
  J2OBJC_NEW_IMPL(JavaxNamingStringRefAddr, initWithNSString_withNSString_, addrType, addr)
}

JavaxNamingStringRefAddr *create_JavaxNamingStringRefAddr_initWithNSString_withNSString_(NSString *addrType, NSString *addr) {
  J2OBJC_CREATE_IMPL(JavaxNamingStringRefAddr, initWithNSString_withNSString_, addrType, addr)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaxNamingStringRefAddr)
