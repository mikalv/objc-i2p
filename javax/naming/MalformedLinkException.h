//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/MalformedLinkException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingMalformedLinkException")
#ifdef RESTRICT_JavaxNamingMalformedLinkException
#define INCLUDE_ALL_JavaxNamingMalformedLinkException 0
#else
#define INCLUDE_ALL_JavaxNamingMalformedLinkException 1
#endif
#undef RESTRICT_JavaxNamingMalformedLinkException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingMalformedLinkException_) && (INCLUDE_ALL_JavaxNamingMalformedLinkException || defined(INCLUDE_JavaxNamingMalformedLinkException))
#define JavaxNamingMalformedLinkException_

#define RESTRICT_JavaxNamingLinkException 1
#define INCLUDE_JavaxNamingLinkException 1
#include "javax/naming/LinkException.h"

@interface JavaxNamingMalformedLinkException : JavaxNamingLinkException

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)explanation;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingMalformedLinkException)

FOUNDATION_EXPORT void JavaxNamingMalformedLinkException_initWithNSString_(JavaxNamingMalformedLinkException *self, NSString *explanation);

FOUNDATION_EXPORT JavaxNamingMalformedLinkException *new_JavaxNamingMalformedLinkException_initWithNSString_(NSString *explanation) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingMalformedLinkException *create_JavaxNamingMalformedLinkException_initWithNSString_(NSString *explanation);

FOUNDATION_EXPORT void JavaxNamingMalformedLinkException_init(JavaxNamingMalformedLinkException *self);

FOUNDATION_EXPORT JavaxNamingMalformedLinkException *new_JavaxNamingMalformedLinkException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingMalformedLinkException *create_JavaxNamingMalformedLinkException_init(void);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingMalformedLinkException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingMalformedLinkException")
