//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/event/EventContext.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingEventEventContext")
#ifdef RESTRICT_JavaxNamingEventEventContext
#define INCLUDE_ALL_JavaxNamingEventEventContext 0
#else
#define INCLUDE_ALL_JavaxNamingEventEventContext 1
#endif
#undef RESTRICT_JavaxNamingEventEventContext

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingEventEventContext_) && (INCLUDE_ALL_JavaxNamingEventEventContext || defined(INCLUDE_JavaxNamingEventEventContext))
#define JavaxNamingEventEventContext_

#define RESTRICT_JavaxNamingContext 1
#define INCLUDE_JavaxNamingContext 1
#include "javax/naming/Context.h"

@protocol JavaxNamingEventNamingListener;
@protocol JavaxNamingName;

@protocol JavaxNamingEventEventContext < JavaxNamingContext, JavaObject >

- (void)addNamingListenerWithJavaxNamingName:(id<JavaxNamingName>)target
                                     withInt:(jint)scope
          withJavaxNamingEventNamingListener:(id<JavaxNamingEventNamingListener>)l;

- (void)addNamingListenerWithNSString:(NSString *)target
                              withInt:(jint)scope
   withJavaxNamingEventNamingListener:(id<JavaxNamingEventNamingListener>)l;

- (void)removeNamingListenerWithJavaxNamingEventNamingListener:(id<JavaxNamingEventNamingListener>)l;

- (jboolean)targetMustExist;

@end

@interface JavaxNamingEventEventContext : NSObject
@property (readonly, class) jint OBJECT_SCOPE NS_SWIFT_NAME(OBJECT_SCOPE);
@property (readonly, class) jint ONELEVEL_SCOPE NS_SWIFT_NAME(ONELEVEL_SCOPE);
@property (readonly, class) jint SUBTREE_SCOPE NS_SWIFT_NAME(SUBTREE_SCOPE);

+ (jint)OBJECT_SCOPE;

+ (jint)ONELEVEL_SCOPE;

+ (jint)SUBTREE_SCOPE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingEventEventContext)

inline jint JavaxNamingEventEventContext_get_OBJECT_SCOPE(void);
#define JavaxNamingEventEventContext_OBJECT_SCOPE 0
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingEventEventContext, OBJECT_SCOPE, jint)

inline jint JavaxNamingEventEventContext_get_ONELEVEL_SCOPE(void);
#define JavaxNamingEventEventContext_ONELEVEL_SCOPE 1
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingEventEventContext, ONELEVEL_SCOPE, jint)

inline jint JavaxNamingEventEventContext_get_SUBTREE_SCOPE(void);
#define JavaxNamingEventEventContext_SUBTREE_SCOPE 2
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingEventEventContext, SUBTREE_SCOPE, jint)

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingEventEventContext)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingEventEventContext")
