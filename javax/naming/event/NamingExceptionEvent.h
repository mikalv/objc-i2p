//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/event/NamingExceptionEvent.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingEventNamingExceptionEvent")
#ifdef RESTRICT_JavaxNamingEventNamingExceptionEvent
#define INCLUDE_ALL_JavaxNamingEventNamingExceptionEvent 0
#else
#define INCLUDE_ALL_JavaxNamingEventNamingExceptionEvent 1
#endif
#undef RESTRICT_JavaxNamingEventNamingExceptionEvent

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingEventNamingExceptionEvent_) && (INCLUDE_ALL_JavaxNamingEventNamingExceptionEvent || defined(INCLUDE_JavaxNamingEventNamingExceptionEvent))
#define JavaxNamingEventNamingExceptionEvent_

#define RESTRICT_JavaUtilEventObject 1
#define INCLUDE_JavaUtilEventObject 1
#include "java/util/EventObject.h"

@class JavaxNamingNamingException;
@protocol JavaxNamingEventEventContext;
@protocol JavaxNamingEventNamingListener;

@interface JavaxNamingEventNamingExceptionEvent : JavaUtilEventObject

#pragma mark Public

- (instancetype __nonnull)initWithJavaxNamingEventEventContext:(id<JavaxNamingEventEventContext>)source
                                withJavaxNamingNamingException:(JavaxNamingNamingException *)exc;

- (void)dispatchWithJavaxNamingEventNamingListener:(id<JavaxNamingEventNamingListener>)listener;

- (id<JavaxNamingEventEventContext>)getEventContext;

- (JavaxNamingNamingException *)getException;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingEventNamingExceptionEvent)

FOUNDATION_EXPORT void JavaxNamingEventNamingExceptionEvent_initWithJavaxNamingEventEventContext_withJavaxNamingNamingException_(JavaxNamingEventNamingExceptionEvent *self, id<JavaxNamingEventEventContext> source, JavaxNamingNamingException *exc);

FOUNDATION_EXPORT JavaxNamingEventNamingExceptionEvent *new_JavaxNamingEventNamingExceptionEvent_initWithJavaxNamingEventEventContext_withJavaxNamingNamingException_(id<JavaxNamingEventEventContext> source, JavaxNamingNamingException *exc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingEventNamingExceptionEvent *create_JavaxNamingEventNamingExceptionEvent_initWithJavaxNamingEventEventContext_withJavaxNamingNamingException_(id<JavaxNamingEventEventContext> source, JavaxNamingNamingException *exc);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingEventNamingExceptionEvent)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingEventNamingExceptionEvent")
