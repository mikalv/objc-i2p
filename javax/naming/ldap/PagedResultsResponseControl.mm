//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/ldap/PagedResultsResponseControl.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/sun/jndi/ldap/Ber.h"
#include "com/sun/jndi/ldap/BerDecoder.h"
#include "javax/naming/ldap/BasicControl.h"
#include "javax/naming/ldap/PagedResultsResponseControl.h"

@interface JavaxNamingLdapPagedResultsResponseControl () {
 @public
  jint resultSize_;
  IOSByteArray *cookie_;
}

@end

J2OBJC_FIELD_SETTER(JavaxNamingLdapPagedResultsResponseControl, cookie_, IOSByteArray *)

inline jlong JavaxNamingLdapPagedResultsResponseControl_get_serialVersionUID(void);
#define JavaxNamingLdapPagedResultsResponseControl_serialVersionUID -8819778744844514666LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingLdapPagedResultsResponseControl, serialVersionUID, jlong)

NSString *JavaxNamingLdapPagedResultsResponseControl_OID = @"1.2.840.113556.1.4.319";

@implementation JavaxNamingLdapPagedResultsResponseControl

+ (NSString *)OID {
  return JavaxNamingLdapPagedResultsResponseControl_OID;
}

- (instancetype)initWithNSString:(NSString *)id_
                     withBoolean:(jboolean)criticality
                   withByteArray:(IOSByteArray *)value {
  JavaxNamingLdapPagedResultsResponseControl_initWithNSString_withBoolean_withByteArray_(self, id_, criticality, value);
  return self;
}

- (jint)getResultSize {
  return resultSize_;
}

- (IOSByteArray *)getCookie {
  if (((IOSByteArray *) nil_chk(cookie_))->size_ == 0) {
    return nil;
  }
  else {
    return cookie_;
  }
}

- (void)dealloc {
  RELEASE_(cookie_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withBoolean:withByteArray:);
  methods[1].selector = @selector(getResultSize);
  methods[2].selector = @selector(getCookie);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "OID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = JavaxNamingLdapPagedResultsResponseControl_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "resultSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "cookie_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;Z[B", "LJavaIoIOException;", &JavaxNamingLdapPagedResultsResponseControl_OID };
  static const J2ObjcClassInfo _JavaxNamingLdapPagedResultsResponseControl = { "PagedResultsResponseControl", "javax.naming.ldap", ptrTable, methods, fields, 7, 0x11, 3, 4, -1, -1, -1, -1, -1 };
  return &_JavaxNamingLdapPagedResultsResponseControl;
}

@end

void JavaxNamingLdapPagedResultsResponseControl_initWithNSString_withBoolean_withByteArray_(JavaxNamingLdapPagedResultsResponseControl *self, NSString *id_, jboolean criticality, IOSByteArray *value) {
  JavaxNamingLdapBasicControl_initWithNSString_withBoolean_withByteArray_(self, id_, criticality, value);
  ComSunJndiLdapBerDecoder *ber = create_ComSunJndiLdapBerDecoder_initWithByteArray_withInt_withInt_(value, 0, ((IOSByteArray *) nil_chk(value))->size_);
  [ber parseSeqWithIntArray:nil];
  self->resultSize_ = [ber parseInt];
  JreStrongAssign(&self->cookie_, [ber parseOctetStringWithInt:ComSunJndiLdapBer_ASN_OCTET_STR withIntArray:nil]);
}

JavaxNamingLdapPagedResultsResponseControl *new_JavaxNamingLdapPagedResultsResponseControl_initWithNSString_withBoolean_withByteArray_(NSString *id_, jboolean criticality, IOSByteArray *value) {
  J2OBJC_NEW_IMPL(JavaxNamingLdapPagedResultsResponseControl, initWithNSString_withBoolean_withByteArray_, id_, criticality, value)
}

JavaxNamingLdapPagedResultsResponseControl *create_JavaxNamingLdapPagedResultsResponseControl_initWithNSString_withBoolean_withByteArray_(NSString *id_, jboolean criticality, IOSByteArray *value) {
  J2OBJC_CREATE_IMPL(JavaxNamingLdapPagedResultsResponseControl, initWithNSString_withBoolean_withByteArray_, id_, criticality, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaxNamingLdapPagedResultsResponseControl)
