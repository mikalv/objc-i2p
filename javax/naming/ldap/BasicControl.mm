//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/ldap/BasicControl.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "javax/naming/ldap/BasicControl.h"

inline jlong JavaxNamingLdapBasicControl_get_serialVersionUID(void);
#define JavaxNamingLdapBasicControl_serialVersionUID -4233907508771791687LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingLdapBasicControl, serialVersionUID, jlong)

@implementation JavaxNamingLdapBasicControl

- (instancetype)initWithNSString:(NSString *)id_ {
  JavaxNamingLdapBasicControl_initWithNSString_(self, id_);
  return self;
}

- (instancetype)initWithNSString:(NSString *)id_
                     withBoolean:(jboolean)criticality
                   withByteArray:(IOSByteArray *)value {
  JavaxNamingLdapBasicControl_initWithNSString_withBoolean_withByteArray_(self, id_, criticality, value);
  return self;
}

- (NSString *)getID {
  return id__;
}

- (jboolean)isCritical {
  return criticality_;
}

- (IOSByteArray *)getEncodedValue {
  return value_;
}

- (void)dealloc {
  RELEASE_(id__);
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withBoolean:withByteArray:);
  methods[2].selector = @selector(getID);
  methods[3].selector = @selector(isCritical);
  methods[4].selector = @selector(getEncodedValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "LNSString;", .constantValue.asLong = 0, 0x4, 2, -1, -1, -1 },
    { "criticality_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "value_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = JavaxNamingLdapBasicControl_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;Z[B", "id" };
  static const J2ObjcClassInfo _JavaxNamingLdapBasicControl = { "BasicControl", "javax.naming.ldap", ptrTable, methods, fields, 7, 0x1, 5, 4, -1, -1, -1, -1, -1 };
  return &_JavaxNamingLdapBasicControl;
}

@end

void JavaxNamingLdapBasicControl_initWithNSString_(JavaxNamingLdapBasicControl *self, NSString *id_) {
  NSObject_init(self);
  self->criticality_ = false;
  JreStrongAssign(&self->value_, nil);
  JreStrongAssign(&self->id__, id_);
}

JavaxNamingLdapBasicControl *new_JavaxNamingLdapBasicControl_initWithNSString_(NSString *id_) {
  J2OBJC_NEW_IMPL(JavaxNamingLdapBasicControl, initWithNSString_, id_)
}

JavaxNamingLdapBasicControl *create_JavaxNamingLdapBasicControl_initWithNSString_(NSString *id_) {
  J2OBJC_CREATE_IMPL(JavaxNamingLdapBasicControl, initWithNSString_, id_)
}

void JavaxNamingLdapBasicControl_initWithNSString_withBoolean_withByteArray_(JavaxNamingLdapBasicControl *self, NSString *id_, jboolean criticality, IOSByteArray *value) {
  NSObject_init(self);
  self->criticality_ = false;
  JreStrongAssign(&self->value_, nil);
  JreStrongAssign(&self->id__, id_);
  self->criticality_ = criticality;
  JreStrongAssign(&self->value_, value);
}

JavaxNamingLdapBasicControl *new_JavaxNamingLdapBasicControl_initWithNSString_withBoolean_withByteArray_(NSString *id_, jboolean criticality, IOSByteArray *value) {
  J2OBJC_NEW_IMPL(JavaxNamingLdapBasicControl, initWithNSString_withBoolean_withByteArray_, id_, criticality, value)
}

JavaxNamingLdapBasicControl *create_JavaxNamingLdapBasicControl_initWithNSString_withBoolean_withByteArray_(NSString *id_, jboolean criticality, IOSByteArray *value) {
  J2OBJC_CREATE_IMPL(JavaxNamingLdapBasicControl, initWithNSString_withBoolean_withByteArray_, id_, criticality, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaxNamingLdapBasicControl)
