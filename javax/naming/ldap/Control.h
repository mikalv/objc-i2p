//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/ldap/Control.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingLdapControl")
#ifdef RESTRICT_JavaxNamingLdapControl
#define INCLUDE_ALL_JavaxNamingLdapControl 0
#else
#define INCLUDE_ALL_JavaxNamingLdapControl 1
#endif
#undef RESTRICT_JavaxNamingLdapControl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingLdapControl_) && (INCLUDE_ALL_JavaxNamingLdapControl || defined(INCLUDE_JavaxNamingLdapControl))
#define JavaxNamingLdapControl_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSByteArray;

@protocol JavaxNamingLdapControl < JavaIoSerializable, JavaObject >

- (NSString *)getID;

- (jboolean)isCritical;

- (IOSByteArray *)getEncodedValue;

@end

@interface JavaxNamingLdapControl : NSObject
@property (readonly, class) jboolean CRITICAL NS_SWIFT_NAME(CRITICAL);
@property (readonly, class) jboolean NONCRITICAL NS_SWIFT_NAME(NONCRITICAL);

+ (jboolean)CRITICAL;

+ (jboolean)NONCRITICAL;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingLdapControl)

inline jboolean JavaxNamingLdapControl_get_CRITICAL(void);
#define JavaxNamingLdapControl_CRITICAL true
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingLdapControl, CRITICAL, jboolean)

inline jboolean JavaxNamingLdapControl_get_NONCRITICAL(void);
#define JavaxNamingLdapControl_NONCRITICAL false
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingLdapControl, NONCRITICAL, jboolean)

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingLdapControl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingLdapControl")
