//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/ldap/LdapContext.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingLdapLdapContext")
#ifdef RESTRICT_JavaxNamingLdapLdapContext
#define INCLUDE_ALL_JavaxNamingLdapLdapContext 0
#else
#define INCLUDE_ALL_JavaxNamingLdapLdapContext 1
#endif
#undef RESTRICT_JavaxNamingLdapLdapContext

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingLdapLdapContext_) && (INCLUDE_ALL_JavaxNamingLdapLdapContext || defined(INCLUDE_JavaxNamingLdapLdapContext))
#define JavaxNamingLdapLdapContext_

#define RESTRICT_JavaxNamingDirectoryDirContext 1
#define INCLUDE_JavaxNamingDirectoryDirContext 1
#include "javax/naming/directory/DirContext.h"

@class IOSObjectArray;
@protocol JavaxNamingLdapExtendedRequest;
@protocol JavaxNamingLdapExtendedResponse;

@protocol JavaxNamingLdapLdapContext < JavaxNamingDirectoryDirContext, JavaObject >

- (id<JavaxNamingLdapExtendedResponse>)extendedOperationWithJavaxNamingLdapExtendedRequest:(id<JavaxNamingLdapExtendedRequest>)request;

- (id<JavaxNamingLdapLdapContext>)newInstanceWithJavaxNamingLdapControlArray:(IOSObjectArray *)requestControls OBJC_METHOD_FAMILY_NONE;

- (void)reconnectWithJavaxNamingLdapControlArray:(IOSObjectArray *)connCtls;

- (IOSObjectArray *)getConnectControls;

- (void)setRequestControlsWithJavaxNamingLdapControlArray:(IOSObjectArray *)requestControls;

- (IOSObjectArray *)getRequestControls;

- (IOSObjectArray *)getResponseControls;

@end

@interface JavaxNamingLdapLdapContext : NSObject
@property (readonly, copy, class) NSString *CONTROL_FACTORIES NS_SWIFT_NAME(CONTROL_FACTORIES);

+ (NSString *)CONTROL_FACTORIES;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingLdapLdapContext)

inline NSString *JavaxNamingLdapLdapContext_get_CONTROL_FACTORIES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *JavaxNamingLdapLdapContext_CONTROL_FACTORIES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxNamingLdapLdapContext, CONTROL_FACTORIES, NSString *)

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingLdapLdapContext)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingLdapLdapContext")
