//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/ldap/ManageReferralControl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingLdapManageReferralControl")
#ifdef RESTRICT_JavaxNamingLdapManageReferralControl
#define INCLUDE_ALL_JavaxNamingLdapManageReferralControl 0
#else
#define INCLUDE_ALL_JavaxNamingLdapManageReferralControl 1
#endif
#undef RESTRICT_JavaxNamingLdapManageReferralControl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingLdapManageReferralControl_) && (INCLUDE_ALL_JavaxNamingLdapManageReferralControl || defined(INCLUDE_JavaxNamingLdapManageReferralControl))
#define JavaxNamingLdapManageReferralControl_

#define RESTRICT_JavaxNamingLdapBasicControl 1
#define INCLUDE_JavaxNamingLdapBasicControl 1
#include "javax/naming/ldap/BasicControl.h"

@class IOSByteArray;

@interface JavaxNamingLdapManageReferralControl : JavaxNamingLdapBasicControl
@property (readonly, copy, class) NSString *OID NS_SWIFT_NAME(OID);

+ (NSString *)OID;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithBoolean:(jboolean)criticality;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                               withBoolean:(jboolean)arg1
                             withByteArray:(IOSByteArray *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingLdapManageReferralControl)

inline NSString *JavaxNamingLdapManageReferralControl_get_OID(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *JavaxNamingLdapManageReferralControl_OID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxNamingLdapManageReferralControl, OID, NSString *)

FOUNDATION_EXPORT void JavaxNamingLdapManageReferralControl_init(JavaxNamingLdapManageReferralControl *self);

FOUNDATION_EXPORT JavaxNamingLdapManageReferralControl *new_JavaxNamingLdapManageReferralControl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLdapManageReferralControl *create_JavaxNamingLdapManageReferralControl_init(void);

FOUNDATION_EXPORT void JavaxNamingLdapManageReferralControl_initWithBoolean_(JavaxNamingLdapManageReferralControl *self, jboolean criticality);

FOUNDATION_EXPORT JavaxNamingLdapManageReferralControl *new_JavaxNamingLdapManageReferralControl_initWithBoolean_(jboolean criticality) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLdapManageReferralControl *create_JavaxNamingLdapManageReferralControl_initWithBoolean_(jboolean criticality);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingLdapManageReferralControl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingLdapManageReferralControl")
