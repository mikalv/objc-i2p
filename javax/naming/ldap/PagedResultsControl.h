//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/ldap/PagedResultsControl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingLdapPagedResultsControl")
#ifdef RESTRICT_JavaxNamingLdapPagedResultsControl
#define INCLUDE_ALL_JavaxNamingLdapPagedResultsControl 0
#else
#define INCLUDE_ALL_JavaxNamingLdapPagedResultsControl 1
#endif
#undef RESTRICT_JavaxNamingLdapPagedResultsControl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingLdapPagedResultsControl_) && (INCLUDE_ALL_JavaxNamingLdapPagedResultsControl || defined(INCLUDE_JavaxNamingLdapPagedResultsControl))
#define JavaxNamingLdapPagedResultsControl_

#define RESTRICT_JavaxNamingLdapBasicControl 1
#define INCLUDE_JavaxNamingLdapBasicControl 1
#include "javax/naming/ldap/BasicControl.h"

@class IOSByteArray;

@interface JavaxNamingLdapPagedResultsControl : JavaxNamingLdapBasicControl
@property (readonly, copy, class) NSString *OID NS_SWIFT_NAME(OID);

+ (NSString *)OID;

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)pageSize
                          withBoolean:(jboolean)criticality;

- (instancetype __nonnull)initWithInt:(jint)pageSize
                        withByteArray:(IOSByteArray *)cookie
                          withBoolean:(jboolean)criticality;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                               withBoolean:(jboolean)arg1
                             withByteArray:(IOSByteArray *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(JavaxNamingLdapPagedResultsControl)

inline NSString *JavaxNamingLdapPagedResultsControl_get_OID(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *JavaxNamingLdapPagedResultsControl_OID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxNamingLdapPagedResultsControl, OID, NSString *)

FOUNDATION_EXPORT void JavaxNamingLdapPagedResultsControl_initWithInt_withBoolean_(JavaxNamingLdapPagedResultsControl *self, jint pageSize, jboolean criticality);

FOUNDATION_EXPORT JavaxNamingLdapPagedResultsControl *new_JavaxNamingLdapPagedResultsControl_initWithInt_withBoolean_(jint pageSize, jboolean criticality) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLdapPagedResultsControl *create_JavaxNamingLdapPagedResultsControl_initWithInt_withBoolean_(jint pageSize, jboolean criticality);

FOUNDATION_EXPORT void JavaxNamingLdapPagedResultsControl_initWithInt_withByteArray_withBoolean_(JavaxNamingLdapPagedResultsControl *self, jint pageSize, IOSByteArray *cookie, jboolean criticality);

FOUNDATION_EXPORT JavaxNamingLdapPagedResultsControl *new_JavaxNamingLdapPagedResultsControl_initWithInt_withByteArray_withBoolean_(jint pageSize, IOSByteArray *cookie, jboolean criticality) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLdapPagedResultsControl *create_JavaxNamingLdapPagedResultsControl_initWithInt_withByteArray_withBoolean_(jint pageSize, IOSByteArray *cookie, jboolean criticality);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingLdapPagedResultsControl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingLdapPagedResultsControl")
