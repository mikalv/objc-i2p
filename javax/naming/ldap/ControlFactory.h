//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/ldap/ControlFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingLdapControlFactory")
#ifdef RESTRICT_JavaxNamingLdapControlFactory
#define INCLUDE_ALL_JavaxNamingLdapControlFactory 0
#else
#define INCLUDE_ALL_JavaxNamingLdapControlFactory 1
#endif
#undef RESTRICT_JavaxNamingLdapControlFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingLdapControlFactory_) && (INCLUDE_ALL_JavaxNamingLdapControlFactory || defined(INCLUDE_JavaxNamingLdapControlFactory))
#define JavaxNamingLdapControlFactory_

@class JavaUtilHashtable;
@protocol JavaxNamingContext;
@protocol JavaxNamingLdapControl;

@interface JavaxNamingLdapControlFactory : NSObject

#pragma mark Public

- (id<JavaxNamingLdapControl>)getControlInstanceWithJavaxNamingLdapControl:(id<JavaxNamingLdapControl>)ctl;

+ (id<JavaxNamingLdapControl>)getControlInstanceWithJavaxNamingLdapControl:(id<JavaxNamingLdapControl>)ctl
                                                    withJavaxNamingContext:(id<JavaxNamingContext>)ctx
                                                     withJavaUtilHashtable:(JavaUtilHashtable *)env;

#pragma mark Protected

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingLdapControlFactory)

FOUNDATION_EXPORT void JavaxNamingLdapControlFactory_init(JavaxNamingLdapControlFactory *self);

FOUNDATION_EXPORT id<JavaxNamingLdapControl> JavaxNamingLdapControlFactory_getControlInstanceWithJavaxNamingLdapControl_withJavaxNamingContext_withJavaUtilHashtable_(id<JavaxNamingLdapControl> ctl, id<JavaxNamingContext> ctx, JavaUtilHashtable *env);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingLdapControlFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingLdapControlFactory")
