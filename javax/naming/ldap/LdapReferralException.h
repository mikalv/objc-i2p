//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/ldap/LdapReferralException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingLdapLdapReferralException")
#ifdef RESTRICT_JavaxNamingLdapLdapReferralException
#define INCLUDE_ALL_JavaxNamingLdapLdapReferralException 0
#else
#define INCLUDE_ALL_JavaxNamingLdapLdapReferralException 1
#endif
#undef RESTRICT_JavaxNamingLdapLdapReferralException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingLdapLdapReferralException_) && (INCLUDE_ALL_JavaxNamingLdapLdapReferralException || defined(INCLUDE_JavaxNamingLdapLdapReferralException))
#define JavaxNamingLdapLdapReferralException_

#define RESTRICT_JavaxNamingReferralException 1
#define INCLUDE_JavaxNamingReferralException 1
#include "javax/naming/ReferralException.h"

@class IOSObjectArray;
@class JavaUtilHashtable;
@protocol JavaxNamingContext;

@interface JavaxNamingLdapLdapReferralException : JavaxNamingReferralException

#pragma mark Public

- (id<JavaxNamingContext>)getReferralContext;

- (id<JavaxNamingContext>)getReferralContextWithJavaUtilHashtable:(JavaUtilHashtable *)env;

- (id<JavaxNamingContext>)getReferralContextWithJavaUtilHashtable:(JavaUtilHashtable *)env
                                  withJavaxNamingLdapControlArray:(IOSObjectArray *)reqCtls;

#pragma mark Protected

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)explanation;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingLdapLdapReferralException)

FOUNDATION_EXPORT void JavaxNamingLdapLdapReferralException_initWithNSString_(JavaxNamingLdapLdapReferralException *self, NSString *explanation);

FOUNDATION_EXPORT void JavaxNamingLdapLdapReferralException_init(JavaxNamingLdapLdapReferralException *self);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingLdapLdapReferralException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingLdapLdapReferralException")
