//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/ldap/BasicControl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingLdapBasicControl")
#ifdef RESTRICT_JavaxNamingLdapBasicControl
#define INCLUDE_ALL_JavaxNamingLdapBasicControl 0
#else
#define INCLUDE_ALL_JavaxNamingLdapBasicControl 1
#endif
#undef RESTRICT_JavaxNamingLdapBasicControl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingLdapBasicControl_) && (INCLUDE_ALL_JavaxNamingLdapBasicControl || defined(INCLUDE_JavaxNamingLdapBasicControl))
#define JavaxNamingLdapBasicControl_

#define RESTRICT_JavaxNamingLdapControl 1
#define INCLUDE_JavaxNamingLdapControl 1
#include "javax/naming/ldap/Control.h"

@class IOSByteArray;

@interface JavaxNamingLdapBasicControl : NSObject < JavaxNamingLdapControl > {
 @public
  NSString *id__;
  jboolean criticality_;
  IOSByteArray *value_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)id_;

- (instancetype __nonnull)initWithNSString:(NSString *)id_
                               withBoolean:(jboolean)criticality
                             withByteArray:(IOSByteArray *)value;

- (IOSByteArray *)getEncodedValue;

- (NSString *)getID;

- (jboolean)isCritical;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingLdapBasicControl)

J2OBJC_FIELD_SETTER(JavaxNamingLdapBasicControl, id__, NSString *)
J2OBJC_FIELD_SETTER(JavaxNamingLdapBasicControl, value_, IOSByteArray *)

FOUNDATION_EXPORT void JavaxNamingLdapBasicControl_initWithNSString_(JavaxNamingLdapBasicControl *self, NSString *id_);

FOUNDATION_EXPORT JavaxNamingLdapBasicControl *new_JavaxNamingLdapBasicControl_initWithNSString_(NSString *id_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLdapBasicControl *create_JavaxNamingLdapBasicControl_initWithNSString_(NSString *id_);

FOUNDATION_EXPORT void JavaxNamingLdapBasicControl_initWithNSString_withBoolean_withByteArray_(JavaxNamingLdapBasicControl *self, NSString *id_, jboolean criticality, IOSByteArray *value);

FOUNDATION_EXPORT JavaxNamingLdapBasicControl *new_JavaxNamingLdapBasicControl_initWithNSString_withBoolean_withByteArray_(NSString *id_, jboolean criticality, IOSByteArray *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLdapBasicControl *create_JavaxNamingLdapBasicControl_initWithNSString_withBoolean_withByteArray_(NSString *id_, jboolean criticality, IOSByteArray *value);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingLdapBasicControl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingLdapBasicControl")
