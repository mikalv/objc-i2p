//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/LimitExceededException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingLimitExceededException")
#ifdef RESTRICT_JavaxNamingLimitExceededException
#define INCLUDE_ALL_JavaxNamingLimitExceededException 0
#else
#define INCLUDE_ALL_JavaxNamingLimitExceededException 1
#endif
#undef RESTRICT_JavaxNamingLimitExceededException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingLimitExceededException_) && (INCLUDE_ALL_JavaxNamingLimitExceededException || defined(INCLUDE_JavaxNamingLimitExceededException))
#define JavaxNamingLimitExceededException_

#define RESTRICT_JavaxNamingNamingException 1
#define INCLUDE_JavaxNamingNamingException 1
#include "javax/naming/NamingException.h"

@interface JavaxNamingLimitExceededException : JavaxNamingNamingException

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)explanation;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingLimitExceededException)

FOUNDATION_EXPORT void JavaxNamingLimitExceededException_init(JavaxNamingLimitExceededException *self);

FOUNDATION_EXPORT JavaxNamingLimitExceededException *new_JavaxNamingLimitExceededException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLimitExceededException *create_JavaxNamingLimitExceededException_init(void);

FOUNDATION_EXPORT void JavaxNamingLimitExceededException_initWithNSString_(JavaxNamingLimitExceededException *self, NSString *explanation);

FOUNDATION_EXPORT JavaxNamingLimitExceededException *new_JavaxNamingLimitExceededException_initWithNSString_(NSString *explanation) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingLimitExceededException *create_JavaxNamingLimitExceededException_initWithNSString_(NSString *explanation);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingLimitExceededException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingLimitExceededException")
