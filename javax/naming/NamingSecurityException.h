//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/NamingSecurityException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingNamingSecurityException")
#ifdef RESTRICT_JavaxNamingNamingSecurityException
#define INCLUDE_ALL_JavaxNamingNamingSecurityException 0
#else
#define INCLUDE_ALL_JavaxNamingNamingSecurityException 1
#endif
#undef RESTRICT_JavaxNamingNamingSecurityException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingNamingSecurityException_) && (INCLUDE_ALL_JavaxNamingNamingSecurityException || defined(INCLUDE_JavaxNamingNamingSecurityException))
#define JavaxNamingNamingSecurityException_

#define RESTRICT_JavaxNamingNamingException 1
#define INCLUDE_JavaxNamingNamingException 1
#include "javax/naming/NamingException.h"

@interface JavaxNamingNamingSecurityException : JavaxNamingNamingException

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)explanation;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingNamingSecurityException)

FOUNDATION_EXPORT void JavaxNamingNamingSecurityException_initWithNSString_(JavaxNamingNamingSecurityException *self, NSString *explanation);

FOUNDATION_EXPORT void JavaxNamingNamingSecurityException_init(JavaxNamingNamingSecurityException *self);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingNamingSecurityException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingNamingSecurityException")
