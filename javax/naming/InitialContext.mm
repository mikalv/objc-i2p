//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/InitialContext.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/sun/naming/internal/ResourceManager.h"
#include "java/util/Hashtable.h"
#include "javax/naming/Context.h"
#include "javax/naming/InitialContext.h"
#include "javax/naming/Name.h"
#include "javax/naming/NameParser.h"
#include "javax/naming/NamingEnumeration.h"
#include "javax/naming/NoInitialContextException.h"
#include "javax/naming/spi/NamingManager.h"

@interface JavaxNamingInitialContext ()

+ (NSString *)getURLSchemeWithNSString:(NSString *)str;

@end

__attribute__((unused)) static NSString *JavaxNamingInitialContext_getURLSchemeWithNSString_(NSString *str);

@implementation JavaxNamingInitialContext

- (instancetype)initWithBoolean:(jboolean)lazy {
  JavaxNamingInitialContext_initWithBoolean_(self, lazy);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  JavaxNamingInitialContext_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)environment {
  JavaxNamingInitialContext_initWithJavaUtilHashtable_(self, environment);
  return self;
}

- (void)init__WithJavaUtilHashtable:(JavaUtilHashtable *)environment {
  JreStrongAssign(&myProps_, ComSunNamingInternalResourceManager_getInitialEnvironmentWithJavaUtilHashtable_(environment));
  if ([((JavaUtilHashtable *) nil_chk(myProps_)) getWithId:JavaxNamingContext_INITIAL_CONTEXT_FACTORY] != nil) {
    [self getDefaultInitCtx];
  }
}

+ (id)doLookupWithJavaxNamingName:(id<JavaxNamingName>)name {
  return JavaxNamingInitialContext_doLookupWithJavaxNamingName_(name);
}

+ (id)doLookupWithNSString:(NSString *)name {
  return JavaxNamingInitialContext_doLookupWithNSString_(name);
}

+ (NSString *)getURLSchemeWithNSString:(NSString *)str {
  return JavaxNamingInitialContext_getURLSchemeWithNSString_(str);
}

- (id<JavaxNamingContext>)getDefaultInitCtx {
  if (!gotDefault_) {
    JreStrongAssign(&defaultInitCtx_, JavaxNamingSpiNamingManager_getInitialContextWithJavaUtilHashtable_(myProps_));
    gotDefault_ = true;
  }
  if (defaultInitCtx_ == nil) @throw create_JavaxNamingNoInitialContextException_init();
  return defaultInitCtx_;
}

- (id<JavaxNamingContext>)getURLOrDefaultInitCtxWithNSString:(NSString *)name {
  if (JavaxNamingSpiNamingManager_hasInitialContextFactoryBuilder()) {
    return [self getDefaultInitCtx];
  }
  NSString *scheme = JavaxNamingInitialContext_getURLSchemeWithNSString_(name);
  if (scheme != nil) {
    id<JavaxNamingContext> ctx = JavaxNamingSpiNamingManager_getURLContextWithNSString_withJavaUtilHashtable_(scheme, myProps_);
    if (ctx != nil) {
      return ctx;
    }
  }
  return [self getDefaultInitCtx];
}

- (id<JavaxNamingContext>)getURLOrDefaultInitCtxWithJavaxNamingName:(id<JavaxNamingName>)name {
  if (JavaxNamingSpiNamingManager_hasInitialContextFactoryBuilder()) {
    return [self getDefaultInitCtx];
  }
  if ([((id<JavaxNamingName>) nil_chk(name)) size] > 0) {
    NSString *first = [name getWithInt:0];
    NSString *scheme = JavaxNamingInitialContext_getURLSchemeWithNSString_(first);
    if (scheme != nil) {
      id<JavaxNamingContext> ctx = JavaxNamingSpiNamingManager_getURLContextWithNSString_withJavaUtilHashtable_(scheme, myProps_);
      if (ctx != nil) {
        return ctx;
      }
    }
  }
  return [self getDefaultInitCtx];
}

- (id)lookupWithNSString:(NSString *)name {
  return [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithNSString:name])) lookupWithNSString:name];
}

- (id)lookupWithJavaxNamingName:(id<JavaxNamingName>)name {
  return [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithJavaxNamingName:name])) lookupWithJavaxNamingName:name];
}

- (void)bindWithNSString:(NSString *)name
                  withId:(id)obj {
  [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithNSString:name])) bindWithNSString:name withId:obj];
}

- (void)bindWithJavaxNamingName:(id<JavaxNamingName>)name
                         withId:(id)obj {
  [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithJavaxNamingName:name])) bindWithJavaxNamingName:name withId:obj];
}

- (void)rebindWithNSString:(NSString *)name
                    withId:(id)obj {
  [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithNSString:name])) rebindWithNSString:name withId:obj];
}

- (void)rebindWithJavaxNamingName:(id<JavaxNamingName>)name
                           withId:(id)obj {
  [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithJavaxNamingName:name])) rebindWithJavaxNamingName:name withId:obj];
}

- (void)unbindWithNSString:(NSString *)name {
  [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithNSString:name])) unbindWithNSString:name];
}

- (void)unbindWithJavaxNamingName:(id<JavaxNamingName>)name {
  [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithJavaxNamingName:name])) unbindWithJavaxNamingName:name];
}

- (void)renameWithNSString:(NSString *)oldName
              withNSString:(NSString *)newName {
  [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithNSString:oldName])) renameWithNSString:oldName withNSString:newName];
}

- (void)renameWithJavaxNamingName:(id<JavaxNamingName>)oldName
              withJavaxNamingName:(id<JavaxNamingName>)newName {
  [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithJavaxNamingName:oldName])) renameWithJavaxNamingName:oldName withJavaxNamingName:newName];
}

- (id<JavaxNamingNamingEnumeration>)listWithNSString:(NSString *)name {
  return ([((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithNSString:name])) listWithNSString:name]);
}

- (id<JavaxNamingNamingEnumeration>)listWithJavaxNamingName:(id<JavaxNamingName>)name {
  return ([((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithJavaxNamingName:name])) listWithJavaxNamingName:name]);
}

- (id<JavaxNamingNamingEnumeration>)listBindingsWithNSString:(NSString *)name {
  return [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithNSString:name])) listBindingsWithNSString:name];
}

- (id<JavaxNamingNamingEnumeration>)listBindingsWithJavaxNamingName:(id<JavaxNamingName>)name {
  return [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithJavaxNamingName:name])) listBindingsWithJavaxNamingName:name];
}

- (void)destroySubcontextWithNSString:(NSString *)name {
  [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithNSString:name])) destroySubcontextWithNSString:name];
}

- (void)destroySubcontextWithJavaxNamingName:(id<JavaxNamingName>)name {
  [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithJavaxNamingName:name])) destroySubcontextWithJavaxNamingName:name];
}

- (id<JavaxNamingContext>)createSubcontextWithNSString:(NSString *)name {
  return [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithNSString:name])) createSubcontextWithNSString:name];
}

- (id<JavaxNamingContext>)createSubcontextWithJavaxNamingName:(id<JavaxNamingName>)name {
  return [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithJavaxNamingName:name])) createSubcontextWithJavaxNamingName:name];
}

- (id)lookupLinkWithNSString:(NSString *)name {
  return [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithNSString:name])) lookupLinkWithNSString:name];
}

- (id)lookupLinkWithJavaxNamingName:(id<JavaxNamingName>)name {
  return [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithJavaxNamingName:name])) lookupLinkWithJavaxNamingName:name];
}

- (id<JavaxNamingNameParser>)getNameParserWithNSString:(NSString *)name {
  return [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithNSString:name])) getNameParserWithNSString:name];
}

- (id<JavaxNamingNameParser>)getNameParserWithJavaxNamingName:(id<JavaxNamingName>)name {
  return [((id<JavaxNamingContext>) nil_chk([self getURLOrDefaultInitCtxWithJavaxNamingName:name])) getNameParserWithJavaxNamingName:name];
}

- (NSString *)composeNameWithNSString:(NSString *)name
                         withNSString:(NSString *)prefix {
  return name;
}

- (id<JavaxNamingName>)composeNameWithJavaxNamingName:(id<JavaxNamingName>)name
                                  withJavaxNamingName:(id<JavaxNamingName>)prefix {
  return (id<JavaxNamingName>) cast_check([((id<JavaxNamingName>) nil_chk(name)) clone], JavaxNamingName_class_());
}

- (id)addToEnvironmentWithNSString:(NSString *)propName
                            withId:(id)propVal {
  [((JavaUtilHashtable *) nil_chk(myProps_)) putWithId:propName withId:propVal];
  return [((id<JavaxNamingContext>) nil_chk([self getDefaultInitCtx])) addToEnvironmentWithNSString:propName withId:propVal];
}

- (id)removeFromEnvironmentWithNSString:(NSString *)propName {
  [((JavaUtilHashtable *) nil_chk(myProps_)) removeWithId:propName];
  return [((id<JavaxNamingContext>) nil_chk([self getDefaultInitCtx])) removeFromEnvironmentWithNSString:propName];
}

- (JavaUtilHashtable *)getEnvironment {
  return [((id<JavaxNamingContext>) nil_chk([self getDefaultInitCtx])) getEnvironment];
}

- (void)close {
  JreStrongAssign(&myProps_, nil);
  if (defaultInitCtx_ != nil) {
    [defaultInitCtx_ close];
    JreStrongAssign(&defaultInitCtx_, nil);
  }
  gotDefault_ = false;
}

- (NSString *)getNameInNamespace {
  return [((id<JavaxNamingContext>) nil_chk([self getDefaultInitCtx])) getNameInNamespace];
}

- (void)dealloc {
  RELEASE_(myProps_);
  RELEASE_(defaultInitCtx_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 1, 3, -1, -1 },
    { NULL, "V", 0x4, 4, 2, 1, 3, -1, -1 },
    { NULL, "LNSObject;", 0x9, 5, 6, 1, 7, -1, -1 },
    { NULL, "LNSObject;", 0x9, 5, 8, 1, 9, -1, -1 },
    { NULL, "LNSString;", 0xa, 10, 8, -1, -1, -1, -1 },
    { NULL, "LJavaxNamingContext;", 0x4, -1, -1, 1, -1, -1, -1 },
    { NULL, "LJavaxNamingContext;", 0x4, 11, 8, 1, -1, -1, -1 },
    { NULL, "LJavaxNamingContext;", 0x4, 11, 6, 1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 12, 8, 1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 12, 6, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 15, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 14, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 15, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 8, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 6, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 20, 1, -1, -1, -1 },
    { NULL, "LJavaxNamingNamingEnumeration;", 0x1, 21, 8, 1, 22, -1, -1 },
    { NULL, "LJavaxNamingNamingEnumeration;", 0x1, 21, 6, 1, 23, -1, -1 },
    { NULL, "LJavaxNamingNamingEnumeration;", 0x1, 24, 8, 1, 25, -1, -1 },
    { NULL, "LJavaxNamingNamingEnumeration;", 0x1, 24, 6, 1, 26, -1, -1 },
    { NULL, "V", 0x1, 27, 8, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 6, 1, -1, -1, -1 },
    { NULL, "LJavaxNamingContext;", 0x1, 28, 8, 1, -1, -1, -1 },
    { NULL, "LJavaxNamingContext;", 0x1, 28, 6, 1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 29, 8, 1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 29, 6, 1, -1, -1, -1 },
    { NULL, "LJavaxNamingNameParser;", 0x1, 30, 8, 1, -1, -1, -1 },
    { NULL, "LJavaxNamingNameParser;", 0x1, 30, 6, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 31, 19, 1, -1, -1, -1 },
    { NULL, "LJavaxNamingName;", 0x1, 31, 20, 1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 32, 14, 1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 33, 8, 1, -1, -1, -1 },
    { NULL, "LJavaUtilHashtable;", 0x1, -1, -1, 1, 34, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(initWithJavaUtilHashtable:);
  methods[3].selector = @selector(init__WithJavaUtilHashtable:);
  methods[4].selector = @selector(doLookupWithJavaxNamingName:);
  methods[5].selector = @selector(doLookupWithNSString:);
  methods[6].selector = @selector(getURLSchemeWithNSString:);
  methods[7].selector = @selector(getDefaultInitCtx);
  methods[8].selector = @selector(getURLOrDefaultInitCtxWithNSString:);
  methods[9].selector = @selector(getURLOrDefaultInitCtxWithJavaxNamingName:);
  methods[10].selector = @selector(lookupWithNSString:);
  methods[11].selector = @selector(lookupWithJavaxNamingName:);
  methods[12].selector = @selector(bindWithNSString:withId:);
  methods[13].selector = @selector(bindWithJavaxNamingName:withId:);
  methods[14].selector = @selector(rebindWithNSString:withId:);
  methods[15].selector = @selector(rebindWithJavaxNamingName:withId:);
  methods[16].selector = @selector(unbindWithNSString:);
  methods[17].selector = @selector(unbindWithJavaxNamingName:);
  methods[18].selector = @selector(renameWithNSString:withNSString:);
  methods[19].selector = @selector(renameWithJavaxNamingName:withJavaxNamingName:);
  methods[20].selector = @selector(listWithNSString:);
  methods[21].selector = @selector(listWithJavaxNamingName:);
  methods[22].selector = @selector(listBindingsWithNSString:);
  methods[23].selector = @selector(listBindingsWithJavaxNamingName:);
  methods[24].selector = @selector(destroySubcontextWithNSString:);
  methods[25].selector = @selector(destroySubcontextWithJavaxNamingName:);
  methods[26].selector = @selector(createSubcontextWithNSString:);
  methods[27].selector = @selector(createSubcontextWithJavaxNamingName:);
  methods[28].selector = @selector(lookupLinkWithNSString:);
  methods[29].selector = @selector(lookupLinkWithJavaxNamingName:);
  methods[30].selector = @selector(getNameParserWithNSString:);
  methods[31].selector = @selector(getNameParserWithJavaxNamingName:);
  methods[32].selector = @selector(composeNameWithNSString:withNSString:);
  methods[33].selector = @selector(composeNameWithJavaxNamingName:withJavaxNamingName:);
  methods[34].selector = @selector(addToEnvironmentWithNSString:withId:);
  methods[35].selector = @selector(removeFromEnvironmentWithNSString:);
  methods[36].selector = @selector(getEnvironment);
  methods[37].selector = @selector(close);
  methods[38].selector = @selector(getNameInNamespace);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "myProps_", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x4, -1, -1, 35, -1 },
    { "defaultInitCtx_", "LJavaxNamingContext;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "gotDefault_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "LJavaxNamingNamingException;", "LJavaUtilHashtable;", "(Ljava/util/Hashtable<**>;)V", "init", "doLookup", "LJavaxNamingName;", "<T:Ljava/lang/Object;>(Ljavax/naming/Name;)TT;", "LNSString;", "<T:Ljava/lang/Object;>(Ljava/lang/String;)TT;", "getURLScheme", "getURLOrDefaultInitCtx", "lookup", "bind", "LNSString;LNSObject;", "LJavaxNamingName;LNSObject;", "rebind", "unbind", "rename", "LNSString;LNSString;", "LJavaxNamingName;LJavaxNamingName;", "list", "(Ljava/lang/String;)Ljavax/naming/NamingEnumeration<Ljavax/naming/NameClassPair;>;", "(Ljavax/naming/Name;)Ljavax/naming/NamingEnumeration<Ljavax/naming/NameClassPair;>;", "listBindings", "(Ljava/lang/String;)Ljavax/naming/NamingEnumeration<Ljavax/naming/Binding;>;", "(Ljavax/naming/Name;)Ljavax/naming/NamingEnumeration<Ljavax/naming/Binding;>;", "destroySubcontext", "createSubcontext", "lookupLink", "getNameParser", "composeName", "addToEnvironment", "removeFromEnvironment", "()Ljava/util/Hashtable<**>;", "Ljava/util/Hashtable<Ljava/lang/Object;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _JavaxNamingInitialContext = { "InitialContext", "javax.naming", ptrTable, methods, fields, 7, 0x1, 39, 3, -1, -1, -1, -1, -1 };
  return &_JavaxNamingInitialContext;
}

@end

void JavaxNamingInitialContext_initWithBoolean_(JavaxNamingInitialContext *self, jboolean lazy) {
  NSObject_init(self);
  JreStrongAssign(&self->myProps_, nil);
  JreStrongAssign(&self->defaultInitCtx_, nil);
  self->gotDefault_ = false;
  if (!lazy) {
    [self init__WithJavaUtilHashtable:nil];
  }
}

JavaxNamingInitialContext *new_JavaxNamingInitialContext_initWithBoolean_(jboolean lazy) {
  J2OBJC_NEW_IMPL(JavaxNamingInitialContext, initWithBoolean_, lazy)
}

JavaxNamingInitialContext *create_JavaxNamingInitialContext_initWithBoolean_(jboolean lazy) {
  J2OBJC_CREATE_IMPL(JavaxNamingInitialContext, initWithBoolean_, lazy)
}

void JavaxNamingInitialContext_init(JavaxNamingInitialContext *self) {
  NSObject_init(self);
  JreStrongAssign(&self->myProps_, nil);
  JreStrongAssign(&self->defaultInitCtx_, nil);
  self->gotDefault_ = false;
  [self init__WithJavaUtilHashtable:nil];
}

JavaxNamingInitialContext *new_JavaxNamingInitialContext_init() {
  J2OBJC_NEW_IMPL(JavaxNamingInitialContext, init)
}

JavaxNamingInitialContext *create_JavaxNamingInitialContext_init() {
  J2OBJC_CREATE_IMPL(JavaxNamingInitialContext, init)
}

void JavaxNamingInitialContext_initWithJavaUtilHashtable_(JavaxNamingInitialContext *self, JavaUtilHashtable *environment) {
  NSObject_init(self);
  JreStrongAssign(&self->myProps_, nil);
  JreStrongAssign(&self->defaultInitCtx_, nil);
  self->gotDefault_ = false;
  if (environment != nil) {
    environment = (JavaUtilHashtable *) cast_chk([environment java_clone], [JavaUtilHashtable class]);
  }
  [self init__WithJavaUtilHashtable:environment];
}

JavaxNamingInitialContext *new_JavaxNamingInitialContext_initWithJavaUtilHashtable_(JavaUtilHashtable *environment) {
  J2OBJC_NEW_IMPL(JavaxNamingInitialContext, initWithJavaUtilHashtable_, environment)
}

JavaxNamingInitialContext *create_JavaxNamingInitialContext_initWithJavaUtilHashtable_(JavaUtilHashtable *environment) {
  J2OBJC_CREATE_IMPL(JavaxNamingInitialContext, initWithJavaUtilHashtable_, environment)
}

id JavaxNamingInitialContext_doLookupWithJavaxNamingName_(id<JavaxNamingName> name) {
  JavaxNamingInitialContext_initialize();
  return [(create_JavaxNamingInitialContext_init()) lookupWithJavaxNamingName:name];
}

id JavaxNamingInitialContext_doLookupWithNSString_(NSString *name) {
  JavaxNamingInitialContext_initialize();
  return [(create_JavaxNamingInitialContext_init()) lookupWithNSString:name];
}

NSString *JavaxNamingInitialContext_getURLSchemeWithNSString_(NSString *str) {
  JavaxNamingInitialContext_initialize();
  jint colon_posn = [((NSString *) nil_chk(str)) java_indexOf:':'];
  jint slash_posn = [str java_indexOf:'/'];
  if (colon_posn > 0 && (slash_posn == -1 || colon_posn < slash_posn)) return [str java_substring:0 endIndex:colon_posn];
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaxNamingInitialContext)
