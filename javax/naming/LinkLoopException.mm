//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/LinkLoopException.java
//

#include "J2ObjC_source.h"
#include "javax/naming/LinkException.h"
#include "javax/naming/LinkLoopException.h"

inline jlong JavaxNamingLinkLoopException_get_serialVersionUID(void);
#define JavaxNamingLinkLoopException_serialVersionUID -3119189944325198009LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingLinkLoopException, serialVersionUID, jlong)

@implementation JavaxNamingLinkLoopException

- (instancetype)initWithNSString:(NSString *)explanation {
  JavaxNamingLinkLoopException_initWithNSString_(self, explanation);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  JavaxNamingLinkLoopException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = JavaxNamingLinkLoopException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _JavaxNamingLinkLoopException = { "LinkLoopException", "javax.naming", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_JavaxNamingLinkLoopException;
}

@end

void JavaxNamingLinkLoopException_initWithNSString_(JavaxNamingLinkLoopException *self, NSString *explanation) {
  JavaxNamingLinkException_initWithNSString_(self, explanation);
}

JavaxNamingLinkLoopException *new_JavaxNamingLinkLoopException_initWithNSString_(NSString *explanation) {
  J2OBJC_NEW_IMPL(JavaxNamingLinkLoopException, initWithNSString_, explanation)
}

JavaxNamingLinkLoopException *create_JavaxNamingLinkLoopException_initWithNSString_(NSString *explanation) {
  J2OBJC_CREATE_IMPL(JavaxNamingLinkLoopException, initWithNSString_, explanation)
}

void JavaxNamingLinkLoopException_init(JavaxNamingLinkLoopException *self) {
  JavaxNamingLinkException_init(self);
}

JavaxNamingLinkLoopException *new_JavaxNamingLinkLoopException_init() {
  J2OBJC_NEW_IMPL(JavaxNamingLinkLoopException, init)
}

JavaxNamingLinkLoopException *create_JavaxNamingLinkLoopException_init() {
  J2OBJC_CREATE_IMPL(JavaxNamingLinkLoopException, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaxNamingLinkLoopException)
