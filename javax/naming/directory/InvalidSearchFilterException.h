//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/directory/InvalidSearchFilterException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingDirectoryInvalidSearchFilterException")
#ifdef RESTRICT_JavaxNamingDirectoryInvalidSearchFilterException
#define INCLUDE_ALL_JavaxNamingDirectoryInvalidSearchFilterException 0
#else
#define INCLUDE_ALL_JavaxNamingDirectoryInvalidSearchFilterException 1
#endif
#undef RESTRICT_JavaxNamingDirectoryInvalidSearchFilterException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingDirectoryInvalidSearchFilterException_) && (INCLUDE_ALL_JavaxNamingDirectoryInvalidSearchFilterException || defined(INCLUDE_JavaxNamingDirectoryInvalidSearchFilterException))
#define JavaxNamingDirectoryInvalidSearchFilterException_

#define RESTRICT_JavaxNamingNamingException 1
#define INCLUDE_JavaxNamingNamingException 1
#include "javax/naming/NamingException.h"

@interface JavaxNamingDirectoryInvalidSearchFilterException : JavaxNamingNamingException

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)msg;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingDirectoryInvalidSearchFilterException)

FOUNDATION_EXPORT void JavaxNamingDirectoryInvalidSearchFilterException_init(JavaxNamingDirectoryInvalidSearchFilterException *self);

FOUNDATION_EXPORT JavaxNamingDirectoryInvalidSearchFilterException *new_JavaxNamingDirectoryInvalidSearchFilterException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingDirectoryInvalidSearchFilterException *create_JavaxNamingDirectoryInvalidSearchFilterException_init(void);

FOUNDATION_EXPORT void JavaxNamingDirectoryInvalidSearchFilterException_initWithNSString_(JavaxNamingDirectoryInvalidSearchFilterException *self, NSString *msg);

FOUNDATION_EXPORT JavaxNamingDirectoryInvalidSearchFilterException *new_JavaxNamingDirectoryInvalidSearchFilterException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingDirectoryInvalidSearchFilterException *create_JavaxNamingDirectoryInvalidSearchFilterException_initWithNSString_(NSString *msg);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingDirectoryInvalidSearchFilterException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingDirectoryInvalidSearchFilterException")
