//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/directory/BasicAttribute.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingDirectoryBasicAttribute")
#ifdef RESTRICT_JavaxNamingDirectoryBasicAttribute
#define INCLUDE_ALL_JavaxNamingDirectoryBasicAttribute 0
#else
#define INCLUDE_ALL_JavaxNamingDirectoryBasicAttribute 1
#endif
#undef RESTRICT_JavaxNamingDirectoryBasicAttribute

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingDirectoryBasicAttribute_) && (INCLUDE_ALL_JavaxNamingDirectoryBasicAttribute || defined(INCLUDE_JavaxNamingDirectoryBasicAttribute))
#define JavaxNamingDirectoryBasicAttribute_

#define RESTRICT_JavaxNamingDirectoryAttribute 1
#define INCLUDE_JavaxNamingDirectoryAttribute 1
#include "javax/naming/directory/Attribute.h"

@class JavaUtilVector;
@protocol JavaxNamingDirectoryDirContext;
@protocol JavaxNamingNamingEnumeration;

@interface JavaxNamingDirectoryBasicAttribute : NSObject < JavaxNamingDirectoryAttribute > {
 @public
  NSString *attrID_;
  JavaUtilVector *values_;
  jboolean ordered_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)id_;

- (instancetype __nonnull)initWithNSString:(NSString *)id_
                               withBoolean:(jboolean)ordered;

- (instancetype __nonnull)initWithNSString:(NSString *)id_
                                    withId:(id)value;

- (instancetype __nonnull)initWithNSString:(NSString *)id_
                                    withId:(id)value
                               withBoolean:(jboolean)ordered;

- (void)addWithInt:(jint)ix
            withId:(id)attrVal;

- (jboolean)addWithId:(id)attrVal;

- (void)clear;

- (id)java_clone;

- (jboolean)containsWithId:(id)attrVal;

- (jboolean)isEqual:(id)obj;

- (id)get;

- (id)getWithInt:(jint)ix;

- (id<JavaxNamingNamingEnumeration>)getAll;

- (id<JavaxNamingDirectoryDirContext>)getAttributeDefinition;

- (id<JavaxNamingDirectoryDirContext>)getAttributeSyntaxDefinition;

- (NSString *)getID;

- (NSUInteger)hash;

- (jboolean)isOrdered;

- (id)removeWithInt:(jint)ix;

- (jboolean)removeWithId:(id)attrval;

- (id)setWithInt:(jint)ix
          withId:(id)attrVal;

- (jint)size;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingDirectoryBasicAttribute)

J2OBJC_FIELD_SETTER(JavaxNamingDirectoryBasicAttribute, attrID_, NSString *)
J2OBJC_FIELD_SETTER(JavaxNamingDirectoryBasicAttribute, values_, JavaUtilVector *)

FOUNDATION_EXPORT void JavaxNamingDirectoryBasicAttribute_initWithNSString_(JavaxNamingDirectoryBasicAttribute *self, NSString *id_);

FOUNDATION_EXPORT JavaxNamingDirectoryBasicAttribute *new_JavaxNamingDirectoryBasicAttribute_initWithNSString_(NSString *id_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingDirectoryBasicAttribute *create_JavaxNamingDirectoryBasicAttribute_initWithNSString_(NSString *id_);

FOUNDATION_EXPORT void JavaxNamingDirectoryBasicAttribute_initWithNSString_withId_(JavaxNamingDirectoryBasicAttribute *self, NSString *id_, id value);

FOUNDATION_EXPORT JavaxNamingDirectoryBasicAttribute *new_JavaxNamingDirectoryBasicAttribute_initWithNSString_withId_(NSString *id_, id value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingDirectoryBasicAttribute *create_JavaxNamingDirectoryBasicAttribute_initWithNSString_withId_(NSString *id_, id value);

FOUNDATION_EXPORT void JavaxNamingDirectoryBasicAttribute_initWithNSString_withBoolean_(JavaxNamingDirectoryBasicAttribute *self, NSString *id_, jboolean ordered);

FOUNDATION_EXPORT JavaxNamingDirectoryBasicAttribute *new_JavaxNamingDirectoryBasicAttribute_initWithNSString_withBoolean_(NSString *id_, jboolean ordered) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingDirectoryBasicAttribute *create_JavaxNamingDirectoryBasicAttribute_initWithNSString_withBoolean_(NSString *id_, jboolean ordered);

FOUNDATION_EXPORT void JavaxNamingDirectoryBasicAttribute_initWithNSString_withId_withBoolean_(JavaxNamingDirectoryBasicAttribute *self, NSString *id_, id value, jboolean ordered);

FOUNDATION_EXPORT JavaxNamingDirectoryBasicAttribute *new_JavaxNamingDirectoryBasicAttribute_initWithNSString_withId_withBoolean_(NSString *id_, id value, jboolean ordered) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingDirectoryBasicAttribute *create_JavaxNamingDirectoryBasicAttribute_initWithNSString_withId_withBoolean_(NSString *id_, id value, jboolean ordered);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingDirectoryBasicAttribute)

#endif

#if !defined (JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl_) && (INCLUDE_ALL_JavaxNamingDirectoryBasicAttribute || defined(INCLUDE_JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl))
#define JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl_

#define RESTRICT_JavaxNamingNamingEnumeration 1
#define INCLUDE_JavaxNamingNamingEnumeration 1
#include "javax/naming/NamingEnumeration.h"

@class JavaxNamingDirectoryBasicAttribute;
@protocol JavaUtilEnumeration;

@interface JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl : NSObject < JavaxNamingNamingEnumeration > {
 @public
  id<JavaUtilEnumeration> list_;
}

#pragma mark Public

- (void)close;

- (jboolean)hasMore;

- (jboolean)hasMoreElements;

- (id)next;

- (id)nextElement;

#pragma mark Package-Private

- (instancetype __nonnull)initWithJavaxNamingDirectoryBasicAttribute:(JavaxNamingDirectoryBasicAttribute *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl)

J2OBJC_FIELD_SETTER(JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl, list_, id<JavaUtilEnumeration>)

FOUNDATION_EXPORT void JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl_initWithJavaxNamingDirectoryBasicAttribute_(JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl *self, JavaxNamingDirectoryBasicAttribute *outer$);

FOUNDATION_EXPORT JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl *new_JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl_initWithJavaxNamingDirectoryBasicAttribute_(JavaxNamingDirectoryBasicAttribute *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl *create_JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl_initWithJavaxNamingDirectoryBasicAttribute_(JavaxNamingDirectoryBasicAttribute *outer$);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingDirectoryBasicAttribute_ValuesEnumImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingDirectoryBasicAttribute")
