//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/directory/InvalidAttributeIdentifierException.java
//

#include "J2ObjC_source.h"
#include "javax/naming/NamingException.h"
#include "javax/naming/directory/InvalidAttributeIdentifierException.h"

inline jlong JavaxNamingDirectoryInvalidAttributeIdentifierException_get_serialVersionUID(void);
#define JavaxNamingDirectoryInvalidAttributeIdentifierException_serialVersionUID -9036920266322999923LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingDirectoryInvalidAttributeIdentifierException, serialVersionUID, jlong)

@implementation JavaxNamingDirectoryInvalidAttributeIdentifierException

- (instancetype)initWithNSString:(NSString *)explanation {
  JavaxNamingDirectoryInvalidAttributeIdentifierException_initWithNSString_(self, explanation);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  JavaxNamingDirectoryInvalidAttributeIdentifierException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = JavaxNamingDirectoryInvalidAttributeIdentifierException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _JavaxNamingDirectoryInvalidAttributeIdentifierException = { "InvalidAttributeIdentifierException", "javax.naming.directory", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_JavaxNamingDirectoryInvalidAttributeIdentifierException;
}

@end

void JavaxNamingDirectoryInvalidAttributeIdentifierException_initWithNSString_(JavaxNamingDirectoryInvalidAttributeIdentifierException *self, NSString *explanation) {
  JavaxNamingNamingException_initWithNSString_(self, explanation);
}

JavaxNamingDirectoryInvalidAttributeIdentifierException *new_JavaxNamingDirectoryInvalidAttributeIdentifierException_initWithNSString_(NSString *explanation) {
  J2OBJC_NEW_IMPL(JavaxNamingDirectoryInvalidAttributeIdentifierException, initWithNSString_, explanation)
}

JavaxNamingDirectoryInvalidAttributeIdentifierException *create_JavaxNamingDirectoryInvalidAttributeIdentifierException_initWithNSString_(NSString *explanation) {
  J2OBJC_CREATE_IMPL(JavaxNamingDirectoryInvalidAttributeIdentifierException, initWithNSString_, explanation)
}

void JavaxNamingDirectoryInvalidAttributeIdentifierException_init(JavaxNamingDirectoryInvalidAttributeIdentifierException *self) {
  JavaxNamingNamingException_init(self);
}

JavaxNamingDirectoryInvalidAttributeIdentifierException *new_JavaxNamingDirectoryInvalidAttributeIdentifierException_init() {
  J2OBJC_NEW_IMPL(JavaxNamingDirectoryInvalidAttributeIdentifierException, init)
}

JavaxNamingDirectoryInvalidAttributeIdentifierException *create_JavaxNamingDirectoryInvalidAttributeIdentifierException_init() {
  J2OBJC_CREATE_IMPL(JavaxNamingDirectoryInvalidAttributeIdentifierException, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaxNamingDirectoryInvalidAttributeIdentifierException)
