//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/directory/DirContext.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingDirectoryDirContext")
#ifdef RESTRICT_JavaxNamingDirectoryDirContext
#define INCLUDE_ALL_JavaxNamingDirectoryDirContext 0
#else
#define INCLUDE_ALL_JavaxNamingDirectoryDirContext 1
#endif
#undef RESTRICT_JavaxNamingDirectoryDirContext

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingDirectoryDirContext_) && (INCLUDE_ALL_JavaxNamingDirectoryDirContext || defined(INCLUDE_JavaxNamingDirectoryDirContext))
#define JavaxNamingDirectoryDirContext_

#define RESTRICT_JavaxNamingContext 1
#define INCLUDE_JavaxNamingContext 1
#include "javax/naming/Context.h"

@class IOSObjectArray;
@class JavaxNamingDirectorySearchControls;
@protocol JavaxNamingDirectoryAttributes;
@protocol JavaxNamingName;
@protocol JavaxNamingNamingEnumeration;

@protocol JavaxNamingDirectoryDirContext < JavaxNamingContext, JavaObject >

- (id<JavaxNamingDirectoryAttributes>)getAttributesWithJavaxNamingName:(id<JavaxNamingName>)name;

- (id<JavaxNamingDirectoryAttributes>)getAttributesWithNSString:(NSString *)name;

- (id<JavaxNamingDirectoryAttributes>)getAttributesWithJavaxNamingName:(id<JavaxNamingName>)name
                                                     withNSStringArray:(IOSObjectArray *)attrIds;

- (id<JavaxNamingDirectoryAttributes>)getAttributesWithNSString:(NSString *)name
                                              withNSStringArray:(IOSObjectArray *)attrIds;

- (void)modifyAttributesWithJavaxNamingName:(id<JavaxNamingName>)name
                                    withInt:(jint)mod_op
         withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (void)modifyAttributesWithNSString:(NSString *)name
                             withInt:(jint)mod_op
  withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (void)modifyAttributesWithJavaxNamingName:(id<JavaxNamingName>)name
withJavaxNamingDirectoryModificationItemArray:(IOSObjectArray *)mods;

- (void)modifyAttributesWithNSString:(NSString *)name
withJavaxNamingDirectoryModificationItemArray:(IOSObjectArray *)mods;

- (void)bindWithJavaxNamingName:(id<JavaxNamingName>)name
                         withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (void)bindWithNSString:(NSString *)name
                  withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (void)rebindWithJavaxNamingName:(id<JavaxNamingName>)name
                           withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (void)rebindWithNSString:(NSString *)name
                    withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (id<JavaxNamingDirectoryDirContext>)createSubcontextWithJavaxNamingName:(id<JavaxNamingName>)name
                                       withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (id<JavaxNamingDirectoryDirContext>)createSubcontextWithNSString:(NSString *)name
                                withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (id<JavaxNamingDirectoryDirContext>)getSchemaWithJavaxNamingName:(id<JavaxNamingName>)name;

- (id<JavaxNamingDirectoryDirContext>)getSchemaWithNSString:(NSString *)name;

- (id<JavaxNamingDirectoryDirContext>)getSchemaClassDefinitionWithJavaxNamingName:(id<JavaxNamingName>)name;

- (id<JavaxNamingDirectoryDirContext>)getSchemaClassDefinitionWithNSString:(NSString *)name;

- (id<JavaxNamingNamingEnumeration>)searchWithJavaxNamingName:(id<JavaxNamingName>)name
                           withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)matchingAttributes
                                            withNSStringArray:(IOSObjectArray *)attributesToReturn;

- (id<JavaxNamingNamingEnumeration>)searchWithNSString:(NSString *)name
                    withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)matchingAttributes
                                     withNSStringArray:(IOSObjectArray *)attributesToReturn;

- (id<JavaxNamingNamingEnumeration>)searchWithJavaxNamingName:(id<JavaxNamingName>)name
                           withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)matchingAttributes;

- (id<JavaxNamingNamingEnumeration>)searchWithNSString:(NSString *)name
                    withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)matchingAttributes;

- (id<JavaxNamingNamingEnumeration>)searchWithJavaxNamingName:(id<JavaxNamingName>)name
                                                 withNSString:(NSString *)filter
                       withJavaxNamingDirectorySearchControls:(JavaxNamingDirectorySearchControls *)cons;

- (id<JavaxNamingNamingEnumeration>)searchWithNSString:(NSString *)name
                                          withNSString:(NSString *)filter
                withJavaxNamingDirectorySearchControls:(JavaxNamingDirectorySearchControls *)cons;

- (id<JavaxNamingNamingEnumeration>)searchWithJavaxNamingName:(id<JavaxNamingName>)name
                                                 withNSString:(NSString *)filterExpr
                                            withNSObjectArray:(IOSObjectArray *)filterArgs
                       withJavaxNamingDirectorySearchControls:(JavaxNamingDirectorySearchControls *)cons;

- (id<JavaxNamingNamingEnumeration>)searchWithNSString:(NSString *)name
                                          withNSString:(NSString *)filterExpr
                                     withNSObjectArray:(IOSObjectArray *)filterArgs
                withJavaxNamingDirectorySearchControls:(JavaxNamingDirectorySearchControls *)cons;

@end

@interface JavaxNamingDirectoryDirContext : NSObject
@property (readonly, class) jint ADD_ATTRIBUTE NS_SWIFT_NAME(ADD_ATTRIBUTE);
@property (readonly, class) jint REPLACE_ATTRIBUTE NS_SWIFT_NAME(REPLACE_ATTRIBUTE);
@property (readonly, class) jint REMOVE_ATTRIBUTE NS_SWIFT_NAME(REMOVE_ATTRIBUTE);

+ (jint)ADD_ATTRIBUTE;

+ (jint)REPLACE_ATTRIBUTE;

+ (jint)REMOVE_ATTRIBUTE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingDirectoryDirContext)

inline jint JavaxNamingDirectoryDirContext_get_ADD_ATTRIBUTE(void);
#define JavaxNamingDirectoryDirContext_ADD_ATTRIBUTE 1
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingDirectoryDirContext, ADD_ATTRIBUTE, jint)

inline jint JavaxNamingDirectoryDirContext_get_REPLACE_ATTRIBUTE(void);
#define JavaxNamingDirectoryDirContext_REPLACE_ATTRIBUTE 2
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingDirectoryDirContext, REPLACE_ATTRIBUTE, jint)

inline jint JavaxNamingDirectoryDirContext_get_REMOVE_ATTRIBUTE(void);
#define JavaxNamingDirectoryDirContext_REMOVE_ATTRIBUTE 3
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingDirectoryDirContext, REMOVE_ATTRIBUTE, jint)

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingDirectoryDirContext)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingDirectoryDirContext")
