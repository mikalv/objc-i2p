//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/directory/SearchResult.java
//

#include "J2ObjC_source.h"
#include "javax/naming/Binding.h"
#include "javax/naming/directory/Attributes.h"
#include "javax/naming/directory/SearchResult.h"

@interface JavaxNamingDirectorySearchResult () {
 @public
  id<JavaxNamingDirectoryAttributes> attrs_;
}

@end

J2OBJC_FIELD_SETTER(JavaxNamingDirectorySearchResult, attrs_, id<JavaxNamingDirectoryAttributes>)

inline jlong JavaxNamingDirectorySearchResult_get_serialVersionUID(void);
#define JavaxNamingDirectorySearchResult_serialVersionUID -9158063327699723172LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingDirectorySearchResult, serialVersionUID, jlong)

@implementation JavaxNamingDirectorySearchResult

- (instancetype)initWithNSString:(NSString *)name
                          withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs {
  JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_(self, name, obj, attrs);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                          withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs
                     withBoolean:(jboolean)isRelative {
  JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(self, name, obj, attrs, isRelative);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)className_
                          withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs {
  JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_(self, name, className_, obj, attrs);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)className_
                          withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs
                     withBoolean:(jboolean)isRelative {
  JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(self, name, className_, obj, attrs, isRelative);
  return self;
}

- (id<JavaxNamingDirectoryAttributes>)getAttributes {
  return attrs_;
}

- (void)setAttributesWithJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs {
  JreStrongAssign(&self->attrs_, attrs);
}

- (NSString *)description {
  return JreStrcat("$C@", [super description], ':', [self getAttributes]);
}

- (void)dealloc {
  RELEASE_(attrs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LJavaxNamingDirectoryAttributes;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withId:withJavaxNamingDirectoryAttributes:);
  methods[1].selector = @selector(initWithNSString:withId:withJavaxNamingDirectoryAttributes:withBoolean:);
  methods[2].selector = @selector(initWithNSString:withNSString:withId:withJavaxNamingDirectoryAttributes:);
  methods[3].selector = @selector(initWithNSString:withNSString:withId:withJavaxNamingDirectoryAttributes:withBoolean:);
  methods[4].selector = @selector(getAttributes);
  methods[5].selector = @selector(setAttributesWithJavaxNamingDirectoryAttributes:);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "attrs_", "LJavaxNamingDirectoryAttributes;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = JavaxNamingDirectorySearchResult_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSObject;LJavaxNamingDirectoryAttributes;", "LNSString;LNSObject;LJavaxNamingDirectoryAttributes;Z", "LNSString;LNSString;LNSObject;LJavaxNamingDirectoryAttributes;", "LNSString;LNSString;LNSObject;LJavaxNamingDirectoryAttributes;Z", "setAttributes", "LJavaxNamingDirectoryAttributes;", "toString" };
  static const J2ObjcClassInfo _JavaxNamingDirectorySearchResult = { "SearchResult", "javax.naming.directory", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_JavaxNamingDirectorySearchResult;
}

@end

void JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_(JavaxNamingDirectorySearchResult *self, NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs) {
  JavaxNamingBinding_initWithNSString_withId_(self, name, obj);
  JreStrongAssign(&self->attrs_, attrs);
}

JavaxNamingDirectorySearchResult *new_JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_(NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs) {
  J2OBJC_NEW_IMPL(JavaxNamingDirectorySearchResult, initWithNSString_withId_withJavaxNamingDirectoryAttributes_, name, obj, attrs)
}

JavaxNamingDirectorySearchResult *create_JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_(NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs) {
  J2OBJC_CREATE_IMPL(JavaxNamingDirectorySearchResult, initWithNSString_withId_withJavaxNamingDirectoryAttributes_, name, obj, attrs)
}

void JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(JavaxNamingDirectorySearchResult *self, NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative) {
  JavaxNamingBinding_initWithNSString_withId_withBoolean_(self, name, obj, isRelative);
  JreStrongAssign(&self->attrs_, attrs);
}

JavaxNamingDirectorySearchResult *new_JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative) {
  J2OBJC_NEW_IMPL(JavaxNamingDirectorySearchResult, initWithNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_, name, obj, attrs, isRelative)
}

JavaxNamingDirectorySearchResult *create_JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative) {
  J2OBJC_CREATE_IMPL(JavaxNamingDirectorySearchResult, initWithNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_, name, obj, attrs, isRelative)
}

void JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_(JavaxNamingDirectorySearchResult *self, NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs) {
  JavaxNamingBinding_initWithNSString_withNSString_withId_(self, name, className_, obj);
  JreStrongAssign(&self->attrs_, attrs);
}

JavaxNamingDirectorySearchResult *new_JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_(NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs) {
  J2OBJC_NEW_IMPL(JavaxNamingDirectorySearchResult, initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_, name, className_, obj, attrs)
}

JavaxNamingDirectorySearchResult *create_JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_(NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs) {
  J2OBJC_CREATE_IMPL(JavaxNamingDirectorySearchResult, initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_, name, className_, obj, attrs)
}

void JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(JavaxNamingDirectorySearchResult *self, NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative) {
  JavaxNamingBinding_initWithNSString_withNSString_withId_withBoolean_(self, name, className_, obj, isRelative);
  JreStrongAssign(&self->attrs_, attrs);
}

JavaxNamingDirectorySearchResult *new_JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative) {
  J2OBJC_NEW_IMPL(JavaxNamingDirectorySearchResult, initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_, name, className_, obj, attrs, isRelative)
}

JavaxNamingDirectorySearchResult *create_JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative) {
  J2OBJC_CREATE_IMPL(JavaxNamingDirectorySearchResult, initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_, name, className_, obj, attrs, isRelative)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaxNamingDirectorySearchResult)
