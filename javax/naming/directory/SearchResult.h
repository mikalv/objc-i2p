//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/directory/SearchResult.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingDirectorySearchResult")
#ifdef RESTRICT_JavaxNamingDirectorySearchResult
#define INCLUDE_ALL_JavaxNamingDirectorySearchResult 0
#else
#define INCLUDE_ALL_JavaxNamingDirectorySearchResult 1
#endif
#undef RESTRICT_JavaxNamingDirectorySearchResult

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingDirectorySearchResult_) && (INCLUDE_ALL_JavaxNamingDirectorySearchResult || defined(INCLUDE_JavaxNamingDirectorySearchResult))
#define JavaxNamingDirectorySearchResult_

#define RESTRICT_JavaxNamingBinding 1
#define INCLUDE_JavaxNamingBinding 1
#include "javax/naming/Binding.h"

@protocol JavaxNamingDirectoryAttributes;

@interface JavaxNamingDirectorySearchResult : JavaxNamingBinding

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)name
                                    withId:(id)obj
        withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (instancetype __nonnull)initWithNSString:(NSString *)name
                                    withId:(id)obj
        withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs
                               withBoolean:(jboolean)isRelative;

- (instancetype __nonnull)initWithNSString:(NSString *)name
                              withNSString:(NSString *)className_
                                    withId:(id)obj
        withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (instancetype __nonnull)initWithNSString:(NSString *)name
                              withNSString:(NSString *)className_
                                    withId:(id)obj
        withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs
                               withBoolean:(jboolean)isRelative;

- (id<JavaxNamingDirectoryAttributes>)getAttributes;

- (void)setAttributesWithJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                    withId:(id)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                    withId:(id)arg1
                               withBoolean:(jboolean)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                              withNSString:(NSString *)arg1
                                    withId:(id)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                              withNSString:(NSString *)arg1
                                    withId:(id)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingDirectorySearchResult)

FOUNDATION_EXPORT void JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_(JavaxNamingDirectorySearchResult *self, NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs);

FOUNDATION_EXPORT JavaxNamingDirectorySearchResult *new_JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_(NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingDirectorySearchResult *create_JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_(NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs);

FOUNDATION_EXPORT void JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(JavaxNamingDirectorySearchResult *self, NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative);

FOUNDATION_EXPORT JavaxNamingDirectorySearchResult *new_JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingDirectorySearchResult *create_JavaxNamingDirectorySearchResult_initWithNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(NSString *name, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative);

FOUNDATION_EXPORT void JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_(JavaxNamingDirectorySearchResult *self, NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs);

FOUNDATION_EXPORT JavaxNamingDirectorySearchResult *new_JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_(NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingDirectorySearchResult *create_JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_(NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs);

FOUNDATION_EXPORT void JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(JavaxNamingDirectorySearchResult *self, NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative);

FOUNDATION_EXPORT JavaxNamingDirectorySearchResult *new_JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingDirectorySearchResult *create_JavaxNamingDirectorySearchResult_initWithNSString_withNSString_withId_withJavaxNamingDirectoryAttributes_withBoolean_(NSString *name, NSString *className_, id obj, id<JavaxNamingDirectoryAttributes> attrs, jboolean isRelative);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingDirectorySearchResult)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingDirectorySearchResult")
