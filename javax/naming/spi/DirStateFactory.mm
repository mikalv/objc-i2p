//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/spi/DirStateFactory.java
//

#include "J2ObjC_source.h"
#include "javax/naming/directory/Attributes.h"
#include "javax/naming/spi/DirStateFactory.h"

@interface JavaxNamingSpiDirStateFactory : NSObject

@end

@interface JavaxNamingSpiDirStateFactory_Result () {
 @public
  id obj_;
  id<JavaxNamingDirectoryAttributes> attrs_;
}

@end

J2OBJC_FIELD_SETTER(JavaxNamingSpiDirStateFactory_Result, obj_, id)
J2OBJC_FIELD_SETTER(JavaxNamingSpiDirStateFactory_Result, attrs_, id<JavaxNamingDirectoryAttributes>)

@implementation JavaxNamingSpiDirStateFactory

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaxNamingSpiDirStateFactory_Result;", 0x401, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getStateToBindWithId:withJavaxNamingName:withJavaxNamingContext:withJavaUtilHashtable:withJavaxNamingDirectoryAttributes:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getStateToBind", "LNSObject;LJavaxNamingName;LJavaxNamingContext;LJavaUtilHashtable;LJavaxNamingDirectoryAttributes;", "LJavaxNamingNamingException;", "(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable<**>;Ljavax/naming/directory/Attributes;)Ljavax/naming/spi/DirStateFactory$Result;", "LJavaxNamingSpiDirStateFactory_Result;" };
  static const J2ObjcClassInfo _JavaxNamingSpiDirStateFactory = { "DirStateFactory", "javax.naming.spi", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, 4, -1, -1, -1 };
  return &_JavaxNamingSpiDirStateFactory;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(JavaxNamingSpiDirStateFactory)

@implementation JavaxNamingSpiDirStateFactory_Result

- (instancetype)initWithId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)outAttrs {
  JavaxNamingSpiDirStateFactory_Result_initWithId_withJavaxNamingDirectoryAttributes_(self, obj, outAttrs);
  return self;
}

- (id)getObject {
  return obj_;
}

- (id<JavaxNamingDirectoryAttributes>)getAttributes {
  return attrs_;
}

- (void)dealloc {
  RELEASE_(obj_);
  RELEASE_(attrs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaxNamingDirectoryAttributes;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:withJavaxNamingDirectoryAttributes:);
  methods[1].selector = @selector(getObject);
  methods[2].selector = @selector(getAttributes);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "obj_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attrs_", "LJavaxNamingDirectoryAttributes;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LJavaxNamingDirectoryAttributes;", "LJavaxNamingSpiDirStateFactory;" };
  static const J2ObjcClassInfo _JavaxNamingSpiDirStateFactory_Result = { "Result", "javax.naming.spi", ptrTable, methods, fields, 7, 0x9, 3, 2, 1, -1, -1, -1, -1 };
  return &_JavaxNamingSpiDirStateFactory_Result;
}

@end

void JavaxNamingSpiDirStateFactory_Result_initWithId_withJavaxNamingDirectoryAttributes_(JavaxNamingSpiDirStateFactory_Result *self, id obj, id<JavaxNamingDirectoryAttributes> outAttrs) {
  NSObject_init(self);
  JreStrongAssign(&self->obj_, obj);
  JreStrongAssign(&self->attrs_, outAttrs);
}

JavaxNamingSpiDirStateFactory_Result *new_JavaxNamingSpiDirStateFactory_Result_initWithId_withJavaxNamingDirectoryAttributes_(id obj, id<JavaxNamingDirectoryAttributes> outAttrs) {
  J2OBJC_NEW_IMPL(JavaxNamingSpiDirStateFactory_Result, initWithId_withJavaxNamingDirectoryAttributes_, obj, outAttrs)
}

JavaxNamingSpiDirStateFactory_Result *create_JavaxNamingSpiDirStateFactory_Result_initWithId_withJavaxNamingDirectoryAttributes_(id obj, id<JavaxNamingDirectoryAttributes> outAttrs) {
  J2OBJC_CREATE_IMPL(JavaxNamingSpiDirStateFactory_Result, initWithId_withJavaxNamingDirectoryAttributes_, obj, outAttrs)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaxNamingSpiDirStateFactory_Result)
