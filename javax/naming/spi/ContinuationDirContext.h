//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/spi/ContinuationDirContext.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingSpiContinuationDirContext")
#ifdef RESTRICT_JavaxNamingSpiContinuationDirContext
#define INCLUDE_ALL_JavaxNamingSpiContinuationDirContext 0
#else
#define INCLUDE_ALL_JavaxNamingSpiContinuationDirContext 1
#endif
#undef RESTRICT_JavaxNamingSpiContinuationDirContext

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingSpiContinuationDirContext_) && (INCLUDE_ALL_JavaxNamingSpiContinuationDirContext || defined(INCLUDE_JavaxNamingSpiContinuationDirContext))
#define JavaxNamingSpiContinuationDirContext_

#define RESTRICT_JavaxNamingSpiContinuationContext 1
#define INCLUDE_JavaxNamingSpiContinuationContext 1
#include "javax/naming/spi/ContinuationContext.h"

#define RESTRICT_JavaxNamingDirectoryDirContext 1
#define INCLUDE_JavaxNamingDirectoryDirContext 1
#include "javax/naming/directory/DirContext.h"

@class IOSObjectArray;
@class JavaUtilHashtable;
@class JavaxNamingCannotProceedException;
@class JavaxNamingDirectorySearchControls;
@class JavaxNamingSpiDirContextNamePair;
@class JavaxNamingSpiDirContextStringPair;
@protocol JavaxNamingDirectoryAttributes;
@protocol JavaxNamingName;
@protocol JavaxNamingNamingEnumeration;

@interface JavaxNamingSpiContinuationDirContext : JavaxNamingSpiContinuationContext < JavaxNamingDirectoryDirContext >

#pragma mark Public

- (void)bindWithJavaxNamingName:(id<JavaxNamingName>)name
                         withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (void)bindWithNSString:(NSString *)name
                  withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (id<JavaxNamingDirectoryDirContext>)createSubcontextWithJavaxNamingName:(id<JavaxNamingName>)name
                                       withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (id<JavaxNamingDirectoryDirContext>)createSubcontextWithNSString:(NSString *)name
                                withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (id<JavaxNamingDirectoryAttributes>)getAttributesWithJavaxNamingName:(id<JavaxNamingName>)name;

- (id<JavaxNamingDirectoryAttributes>)getAttributesWithJavaxNamingName:(id<JavaxNamingName>)name
                                                     withNSStringArray:(IOSObjectArray *)attrIds;

- (id<JavaxNamingDirectoryAttributes>)getAttributesWithNSString:(NSString *)name;

- (id<JavaxNamingDirectoryAttributes>)getAttributesWithNSString:(NSString *)name
                                              withNSStringArray:(IOSObjectArray *)attrIds;

- (id<JavaxNamingDirectoryDirContext>)getSchemaWithJavaxNamingName:(id<JavaxNamingName>)name;

- (id<JavaxNamingDirectoryDirContext>)getSchemaWithNSString:(NSString *)name;

- (id<JavaxNamingDirectoryDirContext>)getSchemaClassDefinitionWithJavaxNamingName:(id<JavaxNamingName>)name;

- (id<JavaxNamingDirectoryDirContext>)getSchemaClassDefinitionWithNSString:(NSString *)name;

- (void)modifyAttributesWithJavaxNamingName:(id<JavaxNamingName>)name
                                    withInt:(jint)mod_op
         withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (void)modifyAttributesWithJavaxNamingName:(id<JavaxNamingName>)name
withJavaxNamingDirectoryModificationItemArray:(IOSObjectArray *)mods;

- (void)modifyAttributesWithNSString:(NSString *)name
                             withInt:(jint)mod_op
  withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (void)modifyAttributesWithNSString:(NSString *)name
withJavaxNamingDirectoryModificationItemArray:(IOSObjectArray *)mods;

- (void)rebindWithJavaxNamingName:(id<JavaxNamingName>)name
                           withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (void)rebindWithNSString:(NSString *)name
                    withId:(id)obj
withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)attrs;

- (id<JavaxNamingNamingEnumeration>)searchWithJavaxNamingName:(id<JavaxNamingName>)name
                           withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)matchingAttributes;

- (id<JavaxNamingNamingEnumeration>)searchWithJavaxNamingName:(id<JavaxNamingName>)name
                           withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)matchingAttributes
                                            withNSStringArray:(IOSObjectArray *)attributesToReturn;

- (id<JavaxNamingNamingEnumeration>)searchWithJavaxNamingName:(id<JavaxNamingName>)name
                                                 withNSString:(NSString *)filterExpr
                                            withNSObjectArray:(IOSObjectArray *)args
                       withJavaxNamingDirectorySearchControls:(JavaxNamingDirectorySearchControls *)cons;

- (id<JavaxNamingNamingEnumeration>)searchWithJavaxNamingName:(id<JavaxNamingName>)name
                                                 withNSString:(NSString *)filter
                       withJavaxNamingDirectorySearchControls:(JavaxNamingDirectorySearchControls *)cons;

- (id<JavaxNamingNamingEnumeration>)searchWithNSString:(NSString *)name
                    withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)matchingAttributes;

- (id<JavaxNamingNamingEnumeration>)searchWithNSString:(NSString *)name
                    withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)matchingAttributes
                                     withNSStringArray:(IOSObjectArray *)attributesToReturn;

- (id<JavaxNamingNamingEnumeration>)searchWithNSString:(NSString *)name
                                          withNSString:(NSString *)filterExpr
                                     withNSObjectArray:(IOSObjectArray *)args
                withJavaxNamingDirectorySearchControls:(JavaxNamingDirectorySearchControls *)cons;

- (id<JavaxNamingNamingEnumeration>)searchWithNSString:(NSString *)name
                                          withNSString:(NSString *)filter
                withJavaxNamingDirectorySearchControls:(JavaxNamingDirectorySearchControls *)cons;

#pragma mark Protected

- (JavaxNamingSpiDirContextNamePair *)getTargetContextWithJavaxNamingName:(id<JavaxNamingName>)name;

- (JavaxNamingSpiDirContextStringPair *)getTargetContextWithNSString:(NSString *)name;

#pragma mark Package-Private

- (instancetype __nonnull)initWithJavaxNamingCannotProceedException:(JavaxNamingCannotProceedException *)cpe
                                              withJavaUtilHashtable:(JavaUtilHashtable *)env;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingSpiContinuationDirContext)

FOUNDATION_EXPORT void JavaxNamingSpiContinuationDirContext_initWithJavaxNamingCannotProceedException_withJavaUtilHashtable_(JavaxNamingSpiContinuationDirContext *self, JavaxNamingCannotProceedException *cpe, JavaUtilHashtable *env);

FOUNDATION_EXPORT JavaxNamingSpiContinuationDirContext *new_JavaxNamingSpiContinuationDirContext_initWithJavaxNamingCannotProceedException_withJavaUtilHashtable_(JavaxNamingCannotProceedException *cpe, JavaUtilHashtable *env) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingSpiContinuationDirContext *create_JavaxNamingSpiContinuationDirContext_initWithJavaxNamingCannotProceedException_withJavaUtilHashtable_(JavaxNamingCannotProceedException *cpe, JavaUtilHashtable *env);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingSpiContinuationDirContext)

#endif

#if !defined (JavaxNamingSpiDirContextNamePair_) && (INCLUDE_ALL_JavaxNamingSpiContinuationDirContext || defined(INCLUDE_JavaxNamingSpiDirContextNamePair))
#define JavaxNamingSpiDirContextNamePair_

@protocol JavaxNamingDirectoryDirContext;
@protocol JavaxNamingName;

@interface JavaxNamingSpiDirContextNamePair : NSObject {
 @public
  id<JavaxNamingDirectoryDirContext> ctx_;
  id<JavaxNamingName> name_;
}

#pragma mark Package-Private

- (instancetype __nonnull)initWithJavaxNamingDirectoryDirContext:(id<JavaxNamingDirectoryDirContext>)ctx
                                             withJavaxNamingName:(id<JavaxNamingName>)name;

- (id<JavaxNamingDirectoryDirContext>)getDirContext;

- (id<JavaxNamingName>)getName;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingSpiDirContextNamePair)

J2OBJC_FIELD_SETTER(JavaxNamingSpiDirContextNamePair, ctx_, id<JavaxNamingDirectoryDirContext>)
J2OBJC_FIELD_SETTER(JavaxNamingSpiDirContextNamePair, name_, id<JavaxNamingName>)

FOUNDATION_EXPORT void JavaxNamingSpiDirContextNamePair_initWithJavaxNamingDirectoryDirContext_withJavaxNamingName_(JavaxNamingSpiDirContextNamePair *self, id<JavaxNamingDirectoryDirContext> ctx, id<JavaxNamingName> name);

FOUNDATION_EXPORT JavaxNamingSpiDirContextNamePair *new_JavaxNamingSpiDirContextNamePair_initWithJavaxNamingDirectoryDirContext_withJavaxNamingName_(id<JavaxNamingDirectoryDirContext> ctx, id<JavaxNamingName> name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingSpiDirContextNamePair *create_JavaxNamingSpiDirContextNamePair_initWithJavaxNamingDirectoryDirContext_withJavaxNamingName_(id<JavaxNamingDirectoryDirContext> ctx, id<JavaxNamingName> name);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingSpiDirContextNamePair)

#endif

#if !defined (JavaxNamingSpiDirContextStringPair_) && (INCLUDE_ALL_JavaxNamingSpiContinuationDirContext || defined(INCLUDE_JavaxNamingSpiDirContextStringPair))
#define JavaxNamingSpiDirContextStringPair_

@protocol JavaxNamingDirectoryDirContext;

@interface JavaxNamingSpiDirContextStringPair : NSObject {
 @public
  id<JavaxNamingDirectoryDirContext> ctx_;
  NSString *str_;
}

#pragma mark Package-Private

- (instancetype __nonnull)initWithJavaxNamingDirectoryDirContext:(id<JavaxNamingDirectoryDirContext>)ctx
                                                    withNSString:(NSString *)str;

- (id<JavaxNamingDirectoryDirContext>)getDirContext;

- (NSString *)getString;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingSpiDirContextStringPair)

J2OBJC_FIELD_SETTER(JavaxNamingSpiDirContextStringPair, ctx_, id<JavaxNamingDirectoryDirContext>)
J2OBJC_FIELD_SETTER(JavaxNamingSpiDirContextStringPair, str_, NSString *)

FOUNDATION_EXPORT void JavaxNamingSpiDirContextStringPair_initWithJavaxNamingDirectoryDirContext_withNSString_(JavaxNamingSpiDirContextStringPair *self, id<JavaxNamingDirectoryDirContext> ctx, NSString *str);

FOUNDATION_EXPORT JavaxNamingSpiDirContextStringPair *new_JavaxNamingSpiDirContextStringPair_initWithJavaxNamingDirectoryDirContext_withNSString_(id<JavaxNamingDirectoryDirContext> ctx, NSString *str) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingSpiDirContextStringPair *create_JavaxNamingSpiDirContextStringPair_initWithJavaxNamingDirectoryDirContext_withNSString_(id<JavaxNamingDirectoryDirContext> ctx, NSString *str);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingSpiDirContextStringPair)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingSpiContinuationDirContext")
