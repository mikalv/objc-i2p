//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/spi/Resolver.java
//

#include "J2ObjC_source.h"
#include "javax/naming/spi/Resolver.h"

@interface JavaxNamingSpiResolver : NSObject

@end

@implementation JavaxNamingSpiResolver

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaxNamingSpiResolveResult;", 0x401, 0, 1, 2, 3, -1, -1 },
    { NULL, "LJavaxNamingSpiResolveResult;", 0x401, 0, 4, 2, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(resolveToClassWithJavaxNamingName:withIOSClass:);
  methods[1].selector = @selector(resolveToClassWithNSString:withIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "resolveToClass", "LJavaxNamingName;LIOSClass;", "LJavaxNamingNamingException;", "(Ljavax/naming/Name;Ljava/lang/Class<+Ljavax/naming/Context;>;)Ljavax/naming/spi/ResolveResult;", "LNSString;LIOSClass;", "(Ljava/lang/String;Ljava/lang/Class<+Ljavax/naming/Context;>;)Ljavax/naming/spi/ResolveResult;" };
  static const J2ObjcClassInfo _JavaxNamingSpiResolver = { "Resolver", "javax.naming.spi", ptrTable, methods, NULL, 7, 0x609, 2, 0, -1, -1, -1, -1, -1 };
  return &_JavaxNamingSpiResolver;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(JavaxNamingSpiResolver)
