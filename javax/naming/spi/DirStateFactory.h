//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/spi/DirStateFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingSpiDirStateFactory")
#ifdef RESTRICT_JavaxNamingSpiDirStateFactory
#define INCLUDE_ALL_JavaxNamingSpiDirStateFactory 0
#else
#define INCLUDE_ALL_JavaxNamingSpiDirStateFactory 1
#endif
#undef RESTRICT_JavaxNamingSpiDirStateFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingSpiDirStateFactory_) && (INCLUDE_ALL_JavaxNamingSpiDirStateFactory || defined(INCLUDE_JavaxNamingSpiDirStateFactory))
#define JavaxNamingSpiDirStateFactory_

#define RESTRICT_JavaxNamingSpiStateFactory 1
#define INCLUDE_JavaxNamingSpiStateFactory 1
#include "javax/naming/spi/StateFactory.h"

@class JavaUtilHashtable;
@class JavaxNamingSpiDirStateFactory_Result;
@protocol JavaxNamingContext;
@protocol JavaxNamingDirectoryAttributes;
@protocol JavaxNamingName;

@protocol JavaxNamingSpiDirStateFactory < JavaxNamingSpiStateFactory, JavaObject >

- (JavaxNamingSpiDirStateFactory_Result *)getStateToBindWithId:(id)obj
                                           withJavaxNamingName:(id<JavaxNamingName>)name
                                        withJavaxNamingContext:(id<JavaxNamingContext>)nameCtx
                                         withJavaUtilHashtable:(JavaUtilHashtable *)environment
                            withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)inAttrs;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingSpiDirStateFactory)

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingSpiDirStateFactory)

#endif

#if !defined (JavaxNamingSpiDirStateFactory_Result_) && (INCLUDE_ALL_JavaxNamingSpiDirStateFactory || defined(INCLUDE_JavaxNamingSpiDirStateFactory_Result))
#define JavaxNamingSpiDirStateFactory_Result_

@protocol JavaxNamingDirectoryAttributes;

@interface JavaxNamingSpiDirStateFactory_Result : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithId:(id)obj
  withJavaxNamingDirectoryAttributes:(id<JavaxNamingDirectoryAttributes>)outAttrs;

- (id<JavaxNamingDirectoryAttributes>)getAttributes;

- (id)getObject;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingSpiDirStateFactory_Result)

FOUNDATION_EXPORT void JavaxNamingSpiDirStateFactory_Result_initWithId_withJavaxNamingDirectoryAttributes_(JavaxNamingSpiDirStateFactory_Result *self, id obj, id<JavaxNamingDirectoryAttributes> outAttrs);

FOUNDATION_EXPORT JavaxNamingSpiDirStateFactory_Result *new_JavaxNamingSpiDirStateFactory_Result_initWithId_withJavaxNamingDirectoryAttributes_(id obj, id<JavaxNamingDirectoryAttributes> outAttrs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingSpiDirStateFactory_Result *create_JavaxNamingSpiDirStateFactory_Result_initWithId_withJavaxNamingDirectoryAttributes_(id obj, id<JavaxNamingDirectoryAttributes> outAttrs);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingSpiDirStateFactory_Result)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingSpiDirStateFactory")
