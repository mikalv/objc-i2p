//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/BinaryRefAddr.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingBinaryRefAddr")
#ifdef RESTRICT_JavaxNamingBinaryRefAddr
#define INCLUDE_ALL_JavaxNamingBinaryRefAddr 0
#else
#define INCLUDE_ALL_JavaxNamingBinaryRefAddr 1
#endif
#undef RESTRICT_JavaxNamingBinaryRefAddr

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingBinaryRefAddr_) && (INCLUDE_ALL_JavaxNamingBinaryRefAddr || defined(INCLUDE_JavaxNamingBinaryRefAddr))
#define JavaxNamingBinaryRefAddr_

#define RESTRICT_JavaxNamingRefAddr 1
#define INCLUDE_JavaxNamingRefAddr 1
#include "javax/naming/RefAddr.h"

@class IOSByteArray;

@interface JavaxNamingBinaryRefAddr : JavaxNamingRefAddr

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)addrType
                             withByteArray:(IOSByteArray *)src;

- (instancetype __nonnull)initWithNSString:(NSString *)addrType
                             withByteArray:(IOSByteArray *)src
                                   withInt:(jint)offset
                                   withInt:(jint)count;

- (jboolean)isEqual:(id)obj;

- (id)getContent;

- (NSUInteger)hash;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingBinaryRefAddr)

FOUNDATION_EXPORT void JavaxNamingBinaryRefAddr_initWithNSString_withByteArray_(JavaxNamingBinaryRefAddr *self, NSString *addrType, IOSByteArray *src);

FOUNDATION_EXPORT JavaxNamingBinaryRefAddr *new_JavaxNamingBinaryRefAddr_initWithNSString_withByteArray_(NSString *addrType, IOSByteArray *src) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingBinaryRefAddr *create_JavaxNamingBinaryRefAddr_initWithNSString_withByteArray_(NSString *addrType, IOSByteArray *src);

FOUNDATION_EXPORT void JavaxNamingBinaryRefAddr_initWithNSString_withByteArray_withInt_withInt_(JavaxNamingBinaryRefAddr *self, NSString *addrType, IOSByteArray *src, jint offset, jint count);

FOUNDATION_EXPORT JavaxNamingBinaryRefAddr *new_JavaxNamingBinaryRefAddr_initWithNSString_withByteArray_withInt_withInt_(NSString *addrType, IOSByteArray *src, jint offset, jint count) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxNamingBinaryRefAddr *create_JavaxNamingBinaryRefAddr_initWithNSString_withByteArray_withInt_withInt_(NSString *addrType, IOSByteArray *src, jint offset, jint count);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingBinaryRefAddr)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingBinaryRefAddr")
