//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/RefAddr.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingRefAddr")
#ifdef RESTRICT_JavaxNamingRefAddr
#define INCLUDE_ALL_JavaxNamingRefAddr 0
#else
#define INCLUDE_ALL_JavaxNamingRefAddr 1
#endif
#undef RESTRICT_JavaxNamingRefAddr

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingRefAddr_) && (INCLUDE_ALL_JavaxNamingRefAddr || defined(INCLUDE_JavaxNamingRefAddr))
#define JavaxNamingRefAddr_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@interface JavaxNamingRefAddr : NSObject < JavaIoSerializable > {
 @public
  NSString *addrType_;
}

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (id)getContent;

- (NSString *)getType;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Protected

- (instancetype __nonnull)initWithNSString:(NSString *)addrType;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingRefAddr)

J2OBJC_FIELD_SETTER(JavaxNamingRefAddr, addrType_, NSString *)

FOUNDATION_EXPORT void JavaxNamingRefAddr_initWithNSString_(JavaxNamingRefAddr *self, NSString *addrType);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingRefAddr)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingRefAddr")
