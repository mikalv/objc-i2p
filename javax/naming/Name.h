//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/javax/naming/Name.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNamingName")
#ifdef RESTRICT_JavaxNamingName
#define INCLUDE_ALL_JavaxNamingName 0
#else
#define INCLUDE_ALL_JavaxNamingName 1
#endif
#undef RESTRICT_JavaxNamingName

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNamingName_) && (INCLUDE_ALL_JavaxNamingName || defined(INCLUDE_JavaxNamingName))
#define JavaxNamingName_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@protocol JavaUtilEnumeration;

@protocol JavaxNamingName < NSCopying, JavaIoSerializable, JavaLangComparable, JavaObject >

- (id)clone;

- (jint)compareToWithId:(id)obj;

- (jint)size;

- (jboolean)isEmpty;

- (id<JavaUtilEnumeration>)getAll;

- (NSString *)getWithInt:(jint)posn;

- (id<JavaxNamingName>)getPrefixWithInt:(jint)posn;

- (id<JavaxNamingName>)getSuffixWithInt:(jint)posn;

- (jboolean)startsWithWithJavaxNamingName:(id<JavaxNamingName>)n;

- (jboolean)endsWithWithJavaxNamingName:(id<JavaxNamingName>)n;

- (id<JavaxNamingName>)addAllWithJavaxNamingName:(id<JavaxNamingName>)suffix;

- (id<JavaxNamingName>)addAllWithInt:(jint)posn
                 withJavaxNamingName:(id<JavaxNamingName>)n;

- (id<JavaxNamingName>)addWithNSString:(NSString *)comp;

- (id<JavaxNamingName>)addWithInt:(jint)posn
                     withNSString:(NSString *)comp;

- (id)removeWithInt:(jint)posn;

@end

@interface JavaxNamingName : NSObject
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNamingName)

inline jlong JavaxNamingName_get_serialVersionUID(void);
#define JavaxNamingName_serialVersionUID -3617482732056931635LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxNamingName, serialVersionUID, jlong)

J2OBJC_TYPE_LITERAL_HEADER(JavaxNamingName)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxNamingName")
