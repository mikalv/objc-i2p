//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/parser/ContentHandler.java
//

#include "J2ObjC_source.h"
#include "net/minidev/json/parser/ContentHandler.h"

@interface NetMinidevJsonParserContentHandler : NSObject

@end

@implementation NetMinidevJsonParserContentHandler

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "Z", 0x401, 1, 2, 0, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "Z", 0x401, 3, 4, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(startJSON);
  methods[1].selector = @selector(endJSON);
  methods[2].selector = @selector(startObject);
  methods[3].selector = @selector(endObject);
  methods[4].selector = @selector(startObjectEntryWithNSString:);
  methods[5].selector = @selector(endObjectEntry);
  methods[6].selector = @selector(startArray);
  methods[7].selector = @selector(endArray);
  methods[8].selector = @selector(primitiveWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNetMinidevJsonParserParseException;LJavaIoIOException;", "startObjectEntry", "LNSString;", "primitive", "LNSObject;" };
  static const J2ObjcClassInfo _NetMinidevJsonParserContentHandler = { "ContentHandler", "net.minidev.json.parser", ptrTable, methods, NULL, 7, 0x609, 9, 0, -1, -1, -1, -1, -1 };
  return &_NetMinidevJsonParserContentHandler;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(NetMinidevJsonParserContentHandler)
