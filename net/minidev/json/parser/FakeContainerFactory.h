//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/parser/FakeContainerFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetMinidevJsonParserFakeContainerFactory")
#ifdef RESTRICT_NetMinidevJsonParserFakeContainerFactory
#define INCLUDE_ALL_NetMinidevJsonParserFakeContainerFactory 0
#else
#define INCLUDE_ALL_NetMinidevJsonParserFakeContainerFactory 1
#endif
#undef RESTRICT_NetMinidevJsonParserFakeContainerFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetMinidevJsonParserFakeContainerFactory_) && (INCLUDE_ALL_NetMinidevJsonParserFakeContainerFactory || defined(INCLUDE_NetMinidevJsonParserFakeContainerFactory))
#define NetMinidevJsonParserFakeContainerFactory_

#define RESTRICT_NetMinidevJsonParserContainerFactory 1
#define INCLUDE_NetMinidevJsonParserContainerFactory 1
#include "net/minidev/json/parser/ContainerFactory.h"

@class NetMinidevJsonParserFakeContainerFactory_FackList;
@class NetMinidevJsonParserFakeContainerFactory_FackMap;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface NetMinidevJsonParserFakeContainerFactory : NSObject < NetMinidevJsonParserContainerFactory > {
 @public
  NetMinidevJsonParserFakeContainerFactory_FackList *list_;
  NetMinidevJsonParserFakeContainerFactory_FackMap *map_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (id<JavaUtilList>)createArrayContainer;

- (id<JavaUtilMap>)createObjectContainer;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonParserFakeContainerFactory)

J2OBJC_FIELD_SETTER(NetMinidevJsonParserFakeContainerFactory, list_, NetMinidevJsonParserFakeContainerFactory_FackList *)
J2OBJC_FIELD_SETTER(NetMinidevJsonParserFakeContainerFactory, map_, NetMinidevJsonParserFakeContainerFactory_FackMap *)

FOUNDATION_EXPORT void NetMinidevJsonParserFakeContainerFactory_init(NetMinidevJsonParserFakeContainerFactory *self);

FOUNDATION_EXPORT NetMinidevJsonParserFakeContainerFactory *new_NetMinidevJsonParserFakeContainerFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonParserFakeContainerFactory *create_NetMinidevJsonParserFakeContainerFactory_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonParserFakeContainerFactory)

#endif

#if !defined (NetMinidevJsonParserFakeContainerFactory_FackMap_) && (INCLUDE_ALL_NetMinidevJsonParserFakeContainerFactory || defined(INCLUDE_NetMinidevJsonParserFakeContainerFactory_FackMap))
#define NetMinidevJsonParserFakeContainerFactory_FackMap_

#define RESTRICT_JavaUtilAbstractMap 1
#define INCLUDE_JavaUtilAbstractMap 1
#include "java/util/AbstractMap.h"

@protocol JavaUtilSet;

@interface NetMinidevJsonParserFakeContainerFactory_FackMap : JavaUtilAbstractMap

#pragma mark Public

- (id<JavaUtilSet>)entrySet;

- (id)putWithId:(NSString *)key
         withId:(id)value;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonParserFakeContainerFactory_FackMap)

FOUNDATION_EXPORT void NetMinidevJsonParserFakeContainerFactory_FackMap_init(NetMinidevJsonParserFakeContainerFactory_FackMap *self);

FOUNDATION_EXPORT NetMinidevJsonParserFakeContainerFactory_FackMap *new_NetMinidevJsonParserFakeContainerFactory_FackMap_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonParserFakeContainerFactory_FackMap *create_NetMinidevJsonParserFakeContainerFactory_FackMap_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonParserFakeContainerFactory_FackMap)

#endif

#if !defined (NetMinidevJsonParserFakeContainerFactory_FackList_) && (INCLUDE_ALL_NetMinidevJsonParserFakeContainerFactory || defined(INCLUDE_NetMinidevJsonParserFakeContainerFactory_FackList))
#define NetMinidevJsonParserFakeContainerFactory_FackList_

#define RESTRICT_JavaUtilArrayList 1
#define INCLUDE_JavaUtilArrayList 1
#include "java/util/ArrayList.h"

@protocol JavaUtilCollection;

@interface NetMinidevJsonParserFakeContainerFactory_FackList : JavaUtilArrayList

#pragma mark Public

- (jboolean)addWithId:(id)e;

- (id)getWithInt:(jint)index;

- (jint)size;

#pragma mark Package-Private

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonParserFakeContainerFactory_FackList)

FOUNDATION_EXPORT void NetMinidevJsonParserFakeContainerFactory_FackList_init(NetMinidevJsonParserFakeContainerFactory_FackList *self);

FOUNDATION_EXPORT NetMinidevJsonParserFakeContainerFactory_FackList *new_NetMinidevJsonParserFakeContainerFactory_FackList_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonParserFakeContainerFactory_FackList *create_NetMinidevJsonParserFakeContainerFactory_FackList_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonParserFakeContainerFactory_FackList)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetMinidevJsonParserFakeContainerFactory")
