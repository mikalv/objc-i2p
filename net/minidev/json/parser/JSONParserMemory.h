//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/parser/JSONParserMemory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetMinidevJsonParserJSONParserMemory")
#ifdef RESTRICT_NetMinidevJsonParserJSONParserMemory
#define INCLUDE_ALL_NetMinidevJsonParserJSONParserMemory 0
#else
#define INCLUDE_ALL_NetMinidevJsonParserJSONParserMemory 1
#endif
#undef RESTRICT_NetMinidevJsonParserJSONParserMemory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetMinidevJsonParserJSONParserMemory_) && (INCLUDE_ALL_NetMinidevJsonParserJSONParserMemory || defined(INCLUDE_NetMinidevJsonParserJSONParserMemory))
#define NetMinidevJsonParserJSONParserMemory_

#define RESTRICT_NetMinidevJsonParserJSONParserBase 1
#define INCLUDE_NetMinidevJsonParserJSONParserBase 1
#include "net/minidev/json/parser/JSONParserBase.h"

@class IOSBooleanArray;

@interface NetMinidevJsonParserJSONParserMemory : NetMinidevJsonParserJSONParserBase {
 @public
  jint len_;
}

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)permissiveMode;

#pragma mark Protected

- (void)extractStringWithInt:(jint)start
                     withInt:(jint)stop;

- (void)extractStringTrimWithInt:(jint)start
                         withInt:(jint)stop;

- (jint)indexOfWithChar:(jchar)c
                withInt:(jint)pos;

- (void)readNQStringWithBooleanArray:(IOSBooleanArray *)stop;

- (id)readNumberWithBooleanArray:(IOSBooleanArray *)stop;

- (void)readString;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonParserJSONParserMemory)

FOUNDATION_EXPORT void NetMinidevJsonParserJSONParserMemory_initWithInt_(NetMinidevJsonParserJSONParserMemory *self, jint permissiveMode);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonParserJSONParserMemory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetMinidevJsonParserJSONParserMemory")
