//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/parser/JSONParserInputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetMinidevJsonParserJSONParserInputStream")
#ifdef RESTRICT_NetMinidevJsonParserJSONParserInputStream
#define INCLUDE_ALL_NetMinidevJsonParserJSONParserInputStream 0
#else
#define INCLUDE_ALL_NetMinidevJsonParserJSONParserInputStream 1
#endif
#undef RESTRICT_NetMinidevJsonParserJSONParserInputStream

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetMinidevJsonParserJSONParserInputStream_) && (INCLUDE_ALL_NetMinidevJsonParserJSONParserInputStream || defined(INCLUDE_NetMinidevJsonParserJSONParserInputStream))
#define NetMinidevJsonParserJSONParserInputStream_

#define RESTRICT_NetMinidevJsonParserJSONParserReader 1
#define INCLUDE_NetMinidevJsonParserJSONParserReader 1
#include "net/minidev/json/parser/JSONParserReader.h"

@class JavaIoInputStream;
@protocol NetMinidevJsonParserContainerFactory;
@protocol NetMinidevJsonParserContentHandler;

@interface NetMinidevJsonParserJSONParserInputStream : NetMinidevJsonParserJSONParserReader

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)permissiveMode;

- (id)parseWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (id)parseWithJavaIoInputStream:(JavaIoInputStream *)inArg
withNetMinidevJsonParserContainerFactory:(id<NetMinidevJsonParserContainerFactory>)containerFactory;

- (id)parseWithJavaIoInputStream:(JavaIoInputStream *)inArg
withNetMinidevJsonParserContainerFactory:(id<NetMinidevJsonParserContainerFactory>)containerFactory
withNetMinidevJsonParserContentHandler:(id<NetMinidevJsonParserContentHandler>)handler;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonParserJSONParserInputStream)

FOUNDATION_EXPORT void NetMinidevJsonParserJSONParserInputStream_initWithInt_(NetMinidevJsonParserJSONParserInputStream *self, jint permissiveMode);

FOUNDATION_EXPORT NetMinidevJsonParserJSONParserInputStream *new_NetMinidevJsonParserJSONParserInputStream_initWithInt_(jint permissiveMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonParserJSONParserInputStream *create_NetMinidevJsonParserJSONParserInputStream_initWithInt_(jint permissiveMode);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonParserJSONParserInputStream)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetMinidevJsonParserJSONParserInputStream")
