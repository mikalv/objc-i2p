//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/parser/FakeContainerFactory.java
//

#include "J2ObjC_source.h"
#include "java/util/AbstractMap.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "net/minidev/json/parser/FakeContainerFactory.h"

@implementation NetMinidevJsonParserFakeContainerFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonParserFakeContainerFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilList>)createArrayContainer {
  if (list_ == nil) JreStrongAssignAndConsume(&list_, new_NetMinidevJsonParserFakeContainerFactory_FackList_init());
  return list_;
}

- (id<JavaUtilMap>)createObjectContainer {
  if (map_ == nil) JreStrongAssignAndConsume(&map_, new_NetMinidevJsonParserFakeContainerFactory_FackMap_init());
  return map_;
}

- (void)dealloc {
  RELEASE_(list_);
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createArrayContainer);
  methods[2].selector = @selector(createObjectContainer);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "list_", "LNetMinidevJsonParserFakeContainerFactory_FackList;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "map_", "LNetMinidevJsonParserFakeContainerFactory_FackMap;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/List<Ljava/lang/Object;>;", "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "LNetMinidevJsonParserFakeContainerFactory_FackMap;LNetMinidevJsonParserFakeContainerFactory_FackList;" };
  static const J2ObjcClassInfo _NetMinidevJsonParserFakeContainerFactory = { "FakeContainerFactory", "net.minidev.json.parser", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, 2, -1, -1, -1 };
  return &_NetMinidevJsonParserFakeContainerFactory;
}

@end

void NetMinidevJsonParserFakeContainerFactory_init(NetMinidevJsonParserFakeContainerFactory *self) {
  NSObject_init(self);
}

NetMinidevJsonParserFakeContainerFactory *new_NetMinidevJsonParserFakeContainerFactory_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonParserFakeContainerFactory, init)
}

NetMinidevJsonParserFakeContainerFactory *create_NetMinidevJsonParserFakeContainerFactory_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonParserFakeContainerFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetMinidevJsonParserFakeContainerFactory)

@implementation NetMinidevJsonParserFakeContainerFactory_FackMap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonParserFakeContainerFactory_FackMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)putWithId:(NSString *)key
         withId:(id)value {
  return nil;
}

- (id<JavaUtilSet>)entrySet {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(putWithId:withId:);
  methods[2].selector = @selector(entrySet);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "put", "LNSString;LNSObject;", "()Ljava/util/Set<Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/Object;>;>;", "LNetMinidevJsonParserFakeContainerFactory;", "Ljava/util/AbstractMap<Ljava/lang/String;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonParserFakeContainerFactory_FackMap = { "FackMap", "net.minidev.json.parser", ptrTable, methods, NULL, 7, 0x8, 3, 0, 3, -1, -1, 4, -1 };
  return &_NetMinidevJsonParserFakeContainerFactory_FackMap;
}

@end

void NetMinidevJsonParserFakeContainerFactory_FackMap_init(NetMinidevJsonParserFakeContainerFactory_FackMap *self) {
  JavaUtilAbstractMap_init(self);
}

NetMinidevJsonParserFakeContainerFactory_FackMap *new_NetMinidevJsonParserFakeContainerFactory_FackMap_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonParserFakeContainerFactory_FackMap, init)
}

NetMinidevJsonParserFakeContainerFactory_FackMap *create_NetMinidevJsonParserFakeContainerFactory_FackMap_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonParserFakeContainerFactory_FackMap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetMinidevJsonParserFakeContainerFactory_FackMap)

@implementation NetMinidevJsonParserFakeContainerFactory_FackList

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonParserFakeContainerFactory_FackList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)addWithId:(id)e {
  return false;
}

- (id)getWithInt:(jint)index {
  return nil;
}

- (jint)size {
  return 0;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithId:);
  methods[2].selector = @selector(getWithInt:);
  methods[3].selector = @selector(size);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "add", "LNSObject;", "get", "I", "LNetMinidevJsonParserFakeContainerFactory;", "Ljava/util/ArrayList<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonParserFakeContainerFactory_FackList = { "FackList", "net.minidev.json.parser", ptrTable, methods, NULL, 7, 0x8, 4, 0, 4, -1, -1, 5, -1 };
  return &_NetMinidevJsonParserFakeContainerFactory_FackList;
}

@end

void NetMinidevJsonParserFakeContainerFactory_FackList_init(NetMinidevJsonParserFakeContainerFactory_FackList *self) {
  JavaUtilArrayList_init(self);
}

NetMinidevJsonParserFakeContainerFactory_FackList *new_NetMinidevJsonParserFakeContainerFactory_FackList_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonParserFakeContainerFactory_FackList, init)
}

NetMinidevJsonParserFakeContainerFactory_FackList *create_NetMinidevJsonParserFakeContainerFactory_FackList_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonParserFakeContainerFactory_FackList, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetMinidevJsonParserFakeContainerFactory_FackList)
