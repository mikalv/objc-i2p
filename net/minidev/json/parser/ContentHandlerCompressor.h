//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/parser/ContentHandlerCompressor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetMinidevJsonParserContentHandlerCompressor")
#ifdef RESTRICT_NetMinidevJsonParserContentHandlerCompressor
#define INCLUDE_ALL_NetMinidevJsonParserContentHandlerCompressor 0
#else
#define INCLUDE_ALL_NetMinidevJsonParserContentHandlerCompressor 1
#endif
#undef RESTRICT_NetMinidevJsonParserContentHandlerCompressor

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetMinidevJsonParserContentHandlerCompressor_) && (INCLUDE_ALL_NetMinidevJsonParserContentHandlerCompressor || defined(INCLUDE_NetMinidevJsonParserContentHandlerCompressor))
#define NetMinidevJsonParserContentHandlerCompressor_

#define RESTRICT_NetMinidevJsonParserContentHandler 1
#define INCLUDE_NetMinidevJsonParserContentHandler 1
#include "net/minidev/json/parser/ContentHandler.h"

@class IOSIntArray;
@class NetMinidevJsonJSONStyle;
@protocol JavaLangAppendable;

@interface NetMinidevJsonParserContentHandlerCompressor : NSObject < NetMinidevJsonParserContentHandler > {
 @public
  id<JavaLangAppendable> out_;
  NetMinidevJsonJSONStyle *compression_;
  IOSIntArray *stack_;
  jint pos_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaLangAppendable:(id<JavaLangAppendable>)outArg
                         withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

- (jboolean)endArray;

- (void)endJSON;

- (jboolean)endObject;

- (jboolean)endObjectEntry;

- (jboolean)primitiveWithId:(id)value;

- (jboolean)startArray;

- (void)startJSON;

- (jboolean)startObject;

- (jboolean)startObjectEntryWithNSString:(NSString *)key;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonParserContentHandlerCompressor)

J2OBJC_FIELD_SETTER(NetMinidevJsonParserContentHandlerCompressor, out_, id<JavaLangAppendable>)
J2OBJC_FIELD_SETTER(NetMinidevJsonParserContentHandlerCompressor, compression_, NetMinidevJsonJSONStyle *)
J2OBJC_FIELD_SETTER(NetMinidevJsonParserContentHandlerCompressor, stack_, IOSIntArray *)

FOUNDATION_EXPORT void NetMinidevJsonParserContentHandlerCompressor_initWithJavaLangAppendable_withNetMinidevJsonJSONStyle_(NetMinidevJsonParserContentHandlerCompressor *self, id<JavaLangAppendable> outArg, NetMinidevJsonJSONStyle *compression);

FOUNDATION_EXPORT NetMinidevJsonParserContentHandlerCompressor *new_NetMinidevJsonParserContentHandlerCompressor_initWithJavaLangAppendable_withNetMinidevJsonJSONStyle_(id<JavaLangAppendable> outArg, NetMinidevJsonJSONStyle *compression) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonParserContentHandlerCompressor *create_NetMinidevJsonParserContentHandlerCompressor_initWithJavaLangAppendable_withNetMinidevJsonJSONStyle_(id<JavaLangAppendable> outArg, NetMinidevJsonJSONStyle *compression);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonParserContentHandlerCompressor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetMinidevJsonParserContentHandlerCompressor")
