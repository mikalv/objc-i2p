//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/parser/JSONParserString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetMinidevJsonParserJSONParserString")
#ifdef RESTRICT_NetMinidevJsonParserJSONParserString
#define INCLUDE_ALL_NetMinidevJsonParserJSONParserString 0
#else
#define INCLUDE_ALL_NetMinidevJsonParserJSONParserString 1
#endif
#undef RESTRICT_NetMinidevJsonParserJSONParserString

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetMinidevJsonParserJSONParserString_) && (INCLUDE_ALL_NetMinidevJsonParserJSONParserString || defined(INCLUDE_NetMinidevJsonParserJSONParserString))
#define NetMinidevJsonParserJSONParserString_

#define RESTRICT_NetMinidevJsonParserJSONParserMemory 1
#define INCLUDE_NetMinidevJsonParserJSONParserMemory 1
#include "net/minidev/json/parser/JSONParserMemory.h"

@protocol NetMinidevJsonParserContainerFactory;
@protocol NetMinidevJsonParserContentHandler;

@interface NetMinidevJsonParserJSONParserString : NetMinidevJsonParserJSONParserMemory

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)permissiveMode;

- (id)parseWithNSString:(NSString *)inArg;

- (id)parseWithNSString:(NSString *)inArg
withNetMinidevJsonParserContainerFactory:(id<NetMinidevJsonParserContainerFactory>)containerFactory;

- (id)parseWithNSString:(NSString *)inArg
withNetMinidevJsonParserContainerFactory:(id<NetMinidevJsonParserContainerFactory>)containerFactory
withNetMinidevJsonParserContentHandler:(id<NetMinidevJsonParserContentHandler>)handler;

#pragma mark Protected

- (void)extractStringWithInt:(jint)beginIndex
                     withInt:(jint)endIndex;

- (jint)indexOfWithChar:(jchar)c
                withInt:(jint)pos;

- (void)read;

- (void)readNoEnd;

- (void)readS;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonParserJSONParserString)

FOUNDATION_EXPORT void NetMinidevJsonParserJSONParserString_initWithInt_(NetMinidevJsonParserJSONParserString *self, jint permissiveMode);

FOUNDATION_EXPORT NetMinidevJsonParserJSONParserString *new_NetMinidevJsonParserJSONParserString_initWithInt_(jint permissiveMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonParserJSONParserString *create_NetMinidevJsonParserJSONParserString_initWithInt_(jint permissiveMode);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonParserJSONParserString)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetMinidevJsonParserJSONParserString")
