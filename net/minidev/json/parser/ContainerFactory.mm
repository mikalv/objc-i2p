//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/parser/ContainerFactory.java
//

#include "J2ObjC_source.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "net/minidev/json/JSONArray.h"
#include "net/minidev/json/JSONObject.h"
#include "net/minidev/json/parser/ContainerFactory.h"

@interface NetMinidevJsonParserContainerFactory_1 : NSObject < NetMinidevJsonParserContainerFactory >

- (instancetype)init;

- (id<JavaUtilMap>)createObjectContainer;

- (id<JavaUtilList>)createArrayContainer;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonParserContainerFactory_1)

__attribute__((unused)) static void NetMinidevJsonParserContainerFactory_1_init(NetMinidevJsonParserContainerFactory_1 *self);

__attribute__((unused)) static NetMinidevJsonParserContainerFactory_1 *new_NetMinidevJsonParserContainerFactory_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonParserContainerFactory_1 *create_NetMinidevJsonParserContainerFactory_1_init(void);

@interface NetMinidevJsonParserContainerFactory_2 : NSObject < NetMinidevJsonParserContainerFactory >

- (instancetype)init;

- (id<JavaUtilMap>)createObjectContainer;

- (id<JavaUtilList>)createArrayContainer;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonParserContainerFactory_2)

__attribute__((unused)) static void NetMinidevJsonParserContainerFactory_2_init(NetMinidevJsonParserContainerFactory_2 *self);

__attribute__((unused)) static NetMinidevJsonParserContainerFactory_2 *new_NetMinidevJsonParserContainerFactory_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonParserContainerFactory_2 *create_NetMinidevJsonParserContainerFactory_2_init(void);

J2OBJC_INITIALIZED_DEFN(NetMinidevJsonParserContainerFactory)

id<NetMinidevJsonParserContainerFactory> NetMinidevJsonParserContainerFactory_FACTORY_SIMPLE;
id<NetMinidevJsonParserContainerFactory> NetMinidevJsonParserContainerFactory_FACTORY_ORDERED;

@implementation NetMinidevJsonParserContainerFactory

+ (id<NetMinidevJsonParserContainerFactory>)FACTORY_SIMPLE {
  return NetMinidevJsonParserContainerFactory_FACTORY_SIMPLE;
}

+ (id<NetMinidevJsonParserContainerFactory>)FACTORY_ORDERED {
  return NetMinidevJsonParserContainerFactory_FACTORY_ORDERED;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(createObjectContainer);
  methods[1].selector = @selector(createArrayContainer);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FACTORY_SIMPLE", "LNetMinidevJsonParserContainerFactory;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "FACTORY_ORDERED", "LNetMinidevJsonParserContainerFactory;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "()Ljava/util/List<Ljava/lang/Object;>;", &NetMinidevJsonParserContainerFactory_FACTORY_SIMPLE, &NetMinidevJsonParserContainerFactory_FACTORY_ORDERED };
  static const J2ObjcClassInfo _NetMinidevJsonParserContainerFactory = { "ContainerFactory", "net.minidev.json.parser", ptrTable, methods, fields, 7, 0x609, 2, 2, -1, -1, -1, -1, -1 };
  return &_NetMinidevJsonParserContainerFactory;
}

+ (void)initialize {
  if (self == [NetMinidevJsonParserContainerFactory class]) {
    JreStrongAssignAndConsume(&NetMinidevJsonParserContainerFactory_FACTORY_SIMPLE, new_NetMinidevJsonParserContainerFactory_1_init());
    JreStrongAssignAndConsume(&NetMinidevJsonParserContainerFactory_FACTORY_ORDERED, new_NetMinidevJsonParserContainerFactory_2_init());
    J2OBJC_SET_INITIALIZED(NetMinidevJsonParserContainerFactory)
  }
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(NetMinidevJsonParserContainerFactory)

@implementation NetMinidevJsonParserContainerFactory_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonParserContainerFactory_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)createObjectContainer {
  return create_NetMinidevJsonJSONObject_init();
}

- (id<JavaUtilList>)createArrayContainer {
  return create_NetMinidevJsonJSONArray_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createObjectContainer);
  methods[2].selector = @selector(createArrayContainer);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "()Ljava/util/List<Ljava/lang/Object;>;", "LNetMinidevJsonParserContainerFactory;" };
  static const J2ObjcClassInfo _NetMinidevJsonParserContainerFactory_1 = { "", "net.minidev.json.parser", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 2, -1, -1, -1, -1 };
  return &_NetMinidevJsonParserContainerFactory_1;
}

@end

void NetMinidevJsonParserContainerFactory_1_init(NetMinidevJsonParserContainerFactory_1 *self) {
  NSObject_init(self);
}

NetMinidevJsonParserContainerFactory_1 *new_NetMinidevJsonParserContainerFactory_1_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonParserContainerFactory_1, init)
}

NetMinidevJsonParserContainerFactory_1 *create_NetMinidevJsonParserContainerFactory_1_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonParserContainerFactory_1, init)
}

@implementation NetMinidevJsonParserContainerFactory_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonParserContainerFactory_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilMap>)createObjectContainer {
  return create_JavaUtilLinkedHashMap_init();
}

- (id<JavaUtilList>)createArrayContainer {
  return create_NetMinidevJsonJSONArray_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createObjectContainer);
  methods[2].selector = @selector(createArrayContainer);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "()Ljava/util/List<Ljava/lang/Object;>;", "LNetMinidevJsonParserContainerFactory;" };
  static const J2ObjcClassInfo _NetMinidevJsonParserContainerFactory_2 = { "", "net.minidev.json.parser", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 2, -1, -1, -1, -1 };
  return &_NetMinidevJsonParserContainerFactory_2;
}

@end

void NetMinidevJsonParserContainerFactory_2_init(NetMinidevJsonParserContainerFactory_2 *self) {
  NSObject_init(self);
}

NetMinidevJsonParserContainerFactory_2 *new_NetMinidevJsonParserContainerFactory_2_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonParserContainerFactory_2, init)
}

NetMinidevJsonParserContainerFactory_2 *create_NetMinidevJsonParserContainerFactory_2_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonParserContainerFactory_2, init)
}
