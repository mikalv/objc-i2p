//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/parser/JSONParserReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetMinidevJsonParserJSONParserReader")
#ifdef RESTRICT_NetMinidevJsonParserJSONParserReader
#define INCLUDE_ALL_NetMinidevJsonParserJSONParserReader 0
#else
#define INCLUDE_ALL_NetMinidevJsonParserJSONParserReader 1
#endif
#undef RESTRICT_NetMinidevJsonParserJSONParserReader

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetMinidevJsonParserJSONParserReader_) && (INCLUDE_ALL_NetMinidevJsonParserJSONParserReader || defined(INCLUDE_NetMinidevJsonParserJSONParserReader))
#define NetMinidevJsonParserJSONParserReader_

#define RESTRICT_NetMinidevJsonParserJSONParserStream 1
#define INCLUDE_NetMinidevJsonParserJSONParserStream 1
#include "net/minidev/json/parser/JSONParserStream.h"

@class JavaIoReader;
@protocol NetMinidevJsonParserContainerFactory;
@protocol NetMinidevJsonParserContentHandler;

@interface NetMinidevJsonParserJSONParserReader : NetMinidevJsonParserJSONParserStream

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)permissiveMode;

- (id)parseWithJavaIoReader:(JavaIoReader *)inArg;

- (id)parseWithJavaIoReader:(JavaIoReader *)inArg
withNetMinidevJsonParserContainerFactory:(id<NetMinidevJsonParserContainerFactory>)containerFactory;

- (id)parseWithJavaIoReader:(JavaIoReader *)inArg
withNetMinidevJsonParserContainerFactory:(id<NetMinidevJsonParserContainerFactory>)containerFactory
withNetMinidevJsonParserContentHandler:(id<NetMinidevJsonParserContentHandler>)handler;

#pragma mark Protected

- (void)read;

- (void)readNoEnd;

- (void)readS;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonParserJSONParserReader)

FOUNDATION_EXPORT void NetMinidevJsonParserJSONParserReader_initWithInt_(NetMinidevJsonParserJSONParserReader *self, jint permissiveMode);

FOUNDATION_EXPORT NetMinidevJsonParserJSONParserReader *new_NetMinidevJsonParserJSONParserReader_initWithInt_(jint permissiveMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonParserJSONParserReader *create_NetMinidevJsonParserJSONParserReader_initWithInt_(jint permissiveMode);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonParserJSONParserReader)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetMinidevJsonParserJSONParserReader")
