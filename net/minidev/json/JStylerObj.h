//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/JStylerObj.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetMinidevJsonJStylerObj")
#ifdef RESTRICT_NetMinidevJsonJStylerObj
#define INCLUDE_ALL_NetMinidevJsonJStylerObj 0
#else
#define INCLUDE_ALL_NetMinidevJsonJStylerObj 1
#endif
#undef RESTRICT_NetMinidevJsonJStylerObj
#ifdef INCLUDE_NetMinidevJsonJStylerObj_Escape4Web
#define INCLUDE_NetMinidevJsonJStylerObj_StringProtector 1
#endif
#ifdef INCLUDE_NetMinidevJsonJStylerObj_EscapeLT
#define INCLUDE_NetMinidevJsonJStylerObj_StringProtector 1
#endif
#ifdef INCLUDE_NetMinidevJsonJStylerObj_MPAgressive
#define INCLUDE_NetMinidevJsonJStylerObj_MustProtect 1
#endif
#ifdef INCLUDE_NetMinidevJsonJStylerObj_MPSimple
#define INCLUDE_NetMinidevJsonJStylerObj_MustProtect 1
#endif
#ifdef INCLUDE_NetMinidevJsonJStylerObj_MPTrue
#define INCLUDE_NetMinidevJsonJStylerObj_MustProtect 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetMinidevJsonJStylerObj_) && (INCLUDE_ALL_NetMinidevJsonJStylerObj || defined(INCLUDE_NetMinidevJsonJStylerObj))
#define NetMinidevJsonJStylerObj_

@class NetMinidevJsonJStylerObj_Escape4Web;
@class NetMinidevJsonJStylerObj_EscapeLT;
@class NetMinidevJsonJStylerObj_MPAgressive;
@class NetMinidevJsonJStylerObj_MPSimple;
@class NetMinidevJsonJStylerObj_MPTrue;

@interface NetMinidevJsonJStylerObj : NSObject
@property (readonly, class, strong) NetMinidevJsonJStylerObj_MPSimple *MP_SIMPLE NS_SWIFT_NAME(MP_SIMPLE);
@property (readonly, class, strong) NetMinidevJsonJStylerObj_MPTrue *MP_TRUE NS_SWIFT_NAME(MP_TRUE);
@property (readonly, class, strong) NetMinidevJsonJStylerObj_MPAgressive *MP_AGGRESIVE NS_SWIFT_NAME(MP_AGGRESIVE);
@property (readonly, class, strong) NetMinidevJsonJStylerObj_EscapeLT *ESCAPE_LT NS_SWIFT_NAME(ESCAPE_LT);
@property (readonly, class, strong) NetMinidevJsonJStylerObj_Escape4Web *ESCAPE4Web NS_SWIFT_NAME(ESCAPE4Web);

+ (NetMinidevJsonJStylerObj_MPSimple *)MP_SIMPLE;

+ (NetMinidevJsonJStylerObj_MPTrue *)MP_TRUE;

+ (NetMinidevJsonJStylerObj_MPAgressive *)MP_AGGRESIVE;

+ (NetMinidevJsonJStylerObj_EscapeLT *)ESCAPE_LT;

+ (NetMinidevJsonJStylerObj_Escape4Web *)ESCAPE4Web;

#pragma mark Public

+ (jboolean)isKeywordWithNSString:(NSString *)s;

+ (jboolean)isSpaceWithChar:(jchar)c;

+ (jboolean)isSpecialWithChar:(jchar)c;

+ (jboolean)isSpecialCharWithChar:(jchar)c;

+ (jboolean)isSpecialCloseWithChar:(jchar)c;

+ (jboolean)isSpecialOpenWithChar:(jchar)c;

+ (jboolean)isUnicodeWithChar:(jchar)c;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_STATIC_INIT(NetMinidevJsonJStylerObj)

inline NetMinidevJsonJStylerObj_MPSimple *NetMinidevJsonJStylerObj_get_MP_SIMPLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NetMinidevJsonJStylerObj_MPSimple *NetMinidevJsonJStylerObj_MP_SIMPLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonJStylerObj, MP_SIMPLE, NetMinidevJsonJStylerObj_MPSimple *)

inline NetMinidevJsonJStylerObj_MPTrue *NetMinidevJsonJStylerObj_get_MP_TRUE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NetMinidevJsonJStylerObj_MPTrue *NetMinidevJsonJStylerObj_MP_TRUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonJStylerObj, MP_TRUE, NetMinidevJsonJStylerObj_MPTrue *)

inline NetMinidevJsonJStylerObj_MPAgressive *NetMinidevJsonJStylerObj_get_MP_AGGRESIVE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NetMinidevJsonJStylerObj_MPAgressive *NetMinidevJsonJStylerObj_MP_AGGRESIVE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonJStylerObj, MP_AGGRESIVE, NetMinidevJsonJStylerObj_MPAgressive *)

inline NetMinidevJsonJStylerObj_EscapeLT *NetMinidevJsonJStylerObj_get_ESCAPE_LT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NetMinidevJsonJStylerObj_EscapeLT *NetMinidevJsonJStylerObj_ESCAPE_LT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonJStylerObj, ESCAPE_LT, NetMinidevJsonJStylerObj_EscapeLT *)

inline NetMinidevJsonJStylerObj_Escape4Web *NetMinidevJsonJStylerObj_get_ESCAPE4Web(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NetMinidevJsonJStylerObj_Escape4Web *NetMinidevJsonJStylerObj_ESCAPE4Web;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonJStylerObj, ESCAPE4Web, NetMinidevJsonJStylerObj_Escape4Web *)

FOUNDATION_EXPORT void NetMinidevJsonJStylerObj_init(NetMinidevJsonJStylerObj *self);

FOUNDATION_EXPORT NetMinidevJsonJStylerObj *new_NetMinidevJsonJStylerObj_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonJStylerObj *create_NetMinidevJsonJStylerObj_init(void);

FOUNDATION_EXPORT jboolean NetMinidevJsonJStylerObj_isSpaceWithChar_(jchar c);

FOUNDATION_EXPORT jboolean NetMinidevJsonJStylerObj_isSpecialCharWithChar_(jchar c);

FOUNDATION_EXPORT jboolean NetMinidevJsonJStylerObj_isSpecialOpenWithChar_(jchar c);

FOUNDATION_EXPORT jboolean NetMinidevJsonJStylerObj_isSpecialCloseWithChar_(jchar c);

FOUNDATION_EXPORT jboolean NetMinidevJsonJStylerObj_isSpecialWithChar_(jchar c);

FOUNDATION_EXPORT jboolean NetMinidevJsonJStylerObj_isUnicodeWithChar_(jchar c);

FOUNDATION_EXPORT jboolean NetMinidevJsonJStylerObj_isKeywordWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonJStylerObj)

#endif

#if !defined (NetMinidevJsonJStylerObj_MustProtect_) && (INCLUDE_ALL_NetMinidevJsonJStylerObj || defined(INCLUDE_NetMinidevJsonJStylerObj_MustProtect))
#define NetMinidevJsonJStylerObj_MustProtect_

@protocol NetMinidevJsonJStylerObj_MustProtect < JavaObject >

- (jboolean)mustBeProtectWithNSString:(NSString *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonJStylerObj_MustProtect)

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonJStylerObj_MustProtect)

#endif

#if !defined (NetMinidevJsonJStylerObj_MPTrue_) && (INCLUDE_ALL_NetMinidevJsonJStylerObj || defined(INCLUDE_NetMinidevJsonJStylerObj_MPTrue))
#define NetMinidevJsonJStylerObj_MPTrue_

@interface NetMinidevJsonJStylerObj_MPTrue : NSObject < NetMinidevJsonJStylerObj_MustProtect >

#pragma mark Public

- (jboolean)mustBeProtectWithNSString:(NSString *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonJStylerObj_MPTrue)

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonJStylerObj_MPTrue)

#endif

#if !defined (NetMinidevJsonJStylerObj_MPSimple_) && (INCLUDE_ALL_NetMinidevJsonJStylerObj || defined(INCLUDE_NetMinidevJsonJStylerObj_MPSimple))
#define NetMinidevJsonJStylerObj_MPSimple_

@interface NetMinidevJsonJStylerObj_MPSimple : NSObject < NetMinidevJsonJStylerObj_MustProtect >

#pragma mark Public

- (jboolean)mustBeProtectWithNSString:(NSString *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonJStylerObj_MPSimple)

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonJStylerObj_MPSimple)

#endif

#if !defined (NetMinidevJsonJStylerObj_MPAgressive_) && (INCLUDE_ALL_NetMinidevJsonJStylerObj || defined(INCLUDE_NetMinidevJsonJStylerObj_MPAgressive))
#define NetMinidevJsonJStylerObj_MPAgressive_

@interface NetMinidevJsonJStylerObj_MPAgressive : NSObject < NetMinidevJsonJStylerObj_MustProtect >

#pragma mark Public

- (jboolean)mustBeProtectWithNSString:(NSString *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonJStylerObj_MPAgressive)

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonJStylerObj_MPAgressive)

#endif

#if !defined (NetMinidevJsonJStylerObj_StringProtector_) && (INCLUDE_ALL_NetMinidevJsonJStylerObj || defined(INCLUDE_NetMinidevJsonJStylerObj_StringProtector))
#define NetMinidevJsonJStylerObj_StringProtector_

@protocol JavaLangAppendable;

@protocol NetMinidevJsonJStylerObj_StringProtector < JavaObject >

- (void)escapeWithNSString:(NSString *)s
    withJavaLangAppendable:(id<JavaLangAppendable>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonJStylerObj_StringProtector)

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonJStylerObj_StringProtector)

#endif

#if !defined (NetMinidevJsonJStylerObj_EscapeLT_) && (INCLUDE_ALL_NetMinidevJsonJStylerObj || defined(INCLUDE_NetMinidevJsonJStylerObj_EscapeLT))
#define NetMinidevJsonJStylerObj_EscapeLT_

@protocol JavaLangAppendable;

@interface NetMinidevJsonJStylerObj_EscapeLT : NSObject < NetMinidevJsonJStylerObj_StringProtector >

#pragma mark Public

- (void)escapeWithNSString:(NSString *)s
    withJavaLangAppendable:(id<JavaLangAppendable>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonJStylerObj_EscapeLT)

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonJStylerObj_EscapeLT)

#endif

#if !defined (NetMinidevJsonJStylerObj_Escape4Web_) && (INCLUDE_ALL_NetMinidevJsonJStylerObj || defined(INCLUDE_NetMinidevJsonJStylerObj_Escape4Web))
#define NetMinidevJsonJStylerObj_Escape4Web_

@protocol JavaLangAppendable;

@interface NetMinidevJsonJStylerObj_Escape4Web : NSObject < NetMinidevJsonJStylerObj_StringProtector >

#pragma mark Public

- (void)escapeWithNSString:(NSString *)s
    withJavaLangAppendable:(id<JavaLangAppendable>)sb;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonJStylerObj_Escape4Web)

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonJStylerObj_Escape4Web)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetMinidevJsonJStylerObj")
