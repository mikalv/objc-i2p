//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/reader/JsonWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Appendable.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/util/Date.h"
#include "java/util/LinkedList.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "net/minidev/json/JSONAware.h"
#include "net/minidev/json/JSONAwareEx.h"
#include "net/minidev/json/JSONStreamAware.h"
#include "net/minidev/json/JSONStreamAwareEx.h"
#include "net/minidev/json/JSONStyle.h"
#include "net/minidev/json/JSONValue.h"
#include "net/minidev/json/reader/ArrayWriter.h"
#include "net/minidev/json/reader/BeansWriter.h"
#include "net/minidev/json/reader/JsonWriter.h"
#include "net/minidev/json/reader/JsonWriterI.h"

@interface NetMinidevJsonReaderJsonWriter () {
 @public
  JavaUtilConcurrentConcurrentHashMap *data_;
  JavaUtilLinkedList *writerInterfaces_;
}

@end

J2OBJC_FIELD_SETTER(NetMinidevJsonReaderJsonWriter, data_, JavaUtilConcurrentConcurrentHashMap *)
J2OBJC_FIELD_SETTER(NetMinidevJsonReaderJsonWriter, writerInterfaces_, JavaUtilLinkedList *)

@interface NetMinidevJsonReaderJsonWriter_1 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(id<NetMinidevJsonJSONStreamAwareEx>)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_1)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_1_init(NetMinidevJsonReaderJsonWriter_1 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_1 *new_NetMinidevJsonReaderJsonWriter_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_1 *create_NetMinidevJsonReaderJsonWriter_1_init(void);

@interface NetMinidevJsonReaderJsonWriter_2 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(id<NetMinidevJsonJSONStreamAwareEx>)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_2)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_2_init(NetMinidevJsonReaderJsonWriter_2 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_2 *new_NetMinidevJsonReaderJsonWriter_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_2 *create_NetMinidevJsonReaderJsonWriter_2_init(void);

@interface NetMinidevJsonReaderJsonWriter_3 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(id<NetMinidevJsonJSONAwareEx>)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_3)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_3_init(NetMinidevJsonReaderJsonWriter_3 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_3 *new_NetMinidevJsonReaderJsonWriter_3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_3 *create_NetMinidevJsonReaderJsonWriter_3_init(void);

@interface NetMinidevJsonReaderJsonWriter_4 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(id<NetMinidevJsonJSONAware>)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_4)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_4_init(NetMinidevJsonReaderJsonWriter_4 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_4 *new_NetMinidevJsonReaderJsonWriter_4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_4 *create_NetMinidevJsonReaderJsonWriter_4_init(void);

@interface NetMinidevJsonReaderJsonWriter_5 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(id<JavaLangIterable>)list
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_5)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_5_init(NetMinidevJsonReaderJsonWriter_5 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_5 *new_NetMinidevJsonReaderJsonWriter_5_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_5 *create_NetMinidevJsonReaderJsonWriter_5_init(void);

@interface NetMinidevJsonReaderJsonWriter_6 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(JavaLangEnum *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_6)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_6_init(NetMinidevJsonReaderJsonWriter_6 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_6 *new_NetMinidevJsonReaderJsonWriter_6_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_6 *create_NetMinidevJsonReaderJsonWriter_6_init(void);

@interface NetMinidevJsonReaderJsonWriter_7 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(id<JavaUtilMap>)map
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_7)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_7_init(NetMinidevJsonReaderJsonWriter_7 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_7 *new_NetMinidevJsonReaderJsonWriter_7_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_7 *create_NetMinidevJsonReaderJsonWriter_7_init(void);

@interface NetMinidevJsonReaderJsonWriter_8 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(id)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_8)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_8_init(NetMinidevJsonReaderJsonWriter_8 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_8 *new_NetMinidevJsonReaderJsonWriter_8_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_8 *create_NetMinidevJsonReaderJsonWriter_8_init(void);

@interface NetMinidevJsonReaderJsonWriter_9 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(NSString *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_9)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_9_init(NetMinidevJsonReaderJsonWriter_9 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_9 *new_NetMinidevJsonReaderJsonWriter_9_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_9 *create_NetMinidevJsonReaderJsonWriter_9_init(void);

@interface NetMinidevJsonReaderJsonWriter_10 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(JavaLangDouble *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_10)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_10_init(NetMinidevJsonReaderJsonWriter_10 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_10 *new_NetMinidevJsonReaderJsonWriter_10_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_10 *create_NetMinidevJsonReaderJsonWriter_10_init(void);

@interface NetMinidevJsonReaderJsonWriter_11 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(JavaUtilDate *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_11)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_11_init(NetMinidevJsonReaderJsonWriter_11 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_11 *new_NetMinidevJsonReaderJsonWriter_11_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_11 *create_NetMinidevJsonReaderJsonWriter_11_init(void);

@interface NetMinidevJsonReaderJsonWriter_12 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(JavaLangFloat *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_12)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_12_init(NetMinidevJsonReaderJsonWriter_12 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_12 *new_NetMinidevJsonReaderJsonWriter_12_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_12 *create_NetMinidevJsonReaderJsonWriter_12_init(void);

@interface NetMinidevJsonReaderJsonWriter_13 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(IOSIntArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_13)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_13_init(NetMinidevJsonReaderJsonWriter_13 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_13 *new_NetMinidevJsonReaderJsonWriter_13_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_13 *create_NetMinidevJsonReaderJsonWriter_13_init(void);

@interface NetMinidevJsonReaderJsonWriter_14 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(IOSShortArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_14)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_14_init(NetMinidevJsonReaderJsonWriter_14 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_14 *new_NetMinidevJsonReaderJsonWriter_14_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_14 *create_NetMinidevJsonReaderJsonWriter_14_init(void);

@interface NetMinidevJsonReaderJsonWriter_15 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(IOSLongArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_15)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_15_init(NetMinidevJsonReaderJsonWriter_15 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_15 *new_NetMinidevJsonReaderJsonWriter_15_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_15 *create_NetMinidevJsonReaderJsonWriter_15_init(void);

@interface NetMinidevJsonReaderJsonWriter_16 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(IOSFloatArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_16)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_16_init(NetMinidevJsonReaderJsonWriter_16 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_16 *new_NetMinidevJsonReaderJsonWriter_16_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_16 *create_NetMinidevJsonReaderJsonWriter_16_init(void);

@interface NetMinidevJsonReaderJsonWriter_17 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(IOSDoubleArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_17)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_17_init(NetMinidevJsonReaderJsonWriter_17 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_17 *new_NetMinidevJsonReaderJsonWriter_17_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_17 *create_NetMinidevJsonReaderJsonWriter_17_init(void);

@interface NetMinidevJsonReaderJsonWriter_18 : NSObject < NetMinidevJsonReaderJsonWriterI >

- (instancetype)init;

- (void)writeJSONStringWithId:(IOSBooleanArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_18)

__attribute__((unused)) static void NetMinidevJsonReaderJsonWriter_18_init(NetMinidevJsonReaderJsonWriter_18 *self);

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_18 *new_NetMinidevJsonReaderJsonWriter_18_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetMinidevJsonReaderJsonWriter_18 *create_NetMinidevJsonReaderJsonWriter_18_init(void);

J2OBJC_INITIALIZED_DEFN(NetMinidevJsonReaderJsonWriter)

id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONStreamAwareWriter;
id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONStreamAwareExWriter;
id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONJSONAwareExWriter;
id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONJSONAwareWriter;
id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONIterableWriter;
id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_EnumWriter;
id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONMapWriter;
id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_beansWriter;
id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_arrayWriter;
id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_toStringWriter;

@implementation NetMinidevJsonReaderJsonWriter

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONStreamAwareWriter {
  return NetMinidevJsonReaderJsonWriter_JSONStreamAwareWriter;
}

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONStreamAwareExWriter {
  return NetMinidevJsonReaderJsonWriter_JSONStreamAwareExWriter;
}

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONJSONAwareExWriter {
  return NetMinidevJsonReaderJsonWriter_JSONJSONAwareExWriter;
}

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONJSONAwareWriter {
  return NetMinidevJsonReaderJsonWriter_JSONJSONAwareWriter;
}

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONIterableWriter {
  return NetMinidevJsonReaderJsonWriter_JSONIterableWriter;
}

+ (id<NetMinidevJsonReaderJsonWriterI>)EnumWriter {
  return NetMinidevJsonReaderJsonWriter_EnumWriter;
}

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONMapWriter {
  return NetMinidevJsonReaderJsonWriter_JSONMapWriter;
}

+ (id<NetMinidevJsonReaderJsonWriterI>)beansWriter {
  return NetMinidevJsonReaderJsonWriter_beansWriter;
}

+ (id<NetMinidevJsonReaderJsonWriterI>)arrayWriter {
  return NetMinidevJsonReaderJsonWriter_arrayWriter;
}

+ (id<NetMinidevJsonReaderJsonWriterI>)toStringWriter {
  return NetMinidevJsonReaderJsonWriter_toStringWriter;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<NetMinidevJsonReaderJsonWriterI>)getWriterByInterfaceWithIOSClass:(IOSClass *)clazz {
  for (NetMinidevJsonReaderJsonWriter_WriterByInterface * __strong w in nil_chk(writerInterfaces_)) {
    if ([((IOSClass *) nil_chk(((NetMinidevJsonReaderJsonWriter_WriterByInterface *) nil_chk(w))->_interface_)) isAssignableFrom:clazz]) return w->_writer_;
  }
  return nil;
}

- (id<NetMinidevJsonReaderJsonWriterI>)getWriteWithIOSClass:(IOSClass *)cls {
  return [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(data_)) getWithId:cls];
}

- (void)init__ {
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:create_NetMinidevJsonReaderJsonWriter_9_init() withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ NSString_class_() } count:1 type:IOSClass_class_()]];
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:create_NetMinidevJsonReaderJsonWriter_10_init() withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_class_() } count:1 type:IOSClass_class_()]];
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:create_NetMinidevJsonReaderJsonWriter_11_init() withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaUtilDate_class_() } count:1 type:IOSClass_class_()]];
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:create_NetMinidevJsonReaderJsonWriter_12_init() withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangFloat_class_() } count:1 type:IOSClass_class_()]];
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:NetMinidevJsonReaderJsonWriter_toStringWriter withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_class_(), JavaLangLong_class_(), JavaLangByte_class_(), JavaLangShort_class_(), JavaMathBigInteger_class_(), JavaMathBigDecimal_class_() } count:6 type:IOSClass_class_()]];
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:NetMinidevJsonReaderJsonWriter_toStringWriter withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangBoolean_class_() } count:1 type:IOSClass_class_()]];
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:create_NetMinidevJsonReaderJsonWriter_13_init() withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ IOSClass_intArray(1) } count:1 type:IOSClass_class_()]];
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:create_NetMinidevJsonReaderJsonWriter_14_init() withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ IOSClass_shortArray(1) } count:1 type:IOSClass_class_()]];
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:create_NetMinidevJsonReaderJsonWriter_15_init() withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ IOSClass_longArray(1) } count:1 type:IOSClass_class_()]];
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:create_NetMinidevJsonReaderJsonWriter_16_init() withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ IOSClass_floatArray(1) } count:1 type:IOSClass_class_()]];
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:create_NetMinidevJsonReaderJsonWriter_17_init() withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ IOSClass_doubleArray(1) } count:1 type:IOSClass_class_()]];
  [self registerWriterWithNetMinidevJsonReaderJsonWriterI:create_NetMinidevJsonReaderJsonWriter_18_init() withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ IOSClass_booleanArray(1) } count:1 type:IOSClass_class_()]];
  [self registerWriterInterfaceWithIOSClass:NetMinidevJsonJSONStreamAwareEx_class_() withNetMinidevJsonReaderJsonWriterI:NetMinidevJsonReaderJsonWriter_JSONStreamAwareExWriter];
  [self registerWriterInterfaceWithIOSClass:NetMinidevJsonJSONStreamAware_class_() withNetMinidevJsonReaderJsonWriterI:NetMinidevJsonReaderJsonWriter_JSONStreamAwareWriter];
  [self registerWriterInterfaceWithIOSClass:NetMinidevJsonJSONAwareEx_class_() withNetMinidevJsonReaderJsonWriterI:NetMinidevJsonReaderJsonWriter_JSONJSONAwareExWriter];
  [self registerWriterInterfaceWithIOSClass:NetMinidevJsonJSONAware_class_() withNetMinidevJsonReaderJsonWriterI:NetMinidevJsonReaderJsonWriter_JSONJSONAwareWriter];
  [self registerWriterInterfaceWithIOSClass:JavaUtilMap_class_() withNetMinidevJsonReaderJsonWriterI:NetMinidevJsonReaderJsonWriter_JSONMapWriter];
  [self registerWriterInterfaceWithIOSClass:JavaLangIterable_class_() withNetMinidevJsonReaderJsonWriterI:NetMinidevJsonReaderJsonWriter_JSONIterableWriter];
  [self registerWriterInterfaceWithIOSClass:JavaLangEnum_class_() withNetMinidevJsonReaderJsonWriterI:NetMinidevJsonReaderJsonWriter_EnumWriter];
  [self registerWriterInterfaceWithIOSClass:NSNumber_class_() withNetMinidevJsonReaderJsonWriterI:NetMinidevJsonReaderJsonWriter_toStringWriter];
}

- (void)addInterfaceWriterFirstWithIOSClass:(IOSClass *)interFace
        withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer {
  [self registerWriterInterfaceFirstWithIOSClass:interFace withNetMinidevJsonReaderJsonWriterI:writer];
}

- (void)addInterfaceWriterLastWithIOSClass:(IOSClass *)interFace
       withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer {
  [self registerWriterInterfaceLastWithIOSClass:interFace withNetMinidevJsonReaderJsonWriterI:writer];
}

- (void)registerWriterInterfaceLastWithIOSClass:(IOSClass *)interFace
            withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer {
  [((JavaUtilLinkedList *) nil_chk(writerInterfaces_)) addLastWithId:create_NetMinidevJsonReaderJsonWriter_WriterByInterface_initWithIOSClass_withNetMinidevJsonReaderJsonWriterI_(interFace, writer)];
}

- (void)registerWriterInterfaceFirstWithIOSClass:(IOSClass *)interFace
             withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer {
  [((JavaUtilLinkedList *) nil_chk(writerInterfaces_)) addFirstWithId:create_NetMinidevJsonReaderJsonWriter_WriterByInterface_initWithIOSClass_withNetMinidevJsonReaderJsonWriterI_(interFace, writer)];
}

- (void)registerWriterInterfaceWithIOSClass:(IOSClass *)interFace
        withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer {
  [self registerWriterInterfaceLastWithIOSClass:interFace withNetMinidevJsonReaderJsonWriterI:writer];
}

- (void)registerWriterWithNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer
                                        withIOSClassArray:(IOSObjectArray *)cls {
  {
    IOSObjectArray *a__ = cls;
    IOSClass * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSClass * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSClass *c = *b__++;
      [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(data_)) putWithId:c withId:writer];
    }
  }
}

+ (void)writeJSONKVWithNSString:(NSString *)key
                         withId:(id)value
         withJavaLangAppendable:(id<JavaLangAppendable>)outArg
    withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  NetMinidevJsonReaderJsonWriter_writeJSONKVWithNSString_withId_withJavaLangAppendable_withNetMinidevJsonJSONStyle_(key, value, outArg, compression);
}

- (void)dealloc {
  RELEASE_(data_);
  RELEASE_(writerInterfaces_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetMinidevJsonReaderJsonWriterI;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNetMinidevJsonReaderJsonWriterI;", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, 8, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, 9, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, 10, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, 11, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x81, 12, 13, -1, 14, -1, -1 },
    { NULL, "V", 0x9, 15, 16, 17, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getWriterByInterfaceWithIOSClass:);
  methods[2].selector = @selector(getWriteWithIOSClass:);
  methods[3].selector = @selector(init__);
  methods[4].selector = @selector(addInterfaceWriterFirstWithIOSClass:withNetMinidevJsonReaderJsonWriterI:);
  methods[5].selector = @selector(addInterfaceWriterLastWithIOSClass:withNetMinidevJsonReaderJsonWriterI:);
  methods[6].selector = @selector(registerWriterInterfaceLastWithIOSClass:withNetMinidevJsonReaderJsonWriterI:);
  methods[7].selector = @selector(registerWriterInterfaceFirstWithIOSClass:withNetMinidevJsonReaderJsonWriterI:);
  methods[8].selector = @selector(registerWriterInterfaceWithIOSClass:withNetMinidevJsonReaderJsonWriterI:);
  methods[9].selector = @selector(registerWriterWithNetMinidevJsonReaderJsonWriterI:withIOSClassArray:);
  methods[10].selector = @selector(writeJSONKVWithNSString:withId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "data_", "LJavaUtilConcurrentConcurrentHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, 18, -1 },
    { "writerInterfaces_", "LJavaUtilLinkedList;", .constantValue.asLong = 0, 0x2, -1, -1, 19, -1 },
    { "JSONStreamAwareWriter", "LNetMinidevJsonReaderJsonWriterI;", .constantValue.asLong = 0, 0x19, -1, 20, 21, -1 },
    { "JSONStreamAwareExWriter", "LNetMinidevJsonReaderJsonWriterI;", .constantValue.asLong = 0, 0x19, -1, 22, 21, -1 },
    { "JSONJSONAwareExWriter", "LNetMinidevJsonReaderJsonWriterI;", .constantValue.asLong = 0, 0x19, -1, 23, 24, -1 },
    { "JSONJSONAwareWriter", "LNetMinidevJsonReaderJsonWriterI;", .constantValue.asLong = 0, 0x19, -1, 25, 26, -1 },
    { "JSONIterableWriter", "LNetMinidevJsonReaderJsonWriterI;", .constantValue.asLong = 0, 0x19, -1, 27, 28, -1 },
    { "EnumWriter", "LNetMinidevJsonReaderJsonWriterI;", .constantValue.asLong = 0, 0x19, -1, 29, 30, -1 },
    { "JSONMapWriter", "LNetMinidevJsonReaderJsonWriterI;", .constantValue.asLong = 0, 0x19, -1, 31, 32, -1 },
    { "beansWriter", "LNetMinidevJsonReaderJsonWriterI;", .constantValue.asLong = 0, 0x19, -1, 33, 34, -1 },
    { "arrayWriter", "LNetMinidevJsonReaderJsonWriterI;", .constantValue.asLong = 0, 0x19, -1, 35, 34, -1 },
    { "toStringWriter", "LNetMinidevJsonReaderJsonWriterI;", .constantValue.asLong = 0, 0x19, -1, 36, 34, -1 },
  };
  static const void *ptrTable[] = { "getWriterByInterface", "LIOSClass;", "(Ljava/lang/Class<*>;)Lnet/minidev/json/reader/JsonWriterI;", "getWrite", "init", "addInterfaceWriterFirst", "LIOSClass;LNetMinidevJsonReaderJsonWriterI;", "(Ljava/lang/Class<*>;Lnet/minidev/json/reader/JsonWriterI<*>;)V", "addInterfaceWriterLast", "registerWriterInterfaceLast", "registerWriterInterfaceFirst", "registerWriterInterface", "registerWriter", "LNetMinidevJsonReaderJsonWriterI;[LIOSClass;", "<T:Ljava/lang/Object;>(Lnet/minidev/json/reader/JsonWriterI<TT;>;[Ljava/lang/Class<*>;)V", "writeJSONKV", "LNSString;LNSObject;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/Class<*>;Lnet/minidev/json/reader/JsonWriterI<*>;>;", "Ljava/util/LinkedList<Lnet/minidev/json/reader/JsonWriter$WriterByInterface;>;", &NetMinidevJsonReaderJsonWriter_JSONStreamAwareWriter, "Lnet/minidev/json/reader/JsonWriterI<Lnet/minidev/json/JSONStreamAwareEx;>;", &NetMinidevJsonReaderJsonWriter_JSONStreamAwareExWriter, &NetMinidevJsonReaderJsonWriter_JSONJSONAwareExWriter, "Lnet/minidev/json/reader/JsonWriterI<Lnet/minidev/json/JSONAwareEx;>;", &NetMinidevJsonReaderJsonWriter_JSONJSONAwareWriter, "Lnet/minidev/json/reader/JsonWriterI<Lnet/minidev/json/JSONAware;>;", &NetMinidevJsonReaderJsonWriter_JSONIterableWriter, "Lnet/minidev/json/reader/JsonWriterI<Ljava/lang/Iterable<+Ljava/lang/Object;>;>;", &NetMinidevJsonReaderJsonWriter_EnumWriter, "Lnet/minidev/json/reader/JsonWriterI<Ljava/lang/Enum<*>;>;", &NetMinidevJsonReaderJsonWriter_JSONMapWriter, "Lnet/minidev/json/reader/JsonWriterI<Ljava/util/Map<Ljava/lang/String;+Ljava/lang/Object;>;>;", &NetMinidevJsonReaderJsonWriter_beansWriter, "Lnet/minidev/json/reader/JsonWriterI<Ljava/lang/Object;>;", &NetMinidevJsonReaderJsonWriter_arrayWriter, &NetMinidevJsonReaderJsonWriter_toStringWriter, "LNetMinidevJsonReaderJsonWriter_WriterByInterface;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter = { "JsonWriter", "net.minidev.json.reader", ptrTable, methods, fields, 7, 0x1, 11, 12, -1, 37, -1, -1, -1 };
  return &_NetMinidevJsonReaderJsonWriter;
}

+ (void)initialize {
  if (self == [NetMinidevJsonReaderJsonWriter class]) {
    JreStrongAssignAndConsume(&NetMinidevJsonReaderJsonWriter_JSONStreamAwareWriter, new_NetMinidevJsonReaderJsonWriter_1_init());
    JreStrongAssignAndConsume(&NetMinidevJsonReaderJsonWriter_JSONStreamAwareExWriter, new_NetMinidevJsonReaderJsonWriter_2_init());
    JreStrongAssignAndConsume(&NetMinidevJsonReaderJsonWriter_JSONJSONAwareExWriter, new_NetMinidevJsonReaderJsonWriter_3_init());
    JreStrongAssignAndConsume(&NetMinidevJsonReaderJsonWriter_JSONJSONAwareWriter, new_NetMinidevJsonReaderJsonWriter_4_init());
    JreStrongAssignAndConsume(&NetMinidevJsonReaderJsonWriter_JSONIterableWriter, new_NetMinidevJsonReaderJsonWriter_5_init());
    JreStrongAssignAndConsume(&NetMinidevJsonReaderJsonWriter_EnumWriter, new_NetMinidevJsonReaderJsonWriter_6_init());
    JreStrongAssignAndConsume(&NetMinidevJsonReaderJsonWriter_JSONMapWriter, new_NetMinidevJsonReaderJsonWriter_7_init());
    JreStrongAssignAndConsume(&NetMinidevJsonReaderJsonWriter_beansWriter, new_NetMinidevJsonReaderBeansWriter_init());
    JreStrongAssignAndConsume(&NetMinidevJsonReaderJsonWriter_arrayWriter, new_NetMinidevJsonReaderArrayWriter_init());
    JreStrongAssignAndConsume(&NetMinidevJsonReaderJsonWriter_toStringWriter, new_NetMinidevJsonReaderJsonWriter_8_init());
    J2OBJC_SET_INITIALIZED(NetMinidevJsonReaderJsonWriter)
  }
}

@end

void NetMinidevJsonReaderJsonWriter_init(NetMinidevJsonReaderJsonWriter *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->data_, new_JavaUtilConcurrentConcurrentHashMap_init());
  JreStrongAssignAndConsume(&self->writerInterfaces_, new_JavaUtilLinkedList_init());
  [self init__];
}

NetMinidevJsonReaderJsonWriter *new_NetMinidevJsonReaderJsonWriter_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter, init)
}

NetMinidevJsonReaderJsonWriter *create_NetMinidevJsonReaderJsonWriter_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter, init)
}

void NetMinidevJsonReaderJsonWriter_writeJSONKVWithNSString_withId_withJavaLangAppendable_withNetMinidevJsonJSONStyle_(NSString *key, id value, id<JavaLangAppendable> outArg, NetMinidevJsonJSONStyle *compression) {
  NetMinidevJsonReaderJsonWriter_initialize();
  if (key == nil) [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:@"null"];
  else if (![((NetMinidevJsonJSONStyle *) nil_chk(compression)) mustProtectKeyWithNSString:key]) [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:key];
  else {
    [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithChar:'"'];
    NetMinidevJsonJSONValue_escapeWithNSString_withJavaLangAppendable_withNetMinidevJsonJSONStyle_(key, outArg, compression);
    [outArg appendWithChar:'"'];
  }
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) objectEndOfKeyWithJavaLangAppendable:outArg];
  if ([value isKindOfClass:[NSString class]]) {
    [compression writeStringWithJavaLangAppendable:outArg withNSString:(NSString *) cast_chk(value, [NSString class])];
  }
  else NetMinidevJsonJSONValue_writeJSONStringWithId_withJavaLangAppendable_withNetMinidevJsonJSONStyle_(value, outArg, compression);
  [compression objectElmStopWithJavaLangAppendable:outArg];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetMinidevJsonReaderJsonWriter)

@implementation NetMinidevJsonReaderJsonWriter_WriterByInterface

- (instancetype)initWithIOSClass:(IOSClass *)_interface
withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)_writer {
  NetMinidevJsonReaderJsonWriter_WriterByInterface_initWithIOSClass_withNetMinidevJsonReaderJsonWriterI_(self, _interface, _writer);
  return self;
}

- (void)dealloc {
  RELEASE_(_interface_);
  RELEASE_(_writer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withNetMinidevJsonReaderJsonWriterI:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_interface_", "LIOSClass;", .constantValue.asLong = 0, 0x1, -1, -1, 2, -1 },
    { "_writer_", "LNetMinidevJsonReaderJsonWriterI;", .constantValue.asLong = 0, 0x1, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;LNetMinidevJsonReaderJsonWriterI;", "(Ljava/lang/Class<*>;Lnet/minidev/json/reader/JsonWriterI<*>;)V", "Ljava/lang/Class<*>;", "Lnet/minidev/json/reader/JsonWriterI<*>;", "LNetMinidevJsonReaderJsonWriter;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_WriterByInterface = { "WriterByInterface", "net.minidev.json.reader", ptrTable, methods, fields, 7, 0x8, 1, 2, 4, -1, -1, -1, -1 };
  return &_NetMinidevJsonReaderJsonWriter_WriterByInterface;
}

@end

void NetMinidevJsonReaderJsonWriter_WriterByInterface_initWithIOSClass_withNetMinidevJsonReaderJsonWriterI_(NetMinidevJsonReaderJsonWriter_WriterByInterface *self, IOSClass *_interface, id<NetMinidevJsonReaderJsonWriterI> _writer) {
  NSObject_init(self);
  JreStrongAssign(&self->_interface_, _interface);
  JreStrongAssign(&self->_writer_, _writer);
}

NetMinidevJsonReaderJsonWriter_WriterByInterface *new_NetMinidevJsonReaderJsonWriter_WriterByInterface_initWithIOSClass_withNetMinidevJsonReaderJsonWriterI_(IOSClass *_interface, id<NetMinidevJsonReaderJsonWriterI> _writer) {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_WriterByInterface, initWithIOSClass_withNetMinidevJsonReaderJsonWriterI_, _interface, _writer)
}

NetMinidevJsonReaderJsonWriter_WriterByInterface *create_NetMinidevJsonReaderJsonWriter_WriterByInterface_initWithIOSClass_withNetMinidevJsonReaderJsonWriterI_(IOSClass *_interface, id<NetMinidevJsonReaderJsonWriterI> _writer) {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_WriterByInterface, initWithIOSClass_withNetMinidevJsonReaderJsonWriterI_, _interface, _writer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetMinidevJsonReaderJsonWriter_WriterByInterface)

@implementation NetMinidevJsonReaderJsonWriter_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(id<NetMinidevJsonJSONStreamAwareEx>)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  [((id<NetMinidevJsonJSONStreamAwareEx>) nil_chk(value)) writeJSONStringWithJavaLangAppendable:outArg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LNetMinidevJsonJSONStreamAwareEx;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "<E::Lnet/minidev/json/JSONStreamAwareEx;>(TE;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V", "LNetMinidevJsonReaderJsonWriter;", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Lnet/minidev/json/JSONStreamAwareEx;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_1 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 4, -1, -1, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_1;
}

@end

void NetMinidevJsonReaderJsonWriter_1_init(NetMinidevJsonReaderJsonWriter_1 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_1 *new_NetMinidevJsonReaderJsonWriter_1_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_1, init)
}

NetMinidevJsonReaderJsonWriter_1 *create_NetMinidevJsonReaderJsonWriter_1_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_1, init)
}

@implementation NetMinidevJsonReaderJsonWriter_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(id<NetMinidevJsonJSONStreamAwareEx>)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  [((id<NetMinidevJsonJSONStreamAwareEx>) nil_chk(value)) writeJSONStringWithJavaLangAppendable:outArg withNetMinidevJsonJSONStyle:compression];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LNetMinidevJsonJSONStreamAwareEx;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "<E::Lnet/minidev/json/JSONStreamAwareEx;>(TE;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V", "LNetMinidevJsonReaderJsonWriter;", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Lnet/minidev/json/JSONStreamAwareEx;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_2 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 4, -1, -1, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_2;
}

@end

void NetMinidevJsonReaderJsonWriter_2_init(NetMinidevJsonReaderJsonWriter_2 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_2 *new_NetMinidevJsonReaderJsonWriter_2_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_2, init)
}

NetMinidevJsonReaderJsonWriter_2 *create_NetMinidevJsonReaderJsonWriter_2_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_2, init)
}

@implementation NetMinidevJsonReaderJsonWriter_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(id<NetMinidevJsonJSONAwareEx>)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:[((id<NetMinidevJsonJSONAwareEx>) nil_chk(value)) toJSONStringWithNetMinidevJsonJSONStyle:compression]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LNetMinidevJsonJSONAwareEx;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "<E::Lnet/minidev/json/JSONAwareEx;>(TE;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V", "LNetMinidevJsonReaderJsonWriter;", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Lnet/minidev/json/JSONAwareEx;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_3 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 4, -1, -1, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_3;
}

@end

void NetMinidevJsonReaderJsonWriter_3_init(NetMinidevJsonReaderJsonWriter_3 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_3 *new_NetMinidevJsonReaderJsonWriter_3_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_3, init)
}

NetMinidevJsonReaderJsonWriter_3 *create_NetMinidevJsonReaderJsonWriter_3_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_3, init)
}

@implementation NetMinidevJsonReaderJsonWriter_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(id<NetMinidevJsonJSONAware>)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:[((id<NetMinidevJsonJSONAware>) nil_chk(value)) toJSONString]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LNetMinidevJsonJSONAware;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "<E::Lnet/minidev/json/JSONAware;>(TE;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V", "LNetMinidevJsonReaderJsonWriter;", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Lnet/minidev/json/JSONAware;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_4 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 4, -1, -1, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_4;
}

@end

void NetMinidevJsonReaderJsonWriter_4_init(NetMinidevJsonReaderJsonWriter_4 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_4 *new_NetMinidevJsonReaderJsonWriter_4_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_4, init)
}

NetMinidevJsonReaderJsonWriter_4 *create_NetMinidevJsonReaderJsonWriter_4_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_4, init)
}

@implementation NetMinidevJsonReaderJsonWriter_5

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(id<JavaLangIterable>)list
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  jboolean first = true;
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) arrayStartWithJavaLangAppendable:outArg];
  for (id __strong value in nil_chk(list)) {
    if (first) {
      first = false;
      [compression arrayfirstObjectWithJavaLangAppendable:outArg];
    }
    else {
      [compression arrayNextElmWithJavaLangAppendable:outArg];
    }
    if (value == nil) [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:@"null"];
    else NetMinidevJsonJSONValue_writeJSONStringWithId_withJavaLangAppendable_withNetMinidevJsonJSONStyle_(value, outArg, compression);
    [compression arrayObjectEndWithJavaLangAppendable:outArg];
  }
  [compression arrayStopWithJavaLangAppendable:outArg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LJavaLangIterable;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "<E::Ljava/lang/Iterable<+Ljava/lang/Object;>;>(TE;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V", "LNetMinidevJsonReaderJsonWriter;", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Ljava/lang/Iterable<+Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_5 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 4, -1, -1, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_5;
}

@end

void NetMinidevJsonReaderJsonWriter_5_init(NetMinidevJsonReaderJsonWriter_5 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_5 *new_NetMinidevJsonReaderJsonWriter_5_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_5, init)
}

NetMinidevJsonReaderJsonWriter_5 *create_NetMinidevJsonReaderJsonWriter_5_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_5, init)
}

@implementation NetMinidevJsonReaderJsonWriter_6

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(JavaLangEnum *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  NSString *s = [((JavaLangEnum *) nil_chk((value))) name];
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) writeStringWithJavaLangAppendable:outArg withNSString:s];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LJavaLangEnum;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "<E:Ljava/lang/Enum<*>;>(TE;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V", "LNetMinidevJsonReaderJsonWriter;", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Ljava/lang/Enum<*>;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_6 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 4, -1, -1, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_6;
}

@end

void NetMinidevJsonReaderJsonWriter_6_init(NetMinidevJsonReaderJsonWriter_6 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_6 *new_NetMinidevJsonReaderJsonWriter_6_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_6, init)
}

NetMinidevJsonReaderJsonWriter_6 *create_NetMinidevJsonReaderJsonWriter_6_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_6, init)
}

@implementation NetMinidevJsonReaderJsonWriter_7

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(id<JavaUtilMap>)map
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  jboolean first = true;
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) objectStartWithJavaLangAppendable:outArg];
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(map)) entrySet])) {
    id v = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
    if (v == nil && [compression ignoreNull]) continue;
    if (first) {
      [compression objectFirstStartWithJavaLangAppendable:outArg];
      first = false;
    }
    else {
      [compression objectNextWithJavaLangAppendable:outArg];
    }
    NetMinidevJsonReaderJsonWriter_writeJSONKVWithNSString_withId_withJavaLangAppendable_withNetMinidevJsonJSONStyle_([nil_chk([entry_ getKey]) description], v, outArg, compression);
  }
  [compression objectStopWithJavaLangAppendable:outArg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LJavaUtilMap;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "<E::Ljava/util/Map<Ljava/lang/String;+Ljava/lang/Object;>;>(TE;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V", "LNetMinidevJsonReaderJsonWriter;", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Ljava/util/Map<Ljava/lang/String;+Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_7 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 4, -1, -1, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_7;
}

@end

void NetMinidevJsonReaderJsonWriter_7_init(NetMinidevJsonReaderJsonWriter_7 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_7 *new_NetMinidevJsonReaderJsonWriter_7_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_7, init)
}

NetMinidevJsonReaderJsonWriter_7 *create_NetMinidevJsonReaderJsonWriter_7_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_7, init)
}

@implementation NetMinidevJsonReaderJsonWriter_8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(id)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:[nil_chk(value) description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LNSObject;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "LNetMinidevJsonReaderJsonWriter;", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_8 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, -1, 4, -1 };
  return &_NetMinidevJsonReaderJsonWriter_8;
}

@end

void NetMinidevJsonReaderJsonWriter_8_init(NetMinidevJsonReaderJsonWriter_8 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_8 *new_NetMinidevJsonReaderJsonWriter_8_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_8, init)
}

NetMinidevJsonReaderJsonWriter_8 *create_NetMinidevJsonReaderJsonWriter_8_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_8, init)
}

@implementation NetMinidevJsonReaderJsonWriter_9

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(NSString *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) writeStringWithJavaLangAppendable:outArg withNSString:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LNSString;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "LNetMinidevJsonReaderJsonWriter;", "init__", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_9 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_9;
}

@end

void NetMinidevJsonReaderJsonWriter_9_init(NetMinidevJsonReaderJsonWriter_9 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_9 *new_NetMinidevJsonReaderJsonWriter_9_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_9, init)
}

NetMinidevJsonReaderJsonWriter_9 *create_NetMinidevJsonReaderJsonWriter_9_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_9, init)
}

@implementation NetMinidevJsonReaderJsonWriter_10

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(JavaLangDouble *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  if ([((JavaLangDouble *) nil_chk(value)) isInfinite]) [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:@"null"];
  else [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:[value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LJavaLangDouble;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "LNetMinidevJsonReaderJsonWriter;", "init__", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Ljava/lang/Double;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_10 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_10;
}

@end

void NetMinidevJsonReaderJsonWriter_10_init(NetMinidevJsonReaderJsonWriter_10 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_10 *new_NetMinidevJsonReaderJsonWriter_10_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_10, init)
}

NetMinidevJsonReaderJsonWriter_10 *create_NetMinidevJsonReaderJsonWriter_10_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_10, init)
}

@implementation NetMinidevJsonReaderJsonWriter_11

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(JavaUtilDate *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithChar:'"'];
  NetMinidevJsonJSONValue_escapeWithNSString_withJavaLangAppendable_withNetMinidevJsonJSONStyle_([((JavaUtilDate *) nil_chk(value)) description], outArg, compression);
  [outArg appendWithChar:'"'];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LJavaUtilDate;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "LNetMinidevJsonReaderJsonWriter;", "init__", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Ljava/util/Date;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_11 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_11;
}

@end

void NetMinidevJsonReaderJsonWriter_11_init(NetMinidevJsonReaderJsonWriter_11 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_11 *new_NetMinidevJsonReaderJsonWriter_11_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_11, init)
}

NetMinidevJsonReaderJsonWriter_11 *create_NetMinidevJsonReaderJsonWriter_11_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_11, init)
}

@implementation NetMinidevJsonReaderJsonWriter_12

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(JavaLangFloat *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  if ([((JavaLangFloat *) nil_chk(value)) isInfinite]) [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:@"null"];
  else [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:[value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LJavaLangFloat;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "LNetMinidevJsonReaderJsonWriter;", "init__", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Ljava/lang/Float;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_12 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_12;
}

@end

void NetMinidevJsonReaderJsonWriter_12_init(NetMinidevJsonReaderJsonWriter_12 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_12 *new_NetMinidevJsonReaderJsonWriter_12_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_12, init)
}

NetMinidevJsonReaderJsonWriter_12 *create_NetMinidevJsonReaderJsonWriter_12_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_12, init)
}

@implementation NetMinidevJsonReaderJsonWriter_13

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(IOSIntArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  jboolean needSep = false;
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) arrayStartWithJavaLangAppendable:outArg];
  {
    IOSIntArray *a__ = value;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint b = *b__++;
      if (needSep) [compression objectNextWithJavaLangAppendable:outArg];
      else needSep = true;
      [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:JavaLangInteger_toStringWithInt_(b)];
    }
  }
  [compression arrayStopWithJavaLangAppendable:outArg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "[ILJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "LNetMinidevJsonReaderJsonWriter;", "init__", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<[I>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_13 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_13;
}

@end

void NetMinidevJsonReaderJsonWriter_13_init(NetMinidevJsonReaderJsonWriter_13 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_13 *new_NetMinidevJsonReaderJsonWriter_13_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_13, init)
}

NetMinidevJsonReaderJsonWriter_13 *create_NetMinidevJsonReaderJsonWriter_13_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_13, init)
}

@implementation NetMinidevJsonReaderJsonWriter_14

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(IOSShortArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  jboolean needSep = false;
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) arrayStartWithJavaLangAppendable:outArg];
  {
    IOSShortArray *a__ = value;
    jshort const *b__ = ((IOSShortArray *) nil_chk(a__))->buffer_;
    jshort const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jshort b = *b__++;
      if (needSep) [compression objectNextWithJavaLangAppendable:outArg];
      else needSep = true;
      [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:JavaLangShort_toStringWithShort_(b)];
    }
  }
  [compression arrayStopWithJavaLangAppendable:outArg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "[SLJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "LNetMinidevJsonReaderJsonWriter;", "init__", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<[S>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_14 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_14;
}

@end

void NetMinidevJsonReaderJsonWriter_14_init(NetMinidevJsonReaderJsonWriter_14 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_14 *new_NetMinidevJsonReaderJsonWriter_14_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_14, init)
}

NetMinidevJsonReaderJsonWriter_14 *create_NetMinidevJsonReaderJsonWriter_14_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_14, init)
}

@implementation NetMinidevJsonReaderJsonWriter_15

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(IOSLongArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  jboolean needSep = false;
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) arrayStartWithJavaLangAppendable:outArg];
  {
    IOSLongArray *a__ = value;
    jlong const *b__ = ((IOSLongArray *) nil_chk(a__))->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong b = *b__++;
      if (needSep) [compression objectNextWithJavaLangAppendable:outArg];
      else needSep = true;
      [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:JavaLangLong_toStringWithLong_(b)];
    }
  }
  [compression arrayStopWithJavaLangAppendable:outArg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "[JLJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "LNetMinidevJsonReaderJsonWriter;", "init__", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<[J>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_15 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_15;
}

@end

void NetMinidevJsonReaderJsonWriter_15_init(NetMinidevJsonReaderJsonWriter_15 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_15 *new_NetMinidevJsonReaderJsonWriter_15_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_15, init)
}

NetMinidevJsonReaderJsonWriter_15 *create_NetMinidevJsonReaderJsonWriter_15_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_15, init)
}

@implementation NetMinidevJsonReaderJsonWriter_16

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(IOSFloatArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  jboolean needSep = false;
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) arrayStartWithJavaLangAppendable:outArg];
  {
    IOSFloatArray *a__ = value;
    jfloat const *b__ = ((IOSFloatArray *) nil_chk(a__))->buffer_;
    jfloat const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jfloat b = *b__++;
      if (needSep) [compression objectNextWithJavaLangAppendable:outArg];
      else needSep = true;
      [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:JavaLangFloat_toStringWithFloat_(b)];
    }
  }
  [compression arrayStopWithJavaLangAppendable:outArg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "[FLJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "LNetMinidevJsonReaderJsonWriter;", "init__", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<[F>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_16 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_16;
}

@end

void NetMinidevJsonReaderJsonWriter_16_init(NetMinidevJsonReaderJsonWriter_16 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_16 *new_NetMinidevJsonReaderJsonWriter_16_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_16, init)
}

NetMinidevJsonReaderJsonWriter_16 *create_NetMinidevJsonReaderJsonWriter_16_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_16, init)
}

@implementation NetMinidevJsonReaderJsonWriter_17

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(IOSDoubleArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  jboolean needSep = false;
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) arrayStartWithJavaLangAppendable:outArg];
  {
    IOSDoubleArray *a__ = value;
    jdouble const *b__ = ((IOSDoubleArray *) nil_chk(a__))->buffer_;
    jdouble const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jdouble b = *b__++;
      if (needSep) [compression objectNextWithJavaLangAppendable:outArg];
      else needSep = true;
      [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:JavaLangDouble_toStringWithDouble_(b)];
    }
  }
  [compression arrayStopWithJavaLangAppendable:outArg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "[DLJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "LNetMinidevJsonReaderJsonWriter;", "init__", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<[D>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_17 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_17;
}

@end

void NetMinidevJsonReaderJsonWriter_17_init(NetMinidevJsonReaderJsonWriter_17 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_17 *new_NetMinidevJsonReaderJsonWriter_17_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_17, init)
}

NetMinidevJsonReaderJsonWriter_17 *create_NetMinidevJsonReaderJsonWriter_17_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_17, init)
}

@implementation NetMinidevJsonReaderJsonWriter_18

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderJsonWriter_18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(IOSBooleanArray *)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  jboolean needSep = false;
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) arrayStartWithJavaLangAppendable:outArg];
  {
    IOSBooleanArray *a__ = value;
    jboolean const *b__ = ((IOSBooleanArray *) nil_chk(a__))->buffer_;
    jboolean const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jboolean b = *b__++;
      if (needSep) [compression objectNextWithJavaLangAppendable:outArg];
      else needSep = true;
      [((id<JavaLangAppendable>) nil_chk(outArg)) appendWithJavaLangCharSequence:JavaLangBoolean_toStringWithBoolean_(b)];
    }
  }
  [compression arrayStopWithJavaLangAppendable:outArg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "[ZLJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "LNetMinidevJsonReaderJsonWriter;", "init__", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<[Z>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderJsonWriter_18 = { "", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_NetMinidevJsonReaderJsonWriter_18;
}

@end

void NetMinidevJsonReaderJsonWriter_18_init(NetMinidevJsonReaderJsonWriter_18 *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderJsonWriter_18 *new_NetMinidevJsonReaderJsonWriter_18_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderJsonWriter_18, init)
}

NetMinidevJsonReaderJsonWriter_18 *create_NetMinidevJsonReaderJsonWriter_18_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderJsonWriter_18, init)
}
