//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/reader/ArrayWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Appendable.h"
#include "net/minidev/json/JSONStyle.h"
#include "net/minidev/json/JSONValue.h"
#include "net/minidev/json/reader/ArrayWriter.h"

@implementation NetMinidevJsonReaderArrayWriter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetMinidevJsonReaderArrayWriter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeJSONStringWithId:(id)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression {
  [((NetMinidevJsonJSONStyle *) nil_chk(compression)) arrayStartWithJavaLangAppendable:outArg];
  jboolean needSep = false;
  {
    IOSObjectArray *a__ = ((IOSObjectArray *) cast_check(value, IOSClass_arrayType(NSObject_class_(), 1)));
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id o = *b__++;
      if (needSep) [compression objectNextWithJavaLangAppendable:outArg];
      else needSep = true;
      NetMinidevJsonJSONValue_writeJSONStringWithId_withJavaLangAppendable_withNetMinidevJsonJSONStyle_(o, outArg, compression);
    }
  }
  [compression arrayStopWithJavaLangAppendable:outArg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeJSONStringWithId:withJavaLangAppendable:withNetMinidevJsonJSONStyle:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeJSONString", "LNSObject;LJavaLangAppendable;LNetMinidevJsonJSONStyle;", "LJavaIoIOException;", "<E:Ljava/lang/Object;>(TE;Ljava/lang/Appendable;Lnet/minidev/json/JSONStyle;)V", "Ljava/lang/Object;Lnet/minidev/json/reader/JsonWriterI<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _NetMinidevJsonReaderArrayWriter = { "ArrayWriter", "net.minidev.json.reader", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, 4, -1 };
  return &_NetMinidevJsonReaderArrayWriter;
}

@end

void NetMinidevJsonReaderArrayWriter_init(NetMinidevJsonReaderArrayWriter *self) {
  NSObject_init(self);
}

NetMinidevJsonReaderArrayWriter *new_NetMinidevJsonReaderArrayWriter_init() {
  J2OBJC_NEW_IMPL(NetMinidevJsonReaderArrayWriter, init)
}

NetMinidevJsonReaderArrayWriter *create_NetMinidevJsonReaderArrayWriter_init() {
  J2OBJC_CREATE_IMPL(NetMinidevJsonReaderArrayWriter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetMinidevJsonReaderArrayWriter)
