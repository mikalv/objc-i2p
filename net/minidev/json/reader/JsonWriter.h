//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/reader/JsonWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetMinidevJsonReaderJsonWriter")
#ifdef RESTRICT_NetMinidevJsonReaderJsonWriter
#define INCLUDE_ALL_NetMinidevJsonReaderJsonWriter 0
#else
#define INCLUDE_ALL_NetMinidevJsonReaderJsonWriter 1
#endif
#undef RESTRICT_NetMinidevJsonReaderJsonWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetMinidevJsonReaderJsonWriter_) && (INCLUDE_ALL_NetMinidevJsonReaderJsonWriter || defined(INCLUDE_NetMinidevJsonReaderJsonWriter))
#define NetMinidevJsonReaderJsonWriter_

@class IOSClass;
@class IOSObjectArray;
@class NetMinidevJsonJSONStyle;
@protocol JavaLangAppendable;
@protocol NetMinidevJsonReaderJsonWriterI;

@interface NetMinidevJsonReaderJsonWriter : NSObject
@property (readonly, class, strong) id<NetMinidevJsonReaderJsonWriterI> JSONStreamAwareWriter NS_SWIFT_NAME(JSONStreamAwareWriter);
@property (readonly, class, strong) id<NetMinidevJsonReaderJsonWriterI> JSONStreamAwareExWriter NS_SWIFT_NAME(JSONStreamAwareExWriter);
@property (readonly, class, strong) id<NetMinidevJsonReaderJsonWriterI> JSONJSONAwareExWriter NS_SWIFT_NAME(JSONJSONAwareExWriter);
@property (readonly, class, strong) id<NetMinidevJsonReaderJsonWriterI> JSONJSONAwareWriter NS_SWIFT_NAME(JSONJSONAwareWriter);
@property (readonly, class, strong) id<NetMinidevJsonReaderJsonWriterI> JSONIterableWriter NS_SWIFT_NAME(JSONIterableWriter);
@property (readonly, class, strong) id<NetMinidevJsonReaderJsonWriterI> EnumWriter NS_SWIFT_NAME(EnumWriter);
@property (readonly, class, strong) id<NetMinidevJsonReaderJsonWriterI> JSONMapWriter NS_SWIFT_NAME(JSONMapWriter);
@property (readonly, class, strong) id<NetMinidevJsonReaderJsonWriterI> beansWriter NS_SWIFT_NAME(beansWriter);
@property (readonly, class, strong) id<NetMinidevJsonReaderJsonWriterI> arrayWriter NS_SWIFT_NAME(arrayWriter);
@property (readonly, class, strong) id<NetMinidevJsonReaderJsonWriterI> toStringWriter NS_SWIFT_NAME(toStringWriter);

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONStreamAwareWriter;

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONStreamAwareExWriter;

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONJSONAwareExWriter;

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONJSONAwareWriter;

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONIterableWriter;

+ (id<NetMinidevJsonReaderJsonWriterI>)EnumWriter;

+ (id<NetMinidevJsonReaderJsonWriterI>)JSONMapWriter;

+ (id<NetMinidevJsonReaderJsonWriterI>)beansWriter;

+ (id<NetMinidevJsonReaderJsonWriterI>)arrayWriter;

+ (id<NetMinidevJsonReaderJsonWriterI>)toStringWriter;

#pragma mark Public

- (instancetype __nonnull)init;

- (void)addInterfaceWriterFirstWithIOSClass:(IOSClass *)interFace
        withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer;

- (void)addInterfaceWriterLastWithIOSClass:(IOSClass *)interFace
       withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer;

- (id<NetMinidevJsonReaderJsonWriterI>)getWriteWithIOSClass:(IOSClass *)cls;

- (id<NetMinidevJsonReaderJsonWriterI>)getWriterByInterfaceWithIOSClass:(IOSClass *)clazz;

- (void)init__ OBJC_METHOD_FAMILY_NONE;

- (void)registerWriterWithNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer
                                        withIOSClassArray:(IOSObjectArray *)cls;

- (void)registerWriterInterfaceWithIOSClass:(IOSClass *)interFace
        withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer;

- (void)registerWriterInterfaceFirstWithIOSClass:(IOSClass *)interFace
             withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer;

- (void)registerWriterInterfaceLastWithIOSClass:(IOSClass *)interFace
            withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)writer;

+ (void)writeJSONKVWithNSString:(NSString *)key
                         withId:(id)value
         withJavaLangAppendable:(id<JavaLangAppendable>)outArg
    withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_STATIC_INIT(NetMinidevJsonReaderJsonWriter)

inline id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_get_JSONStreamAwareWriter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONStreamAwareWriter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonReaderJsonWriter, JSONStreamAwareWriter, id<NetMinidevJsonReaderJsonWriterI>)

inline id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_get_JSONStreamAwareExWriter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONStreamAwareExWriter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonReaderJsonWriter, JSONStreamAwareExWriter, id<NetMinidevJsonReaderJsonWriterI>)

inline id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_get_JSONJSONAwareExWriter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONJSONAwareExWriter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonReaderJsonWriter, JSONJSONAwareExWriter, id<NetMinidevJsonReaderJsonWriterI>)

inline id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_get_JSONJSONAwareWriter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONJSONAwareWriter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonReaderJsonWriter, JSONJSONAwareWriter, id<NetMinidevJsonReaderJsonWriterI>)

inline id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_get_JSONIterableWriter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONIterableWriter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonReaderJsonWriter, JSONIterableWriter, id<NetMinidevJsonReaderJsonWriterI>)

inline id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_get_EnumWriter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_EnumWriter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonReaderJsonWriter, EnumWriter, id<NetMinidevJsonReaderJsonWriterI>)

inline id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_get_JSONMapWriter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_JSONMapWriter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonReaderJsonWriter, JSONMapWriter, id<NetMinidevJsonReaderJsonWriterI>)

inline id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_get_beansWriter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_beansWriter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonReaderJsonWriter, beansWriter, id<NetMinidevJsonReaderJsonWriterI>)

inline id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_get_arrayWriter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_arrayWriter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonReaderJsonWriter, arrayWriter, id<NetMinidevJsonReaderJsonWriterI>)

inline id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_get_toStringWriter(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<NetMinidevJsonReaderJsonWriterI> NetMinidevJsonReaderJsonWriter_toStringWriter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetMinidevJsonReaderJsonWriter, toStringWriter, id<NetMinidevJsonReaderJsonWriterI>)

FOUNDATION_EXPORT void NetMinidevJsonReaderJsonWriter_init(NetMinidevJsonReaderJsonWriter *self);

FOUNDATION_EXPORT NetMinidevJsonReaderJsonWriter *new_NetMinidevJsonReaderJsonWriter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonReaderJsonWriter *create_NetMinidevJsonReaderJsonWriter_init(void);

FOUNDATION_EXPORT void NetMinidevJsonReaderJsonWriter_writeJSONKVWithNSString_withId_withJavaLangAppendable_withNetMinidevJsonJSONStyle_(NSString *key, id value, id<JavaLangAppendable> outArg, NetMinidevJsonJSONStyle *compression);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonReaderJsonWriter)

#endif

#if !defined (NetMinidevJsonReaderJsonWriter_WriterByInterface_) && (INCLUDE_ALL_NetMinidevJsonReaderJsonWriter || defined(INCLUDE_NetMinidevJsonReaderJsonWriter_WriterByInterface))
#define NetMinidevJsonReaderJsonWriter_WriterByInterface_

@class IOSClass;
@protocol NetMinidevJsonReaderJsonWriterI;

@interface NetMinidevJsonReaderJsonWriter_WriterByInterface : NSObject {
 @public
  IOSClass *_interface_;
  id<NetMinidevJsonReaderJsonWriterI> _writer_;
}

#pragma mark Public

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)_interface
       withNetMinidevJsonReaderJsonWriterI:(id<NetMinidevJsonReaderJsonWriterI>)_writer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderJsonWriter_WriterByInterface)

J2OBJC_FIELD_SETTER(NetMinidevJsonReaderJsonWriter_WriterByInterface, _interface_, IOSClass *)
J2OBJC_FIELD_SETTER(NetMinidevJsonReaderJsonWriter_WriterByInterface, _writer_, id<NetMinidevJsonReaderJsonWriterI>)

FOUNDATION_EXPORT void NetMinidevJsonReaderJsonWriter_WriterByInterface_initWithIOSClass_withNetMinidevJsonReaderJsonWriterI_(NetMinidevJsonReaderJsonWriter_WriterByInterface *self, IOSClass *_interface, id<NetMinidevJsonReaderJsonWriterI> _writer);

FOUNDATION_EXPORT NetMinidevJsonReaderJsonWriter_WriterByInterface *new_NetMinidevJsonReaderJsonWriter_WriterByInterface_initWithIOSClass_withNetMinidevJsonReaderJsonWriterI_(IOSClass *_interface, id<NetMinidevJsonReaderJsonWriterI> _writer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonReaderJsonWriter_WriterByInterface *create_NetMinidevJsonReaderJsonWriter_WriterByInterface_initWithIOSClass_withNetMinidevJsonReaderJsonWriterI_(IOSClass *_interface, id<NetMinidevJsonReaderJsonWriterI> _writer);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonReaderJsonWriter_WriterByInterface)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetMinidevJsonReaderJsonWriter")
