//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/reader/BeansWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetMinidevJsonReaderBeansWriter")
#ifdef RESTRICT_NetMinidevJsonReaderBeansWriter
#define INCLUDE_ALL_NetMinidevJsonReaderBeansWriter 0
#else
#define INCLUDE_ALL_NetMinidevJsonReaderBeansWriter 1
#endif
#undef RESTRICT_NetMinidevJsonReaderBeansWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetMinidevJsonReaderBeansWriter_) && (INCLUDE_ALL_NetMinidevJsonReaderBeansWriter || defined(INCLUDE_NetMinidevJsonReaderBeansWriter))
#define NetMinidevJsonReaderBeansWriter_

#define RESTRICT_NetMinidevJsonReaderJsonWriterI 1
#define INCLUDE_NetMinidevJsonReaderJsonWriterI 1
#include "net/minidev/json/reader/JsonWriterI.h"

@class NetMinidevJsonJSONStyle;
@protocol JavaLangAppendable;

@interface NetMinidevJsonReaderBeansWriter : NSObject < NetMinidevJsonReaderJsonWriterI >

#pragma mark Public

- (instancetype __nonnull)init;

- (void)writeJSONStringWithId:(id)value
       withJavaLangAppendable:(id<JavaLangAppendable>)outArg
  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonReaderBeansWriter)

FOUNDATION_EXPORT void NetMinidevJsonReaderBeansWriter_init(NetMinidevJsonReaderBeansWriter *self);

FOUNDATION_EXPORT NetMinidevJsonReaderBeansWriter *new_NetMinidevJsonReaderBeansWriter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonReaderBeansWriter *create_NetMinidevJsonReaderBeansWriter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonReaderBeansWriter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetMinidevJsonReaderBeansWriter")
