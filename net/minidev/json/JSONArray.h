//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/minidev/json/JSONArray.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetMinidevJsonJSONArray")
#ifdef RESTRICT_NetMinidevJsonJSONArray
#define INCLUDE_ALL_NetMinidevJsonJSONArray 0
#else
#define INCLUDE_ALL_NetMinidevJsonJSONArray 1
#endif
#undef RESTRICT_NetMinidevJsonJSONArray

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetMinidevJsonJSONArray_) && (INCLUDE_ALL_NetMinidevJsonJSONArray || defined(INCLUDE_NetMinidevJsonJSONArray))
#define NetMinidevJsonJSONArray_

#define RESTRICT_JavaUtilArrayList 1
#define INCLUDE_JavaUtilArrayList 1
#include "java/util/ArrayList.h"

#define RESTRICT_JavaUtilList 1
#define INCLUDE_JavaUtilList 1
#include "java/util/List.h"

#define RESTRICT_NetMinidevJsonJSONAwareEx 1
#define INCLUDE_NetMinidevJsonJSONAwareEx 1
#include "net/minidev/json/JSONAwareEx.h"

#define RESTRICT_NetMinidevJsonJSONStreamAwareEx 1
#define INCLUDE_NetMinidevJsonJSONStreamAwareEx 1
#include "net/minidev/json/JSONStreamAwareEx.h"

@class NetMinidevJsonJSONStyle;
@protocol JavaLangAppendable;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;

@interface NetMinidevJsonJSONArray : JavaUtilArrayList < JavaUtilList, NetMinidevJsonJSONAwareEx, NetMinidevJsonJSONStreamAwareEx >

#pragma mark Public

- (instancetype __nonnull)init;

- (void)mergeWithId:(id)o2;

- (NSString *)toJSONString;

- (NSString *)toJSONStringWithNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

+ (NSString *)toJSONStringWithJavaUtilList:(id<JavaUtilList>)list;

+ (NSString *)toJSONStringWithJavaUtilList:(id<JavaUtilList>)list
               withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

- (NSString *)description;

- (NSString *)toStringWithNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

- (void)writeJSONStringWithJavaLangAppendable:(id<JavaLangAppendable>)outArg;

- (void)writeJSONStringWithJavaLangAppendable:(id<JavaLangAppendable>)outArg
                  withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

+ (void)writeJSONStringWithJavaLangIterable:(id<JavaLangIterable>)list
                     withJavaLangAppendable:(id<JavaLangAppendable>)outArg
                withNetMinidevJsonJSONStyle:(NetMinidevJsonJSONStyle *)compression;

+ (void)writeJSONStringWithJavaUtilList:(id<JavaUtilList>)list
                 withJavaLangAppendable:(id<JavaLangAppendable>)outArg;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetMinidevJsonJSONArray)

FOUNDATION_EXPORT void NetMinidevJsonJSONArray_init(NetMinidevJsonJSONArray *self);

FOUNDATION_EXPORT NetMinidevJsonJSONArray *new_NetMinidevJsonJSONArray_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetMinidevJsonJSONArray *create_NetMinidevJsonJSONArray_init(void);

FOUNDATION_EXPORT NSString *NetMinidevJsonJSONArray_toJSONStringWithJavaUtilList_(id<JavaUtilList> list);

FOUNDATION_EXPORT NSString *NetMinidevJsonJSONArray_toJSONStringWithJavaUtilList_withNetMinidevJsonJSONStyle_(id<JavaUtilList> list, NetMinidevJsonJSONStyle *compression);

FOUNDATION_EXPORT void NetMinidevJsonJSONArray_writeJSONStringWithJavaLangIterable_withJavaLangAppendable_withNetMinidevJsonJSONStyle_(id<JavaLangIterable> list, id<JavaLangAppendable> outArg, NetMinidevJsonJSONStyle *compression);

FOUNDATION_EXPORT void NetMinidevJsonJSONArray_writeJSONStringWithJavaUtilList_withJavaLangAppendable_(id<JavaUtilList> list, id<JavaLangAppendable> outArg);

J2OBJC_TYPE_LITERAL_HEADER(NetMinidevJsonJSONArray)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetMinidevJsonJSONArray")
