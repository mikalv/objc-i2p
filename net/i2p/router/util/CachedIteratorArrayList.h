//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/util/CachedIteratorArrayList.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterUtilCachedIteratorArrayList")
#ifdef RESTRICT_NetI2pRouterUtilCachedIteratorArrayList
#define INCLUDE_ALL_NetI2pRouterUtilCachedIteratorArrayList 0
#else
#define INCLUDE_ALL_NetI2pRouterUtilCachedIteratorArrayList 1
#endif
#undef RESTRICT_NetI2pRouterUtilCachedIteratorArrayList

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterUtilCachedIteratorArrayList_) && (INCLUDE_ALL_NetI2pRouterUtilCachedIteratorArrayList || defined(INCLUDE_NetI2pRouterUtilCachedIteratorArrayList))
#define NetI2pRouterUtilCachedIteratorArrayList_

#define RESTRICT_JavaUtilArrayList 1
#define INCLUDE_JavaUtilArrayList 1
#include "java/util/ArrayList.h"

@protocol JavaUtilCollection;
@protocol JavaUtilIterator;

@interface NetI2pRouterUtilCachedIteratorArrayList : JavaUtilArrayList

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (instancetype __nonnull)initWithInt:(jint)initialCapacity;

- (id<JavaUtilIterator>)iterator;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterUtilCachedIteratorArrayList)

FOUNDATION_EXPORT void NetI2pRouterUtilCachedIteratorArrayList_init(NetI2pRouterUtilCachedIteratorArrayList *self);

FOUNDATION_EXPORT NetI2pRouterUtilCachedIteratorArrayList *new_NetI2pRouterUtilCachedIteratorArrayList_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterUtilCachedIteratorArrayList *create_NetI2pRouterUtilCachedIteratorArrayList_init(void);

FOUNDATION_EXPORT void NetI2pRouterUtilCachedIteratorArrayList_initWithJavaUtilCollection_(NetI2pRouterUtilCachedIteratorArrayList *self, id<JavaUtilCollection> c);

FOUNDATION_EXPORT NetI2pRouterUtilCachedIteratorArrayList *new_NetI2pRouterUtilCachedIteratorArrayList_initWithJavaUtilCollection_(id<JavaUtilCollection> c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterUtilCachedIteratorArrayList *create_NetI2pRouterUtilCachedIteratorArrayList_initWithJavaUtilCollection_(id<JavaUtilCollection> c);

FOUNDATION_EXPORT void NetI2pRouterUtilCachedIteratorArrayList_initWithInt_(NetI2pRouterUtilCachedIteratorArrayList *self, jint initialCapacity);

FOUNDATION_EXPORT NetI2pRouterUtilCachedIteratorArrayList *new_NetI2pRouterUtilCachedIteratorArrayList_initWithInt_(jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterUtilCachedIteratorArrayList *create_NetI2pRouterUtilCachedIteratorArrayList_initWithInt_(jint initialCapacity);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterUtilCachedIteratorArrayList)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterUtilCachedIteratorArrayList")
