//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/util/CoDelBlockingQueue.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterUtilCoDelBlockingQueue")
#ifdef RESTRICT_NetI2pRouterUtilCoDelBlockingQueue
#define INCLUDE_ALL_NetI2pRouterUtilCoDelBlockingQueue 0
#else
#define INCLUDE_ALL_NetI2pRouterUtilCoDelBlockingQueue 1
#endif
#undef RESTRICT_NetI2pRouterUtilCoDelBlockingQueue

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterUtilCoDelBlockingQueue_) && (INCLUDE_ALL_NetI2pRouterUtilCoDelBlockingQueue || defined(INCLUDE_NetI2pRouterUtilCoDelBlockingQueue))
#define NetI2pRouterUtilCoDelBlockingQueue_

#define RESTRICT_JavaUtilConcurrentLinkedBlockingQueue 1
#define INCLUDE_JavaUtilConcurrentLinkedBlockingQueue 1
#include "java/util/concurrent/LinkedBlockingQueue.h"

@class JavaUtilConcurrentTimeUnit;
@class NetI2pI2PAppContext;
@protocol JavaUtilCollection;
@protocol NetI2pRouterUtilCDQEntry;

@interface NetI2pRouterUtilCoDelBlockingQueue : JavaUtilConcurrentLinkedBlockingQueue

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                         withNSString:(NSString *)name
                                              withInt:(jint)capacity;

- (jboolean)addWithId:(id<NetI2pRouterUtilCDQEntry>)o;

- (void)clear;

- (jint)drainAllToWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c
                              withInt:(jint)maxElements;

- (id<NetI2pRouterUtilCDQEntry>)element;

- (jboolean)isBacklogged;

- (jboolean)offerWithId:(id<NetI2pRouterUtilCDQEntry>)o;

- (jboolean)offerWithId:(id<NetI2pRouterUtilCDQEntry>)o
               withLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (id<NetI2pRouterUtilCDQEntry>)peek;

- (id<NetI2pRouterUtilCDQEntry>)poll;

- (id<NetI2pRouterUtilCDQEntry>)pollWithLong:(jlong)arg0
              withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)arg1;

- (void)putWithId:(id<NetI2pRouterUtilCDQEntry>)o;

- (id<NetI2pRouterUtilCDQEntry>)remove;

- (id<NetI2pRouterUtilCDQEntry>)take;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterUtilCoDelBlockingQueue)

FOUNDATION_EXPORT void NetI2pRouterUtilCoDelBlockingQueue_initWithNetI2pI2PAppContext_withNSString_withInt_(NetI2pRouterUtilCoDelBlockingQueue *self, NetI2pI2PAppContext *ctx, NSString *name, jint capacity);

FOUNDATION_EXPORT NetI2pRouterUtilCoDelBlockingQueue *new_NetI2pRouterUtilCoDelBlockingQueue_initWithNetI2pI2PAppContext_withNSString_withInt_(NetI2pI2PAppContext *ctx, NSString *name, jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterUtilCoDelBlockingQueue *create_NetI2pRouterUtilCoDelBlockingQueue_initWithNetI2pI2PAppContext_withNSString_withInt_(NetI2pI2PAppContext *ctx, NSString *name, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterUtilCoDelBlockingQueue)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterUtilCoDelBlockingQueue")
