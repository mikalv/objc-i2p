//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/util/MaskedIPSet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterUtilMaskedIPSet")
#ifdef RESTRICT_NetI2pRouterUtilMaskedIPSet
#define INCLUDE_ALL_NetI2pRouterUtilMaskedIPSet 0
#else
#define INCLUDE_ALL_NetI2pRouterUtilMaskedIPSet 1
#endif
#undef RESTRICT_NetI2pRouterUtilMaskedIPSet

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterUtilMaskedIPSet_) && (INCLUDE_ALL_NetI2pRouterUtilMaskedIPSet || defined(INCLUDE_NetI2pRouterUtilMaskedIPSet))
#define NetI2pRouterUtilMaskedIPSet_

#define RESTRICT_JavaUtilHashSet 1
#define INCLUDE_JavaUtilHashSet 1
#include "java/util/HashSet.h"

@class NetI2pDataHash;
@class NetI2pDataRouterRouterInfo;
@class NetI2pRouterRouterContext;
@protocol JavaUtilCollection;
@protocol JavaUtilSet;

@interface NetI2pRouterUtilMaskedIPSet : JavaUtilHashSet

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithInt:(jint)initialCapacity;

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                         withNetI2pDataHash:(NetI2pDataHash *)peer
                                                    withInt:(jint)mask;

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                         withNetI2pDataHash:(NetI2pDataHash *)peer
                             withNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)pinfo
                                                    withInt:(jint)mask;

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                             withNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)pinfo
                                                    withInt:(jint)mask;

- (jboolean)containsAnyWithJavaUtilSet:(id<JavaUtilSet>)b;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
                            withFloat:(jfloat)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0
                            withFloat:(jfloat)arg1
                          withBoolean:(jboolean)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterUtilMaskedIPSet)

FOUNDATION_EXPORT void NetI2pRouterUtilMaskedIPSet_init(NetI2pRouterUtilMaskedIPSet *self);

FOUNDATION_EXPORT NetI2pRouterUtilMaskedIPSet *new_NetI2pRouterUtilMaskedIPSet_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterUtilMaskedIPSet *create_NetI2pRouterUtilMaskedIPSet_init(void);

FOUNDATION_EXPORT void NetI2pRouterUtilMaskedIPSet_initWithInt_(NetI2pRouterUtilMaskedIPSet *self, jint initialCapacity);

FOUNDATION_EXPORT NetI2pRouterUtilMaskedIPSet *new_NetI2pRouterUtilMaskedIPSet_initWithInt_(jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterUtilMaskedIPSet *create_NetI2pRouterUtilMaskedIPSet_initWithInt_(jint initialCapacity);

FOUNDATION_EXPORT void NetI2pRouterUtilMaskedIPSet_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withInt_(NetI2pRouterUtilMaskedIPSet *self, NetI2pRouterRouterContext *ctx, NetI2pDataHash *peer, jint mask);

FOUNDATION_EXPORT NetI2pRouterUtilMaskedIPSet *new_NetI2pRouterUtilMaskedIPSet_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withInt_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *peer, jint mask) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterUtilMaskedIPSet *create_NetI2pRouterUtilMaskedIPSet_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withInt_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *peer, jint mask);

FOUNDATION_EXPORT void NetI2pRouterUtilMaskedIPSet_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withInt_(NetI2pRouterUtilMaskedIPSet *self, NetI2pRouterRouterContext *ctx, NetI2pDataRouterRouterInfo *pinfo, jint mask);

FOUNDATION_EXPORT NetI2pRouterUtilMaskedIPSet *new_NetI2pRouterUtilMaskedIPSet_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withInt_(NetI2pRouterRouterContext *ctx, NetI2pDataRouterRouterInfo *pinfo, jint mask) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterUtilMaskedIPSet *create_NetI2pRouterUtilMaskedIPSet_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withInt_(NetI2pRouterRouterContext *ctx, NetI2pDataRouterRouterInfo *pinfo, jint mask);

FOUNDATION_EXPORT void NetI2pRouterUtilMaskedIPSet_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataRouterRouterInfo_withInt_(NetI2pRouterUtilMaskedIPSet *self, NetI2pRouterRouterContext *ctx, NetI2pDataHash *peer, NetI2pDataRouterRouterInfo *pinfo, jint mask);

FOUNDATION_EXPORT NetI2pRouterUtilMaskedIPSet *new_NetI2pRouterUtilMaskedIPSet_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataRouterRouterInfo_withInt_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *peer, NetI2pDataRouterRouterInfo *pinfo, jint mask) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterUtilMaskedIPSet *create_NetI2pRouterUtilMaskedIPSet_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataRouterRouterInfo_withInt_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *peer, NetI2pDataRouterRouterInfo *pinfo, jint mask);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterUtilMaskedIPSet)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterUtilMaskedIPSet")
