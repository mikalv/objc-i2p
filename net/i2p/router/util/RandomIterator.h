//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/util/RandomIterator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterUtilRandomIterator")
#ifdef RESTRICT_NetI2pRouterUtilRandomIterator
#define INCLUDE_ALL_NetI2pRouterUtilRandomIterator 0
#else
#define INCLUDE_ALL_NetI2pRouterUtilRandomIterator 1
#endif
#undef RESTRICT_NetI2pRouterUtilRandomIterator

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterUtilRandomIterator_) && (INCLUDE_ALL_NetI2pRouterUtilRandomIterator || defined(INCLUDE_NetI2pRouterUtilRandomIterator))
#define NetI2pRouterUtilRandomIterator_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

@class IOSObjectArray;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilList;

@interface NetI2pRouterUtilRandomIterator : NSObject < JavaUtilIterator >

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)list;

- (jboolean)hasNext;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (id)next;

- (void)remove;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterUtilRandomIterator)

FOUNDATION_EXPORT void NetI2pRouterUtilRandomIterator_initWithJavaUtilList_(NetI2pRouterUtilRandomIterator *self, id<JavaUtilList> list);

FOUNDATION_EXPORT NetI2pRouterUtilRandomIterator *new_NetI2pRouterUtilRandomIterator_initWithJavaUtilList_(id<JavaUtilList> list) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterUtilRandomIterator *create_NetI2pRouterUtilRandomIterator_initWithJavaUtilList_(id<JavaUtilList> list);

FOUNDATION_EXPORT void NetI2pRouterUtilRandomIterator_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterUtilRandomIterator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterUtilRandomIterator")
