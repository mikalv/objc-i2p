//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/message/SendMessageDirectJob.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterMessageSendMessageDirectJob")
#ifdef RESTRICT_NetI2pRouterMessageSendMessageDirectJob
#define INCLUDE_ALL_NetI2pRouterMessageSendMessageDirectJob 0
#else
#define INCLUDE_ALL_NetI2pRouterMessageSendMessageDirectJob 1
#endif
#undef RESTRICT_NetI2pRouterMessageSendMessageDirectJob

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterMessageSendMessageDirectJob_) && (INCLUDE_ALL_NetI2pRouterMessageSendMessageDirectJob || defined(INCLUDE_NetI2pRouterMessageSendMessageDirectJob))
#define NetI2pRouterMessageSendMessageDirectJob_

#define RESTRICT_NetI2pRouterJobImpl 1
#define INCLUDE_NetI2pRouterJobImpl 1
#include "net/i2p/router/JobImpl.h"

@class NetI2pDataHash;
@class NetI2pRouterRouterContext;
@protocol NetI2pDataI2npI2NPMessage;
@protocol NetI2pRouterJob;
@protocol NetI2pRouterMessageSelector;
@protocol NetI2pRouterReplyJob;

@interface NetI2pRouterMessageSendMessageDirectJob : NetI2pRouterJobImpl

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                              withNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)message
                                         withNetI2pDataHash:(NetI2pDataHash *)toPeer
                                                    withInt:(jint)timeoutMs
                                                    withInt:(jint)priority;

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                              withNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)message
                                         withNetI2pDataHash:(NetI2pDataHash *)toPeer
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onSend
                                   withNetI2pRouterReplyJob:(id<NetI2pRouterReplyJob>)onSuccess
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onFail
                            withNetI2pRouterMessageSelector:(id<NetI2pRouterMessageSelector>)selector
                                                    withInt:(jint)timeoutMs
                                                    withInt:(jint)priority;

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                              withNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)message
                                         withNetI2pDataHash:(NetI2pDataHash *)toPeer
                                   withNetI2pRouterReplyJob:(id<NetI2pRouterReplyJob>)onSuccess
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onFail
                            withNetI2pRouterMessageSelector:(id<NetI2pRouterMessageSelector>)selector
                                                    withInt:(jint)timeoutMs
                                                    withInt:(jint)priority;

- (NSString *)getName;

- (void)runJob;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterMessageSendMessageDirectJob)

FOUNDATION_EXPORT void NetI2pRouterMessageSendMessageDirectJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withInt_withInt_(NetI2pRouterMessageSendMessageDirectJob *self, NetI2pRouterRouterContext *ctx, id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toPeer, jint timeoutMs, jint priority);

FOUNDATION_EXPORT NetI2pRouterMessageSendMessageDirectJob *new_NetI2pRouterMessageSendMessageDirectJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withInt_withInt_(NetI2pRouterRouterContext *ctx, id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toPeer, jint timeoutMs, jint priority) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterMessageSendMessageDirectJob *create_NetI2pRouterMessageSendMessageDirectJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withInt_withInt_(NetI2pRouterRouterContext *ctx, id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toPeer, jint timeoutMs, jint priority);

FOUNDATION_EXPORT void NetI2pRouterMessageSendMessageDirectJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pRouterReplyJob_withNetI2pRouterJob_withNetI2pRouterMessageSelector_withInt_withInt_(NetI2pRouterMessageSendMessageDirectJob *self, NetI2pRouterRouterContext *ctx, id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toPeer, id<NetI2pRouterReplyJob> onSuccess, id<NetI2pRouterJob> onFail, id<NetI2pRouterMessageSelector> selector, jint timeoutMs, jint priority);

FOUNDATION_EXPORT NetI2pRouterMessageSendMessageDirectJob *new_NetI2pRouterMessageSendMessageDirectJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pRouterReplyJob_withNetI2pRouterJob_withNetI2pRouterMessageSelector_withInt_withInt_(NetI2pRouterRouterContext *ctx, id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toPeer, id<NetI2pRouterReplyJob> onSuccess, id<NetI2pRouterJob> onFail, id<NetI2pRouterMessageSelector> selector, jint timeoutMs, jint priority) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterMessageSendMessageDirectJob *create_NetI2pRouterMessageSendMessageDirectJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pRouterReplyJob_withNetI2pRouterJob_withNetI2pRouterMessageSelector_withInt_withInt_(NetI2pRouterRouterContext *ctx, id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toPeer, id<NetI2pRouterReplyJob> onSuccess, id<NetI2pRouterJob> onFail, id<NetI2pRouterMessageSelector> selector, jint timeoutMs, jint priority);

FOUNDATION_EXPORT void NetI2pRouterMessageSendMessageDirectJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pRouterJob_withNetI2pRouterReplyJob_withNetI2pRouterJob_withNetI2pRouterMessageSelector_withInt_withInt_(NetI2pRouterMessageSendMessageDirectJob *self, NetI2pRouterRouterContext *ctx, id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toPeer, id<NetI2pRouterJob> onSend, id<NetI2pRouterReplyJob> onSuccess, id<NetI2pRouterJob> onFail, id<NetI2pRouterMessageSelector> selector, jint timeoutMs, jint priority);

FOUNDATION_EXPORT NetI2pRouterMessageSendMessageDirectJob *new_NetI2pRouterMessageSendMessageDirectJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pRouterJob_withNetI2pRouterReplyJob_withNetI2pRouterJob_withNetI2pRouterMessageSelector_withInt_withInt_(NetI2pRouterRouterContext *ctx, id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toPeer, id<NetI2pRouterJob> onSend, id<NetI2pRouterReplyJob> onSuccess, id<NetI2pRouterJob> onFail, id<NetI2pRouterMessageSelector> selector, jint timeoutMs, jint priority) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterMessageSendMessageDirectJob *create_NetI2pRouterMessageSendMessageDirectJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pRouterJob_withNetI2pRouterReplyJob_withNetI2pRouterJob_withNetI2pRouterMessageSelector_withInt_withInt_(NetI2pRouterRouterContext *ctx, id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toPeer, id<NetI2pRouterJob> onSend, id<NetI2pRouterReplyJob> onSuccess, id<NetI2pRouterJob> onFail, id<NetI2pRouterMessageSelector> selector, jint timeoutMs, jint priority);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterMessageSendMessageDirectJob)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterMessageSendMessageDirectJob")
