//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/ClientMessage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterClientMessage")
#ifdef RESTRICT_NetI2pRouterClientMessage
#define INCLUDE_ALL_NetI2pRouterClientMessage 0
#else
#define INCLUDE_ALL_NetI2pRouterClientMessage 1
#endif
#undef RESTRICT_NetI2pRouterClientMessage

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterClientMessage_) && (INCLUDE_ALL_NetI2pRouterClientMessage || defined(INCLUDE_NetI2pRouterClientMessage))
#define NetI2pRouterClientMessage_

@class NetI2pDataDestination;
@class NetI2pDataHash;
@class NetI2pDataI2cpMessageId;
@class NetI2pDataI2cpSessionConfig;
@class NetI2pDataPayload;

@interface NetI2pRouterClientMessage : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pDataDestination:(NetI2pDataDestination *)toDest
                                  withNetI2pDataPayload:(NetI2pDataPayload *)payload
                        withNetI2pDataI2cpSessionConfig:(NetI2pDataI2cpSessionConfig *)config
                              withNetI2pDataDestination:(NetI2pDataDestination *)fromDest
                            withNetI2pDataI2cpMessageId:(NetI2pDataI2cpMessageId *)msgID
                                               withLong:(jlong)messageNonce
                                               withLong:(jlong)expiration
                                                withInt:(jint)flags;

- (instancetype __nonnull)initWithNetI2pDataHash:(NetI2pDataHash *)toDestHash
                           withNetI2pDataPayload:(NetI2pDataPayload *)payload;

- (NetI2pDataDestination *)getDestination;

- (NetI2pDataHash *)getDestinationHash;

- (jlong)getExpiration;

- (jint)getFlags;

- (NetI2pDataDestination *)getFromDestination;

- (NetI2pDataI2cpMessageId *)getMessageId;

- (jlong)getMessageNonce;

- (NetI2pDataPayload *)getPayload;

- (NetI2pDataI2cpSessionConfig *)getSenderConfig;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterClientMessage)

FOUNDATION_EXPORT void NetI2pRouterClientMessage_initWithNetI2pDataDestination_withNetI2pDataPayload_withNetI2pDataI2cpSessionConfig_withNetI2pDataDestination_withNetI2pDataI2cpMessageId_withLong_withLong_withInt_(NetI2pRouterClientMessage *self, NetI2pDataDestination *toDest, NetI2pDataPayload *payload, NetI2pDataI2cpSessionConfig *config, NetI2pDataDestination *fromDest, NetI2pDataI2cpMessageId *msgID, jlong messageNonce, jlong expiration, jint flags);

FOUNDATION_EXPORT NetI2pRouterClientMessage *new_NetI2pRouterClientMessage_initWithNetI2pDataDestination_withNetI2pDataPayload_withNetI2pDataI2cpSessionConfig_withNetI2pDataDestination_withNetI2pDataI2cpMessageId_withLong_withLong_withInt_(NetI2pDataDestination *toDest, NetI2pDataPayload *payload, NetI2pDataI2cpSessionConfig *config, NetI2pDataDestination *fromDest, NetI2pDataI2cpMessageId *msgID, jlong messageNonce, jlong expiration, jint flags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterClientMessage *create_NetI2pRouterClientMessage_initWithNetI2pDataDestination_withNetI2pDataPayload_withNetI2pDataI2cpSessionConfig_withNetI2pDataDestination_withNetI2pDataI2cpMessageId_withLong_withLong_withInt_(NetI2pDataDestination *toDest, NetI2pDataPayload *payload, NetI2pDataI2cpSessionConfig *config, NetI2pDataDestination *fromDest, NetI2pDataI2cpMessageId *msgID, jlong messageNonce, jlong expiration, jint flags);

FOUNDATION_EXPORT void NetI2pRouterClientMessage_initWithNetI2pDataHash_withNetI2pDataPayload_(NetI2pRouterClientMessage *self, NetI2pDataHash *toDestHash, NetI2pDataPayload *payload);

FOUNDATION_EXPORT NetI2pRouterClientMessage *new_NetI2pRouterClientMessage_initWithNetI2pDataHash_withNetI2pDataPayload_(NetI2pDataHash *toDestHash, NetI2pDataPayload *payload) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterClientMessage *create_NetI2pRouterClientMessage_initWithNetI2pDataHash_withNetI2pDataPayload_(NetI2pDataHash *toDestHash, NetI2pDataPayload *payload);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterClientMessage)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterClientMessage")
