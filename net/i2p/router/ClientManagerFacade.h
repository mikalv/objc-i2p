//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/ClientManagerFacade.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterClientManagerFacade")
#ifdef RESTRICT_NetI2pRouterClientManagerFacade
#define INCLUDE_ALL_NetI2pRouterClientManagerFacade 0
#else
#define INCLUDE_ALL_NetI2pRouterClientManagerFacade 1
#endif
#undef RESTRICT_NetI2pRouterClientManagerFacade

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterClientManagerFacade_) && (INCLUDE_ALL_NetI2pRouterClientManagerFacade || defined(INCLUDE_NetI2pRouterClientManagerFacade))
#define NetI2pRouterClientManagerFacade_

#define RESTRICT_NetI2pRouterService 1
#define INCLUDE_NetI2pRouterService 1
#include "net/i2p/router/Service.h"

@class JavaIoWriter;
@class NetI2pCryptoSessionKeyManager;
@class NetI2pDataDestination;
@class NetI2pDataHash;
@class NetI2pDataI2cpMessageId;
@class NetI2pDataI2cpSessionConfig;
@class NetI2pDataLeaseSet;
@class NetI2pRouterClientMessage;
@protocol JavaUtilSet;
@protocol NetI2pRouterJob;

@interface NetI2pRouterClientManagerFacade : NSObject < NetI2pRouterService >
@property (readonly, copy, class) NSString *PROP_CLIENT_ONLY NS_SWIFT_NAME(PROP_CLIENT_ONLY);

+ (NSString *)PROP_CLIENT_ONLY;

#pragma mark Public

- (instancetype __nonnull)init;

- (NetI2pDataI2cpSessionConfig *)getClientSessionConfigWithNetI2pDataDestination:(NetI2pDataDestination *)dest;

- (NetI2pCryptoSessionKeyManager *)getClientSessionKeyManagerWithNetI2pDataHash:(NetI2pDataHash *)dest;

- (jboolean)isAlive;

- (jboolean)isLocalWithNetI2pDataDestination:(NetI2pDataDestination *)dest;

- (jboolean)isLocalWithNetI2pDataHash:(NetI2pDataHash *)destHash;

- (id<JavaUtilSet>)listClients;

- (void)messageDeliveryStatusUpdateWithNetI2pDataDestination:(NetI2pDataDestination *)fromDest
                                 withNetI2pDataI2cpMessageId:(NetI2pDataI2cpMessageId *)id_
                                                    withLong:(jlong)messageNonce
                                                     withInt:(jint)status;

- (void)messageReceivedWithNetI2pRouterClientMessage:(NetI2pRouterClientMessage *)msg;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg;

- (void)reportAbuseWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                withNSString:(NSString *)reason
                                     withInt:(jint)severity;

- (void)requestLeaseSetWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                          withNetI2pDataLeaseSet:(NetI2pDataLeaseSet *)set
                                        withLong:(jlong)timeout
                             withNetI2pRouterJob:(id<NetI2pRouterJob>)onCreateJob
                             withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailedJob;

- (void)requestLeaseSetWithNetI2pDataHash:(NetI2pDataHash *)dest
                   withNetI2pDataLeaseSet:(NetI2pDataLeaseSet *)set;

- (jboolean)shouldPublishLeaseSetWithNetI2pDataHash:(NetI2pDataHash *)destinationHash;

- (void)shutdownWithNSString:(NSString *)msg;

- (jboolean)verifyClientLiveliness;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterClientManagerFacade)

inline NSString *NetI2pRouterClientManagerFacade_get_PROP_CLIENT_ONLY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterClientManagerFacade_PROP_CLIENT_ONLY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterClientManagerFacade, PROP_CLIENT_ONLY, NSString *)

FOUNDATION_EXPORT void NetI2pRouterClientManagerFacade_init(NetI2pRouterClientManagerFacade *self);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterClientManagerFacade)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterClientManagerFacade")
