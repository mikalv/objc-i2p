//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/dummy/DummyNetworkDatabaseFacade.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterDummyDummyNetworkDatabaseFacade")
#ifdef RESTRICT_NetI2pRouterDummyDummyNetworkDatabaseFacade
#define INCLUDE_ALL_NetI2pRouterDummyDummyNetworkDatabaseFacade 0
#else
#define INCLUDE_ALL_NetI2pRouterDummyDummyNetworkDatabaseFacade 1
#endif
#undef RESTRICT_NetI2pRouterDummyDummyNetworkDatabaseFacade

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterDummyDummyNetworkDatabaseFacade_) && (INCLUDE_ALL_NetI2pRouterDummyDummyNetworkDatabaseFacade || defined(INCLUDE_NetI2pRouterDummyDummyNetworkDatabaseFacade))
#define NetI2pRouterDummyDummyNetworkDatabaseFacade_

#define RESTRICT_NetI2pRouterNetworkDatabaseFacade 1
#define INCLUDE_NetI2pRouterNetworkDatabaseFacade 1
#include "net/i2p/router/NetworkDatabaseFacade.h"

@class NetI2pDataDatabaseEntry;
@class NetI2pDataDestination;
@class NetI2pDataHash;
@class NetI2pDataLeaseSet;
@class NetI2pDataRouterRouterInfo;
@class NetI2pRouterRouterContext;
@protocol JavaUtilSet;
@protocol NetI2pRouterJob;

@interface NetI2pRouterDummyDummyNetworkDatabaseFacade : NetI2pRouterNetworkDatabaseFacade

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx;

- (void)failWithNetI2pDataHash:(NetI2pDataHash *)dbEntry;

- (id<JavaUtilSet>)findNearestRoutersWithNetI2pDataHash:(NetI2pDataHash *)key
                                                withInt:(jint)maxNumRouters
                                        withJavaUtilSet:(id<JavaUtilSet>)peersToIgnore;

- (id<JavaUtilSet>)getAllRouters;

- (void)lookupDestinationWithNetI2pDataHash:(NetI2pDataHash *)key
                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onFinishedJob
                                   withLong:(jlong)timeoutMs
                         withNetI2pDataHash:(NetI2pDataHash *)fromLocalDest;

- (NetI2pDataDestination *)lookupDestinationLocallyWithNetI2pDataHash:(NetI2pDataHash *)key;

- (void)lookupLeaseSetWithNetI2pDataHash:(NetI2pDataHash *)key
                     withNetI2pRouterJob:(id<NetI2pRouterJob>)onFindJob
                     withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailedLookupJob
                                withLong:(jlong)timeoutMs;

- (void)lookupLeaseSetWithNetI2pDataHash:(NetI2pDataHash *)key
                     withNetI2pRouterJob:(id<NetI2pRouterJob>)onFindJob
                     withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailedLookupJob
                                withLong:(jlong)timeoutMs
                      withNetI2pDataHash:(NetI2pDataHash *)fromLocalDest;

- (NetI2pDataLeaseSet *)lookupLeaseSetLocallyWithNetI2pDataHash:(NetI2pDataHash *)key;

- (void)lookupLeaseSetRemotelyWithNetI2pDataHash:(NetI2pDataHash *)key
                              withNetI2pDataHash:(NetI2pDataHash *)fromLocalDest;

- (NetI2pDataDatabaseEntry *)lookupLocallyWithNetI2pDataHash:(NetI2pDataHash *)key;

- (void)lookupRouterInfoWithNetI2pDataHash:(NetI2pDataHash *)key
                       withNetI2pRouterJob:(id<NetI2pRouterJob>)onFindJob
                       withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailedLookupJob
                                  withLong:(jlong)timeoutMs;

- (NetI2pDataRouterRouterInfo *)lookupRouterInfoLocallyWithNetI2pDataHash:(NetI2pDataHash *)key;

- (void)publishWithNetI2pDataLeaseSet:(NetI2pDataLeaseSet *)localLeaseSet;

- (void)publishWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)localRouterInfo;

- (void)restart;

- (void)shutdown;

- (void)startup;

- (NetI2pDataLeaseSet *)storeWithNetI2pDataHash:(NetI2pDataHash *)key
                         withNetI2pDataLeaseSet:(NetI2pDataLeaseSet *)leaseSet;

- (NetI2pDataRouterRouterInfo *)storeWithNetI2pDataHash:(NetI2pDataHash *)key
                         withNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)routerInfo;

- (void)unpublishWithNetI2pDataLeaseSet:(NetI2pDataLeaseSet *)localLeaseSet;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterDummyDummyNetworkDatabaseFacade)

FOUNDATION_EXPORT void NetI2pRouterDummyDummyNetworkDatabaseFacade_initWithNetI2pRouterRouterContext_(NetI2pRouterDummyDummyNetworkDatabaseFacade *self, NetI2pRouterRouterContext *ctx);

FOUNDATION_EXPORT NetI2pRouterDummyDummyNetworkDatabaseFacade *new_NetI2pRouterDummyDummyNetworkDatabaseFacade_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterDummyDummyNetworkDatabaseFacade *create_NetI2pRouterDummyDummyNetworkDatabaseFacade_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterDummyDummyNetworkDatabaseFacade)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterDummyDummyNetworkDatabaseFacade")
