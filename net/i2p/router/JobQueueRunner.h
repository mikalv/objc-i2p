//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/JobQueueRunner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterJobQueueRunner")
#ifdef RESTRICT_NetI2pRouterJobQueueRunner
#define INCLUDE_ALL_NetI2pRouterJobQueueRunner 0
#else
#define INCLUDE_ALL_NetI2pRouterJobQueueRunner 1
#endif
#undef RESTRICT_NetI2pRouterJobQueueRunner

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterJobQueueRunner_) && (INCLUDE_ALL_NetI2pRouterJobQueueRunner || defined(INCLUDE_NetI2pRouterJobQueueRunner))
#define NetI2pRouterJobQueueRunner_

#define RESTRICT_NetI2pUtilI2PThread 1
#define INCLUDE_NetI2pUtilI2PThread 1
#include "net/i2p/util/I2PThread.h"

@class JavaLangThreadGroup;
@class NetI2pRouterRouterContext;
@protocol JavaLangRunnable;
@protocol NetI2pRouterJob;

@interface NetI2pRouterJobQueueRunner : NetI2pUtilI2PThread

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
                                                    withInt:(jint)id_;

- (id<NetI2pRouterJob>)getCurrentJob;

- (jlong)getLastBegin;

- (jlong)getLastEnd;

- (id<NetI2pRouterJob>)getLastJob;

- (jint)getRunnerId;

- (void)run;

- (void)startRunning;

- (void)stopRunning;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangRunnable:(id<JavaLangRunnable>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangRunnable:(id<JavaLangRunnable>)arg0
                                      withNSString:(NSString *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangRunnable:(id<JavaLangRunnable>)arg0
                                      withNSString:(NSString *)arg1
                                       withBoolean:(jboolean)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThreadGroup:(JavaLangThreadGroup *)arg0
                                 withJavaLangRunnable:(id<JavaLangRunnable>)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThreadGroup:(JavaLangThreadGroup *)arg0
                                 withJavaLangRunnable:(id<JavaLangRunnable>)arg1
                                         withNSString:(NSString *)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterJobQueueRunner)

FOUNDATION_EXPORT void NetI2pRouterJobQueueRunner_initWithNetI2pRouterRouterContext_withInt_(NetI2pRouterJobQueueRunner *self, NetI2pRouterRouterContext *context, jint id_);

FOUNDATION_EXPORT NetI2pRouterJobQueueRunner *new_NetI2pRouterJobQueueRunner_initWithNetI2pRouterRouterContext_withInt_(NetI2pRouterRouterContext *context, jint id_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterJobQueueRunner *create_NetI2pRouterJobQueueRunner_initWithNetI2pRouterRouterContext_withInt_(NetI2pRouterRouterContext *context, jint id_);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterJobQueueRunner)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterJobQueueRunner")
