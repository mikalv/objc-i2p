//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/NetworkDatabaseFacade.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterNetworkDatabaseFacade")
#ifdef RESTRICT_NetI2pRouterNetworkDatabaseFacade
#define INCLUDE_ALL_NetI2pRouterNetworkDatabaseFacade 0
#else
#define INCLUDE_ALL_NetI2pRouterNetworkDatabaseFacade 1
#endif
#undef RESTRICT_NetI2pRouterNetworkDatabaseFacade

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterNetworkDatabaseFacade_) && (INCLUDE_ALL_NetI2pRouterNetworkDatabaseFacade || defined(INCLUDE_NetI2pRouterNetworkDatabaseFacade))
#define NetI2pRouterNetworkDatabaseFacade_

#define RESTRICT_NetI2pRouterService 1
#define INCLUDE_NetI2pRouterService 1
#include "net/i2p/router/Service.h"

@class JavaIoWriter;
@class NetI2pDataDatabaseEntry;
@class NetI2pDataDestination;
@class NetI2pDataHash;
@class NetI2pDataLeaseSet;
@class NetI2pDataRouterRouterInfo;
@class NetI2pRouterNetworkdbReseedReseedChecker;
@protocol JavaUtilSet;
@protocol NetI2pRouterJob;

@interface NetI2pRouterNetworkDatabaseFacade : NSObject < NetI2pRouterService >

#pragma mark Public

- (instancetype __nonnull)init;

- (void)failWithNetI2pDataHash:(NetI2pDataHash *)dbEntry;

- (id<JavaUtilSet>)findNearestRoutersWithNetI2pDataHash:(NetI2pDataHash *)key
                                                withInt:(jint)maxNumRouters
                                        withJavaUtilSet:(id<JavaUtilSet>)peersToIgnore;

- (jboolean)floodfillEnabled;

- (id<JavaUtilSet>)getAllRouters;

- (jint)getKnownLeaseSets;

- (jint)getKnownRouters;

- (jlong)getLastRouterInfoPublishTime;

- (id<JavaUtilSet>)getLeases;

- (id<JavaUtilSet>)getRouters;

- (jboolean)isInitialized;

- (jboolean)isNegativeCachedForeverWithNetI2pDataHash:(NetI2pDataHash *)key;

- (void)lookupDestinationWithNetI2pDataHash:(NetI2pDataHash *)key
                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onFinishedJob
                                   withLong:(jlong)timeoutMs
                         withNetI2pDataHash:(NetI2pDataHash *)fromLocalDest;

- (NetI2pDataDestination *)lookupDestinationLocallyWithNetI2pDataHash:(NetI2pDataHash *)key;

- (void)lookupLeaseSetWithNetI2pDataHash:(NetI2pDataHash *)key
                     withNetI2pRouterJob:(id<NetI2pRouterJob>)onFindJob
                     withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailedLookupJob
                                withLong:(jlong)timeoutMs;

- (void)lookupLeaseSetWithNetI2pDataHash:(NetI2pDataHash *)key
                     withNetI2pRouterJob:(id<NetI2pRouterJob>)onFindJob
                     withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailedLookupJob
                                withLong:(jlong)timeoutMs
                      withNetI2pDataHash:(NetI2pDataHash *)fromLocalDest;

- (NetI2pDataLeaseSet *)lookupLeaseSetLocallyWithNetI2pDataHash:(NetI2pDataHash *)key;

- (void)lookupLeaseSetRemotelyWithNetI2pDataHash:(NetI2pDataHash *)key
                              withNetI2pDataHash:(NetI2pDataHash *)fromLocalDest;

- (NetI2pDataDatabaseEntry *)lookupLocallyWithNetI2pDataHash:(NetI2pDataHash *)key;

- (void)lookupRouterInfoWithNetI2pDataHash:(NetI2pDataHash *)key
                       withNetI2pRouterJob:(id<NetI2pRouterJob>)onFindJob
                       withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailedLookupJob
                                  withLong:(jlong)timeoutMs;

- (NetI2pDataRouterRouterInfo *)lookupRouterInfoLocallyWithNetI2pDataHash:(NetI2pDataHash *)key;

- (void)publishWithNetI2pDataLeaseSet:(NetI2pDataLeaseSet *)localLeaseSet;

- (void)publishWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)localRouterInfo;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg;

- (void)rescan;

- (NetI2pRouterNetworkdbReseedReseedChecker *)reseedChecker;

- (NetI2pDataDatabaseEntry *)storeWithNetI2pDataHash:(NetI2pDataHash *)key
                         withNetI2pDataDatabaseEntry:(NetI2pDataDatabaseEntry *)entry_;

- (NetI2pDataLeaseSet *)storeWithNetI2pDataHash:(NetI2pDataHash *)key
                         withNetI2pDataLeaseSet:(NetI2pDataLeaseSet *)leaseSet;

- (NetI2pDataRouterRouterInfo *)storeWithNetI2pDataHash:(NetI2pDataHash *)key
                         withNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)routerInfo;

- (void)unpublishWithNetI2pDataLeaseSet:(NetI2pDataLeaseSet *)localLeaseSet;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterNetworkDatabaseFacade)

FOUNDATION_EXPORT void NetI2pRouterNetworkDatabaseFacade_init(NetI2pRouterNetworkDatabaseFacade *self);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterNetworkDatabaseFacade)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterNetworkDatabaseFacade")
