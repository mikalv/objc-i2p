//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/RouterDoSThrottle.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/RouterDoSThrottle.h"
#include "net/i2p/router/RouterThrottleImpl.h"
#include "net/i2p/stat/StatManager.h"
#include "net/i2p/util/Clock.h"
#include "net/i2p/util/RandomSource.h"

@interface NetI2pRouterRouterDoSThrottle () {
 @public
  volatile_jlong _currentLookupPeriod_;
  JavaUtilConcurrentAtomicAtomicInteger *_currentLookupCount_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterRouterDoSThrottle, _currentLookupCount_, JavaUtilConcurrentAtomicAtomicInteger *)

inline jlong NetI2pRouterRouterDoSThrottle_get_LOOKUP_THROTTLE_PERIOD(void);
#define NetI2pRouterRouterDoSThrottle_LOOKUP_THROTTLE_PERIOD 10000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterRouterDoSThrottle, LOOKUP_THROTTLE_PERIOD, jlong)

inline jlong NetI2pRouterRouterDoSThrottle_get_LOOKUP_THROTTLE_MAX(void);
#define NetI2pRouterRouterDoSThrottle_LOOKUP_THROTTLE_MAX 20LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterRouterDoSThrottle, LOOKUP_THROTTLE_MAX, jlong)

__attribute__((unused)) static IOSObjectArray *NetI2pRouterRouterDoSThrottle__Annotations$0(void);

@implementation NetI2pRouterRouterDoSThrottle

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context {
  NetI2pRouterRouterDoSThrottle_initWithNetI2pRouterRouterContext_(self, context);
  return self;
}

- (jboolean)acceptNetDbLookupRequestWithNetI2pDataHash:(NetI2pDataHash *)key {
  jboolean shouldAccept = [super acceptNetDbLookupRequestWithNetI2pDataHash:key];
  if (!shouldAccept) return false;
  jlong now = [((NetI2pUtilClock *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) clock])) now];
  if (JreLoadVolatileLong(&_currentLookupPeriod_) + NetI2pRouterRouterDoSThrottle_LOOKUP_THROTTLE_PERIOD > now) {
    jint cnt = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(_currentLookupCount_)) incrementAndGet];
    if (cnt >= NetI2pRouterRouterDoSThrottle_LOOKUP_THROTTLE_MAX) {
      [((NetI2pStatStatManager *) nil_chk([_context_ statManager])) addRateDataWithNSString:@"router.throttleNetDbDoS" withLong:cnt];
      jint rand = [((NetI2pUtilRandomSource *) nil_chk([_context_ random])) nextIntWithInt:cnt];
      if (rand > NetI2pRouterRouterDoSThrottle_LOOKUP_THROTTLE_MAX) {
        return false;
      }
      else {
        return true;
      }
    }
    else {
      return true;
    }
  }
  else {
    JreAssignVolatileLong(&_currentLookupPeriod_, now);
    [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(_currentLookupCount_)) setWithInt:1];
    return true;
  }
}

- (void)dealloc {
  RELEASE_(_currentLookupCount_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:);
  methods[1].selector = @selector(acceptNetDbLookupRequestWithNetI2pDataHash:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_currentLookupPeriod_", "J", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "_currentLookupCount_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "LOOKUP_THROTTLE_PERIOD", "J", .constantValue.asLong = NetI2pRouterRouterDoSThrottle_LOOKUP_THROTTLE_PERIOD, 0x1a, -1, -1, -1, -1 },
    { "LOOKUP_THROTTLE_MAX", "J", .constantValue.asLong = NetI2pRouterRouterDoSThrottle_LOOKUP_THROTTLE_MAX, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;", "acceptNetDbLookupRequest", "LNetI2pDataHash;", (void *)&NetI2pRouterRouterDoSThrottle__Annotations$0 };
  static const J2ObjcClassInfo _NetI2pRouterRouterDoSThrottle = { "RouterDoSThrottle", "net.i2p.router", ptrTable, methods, fields, 7, 0x0, 2, 4, -1, -1, -1, -1, 3 };
  return &_NetI2pRouterRouterDoSThrottle;
}

@end

void NetI2pRouterRouterDoSThrottle_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterDoSThrottle *self, NetI2pRouterRouterContext *context) {
  NetI2pRouterRouterThrottleImpl_initWithNetI2pRouterRouterContext_(self, context);
  JreStrongAssignAndConsume(&self->_currentLookupCount_, new_JavaUtilConcurrentAtomicAtomicInteger_init());
  [((NetI2pStatStatManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(context)) statManager])) createRateStatWithNSString:@"router.throttleNetDbDoS" withNSString:@"How many netDb lookup messages have we received so far during a period with a DoS detected" withNSString:@"Throttle" withLongArray:[IOSLongArray arrayWithLongs:(jlong[]){ 60 * 1000, 10 * 60 * 1000, 60 * 60 * 1000, 24 * 60 * 60 * 1000 } count:4]];
}

NetI2pRouterRouterDoSThrottle *new_NetI2pRouterRouterDoSThrottle_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) {
  J2OBJC_NEW_IMPL(NetI2pRouterRouterDoSThrottle, initWithNetI2pRouterRouterContext_, context)
}

NetI2pRouterRouterDoSThrottle *create_NetI2pRouterRouterDoSThrottle_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) {
  J2OBJC_CREATE_IMPL(NetI2pRouterRouterDoSThrottle, initWithNetI2pRouterRouterContext_, context)
}

IOSObjectArray *NetI2pRouterRouterDoSThrottle__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterRouterDoSThrottle)
