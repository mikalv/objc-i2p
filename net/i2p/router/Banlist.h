//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/Banlist.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterBanlist")
#ifdef RESTRICT_NetI2pRouterBanlist
#define INCLUDE_ALL_NetI2pRouterBanlist 0
#else
#define INCLUDE_ALL_NetI2pRouterBanlist 1
#endif
#undef RESTRICT_NetI2pRouterBanlist

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterBanlist_) && (INCLUDE_ALL_NetI2pRouterBanlist || defined(INCLUDE_NetI2pRouterBanlist))
#define NetI2pRouterBanlist_

@class JavaIoWriter;
@class NetI2pDataHash;
@class NetI2pRouterRouterContext;
@protocol JavaUtilMap;

@interface NetI2pRouterBanlist : NSObject
@property (readonly, class) jlong BANLIST_DURATION_MS NS_SWIFT_NAME(BANLIST_DURATION_MS);
@property (readonly, class) jlong BANLIST_DURATION_MAX NS_SWIFT_NAME(BANLIST_DURATION_MAX);
@property (readonly, class) jlong BANLIST_DURATION_PARTIAL NS_SWIFT_NAME(BANLIST_DURATION_PARTIAL);
@property (readonly, class) jlong BANLIST_DURATION_FOREVER NS_SWIFT_NAME(BANLIST_DURATION_FOREVER);
@property (readonly, class) jlong BANLIST_CLEANER_START_DELAY NS_SWIFT_NAME(BANLIST_CLEANER_START_DELAY);

+ (jlong)BANLIST_DURATION_MS;

+ (jlong)BANLIST_DURATION_MAX;

+ (jlong)BANLIST_DURATION_PARTIAL;

+ (jlong)BANLIST_DURATION_FOREVER;

+ (jlong)BANLIST_CLEANER_START_DELAY;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context;

- (jboolean)banlistRouterWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (jboolean)banlistRouterWithNetI2pDataHash:(NetI2pDataHash *)peer
                               withNSString:(NSString *)reason;

- (jboolean)banlistRouterWithNetI2pDataHash:(NetI2pDataHash *)peer
                               withNSString:(NSString *)reason
                               withNSString:(NSString *)transport;

- (jboolean)banlistRouterWithNetI2pDataHash:(NetI2pDataHash *)peer
                               withNSString:(NSString *)reason
                               withNSString:(NSString *)transport
                                withBoolean:(jboolean)forever;

- (jboolean)banlistRouterWithNetI2pDataHash:(NetI2pDataHash *)peer
                               withNSString:(NSString *)reason
                               withNSString:(NSString *)reasonCode
                               withNSString:(NSString *)transport
                                   withLong:(jlong)expireOn;

- (jboolean)banlistRouterWithNSString:(NSString *)reasonCode
                   withNetI2pDataHash:(NetI2pDataHash *)peer
                         withNSString:(NSString *)reason;

- (jboolean)banlistRouterForeverWithNetI2pDataHash:(NetI2pDataHash *)peer
                                      withNSString:(NSString *)reason;

- (jboolean)banlistRouterForeverWithNetI2pDataHash:(NetI2pDataHash *)peer
                                      withNSString:(NSString *)reason
                                      withNSString:(NSString *)reasonCode;

- (id<JavaUtilMap>)getEntries;

- (jint)getRouterCount;

- (jboolean)isBanlistedWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (jboolean)isBanlistedWithNetI2pDataHash:(NetI2pDataHash *)peer
                             withNSString:(NSString *)transport;

- (jboolean)isBanlistedForeverWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg;

- (void)unbanlistRouterWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)unbanlistRouterWithNetI2pDataHash:(NetI2pDataHash *)peer
                             withNSString:(NSString *)transport;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterBanlist)

inline jlong NetI2pRouterBanlist_get_BANLIST_DURATION_MS(void);
#define NetI2pRouterBanlist_BANLIST_DURATION_MS 420000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterBanlist, BANLIST_DURATION_MS, jlong)

inline jlong NetI2pRouterBanlist_get_BANLIST_DURATION_MAX(void);
#define NetI2pRouterBanlist_BANLIST_DURATION_MAX 1800000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterBanlist, BANLIST_DURATION_MAX, jlong)

inline jlong NetI2pRouterBanlist_get_BANLIST_DURATION_PARTIAL(void);
#define NetI2pRouterBanlist_BANLIST_DURATION_PARTIAL 600000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterBanlist, BANLIST_DURATION_PARTIAL, jlong)

inline jlong NetI2pRouterBanlist_get_BANLIST_DURATION_FOREVER(void);
#define NetI2pRouterBanlist_BANLIST_DURATION_FOREVER 15638400000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterBanlist, BANLIST_DURATION_FOREVER, jlong)

inline jlong NetI2pRouterBanlist_get_BANLIST_CLEANER_START_DELAY(void);
#define NetI2pRouterBanlist_BANLIST_CLEANER_START_DELAY 600000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterBanlist, BANLIST_CLEANER_START_DELAY, jlong)

FOUNDATION_EXPORT void NetI2pRouterBanlist_initWithNetI2pRouterRouterContext_(NetI2pRouterBanlist *self, NetI2pRouterRouterContext *context);

FOUNDATION_EXPORT NetI2pRouterBanlist *new_NetI2pRouterBanlist_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterBanlist *create_NetI2pRouterBanlist_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterBanlist)

#endif

#if !defined (NetI2pRouterBanlist_Entry_) && (INCLUDE_ALL_NetI2pRouterBanlist || defined(INCLUDE_NetI2pRouterBanlist_Entry))
#define NetI2pRouterBanlist_Entry_

@protocol JavaUtilSet;

@interface NetI2pRouterBanlist_Entry : NSObject {
 @public
  jlong expireOn_;
  NSString *cause_;
  NSString *causeCode_;
  id<JavaUtilSet> transports_;
}

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterBanlist_Entry)

J2OBJC_FIELD_SETTER(NetI2pRouterBanlist_Entry, cause_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pRouterBanlist_Entry, causeCode_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pRouterBanlist_Entry, transports_, id<JavaUtilSet>)

FOUNDATION_EXPORT void NetI2pRouterBanlist_Entry_init(NetI2pRouterBanlist_Entry *self);

FOUNDATION_EXPORT NetI2pRouterBanlist_Entry *new_NetI2pRouterBanlist_Entry_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterBanlist_Entry *create_NetI2pRouterBanlist_Entry_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterBanlist_Entry)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterBanlist")
