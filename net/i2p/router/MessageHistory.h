//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/MessageHistory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterMessageHistory")
#ifdef RESTRICT_NetI2pRouterMessageHistory
#define INCLUDE_ALL_NetI2pRouterMessageHistory 0
#else
#define INCLUDE_ALL_NetI2pRouterMessageHistory 1
#endif
#undef RESTRICT_NetI2pRouterMessageHistory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterMessageHistory_) && (INCLUDE_ALL_NetI2pRouterMessageHistory || defined(INCLUDE_NetI2pRouterMessageHistory))
#define NetI2pRouterMessageHistory_

@class JavaUtilDate;
@class NetI2pDataHash;
@class NetI2pDataTunnelId;
@class NetI2pRouterOutNetMessage;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTunnelHopConfig;
@protocol JavaUtilList;
@protocol NetI2pDataI2npI2NPMessage;
@protocol NetI2pRouterTunnelInfo;

@interface NetI2pRouterMessageHistory : NSObject
@property (readonly, copy, class) NSString *PROP_KEEP_MESSAGE_HISTORY NS_SWIFT_NAME(PROP_KEEP_MESSAGE_HISTORY);
@property (readonly, copy, class) NSString *PROP_MESSAGE_HISTORY_FILENAME NS_SWIFT_NAME(PROP_MESSAGE_HISTORY_FILENAME);
@property (readonly, copy, class) NSString *DEFAULT_MESSAGE_HISTORY_FILENAME NS_SWIFT_NAME(DEFAULT_MESSAGE_HISTORY_FILENAME);

+ (NSString *)PROP_KEEP_MESSAGE_HISTORY;

+ (NSString *)PROP_MESSAGE_HISTORY_FILENAME;

+ (NSString *)DEFAULT_MESSAGE_HISTORY_FILENAME;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context;

- (void)banlistWithNetI2pDataHash:(NetI2pDataHash *)peer
                     withNSString:(NSString *)reason;

- (void)droppedFragmentedMessageWithLong:(jlong)messageId
                            withNSString:(NSString *)status;

- (void)droppedInboundMessageWithLong:(jlong)messageId
                   withNetI2pDataHash:(NetI2pDataHash *)from
                         withNSString:(NSString *)info;

- (void)droppedOtherMessageWithNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)message
                                      withNetI2pDataHash:(NetI2pDataHash *)from;

- (void)droppedTunnelDataMessageUnknownWithLong:(jlong)msgId
                                       withLong:(jlong)tunnelId;

- (void)droppedTunnelGatewayMessageUnknownWithLong:(jlong)msgId
                                          withLong:(jlong)tunnelId;

- (void)droppedTunnelMessageWithNetI2pDataTunnelId:(NetI2pDataTunnelId *)id_
                                          withLong:(jlong)msgId
                                  withJavaUtilDate:(JavaUtilDate *)expiration
                                withNetI2pDataHash:(NetI2pDataHash *)from;

- (void)fragmentMessageWithLong:(jlong)messageId
                        withInt:(jint)numFragments
                        withInt:(jint)totalLength
               withJavaUtilList:(id<JavaUtilList>)messageIds
                         withId:(id)tunnel
                   withNSString:(NSString *)msg;

- (void)fragmentMessageWithLong:(jlong)messageId
                        withInt:(jint)numFragments
                        withInt:(jint)totalLength
               withJavaUtilList:(id<JavaUtilList>)messageIds
                   withNSString:(NSString *)msg;

- (jboolean)getDoLog;

- (void)initialize__WithBoolean:(jboolean)forceReinitialize OBJC_METHOD_FAMILY_NONE;

- (void)messageProcessingErrorWithLong:(jlong)messageId
                          withNSString:(NSString *)messageType
                          withNSString:(NSString *)error;

- (void)receiveMessageWithNSString:(NSString *)messageType
                          withLong:(jlong)messageId
                          withLong:(jlong)expiration
                       withBoolean:(jboolean)isValid;

- (void)receiveMessageWithNSString:(NSString *)messageType
                          withLong:(jlong)messageId
                          withLong:(jlong)expiration
                withNetI2pDataHash:(NetI2pDataHash *)from
                       withBoolean:(jboolean)isValid;

- (void)receivePayloadMessageWithLong:(jlong)messageId;

- (void)receiveTunnelFragmentWithLong:(jlong)messageId
                              withInt:(jint)fragmentId
                               withId:(id)status;

- (void)receiveTunnelFragmentCompleteWithLong:(jlong)messageId;

- (void)replyTimedOutWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)sentMessage;

- (void)sendMessageWithNSString:(NSString *)messageType
                       withLong:(jlong)messageId
                       withLong:(jlong)expiration
             withNetI2pDataHash:(NetI2pDataHash *)peer
                    withBoolean:(jboolean)sentOk
                   withNSString:(NSString *)info;

- (void)sendPayloadMessageWithLong:(jlong)messageId
                       withBoolean:(jboolean)successfullySent
                          withLong:(jlong)timeToSend;

- (void)shutdown;

- (void)tunnelDispatchedWithLong:(jlong)messageId
                        withLong:(jlong)tunnelId
                        withLong:(jlong)toTunnel
              withNetI2pDataHash:(NetI2pDataHash *)toPeer
                    withNSString:(NSString *)type;

- (void)tunnelDispatchedWithLong:(jlong)messageId
                        withLong:(jlong)innerMessageId
                        withLong:(jlong)tunnelId
                    withNSString:(NSString *)type;

- (void)tunnelDispatchedWithLong:(jlong)messageId
                        withLong:(jlong)tunnelId
                    withNSString:(NSString *)type;

- (void)tunnelDispatchedWithNSString:(NSString *)info;

- (void)tunnelFailedWithNetI2pDataTunnelId:(NetI2pDataTunnelId *)tunnel;

- (void)tunnelJoinedWithNSString:(NSString *)state
 withNetI2pRouterTunnelHopConfig:(NetI2pRouterTunnelHopConfig *)tunnel;

- (void)tunnelJoinedWithNSString:(NSString *)state
      withNetI2pRouterTunnelInfo:(id<NetI2pRouterTunnelInfo>)tunnel;

- (void)tunnelParticipantRejectedWithNetI2pDataHash:(NetI2pDataHash *)peer
                                       withNSString:(NSString *)msg;

- (void)tunnelRejectedWithNetI2pDataHash:(NetI2pDataHash *)peer
                  withNetI2pDataTunnelId:(NetI2pDataTunnelId *)tunnel
                      withNetI2pDataHash:(NetI2pDataHash *)replyThrough
                            withNSString:(NSString *)reason;

- (void)tunnelRequestTimedOutWithNetI2pDataHash:(NetI2pDataHash *)peer
                         withNetI2pDataTunnelId:(NetI2pDataTunnelId *)tunnel;

- (void)tunnelValidWithNetI2pRouterTunnelInfo:(id<NetI2pRouterTunnelInfo>)tunnel
                                     withLong:(jlong)timeToTest;

- (void)unbanlistWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)wrapWithNSString:(NSString *)bodyMessageType
                withLong:(jlong)bodyMessageId
            withNSString:(NSString *)containerMessageType
                withLong:(jlong)containerMessageId;

#pragma mark Package-Private

- (NSString *)getFilename;

- (void)setPauseFlushesWithBoolean:(jboolean)doPause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterMessageHistory)

inline NSString *NetI2pRouterMessageHistory_get_PROP_KEEP_MESSAGE_HISTORY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterMessageHistory_PROP_KEEP_MESSAGE_HISTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterMessageHistory, PROP_KEEP_MESSAGE_HISTORY, NSString *)

inline NSString *NetI2pRouterMessageHistory_get_PROP_MESSAGE_HISTORY_FILENAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterMessageHistory_PROP_MESSAGE_HISTORY_FILENAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterMessageHistory, PROP_MESSAGE_HISTORY_FILENAME, NSString *)

inline NSString *NetI2pRouterMessageHistory_get_DEFAULT_MESSAGE_HISTORY_FILENAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterMessageHistory_DEFAULT_MESSAGE_HISTORY_FILENAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterMessageHistory, DEFAULT_MESSAGE_HISTORY_FILENAME, NSString *)

FOUNDATION_EXPORT void NetI2pRouterMessageHistory_initWithNetI2pRouterRouterContext_(NetI2pRouterMessageHistory *self, NetI2pRouterRouterContext *context);

FOUNDATION_EXPORT NetI2pRouterMessageHistory *new_NetI2pRouterMessageHistory_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterMessageHistory *create_NetI2pRouterMessageHistory_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterMessageHistory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterMessageHistory")
