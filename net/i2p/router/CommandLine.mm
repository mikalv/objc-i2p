//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/CommandLine.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "net/i2p/router/CommandLine.h"
#include "net/i2p/router/RouterVersion.h"
#include "net/i2p/util/CommandLine.h"

@interface NetI2pRouterCommandLine ()

+ (void)usageWithJavaUtilList:(id<JavaUtilList>)classes;

@end

__attribute__((unused)) static void NetI2pRouterCommandLine_usageWithJavaUtilList_(id<JavaUtilList> classes);

J2OBJC_INITIALIZED_DEFN(NetI2pRouterCommandLine)

id<JavaUtilList> NetI2pRouterCommandLine_RCLASSES;

@implementation NetI2pRouterCommandLine

+ (id<JavaUtilList>)RCLASSES {
  return NetI2pRouterCommandLine_RCLASSES;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pRouterCommandLine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  NetI2pRouterCommandLine_mainWithNSStringArray_(args);
}

+ (void)usageWithJavaUtilList:(id<JavaUtilList>)classes {
  NetI2pRouterCommandLine_usageWithJavaUtilList_(classes);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mainWithNSStringArray:);
  methods[2].selector = @selector(usageWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "RCLASSES", "LJavaUtilList;", .constantValue.asLong = 0, 0x1c, -1, 5, 6, -1 },
  };
  static const void *ptrTable[] = { "main", "[LNSString;", "usage", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/String;>;)V", &NetI2pRouterCommandLine_RCLASSES, "Ljava/util/List<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _NetI2pRouterCommandLine = { "CommandLine", "net.i2p.router", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterCommandLine;
}

+ (void)initialize {
  if (self == [NetI2pRouterCommandLine class]) {
    JreStrongAssign(&NetI2pRouterCommandLine_RCLASSES, JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"net.i2p.data.router.RouterInfo", @"net.i2p.data.router.RouterKeyGenerator", @"net.i2p.router.MultiRouter", @"net.i2p.router.Router", @"net.i2p.router.RouterLaunch", @"net.i2p.router.RouterVersion", @"net.i2p.router.crypto.FamilyKeyCrypto", @"net.i2p.router.naming.BlockfileNamingService", @"net.i2p.router.peermanager.ProfileOrganizer", @"net.i2p.router.tasks.CryptoChecker", @"net.i2p.router.time.NtpClient", @"net.i2p.router.transport.GeoIPv6", @"net.i2p.router.transport.udp.MTU", @"net.i2p.router.transport.UPnP" } count:14 type:NSString_class_()]));
    J2OBJC_SET_INITIALIZED(NetI2pRouterCommandLine)
  }
}

@end

void NetI2pRouterCommandLine_init(NetI2pRouterCommandLine *self) {
  NetI2pUtilCommandLine_init(self);
}

NetI2pRouterCommandLine *new_NetI2pRouterCommandLine_init() {
  J2OBJC_NEW_IMPL(NetI2pRouterCommandLine, init)
}

NetI2pRouterCommandLine *create_NetI2pRouterCommandLine_init() {
  J2OBJC_CREATE_IMPL(NetI2pRouterCommandLine, init)
}

void NetI2pRouterCommandLine_mainWithNSStringArray_(IOSObjectArray *args) {
  NetI2pRouterCommandLine_initialize();
  id<JavaUtilList> classes = create_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(NetI2pRouterCommandLine_RCLASSES)) size] + [((id<JavaUtilList>) nil_chk(JreLoadStatic(NetI2pUtilCommandLine, CLASSES))) size]);
  [classes addAllWithJavaUtilCollection:NetI2pRouterCommandLine_RCLASSES];
  [classes addAllWithJavaUtilCollection:JreLoadStatic(NetI2pUtilCommandLine, CLASSES)];
  if (((IOSObjectArray *) nil_chk(args))->size_ > 0) {
    NetI2pUtilCommandLine_execWithNSStringArray_withJavaUtilList_(args, classes);
  }
  NetI2pRouterCommandLine_usageWithJavaUtilList_(classes);
  JavaLangSystem_exitWithInt_(1);
}

void NetI2pRouterCommandLine_usageWithJavaUtilList_(id<JavaUtilList> classes) {
  NetI2pRouterCommandLine_initialize();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$", @"I2P Router version ", NetI2pRouterRouterVersion_FULL_VERSION, @"\nUSAGE: java -jar /path/to/router.jar command [args]")];
  NetI2pUtilCommandLine_printCommandsWithJavaUtilList_(classes);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterCommandLine)
