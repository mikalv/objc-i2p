//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/Blocklist.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterBlocklist")
#ifdef RESTRICT_NetI2pRouterBlocklist
#define INCLUDE_ALL_NetI2pRouterBlocklist 0
#else
#define INCLUDE_ALL_NetI2pRouterBlocklist 1
#endif
#undef RESTRICT_NetI2pRouterBlocklist

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterBlocklist_) && (INCLUDE_ALL_NetI2pRouterBlocklist || defined(INCLUDE_NetI2pRouterBlocklist))
#define NetI2pRouterBlocklist_

@class IOSByteArray;
@class JavaIoWriter;
@class NetI2pDataHash;
@class NetI2pDataRouterRouterInfo;
@class NetI2pRouterRouterContext;

@interface NetI2pRouterBlocklist : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context;

- (void)addWithByteArray:(IOSByteArray *)ip;

- (void)addWithNSString:(NSString *)ip;

- (void)disable;

- (jboolean)isBlocklistedWithByteArray:(IOSByteArray *)ip;

- (jboolean)isBlocklistedWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (jboolean)isBlocklistedWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)pinfo;

- (jboolean)isBlocklistedWithNSString:(NSString *)ip;

- (void)removeWithByteArray:(IOSByteArray *)ip;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg;

- (void)startup;

@end

J2OBJC_STATIC_INIT(NetI2pRouterBlocklist)

FOUNDATION_EXPORT void NetI2pRouterBlocklist_initWithNetI2pRouterRouterContext_(NetI2pRouterBlocklist *self, NetI2pRouterRouterContext *context);

FOUNDATION_EXPORT NetI2pRouterBlocklist *new_NetI2pRouterBlocklist_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterBlocklist *create_NetI2pRouterBlocklist_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterBlocklist)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterBlocklist")
