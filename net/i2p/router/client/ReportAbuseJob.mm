//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/client/ReportAbuseJob.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "net/i2p/data/Destination.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/data/i2cp/AbuseReason.h"
#include "net/i2p/data/i2cp/AbuseSeverity.h"
#include "net/i2p/data/i2cp/I2CPMessageException.h"
#include "net/i2p/data/i2cp/ReportAbuseMessage.h"
#include "net/i2p/data/i2cp/SessionId.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/client/ClientConnectionRunner.h"
#include "net/i2p/router/client/ReportAbuseJob.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterClientReportAbuseJob () {
 @public
  NetI2pUtilLog *_log_;
  NetI2pRouterClientClientConnectionRunner *_runner_;
  NetI2pDataDestination *_dest_;
  NSString *_reason_;
  jint _severity_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterClientReportAbuseJob, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pRouterClientReportAbuseJob, _runner_, NetI2pRouterClientClientConnectionRunner *)
J2OBJC_FIELD_SETTER(NetI2pRouterClientReportAbuseJob, _dest_, NetI2pDataDestination *)
J2OBJC_FIELD_SETTER(NetI2pRouterClientReportAbuseJob, _reason_, NSString *)

@implementation NetI2pRouterClientReportAbuseJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
     withNetI2pRouterClientClientConnectionRunner:(NetI2pRouterClientClientConnectionRunner *)runner
                        withNetI2pDataDestination:(NetI2pDataDestination *)dest
                                     withNSString:(NSString *)reason
                                          withInt:(jint)severity {
  NetI2pRouterClientReportAbuseJob_initWithNetI2pRouterRouterContext_withNetI2pRouterClientClientConnectionRunner_withNetI2pDataDestination_withNSString_withInt_(self, context, runner, dest, reason, severity);
  return self;
}

- (NSString *)getName {
  return @"Report Abuse";
}

- (void)runJob {
  if ([((NetI2pRouterClientClientConnectionRunner *) nil_chk(_runner_)) isDead]) return;
  NetI2pDataI2cpAbuseReason *res = create_NetI2pDataI2cpAbuseReason_init();
  [res setReasonWithNSString:_reason_];
  NetI2pDataI2cpAbuseSeverity *sev = create_NetI2pDataI2cpAbuseSeverity_init();
  [sev setSeverityWithInt:_severity_];
  NetI2pDataI2cpReportAbuseMessage *msg = create_NetI2pDataI2cpReportAbuseMessage_init();
  [msg setReasonWithNetI2pDataI2cpAbuseReason:res];
  NetI2pDataI2cpSessionId *id_ = [_runner_ getSessionIdWithNetI2pDataHash:[((NetI2pDataDestination *) nil_chk(_dest_)) calculateHash]];
  if (id_ == nil) return;
  [msg setSessionIdWithNetI2pDataI2cpSessionId:id_];
  [msg setSeverityWithNetI2pDataI2cpAbuseSeverity:sev];
  @try {
    [_runner_ doSendWithNetI2pDataI2cpI2CPMessage:msg];
  }
  @catch (NetI2pDataI2cpI2CPMessageException *ime) {
    [((NetI2pUtilLog *) nil_chk(_log_)) errorWithNSString:@"Error reporting abuse" withJavaLangThrowable:ime];
  }
}

- (void)dealloc {
  RELEASE_(_log_);
  RELEASE_(_runner_);
  RELEASE_(_dest_);
  RELEASE_(_reason_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:withNetI2pRouterClientClientConnectionRunner:withNetI2pDataDestination:withNSString:withInt:);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(runJob);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_log_", "LNetI2pUtilLog;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_runner_", "LNetI2pRouterClientClientConnectionRunner;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_dest_", "LNetI2pDataDestination;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_reason_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_severity_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;LNetI2pRouterClientClientConnectionRunner;LNetI2pDataDestination;LNSString;I" };
  static const J2ObjcClassInfo _NetI2pRouterClientReportAbuseJob = { "ReportAbuseJob", "net.i2p.router.client", ptrTable, methods, fields, 7, 0x0, 3, 5, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterClientReportAbuseJob;
}

@end

void NetI2pRouterClientReportAbuseJob_initWithNetI2pRouterRouterContext_withNetI2pRouterClientClientConnectionRunner_withNetI2pDataDestination_withNSString_withInt_(NetI2pRouterClientReportAbuseJob *self, NetI2pRouterRouterContext *context, NetI2pRouterClientClientConnectionRunner *runner, NetI2pDataDestination *dest, NSString *reason, jint severity) {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, context);
  JreStrongAssign(&self->_log_, [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(context)) logManager])) getLogWithIOSClass:NetI2pRouterClientReportAbuseJob_class_()]);
  JreStrongAssign(&self->_runner_, runner);
  JreStrongAssign(&self->_dest_, dest);
  JreStrongAssign(&self->_reason_, reason);
  self->_severity_ = severity;
}

NetI2pRouterClientReportAbuseJob *new_NetI2pRouterClientReportAbuseJob_initWithNetI2pRouterRouterContext_withNetI2pRouterClientClientConnectionRunner_withNetI2pDataDestination_withNSString_withInt_(NetI2pRouterRouterContext *context, NetI2pRouterClientClientConnectionRunner *runner, NetI2pDataDestination *dest, NSString *reason, jint severity) {
  J2OBJC_NEW_IMPL(NetI2pRouterClientReportAbuseJob, initWithNetI2pRouterRouterContext_withNetI2pRouterClientClientConnectionRunner_withNetI2pDataDestination_withNSString_withInt_, context, runner, dest, reason, severity)
}

NetI2pRouterClientReportAbuseJob *create_NetI2pRouterClientReportAbuseJob_initWithNetI2pRouterRouterContext_withNetI2pRouterClientClientConnectionRunner_withNetI2pDataDestination_withNSString_withInt_(NetI2pRouterRouterContext *context, NetI2pRouterClientClientConnectionRunner *runner, NetI2pDataDestination *dest, NSString *reason, jint severity) {
  J2OBJC_CREATE_IMPL(NetI2pRouterClientReportAbuseJob, initWithNetI2pRouterRouterContext_withNetI2pRouterClientClientConnectionRunner_withNetI2pDataDestination_withNSString_withInt_, context, runner, dest, reason, severity)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterClientReportAbuseJob)
