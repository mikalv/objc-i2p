//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/client/SSLClientListenerRunner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterClientSSLClientListenerRunner")
#ifdef RESTRICT_NetI2pRouterClientSSLClientListenerRunner
#define INCLUDE_ALL_NetI2pRouterClientSSLClientListenerRunner 0
#else
#define INCLUDE_ALL_NetI2pRouterClientSSLClientListenerRunner 1
#endif
#undef RESTRICT_NetI2pRouterClientSSLClientListenerRunner

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterClientSSLClientListenerRunner_) && (INCLUDE_ALL_NetI2pRouterClientSSLClientListenerRunner || defined(INCLUDE_NetI2pRouterClientSSLClientListenerRunner))
#define NetI2pRouterClientSSLClientListenerRunner_

#define RESTRICT_NetI2pRouterClientClientListenerRunner 1
#define INCLUDE_NetI2pRouterClientClientListenerRunner 1
#include "net/i2p/router/client/ClientListenerRunner.h"

@class JavaNetServerSocket;
@class JavaNetSocket;
@class NetI2pRouterClientClientManager;
@class NetI2pRouterRouterContext;

@interface NetI2pRouterClientSSLClientListenerRunner : NetI2pRouterClientClientListenerRunner

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
                        withNetI2pRouterClientClientManager:(NetI2pRouterClientClientManager *)manager
                                                    withInt:(jint)port;

#pragma mark Protected

- (JavaNetServerSocket *)getServerSocket;

- (void)runServer;

- (jboolean)validateWithJavaNetSocket:(JavaNetSocket *)socket;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterClientSSLClientListenerRunner)

FOUNDATION_EXPORT void NetI2pRouterClientSSLClientListenerRunner_initWithNetI2pRouterRouterContext_withNetI2pRouterClientClientManager_withInt_(NetI2pRouterClientSSLClientListenerRunner *self, NetI2pRouterRouterContext *context, NetI2pRouterClientClientManager *manager, jint port);

FOUNDATION_EXPORT NetI2pRouterClientSSLClientListenerRunner *new_NetI2pRouterClientSSLClientListenerRunner_initWithNetI2pRouterRouterContext_withNetI2pRouterClientClientManager_withInt_(NetI2pRouterRouterContext *context, NetI2pRouterClientClientManager *manager, jint port) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterClientSSLClientListenerRunner *create_NetI2pRouterClientSSLClientListenerRunner_initWithNetI2pRouterRouterContext_withNetI2pRouterClientClientManager_withInt_(NetI2pRouterRouterContext *context, NetI2pRouterClientClientManager *manager, jint port);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterClientSSLClientListenerRunner)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterClientSSLClientListenerRunner")
