//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/client/LeaseRequestState.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterClientLeaseRequestState")
#ifdef RESTRICT_NetI2pRouterClientLeaseRequestState
#define INCLUDE_ALL_NetI2pRouterClientLeaseRequestState 0
#else
#define INCLUDE_ALL_NetI2pRouterClientLeaseRequestState 1
#endif
#undef RESTRICT_NetI2pRouterClientLeaseRequestState

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterClientLeaseRequestState_) && (INCLUDE_ALL_NetI2pRouterClientLeaseRequestState || defined(INCLUDE_NetI2pRouterClientLeaseRequestState))
#define NetI2pRouterClientLeaseRequestState_

@class NetI2pDataLeaseSet;
@protocol NetI2pRouterJob;

@interface NetI2pRouterClientLeaseRequestState : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterJob:(id<NetI2pRouterJob>)onGranted
                              withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailed
                                         withLong:(jlong)expiration
                           withNetI2pDataLeaseSet:(NetI2pDataLeaseSet *)requested;

- (jlong)getExpiration;

- (NetI2pDataLeaseSet *)getGranted;

- (jboolean)getIsSuccessful;

- (id<NetI2pRouterJob>)getOnFailed;

- (id<NetI2pRouterJob>)getOnGranted;

- (NetI2pDataLeaseSet *)getRequested;

- (void)setGrantedWithNetI2pDataLeaseSet:(NetI2pDataLeaseSet *)ls;

- (void)setIsSuccessfulWithBoolean:(jboolean)is;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterClientLeaseRequestState)

FOUNDATION_EXPORT void NetI2pRouterClientLeaseRequestState_initWithNetI2pRouterJob_withNetI2pRouterJob_withLong_withNetI2pDataLeaseSet_(NetI2pRouterClientLeaseRequestState *self, id<NetI2pRouterJob> onGranted, id<NetI2pRouterJob> onFailed, jlong expiration, NetI2pDataLeaseSet *requested);

FOUNDATION_EXPORT NetI2pRouterClientLeaseRequestState *new_NetI2pRouterClientLeaseRequestState_initWithNetI2pRouterJob_withNetI2pRouterJob_withLong_withNetI2pDataLeaseSet_(id<NetI2pRouterJob> onGranted, id<NetI2pRouterJob> onFailed, jlong expiration, NetI2pDataLeaseSet *requested) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterClientLeaseRequestState *create_NetI2pRouterClientLeaseRequestState_initWithNetI2pRouterJob_withNetI2pRouterJob_withLong_withNetI2pDataLeaseSet_(id<NetI2pRouterJob> onGranted, id<NetI2pRouterJob> onFailed, jlong expiration, NetI2pDataLeaseSet *requested);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterClientLeaseRequestState)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterClientLeaseRequestState")
