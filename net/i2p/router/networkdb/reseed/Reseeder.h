//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/reseed/Reseeder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterNetworkdbReseedReseeder")
#ifdef RESTRICT_NetI2pRouterNetworkdbReseedReseeder
#define INCLUDE_ALL_NetI2pRouterNetworkdbReseedReseeder 0
#else
#define INCLUDE_ALL_NetI2pRouterNetworkdbReseedReseeder 1
#endif
#undef RESTRICT_NetI2pRouterNetworkdbReseedReseeder

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterNetworkdbReseedReseeder_) && (INCLUDE_ALL_NetI2pRouterNetworkdbReseedReseeder || defined(INCLUDE_NetI2pRouterNetworkdbReseedReseeder))
#define NetI2pRouterNetworkdbReseedReseeder_

@class JavaIoInputStream;
@class JavaNetURI;
@class NetI2pRouterNetworkdbReseedReseedChecker;
@class NetI2pRouterRouterContext;

@interface NetI2pRouterNetworkdbReseedReseeder : NSObject
@property (readonly, copy, class) NSString *DEFAULT_SEED_URL NS_SWIFT_NAME(DEFAULT_SEED_URL);
@property (readonly, copy, class) NSString *DEFAULT_SSL_SEED_URL NS_SWIFT_NAME(DEFAULT_SSL_SEED_URL);
@property (readonly, copy, class) NSString *PROP_PROXY_HOST NS_SWIFT_NAME(PROP_PROXY_HOST);
@property (readonly, copy, class) NSString *PROP_PROXY_PORT NS_SWIFT_NAME(PROP_PROXY_PORT);
@property (readonly, copy, class) NSString *PROP_PROXY_ENABLE NS_SWIFT_NAME(PROP_PROXY_ENABLE);
@property (readonly, copy, class) NSString *PROP_SSL_DISABLE NS_SWIFT_NAME(PROP_SSL_DISABLE);
@property (readonly, copy, class) NSString *PROP_SSL_REQUIRED NS_SWIFT_NAME(PROP_SSL_REQUIRED);
@property (readonly, copy, class) NSString *PROP_RESEED_URL NS_SWIFT_NAME(PROP_RESEED_URL);
@property (readonly, copy, class) NSString *PROP_PROXY_USERNAME NS_SWIFT_NAME(PROP_PROXY_USERNAME);
@property (readonly, copy, class) NSString *PROP_PROXY_PASSWORD NS_SWIFT_NAME(PROP_PROXY_PASSWORD);
@property (readonly, copy, class) NSString *PROP_PROXY_AUTH_ENABLE NS_SWIFT_NAME(PROP_PROXY_AUTH_ENABLE);
@property (readonly, copy, class) NSString *PROP_SPROXY_HOST NS_SWIFT_NAME(PROP_SPROXY_HOST);
@property (readonly, copy, class) NSString *PROP_SPROXY_PORT NS_SWIFT_NAME(PROP_SPROXY_PORT);
@property (readonly, copy, class) NSString *PROP_SPROXY_ENABLE NS_SWIFT_NAME(PROP_SPROXY_ENABLE);
@property (readonly, copy, class) NSString *PROP_SPROXY_USERNAME NS_SWIFT_NAME(PROP_SPROXY_USERNAME);
@property (readonly, copy, class) NSString *PROP_SPROXY_PASSWORD NS_SWIFT_NAME(PROP_SPROXY_PASSWORD);
@property (readonly, copy, class) NSString *PROP_SPROXY_AUTH_ENABLE NS_SWIFT_NAME(PROP_SPROXY_AUTH_ENABLE);
@property (readonly, copy, class) NSString *PROP_SPROXY_TYPE NS_SWIFT_NAME(PROP_SPROXY_TYPE);
@property (readonly, copy, class) NSString *PROP_DISABLE NS_SWIFT_NAME(PROP_DISABLE);

+ (NSString *)DEFAULT_SEED_URL;

+ (NSString *)DEFAULT_SSL_SEED_URL;

+ (NSString *)PROP_PROXY_HOST;

+ (NSString *)PROP_PROXY_PORT;

+ (NSString *)PROP_PROXY_ENABLE;

+ (NSString *)PROP_SSL_DISABLE;

+ (NSString *)PROP_SSL_REQUIRED;

+ (NSString *)PROP_RESEED_URL;

+ (NSString *)PROP_PROXY_USERNAME;

+ (NSString *)PROP_PROXY_PASSWORD;

+ (NSString *)PROP_PROXY_AUTH_ENABLE;

+ (NSString *)PROP_SPROXY_HOST;

+ (NSString *)PROP_SPROXY_PORT;

+ (NSString *)PROP_SPROXY_ENABLE;

+ (NSString *)PROP_SPROXY_USERNAME;

+ (NSString *)PROP_SPROXY_PASSWORD;

+ (NSString *)PROP_SPROXY_AUTH_ENABLE;

+ (NSString *)PROP_SPROXY_TYPE;

+ (NSString *)PROP_DISABLE;

#pragma mark Package-Private

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
               withNetI2pRouterNetworkdbReseedReseedChecker:(NetI2pRouterNetworkdbReseedReseedChecker *)rc;

- (void)requestReseed;

- (jint)requestReseedWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (void)requestReseedWithJavaNetURI:(JavaNetURI *)url;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterNetworkdbReseedReseeder)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_DEFAULT_SEED_URL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_DEFAULT_SEED_URL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, DEFAULT_SEED_URL, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_DEFAULT_SSL_SEED_URL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_DEFAULT_SSL_SEED_URL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, DEFAULT_SSL_SEED_URL, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_PROXY_HOST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_PROXY_HOST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_PROXY_HOST, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_PROXY_PORT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_PROXY_PORT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_PROXY_PORT, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_PROXY_ENABLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_PROXY_ENABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_PROXY_ENABLE, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_SSL_DISABLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_SSL_DISABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_SSL_DISABLE, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_SSL_REQUIRED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_SSL_REQUIRED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_SSL_REQUIRED, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_RESEED_URL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_RESEED_URL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_RESEED_URL, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_PROXY_USERNAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_PROXY_USERNAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_PROXY_USERNAME, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_PROXY_PASSWORD(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_PROXY_PASSWORD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_PROXY_PASSWORD, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_PROXY_AUTH_ENABLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_PROXY_AUTH_ENABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_PROXY_AUTH_ENABLE, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_SPROXY_HOST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_SPROXY_HOST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_SPROXY_HOST, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_SPROXY_PORT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_SPROXY_PORT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_SPROXY_PORT, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_SPROXY_ENABLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_SPROXY_ENABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_SPROXY_ENABLE, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_SPROXY_USERNAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_SPROXY_USERNAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_SPROXY_USERNAME, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_SPROXY_PASSWORD(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_SPROXY_PASSWORD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_SPROXY_PASSWORD, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_SPROXY_AUTH_ENABLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_SPROXY_AUTH_ENABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_SPROXY_AUTH_ENABLE, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_SPROXY_TYPE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_SPROXY_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_SPROXY_TYPE, NSString *)

inline NSString *NetI2pRouterNetworkdbReseedReseeder_get_PROP_DISABLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbReseedReseeder_PROP_DISABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbReseedReseeder, PROP_DISABLE, NSString *)

FOUNDATION_EXPORT void NetI2pRouterNetworkdbReseedReseeder_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbReseedReseedChecker_(NetI2pRouterNetworkdbReseedReseeder *self, NetI2pRouterRouterContext *ctx, NetI2pRouterNetworkdbReseedReseedChecker *rc);

FOUNDATION_EXPORT NetI2pRouterNetworkdbReseedReseeder *new_NetI2pRouterNetworkdbReseedReseeder_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbReseedReseedChecker_(NetI2pRouterRouterContext *ctx, NetI2pRouterNetworkdbReseedReseedChecker *rc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterNetworkdbReseedReseeder *create_NetI2pRouterNetworkdbReseedReseeder_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbReseedReseedChecker_(NetI2pRouterRouterContext *ctx, NetI2pRouterNetworkdbReseedReseedChecker *rc);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterNetworkdbReseedReseeder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterNetworkdbReseedReseeder")
