//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/ExploreKeySelectorJob.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "net/i2p/kademlia/KBucketSet.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/networkdb/kademlia/ExploreKeySelectorJob.h"
#include "net/i2p/router/networkdb/kademlia/KademliaNetworkDatabaseFacade.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterNetworkdbKademliaExploreKeySelectorJob () {
 @public
  NetI2pUtilLog *_log_;
  NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *_facade_;
}

- (id<JavaUtilCollection>)selectKeysToExplore;

@end

J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaExploreKeySelectorJob, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaExploreKeySelectorJob, _facade_, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)

inline jlong NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_get_RERUN_DELAY_MS(void);
#define NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_RERUN_DELAY_MS 60000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterNetworkdbKademliaExploreKeySelectorJob, RERUN_DELAY_MS, jlong)

inline jlong NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_get_OLD_BUCKET_TIME(void);
#define NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_OLD_BUCKET_TIME 900000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterNetworkdbKademliaExploreKeySelectorJob, OLD_BUCKET_TIME, jlong)

__attribute__((unused)) static id<JavaUtilCollection> NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_selectKeysToExplore(NetI2pRouterNetworkdbKademliaExploreKeySelectorJob *self);

__attribute__((unused)) static IOSObjectArray *NetI2pRouterNetworkdbKademliaExploreKeySelectorJob__Annotations$0(void);

@implementation NetI2pRouterNetworkdbKademliaExploreKeySelectorJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)facade {
  NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_(self, context, facade);
  return self;
}

- (NSString *)getName {
  return @"Explore Key Selector Job";
}

- (void)runJob {
  if ([((NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *) nil_chk(_facade_)) floodfillEnabled]) {
    [self requeueWithLong:30 * NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_RERUN_DELAY_MS];
    return;
  }
  id<JavaUtilCollection> toExplore = NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_selectKeysToExplore(self);
  [((NetI2pUtilLog *) nil_chk(_log_)) infoWithNSString:JreStrcat("$@", @"Filling the explorer pool with: ", toExplore)];
  if (toExplore != nil) [((NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *) nil_chk(_facade_)) queueForExplorationWithJavaUtilCollection:toExplore];
  [self requeueWithLong:NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_RERUN_DELAY_MS];
}

- (id<JavaUtilCollection>)selectKeysToExplore {
  return NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_selectKeysToExplore(self);
}

- (void)dealloc {
  RELEASE_(_log_);
  RELEASE_(_facade_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x2, -1, -1, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(runJob);
  methods[3].selector = @selector(selectKeysToExplore);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_log_", "LNetI2pUtilLog;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_facade_", "LNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "RERUN_DELAY_MS", "J", .constantValue.asLong = NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_RERUN_DELAY_MS, 0x1a, -1, -1, -1, -1 },
    { "OLD_BUCKET_TIME", "J", .constantValue.asLong = NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_OLD_BUCKET_TIME, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;LNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade;", "()Ljava/util/Collection<Lnet/i2p/data/Hash;>;", (void *)&NetI2pRouterNetworkdbKademliaExploreKeySelectorJob__Annotations$0 };
  static const J2ObjcClassInfo _NetI2pRouterNetworkdbKademliaExploreKeySelectorJob = { "ExploreKeySelectorJob", "net.i2p.router.networkdb.kademlia", ptrTable, methods, fields, 7, 0x0, 4, 4, -1, -1, -1, -1, 2 };
  return &_NetI2pRouterNetworkdbKademliaExploreKeySelectorJob;
}

@end

void NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_(NetI2pRouterNetworkdbKademliaExploreKeySelectorJob *self, NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade) {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, context);
  JreStrongAssign(&self->_log_, [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(context)) logManager])) getLogWithIOSClass:NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_class_()]);
  JreStrongAssign(&self->_facade_, facade);
}

NetI2pRouterNetworkdbKademliaExploreKeySelectorJob *new_NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_(NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade) {
  J2OBJC_NEW_IMPL(NetI2pRouterNetworkdbKademliaExploreKeySelectorJob, initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_, context, facade)
}

NetI2pRouterNetworkdbKademliaExploreKeySelectorJob *create_NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_(NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade) {
  J2OBJC_CREATE_IMPL(NetI2pRouterNetworkdbKademliaExploreKeySelectorJob, initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_, context, facade)
}

id<JavaUtilCollection> NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_selectKeysToExplore(NetI2pRouterNetworkdbKademliaExploreKeySelectorJob *self) {
  id<JavaUtilSet> alreadyQueued = [((NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *) nil_chk(self->_facade_)) getExploreKeys];
  if ([((id<JavaUtilSet>) nil_chk(alreadyQueued)) size] > NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_MAX_EXPLORE_QUEUE) return nil;
  return [((NetI2pKademliaKBucketSet *) nil_chk([((NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *) nil_chk(self->_facade_)) getKBuckets])) getExploreKeysWithLong:NetI2pRouterNetworkdbKademliaExploreKeySelectorJob_OLD_BUCKET_TIME];
}

IOSObjectArray *NetI2pRouterNetworkdbKademliaExploreKeySelectorJob__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterNetworkdbKademliaExploreKeySelectorJob)
