//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/SearchJob.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaSearchJob")
#ifdef RESTRICT_NetI2pRouterNetworkdbKademliaSearchJob
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaSearchJob 0
#else
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaSearchJob 1
#endif
#undef RESTRICT_NetI2pRouterNetworkdbKademliaSearchJob

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterNetworkdbKademliaSearchJob_) && (INCLUDE_ALL_NetI2pRouterNetworkdbKademliaSearchJob || defined(INCLUDE_NetI2pRouterNetworkdbKademliaSearchJob))
#define NetI2pRouterNetworkdbKademliaSearchJob_

#define RESTRICT_NetI2pRouterJobImpl 1
#define INCLUDE_NetI2pRouterJobImpl 1
#include "net/i2p/router/JobImpl.h"

@class NetI2pDataHash;
@class NetI2pDataI2npDatabaseSearchReplyMessage;
@class NetI2pDataRouterRouterInfo;
@class NetI2pDataTunnelId;
@class NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade;
@class NetI2pRouterNetworkdbKademliaSearchState;
@class NetI2pRouterRouterContext;
@class NetI2pUtilLog;
@protocol NetI2pDataI2npI2NPMessage;
@protocol NetI2pRouterJob;

@interface NetI2pRouterNetworkdbKademliaSearchJob : NetI2pRouterJobImpl {
 @public
  NetI2pUtilLog *_log_;
  NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *_facade_;
}
@property (readonly, class) jint MAX_CLOSEST NS_SWIFT_NAME(MAX_CLOSEST);
@property (readonly, class) jint PER_FLOODFILL_PEER_TIMEOUT NS_SWIFT_NAME(PER_FLOODFILL_PEER_TIMEOUT);
@property (readonly, class) jlong MIN_TIMEOUT NS_SWIFT_NAME(MIN_TIMEOUT);

+ (jint)MAX_CLOSEST;

+ (jint)PER_FLOODFILL_PEER_TIMEOUT;

+ (jlong)MIN_TIMEOUT;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)facade
                                         withNetI2pDataHash:(NetI2pDataHash *)key
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onSuccess
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailure
                                                   withLong:(jlong)timeoutMs
                                                withBoolean:(jboolean)keepStats
                                                withBoolean:(jboolean)isLease;

- (jint)addDeferredWithNetI2pRouterJob:(id<NetI2pRouterJob>)onFind
                   withNetI2pRouterJob:(id<NetI2pRouterJob>)onFail
                              withLong:(jlong)expiration
                           withBoolean:(jboolean)isLease;

- (jlong)getExpiration;

- (NSString *)getName;

- (jlong)getTimeoutMs;

- (void)runJob;

- (NSString *)description;

#pragma mark Protected

- (id<NetI2pDataI2npI2NPMessage>)buildMessageWithNetI2pDataTunnelId:(NetI2pDataTunnelId *)replyTunnelId
                                                 withNetI2pDataHash:(NetI2pDataHash *)replyGateway
                                                           withLong:(jlong)expiration
                                     withNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)peer;

- (void)continueSearch;

- (void)fail;

- (jint)getBredth;

- (NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)getFacade;

- (jint)getPerPeerTimeoutMs;

- (jint)getPerPeerTimeoutMsWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (NetI2pRouterNetworkdbKademliaSearchState *)getState;

- (void)newPeersFoundWithInt:(jint)numNewPeers OBJC_METHOD_FAMILY_NONE;

- (void)searchNext;

- (void)sendLeaseSearchWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)router;

- (void)sendRouterSearchWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)router;

- (void)sendSearchWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)router;

#pragma mark Package-Private

- (jboolean)addWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)decrementOutstandingFloodfillSearches;

+ (jboolean)onlyQueryFloodfillPeersWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx;

- (void)replyFoundWithNetI2pDataI2npDatabaseSearchReplyMessage:(NetI2pDataI2npDatabaseSearchReplyMessage *)message
                                            withNetI2pDataHash:(NetI2pDataHash *)peer;

- (jlong)timeoutMs;

- (jboolean)wasAttemptedWithNetI2pDataHash:(NetI2pDataHash *)peer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterNetworkdbKademliaSearchJob)

J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchJob, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchJob, _facade_, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)

inline jint NetI2pRouterNetworkdbKademliaSearchJob_get_MAX_CLOSEST(void);
#define NetI2pRouterNetworkdbKademliaSearchJob_MAX_CLOSEST 10
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterNetworkdbKademliaSearchJob, MAX_CLOSEST, jint)

inline jint NetI2pRouterNetworkdbKademliaSearchJob_get_PER_FLOODFILL_PEER_TIMEOUT(void);
#define NetI2pRouterNetworkdbKademliaSearchJob_PER_FLOODFILL_PEER_TIMEOUT 10000
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterNetworkdbKademliaSearchJob, PER_FLOODFILL_PEER_TIMEOUT, jint)

inline jlong NetI2pRouterNetworkdbKademliaSearchJob_get_MIN_TIMEOUT(void);
#define NetI2pRouterNetworkdbKademliaSearchJob_MIN_TIMEOUT 2500LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterNetworkdbKademliaSearchJob, MIN_TIMEOUT, jlong)

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaSearchJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pDataHash_withNetI2pRouterJob_withNetI2pRouterJob_withLong_withBoolean_withBoolean_(NetI2pRouterNetworkdbKademliaSearchJob *self, NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade, NetI2pDataHash *key, id<NetI2pRouterJob> onSuccess, id<NetI2pRouterJob> onFailure, jlong timeoutMs, jboolean keepStats, jboolean isLease);

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaSearchJob *new_NetI2pRouterNetworkdbKademliaSearchJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pDataHash_withNetI2pRouterJob_withNetI2pRouterJob_withLong_withBoolean_withBoolean_(NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade, NetI2pDataHash *key, id<NetI2pRouterJob> onSuccess, id<NetI2pRouterJob> onFailure, jlong timeoutMs, jboolean keepStats, jboolean isLease) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaSearchJob *create_NetI2pRouterNetworkdbKademliaSearchJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pDataHash_withNetI2pRouterJob_withNetI2pRouterJob_withLong_withBoolean_withBoolean_(NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade, NetI2pDataHash *key, id<NetI2pRouterJob> onSuccess, id<NetI2pRouterJob> onFailure, jlong timeoutMs, jboolean keepStats, jboolean isLease);

FOUNDATION_EXPORT jboolean NetI2pRouterNetworkdbKademliaSearchJob_onlyQueryFloodfillPeersWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterNetworkdbKademliaSearchJob)

#endif

#if !defined (NetI2pRouterNetworkdbKademliaSearchJob_FailedJob_) && (INCLUDE_ALL_NetI2pRouterNetworkdbKademliaSearchJob || defined(INCLUDE_NetI2pRouterNetworkdbKademliaSearchJob_FailedJob))
#define NetI2pRouterNetworkdbKademliaSearchJob_FailedJob_

#define RESTRICT_NetI2pRouterJobImpl 1
#define INCLUDE_NetI2pRouterJobImpl 1
#include "net/i2p/router/JobImpl.h"

@class NetI2pDataRouterRouterInfo;
@class NetI2pRouterNetworkdbKademliaSearchJob;
@class NetI2pRouterRouterContext;

@interface NetI2pRouterNetworkdbKademliaSearchJob_FailedJob : NetI2pRouterJobImpl

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterNetworkdbKademliaSearchJob:(NetI2pRouterNetworkdbKademliaSearchJob *)outer$
                                           withNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)enclosingContext
                                          withNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)peer;

- (instancetype __nonnull)initWithNetI2pRouterNetworkdbKademliaSearchJob:(NetI2pRouterNetworkdbKademliaSearchJob *)outer$
                                           withNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)enclosingContext
                                          withNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)peer
                                                             withBoolean:(jboolean)penalizePeer;

- (NSString *)getName;

- (void)runJob;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterNetworkdbKademliaSearchJob_FailedJob)

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaSearchJob_FailedJob_initWithNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_(NetI2pRouterNetworkdbKademliaSearchJob_FailedJob *self, NetI2pRouterNetworkdbKademliaSearchJob *outer$, NetI2pRouterRouterContext *enclosingContext, NetI2pDataRouterRouterInfo *peer);

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaSearchJob_FailedJob *new_NetI2pRouterNetworkdbKademliaSearchJob_FailedJob_initWithNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_(NetI2pRouterNetworkdbKademliaSearchJob *outer$, NetI2pRouterRouterContext *enclosingContext, NetI2pDataRouterRouterInfo *peer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaSearchJob_FailedJob *create_NetI2pRouterNetworkdbKademliaSearchJob_FailedJob_initWithNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_(NetI2pRouterNetworkdbKademliaSearchJob *outer$, NetI2pRouterRouterContext *enclosingContext, NetI2pDataRouterRouterInfo *peer);

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaSearchJob_FailedJob_initWithNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withBoolean_(NetI2pRouterNetworkdbKademliaSearchJob_FailedJob *self, NetI2pRouterNetworkdbKademliaSearchJob *outer$, NetI2pRouterRouterContext *enclosingContext, NetI2pDataRouterRouterInfo *peer, jboolean penalizePeer);

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaSearchJob_FailedJob *new_NetI2pRouterNetworkdbKademliaSearchJob_FailedJob_initWithNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withBoolean_(NetI2pRouterNetworkdbKademliaSearchJob *outer$, NetI2pRouterRouterContext *enclosingContext, NetI2pDataRouterRouterInfo *peer, jboolean penalizePeer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaSearchJob_FailedJob *create_NetI2pRouterNetworkdbKademliaSearchJob_FailedJob_initWithNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withBoolean_(NetI2pRouterNetworkdbKademliaSearchJob *outer$, NetI2pRouterRouterContext *enclosingContext, NetI2pDataRouterRouterInfo *peer, jboolean penalizePeer);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterNetworkdbKademliaSearchJob_FailedJob)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaSearchJob")
