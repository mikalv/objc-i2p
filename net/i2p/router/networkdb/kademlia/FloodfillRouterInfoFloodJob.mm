//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/FloodfillRouterInfoFloodJob.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/data/i2np/DatabaseStoreMessage.h"
#include "net/i2p/data/router/RouterInfo.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/NetworkDatabaseFacade.h"
#include "net/i2p/router/OutNetMessage.h"
#include "net/i2p/router/OutNetMessagePool.h"
#include "net/i2p/router/Router.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/networkdb/kademlia/FloodfillNetworkDatabaseFacade.h"
#include "net/i2p/router/networkdb/kademlia/FloodfillPeerSelector.h"
#include "net/i2p/router/networkdb/kademlia/FloodfillRouterInfoFloodJob.h"
#include "net/i2p/router/networkdb/kademlia/PeerSelector.h"
#include "net/i2p/util/Clock.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob () {
 @public
  NetI2pUtilLog *_log_;
  NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *_facade_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob, _facade_, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *)

inline jint NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob_get_FLOOD_PEERS(void);
#define NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob_FLOOD_PEERS 6
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob, FLOOD_PEERS, jint)

@implementation NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *)facade {
  NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_(self, context, facade);
  return self;
}

- (NSString *)getName {
  return @"Flood our RouterInfo to nearby floodfills";
}

- (void)runJob {
  NetI2pRouterNetworkdbKademliaFloodfillPeerSelector *sel = (NetI2pRouterNetworkdbKademliaFloodfillPeerSelector *) cast_chk([((NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *) nil_chk(_facade_)) getPeerSelector], [NetI2pRouterNetworkdbKademliaFloodfillPeerSelector class]);
  NetI2pDataI2npDatabaseStoreMessage *dsm;
  NetI2pRouterOutNetMessage *outMsg;
  NetI2pDataRouterRouterInfo *nextPeerInfo;
  id<JavaUtilList> peers = [((NetI2pRouterNetworkdbKademliaFloodfillPeerSelector *) nil_chk(sel)) selectFloodfillParticipantsWithNetI2pDataHash:[((NetI2pRouterRouterContext *) nil_chk([self getContext])) routerHash] withInt:NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob_FLOOD_PEERS withNetI2pKademliaKBucketSet:nil];
  for (NetI2pDataHash * __strong ri in nil_chk(peers)) {
    dsm = create_NetI2pDataI2npDatabaseStoreMessage_initWithNetI2pI2PAppContext_([self getContext]);
    [dsm setMessageExpirationWithLong:[((NetI2pUtilClock *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) clock])) now] + 10 * 1000];
    [dsm setEntryWithNetI2pDataDatabaseEntry:[((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) router])) getRouterInfo]];
    nextPeerInfo = [((NetI2pRouterNetworkDatabaseFacade *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) netDb])) lookupRouterInfoLocallyWithNetI2pDataHash:ri];
    if (nextPeerInfo == nil) {
      continue;
    }
    outMsg = create_NetI2pRouterOutNetMessage_initWithNetI2pRouterRouterContext_withNetI2pDataI2npI2NPMessage_withLong_withInt_withNetI2pDataRouterRouterInfo_([self getContext], dsm, [((NetI2pUtilClock *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) clock])) now] + 10 * 1000, NetI2pRouterOutNetMessage_PRIORITY_MY_NETDB_STORE, nextPeerInfo);
    [((NetI2pRouterOutNetMessagePool *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) outNetMessagePool])) addWithNetI2pRouterOutNetMessage:outMsg];
    if ([((NetI2pUtilLog *) nil_chk(_log_)) shouldLogWithInt:NetI2pUtilLog_DEBUG]) {
      [_log_ logAlwaysWithInt:NetI2pUtilLog_DEBUG withNSString:JreStrcat("$@", @"Sending our RI to: ", [nextPeerInfo getHash])];
    }
  }
}

- (void)dealloc {
  RELEASE_(_log_);
  RELEASE_(_facade_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade:);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(runJob);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_log_", "LNetI2pUtilLog;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_facade_", "LNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "FLOOD_PEERS", "I", .constantValue.asInt = NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob_FLOOD_PEERS, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;LNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade;" };
  static const J2ObjcClassInfo _NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob = { "FloodfillRouterInfoFloodJob", "net.i2p.router.networkdb.kademlia", ptrTable, methods, fields, 7, 0x0, 3, 3, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob;
}

@end

void NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_(NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob *self, NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *facade) {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, context);
  JreStrongAssign(&self->_facade_, facade);
  JreStrongAssign(&self->_log_, [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(context)) logManager])) getLogWithIOSClass:NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob_class_()]);
}

NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob *new_NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_(NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *facade) {
  J2OBJC_NEW_IMPL(NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob, initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_, context, facade)
}

NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob *create_NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_(NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *facade) {
  J2OBJC_CREATE_IMPL(NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob, initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_, context, facade)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterNetworkdbKademliaFloodfillRouterInfoFloodJob)
