//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/FloodfillStoreJob.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaFloodfillStoreJob")
#ifdef RESTRICT_NetI2pRouterNetworkdbKademliaFloodfillStoreJob
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaFloodfillStoreJob 0
#else
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaFloodfillStoreJob 1
#endif
#undef RESTRICT_NetI2pRouterNetworkdbKademliaFloodfillStoreJob

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterNetworkdbKademliaFloodfillStoreJob_) && (INCLUDE_ALL_NetI2pRouterNetworkdbKademliaFloodfillStoreJob || defined(INCLUDE_NetI2pRouterNetworkdbKademliaFloodfillStoreJob))
#define NetI2pRouterNetworkdbKademliaFloodfillStoreJob_

#define RESTRICT_NetI2pRouterNetworkdbKademliaStoreJob 1
#define INCLUDE_NetI2pRouterNetworkdbKademliaStoreJob 1
#include "net/i2p/router/networkdb/kademlia/StoreJob.h"

@class NetI2pDataDatabaseEntry;
@class NetI2pDataHash;
@class NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade;
@class NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade;
@class NetI2pRouterRouterContext;
@protocol JavaUtilSet;
@protocol NetI2pRouterJob;

@interface NetI2pRouterNetworkdbKademliaFloodfillStoreJob : NetI2pRouterNetworkdbKademliaStoreJob

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *)facade
                                         withNetI2pDataHash:(NetI2pDataHash *)key
                                withNetI2pDataDatabaseEntry:(NetI2pDataDatabaseEntry *)data
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onSuccess
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailure
                                                   withLong:(jlong)timeoutMs;

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *)facade
                                         withNetI2pDataHash:(NetI2pDataHash *)key
                                withNetI2pDataDatabaseEntry:(NetI2pDataDatabaseEntry *)data
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onSuccess
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailure
                                                   withLong:(jlong)timeoutMs
                                            withJavaUtilSet:(id<JavaUtilSet>)toSkip;

- (NSString *)getName;

#pragma mark Protected

- (jint)getParallelization;

- (jint)getRedundancy;

- (void)succeed;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)arg0
withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)arg1
                                         withNetI2pDataHash:(NetI2pDataHash *)arg2
                                withNetI2pDataDatabaseEntry:(NetI2pDataDatabaseEntry *)arg3
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)arg4
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)arg5
                                                   withLong:(jlong)arg6 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)arg0
withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)arg1
                                         withNetI2pDataHash:(NetI2pDataHash *)arg2
                                withNetI2pDataDatabaseEntry:(NetI2pDataDatabaseEntry *)arg3
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)arg4
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)arg5
                                                   withLong:(jlong)arg6
                                            withJavaUtilSet:(id<JavaUtilSet>)arg7 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterNetworkdbKademliaFloodfillStoreJob)

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaFloodfillStoreJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_withNetI2pDataHash_withNetI2pDataDatabaseEntry_withNetI2pRouterJob_withNetI2pRouterJob_withLong_(NetI2pRouterNetworkdbKademliaFloodfillStoreJob *self, NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *facade, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data, id<NetI2pRouterJob> onSuccess, id<NetI2pRouterJob> onFailure, jlong timeoutMs);

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaFloodfillStoreJob *new_NetI2pRouterNetworkdbKademliaFloodfillStoreJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_withNetI2pDataHash_withNetI2pDataDatabaseEntry_withNetI2pRouterJob_withNetI2pRouterJob_withLong_(NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *facade, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data, id<NetI2pRouterJob> onSuccess, id<NetI2pRouterJob> onFailure, jlong timeoutMs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaFloodfillStoreJob *create_NetI2pRouterNetworkdbKademliaFloodfillStoreJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_withNetI2pDataHash_withNetI2pDataDatabaseEntry_withNetI2pRouterJob_withNetI2pRouterJob_withLong_(NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *facade, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data, id<NetI2pRouterJob> onSuccess, id<NetI2pRouterJob> onFailure, jlong timeoutMs);

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaFloodfillStoreJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_withNetI2pDataHash_withNetI2pDataDatabaseEntry_withNetI2pRouterJob_withNetI2pRouterJob_withLong_withJavaUtilSet_(NetI2pRouterNetworkdbKademliaFloodfillStoreJob *self, NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *facade, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data, id<NetI2pRouterJob> onSuccess, id<NetI2pRouterJob> onFailure, jlong timeoutMs, id<JavaUtilSet> toSkip);

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaFloodfillStoreJob *new_NetI2pRouterNetworkdbKademliaFloodfillStoreJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_withNetI2pDataHash_withNetI2pDataDatabaseEntry_withNetI2pRouterJob_withNetI2pRouterJob_withLong_withJavaUtilSet_(NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *facade, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data, id<NetI2pRouterJob> onSuccess, id<NetI2pRouterJob> onFailure, jlong timeoutMs, id<JavaUtilSet> toSkip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaFloodfillStoreJob *create_NetI2pRouterNetworkdbKademliaFloodfillStoreJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_withNetI2pDataHash_withNetI2pDataDatabaseEntry_withNetI2pRouterJob_withNetI2pRouterJob_withLong_withJavaUtilSet_(NetI2pRouterRouterContext *context, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *facade, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data, id<NetI2pRouterJob> onSuccess, id<NetI2pRouterJob> onFailure, jlong timeoutMs, id<JavaUtilSet> toSkip);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterNetworkdbKademliaFloodfillStoreJob)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaFloodfillStoreJob")
