//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/StoreState.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaStoreState")
#ifdef RESTRICT_NetI2pRouterNetworkdbKademliaStoreState
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaStoreState 0
#else
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaStoreState 1
#endif
#undef RESTRICT_NetI2pRouterNetworkdbKademliaStoreState

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterNetworkdbKademliaStoreState_) && (INCLUDE_ALL_NetI2pRouterNetworkdbKademliaStoreState || defined(INCLUDE_NetI2pRouterNetworkdbKademliaStoreState))
#define NetI2pRouterNetworkdbKademliaStoreState_

@class NetI2pDataDatabaseEntry;
@class NetI2pDataHash;
@class NetI2pRouterNetworkdbKademliaMessageWrapper_WrappedMessage;
@class NetI2pRouterRouterContext;
@protocol JavaUtilCollection;
@protocol JavaUtilSet;

@interface NetI2pRouterNetworkdbKademliaStoreState : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                         withNetI2pDataHash:(NetI2pDataHash *)key
                                withNetI2pDataDatabaseEntry:(NetI2pDataDatabaseEntry *)data;

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                         withNetI2pDataHash:(NetI2pDataHash *)key
                                withNetI2pDataDatabaseEntry:(NetI2pDataDatabaseEntry *)data
                                            withJavaUtilSet:(id<JavaUtilSet>)toSkip;

- (void)addPendingWithJavaUtilCollection:(id<JavaUtilCollection>)pending;

- (void)addPendingWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)addPendingWithNetI2pDataHash:(NetI2pDataHash *)peer
withNetI2pRouterNetworkdbKademliaMessageWrapper_WrappedMessage:(NetI2pRouterNetworkdbKademliaMessageWrapper_WrappedMessage *)msg;

- (void)addSkippedWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)completeWithBoolean:(jboolean)completed;

- (jboolean)completed;

- (jlong)confirmedWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (id<JavaUtilSet>)getAttempted;

- (jint)getCompleteCount;

- (NetI2pDataDatabaseEntry *)getData;

- (id<JavaUtilSet>)getFailed;

- (id<JavaUtilSet>)getPending;

- (NetI2pRouterNetworkdbKademliaMessageWrapper_WrappedMessage *)getPendingMessageWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (id<JavaUtilSet>)getSuccessful;

- (NetI2pDataHash *)getTarget;

- (jlong)getWhenCompleted;

- (jlong)getWhenStarted;

- (void)replyTimeoutWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterNetworkdbKademliaStoreState)

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaStoreState_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataDatabaseEntry_(NetI2pRouterNetworkdbKademliaStoreState *self, NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data);

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaStoreState *new_NetI2pRouterNetworkdbKademliaStoreState_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataDatabaseEntry_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaStoreState *create_NetI2pRouterNetworkdbKademliaStoreState_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataDatabaseEntry_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data);

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaStoreState_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataDatabaseEntry_withJavaUtilSet_(NetI2pRouterNetworkdbKademliaStoreState *self, NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data, id<JavaUtilSet> toSkip);

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaStoreState *new_NetI2pRouterNetworkdbKademliaStoreState_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataDatabaseEntry_withJavaUtilSet_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data, id<JavaUtilSet> toSkip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaStoreState *create_NetI2pRouterNetworkdbKademliaStoreState_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataDatabaseEntry_withJavaUtilSet_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataDatabaseEntry *data, id<JavaUtilSet> toSkip);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterNetworkdbKademliaStoreState)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaStoreState")
