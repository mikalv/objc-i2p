//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/IterativeTimeoutJob.java
//

#include "J2ObjC_source.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/networkdb/kademlia/IterativeSearchJob.h"
#include "net/i2p/router/networkdb/kademlia/IterativeTimeoutJob.h"

@interface NetI2pRouterNetworkdbKademliaIterativeTimeoutJob () {
 @public
  NetI2pRouterNetworkdbKademliaIterativeSearchJob *_search_;
  NetI2pDataHash *_peer_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaIterativeTimeoutJob, _search_, NetI2pRouterNetworkdbKademliaIterativeSearchJob *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaIterativeTimeoutJob, _peer_, NetI2pDataHash *)

@implementation NetI2pRouterNetworkdbKademliaIterativeTimeoutJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                               withNetI2pDataHash:(NetI2pDataHash *)peer
withNetI2pRouterNetworkdbKademliaIterativeSearchJob:(NetI2pRouterNetworkdbKademliaIterativeSearchJob *)job {
  NetI2pRouterNetworkdbKademliaIterativeTimeoutJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_(self, ctx, peer, job);
  return self;
}

- (void)runJob {
  [((NetI2pRouterNetworkdbKademliaIterativeSearchJob *) nil_chk(_search_)) failedWithNetI2pDataHash:_peer_ withBoolean:true];
}

- (NSString *)getName {
  return @"Iterative search timeout";
}

- (void)dealloc {
  RELEASE_(_search_);
  RELEASE_(_peer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:withNetI2pDataHash:withNetI2pRouterNetworkdbKademliaIterativeSearchJob:);
  methods[1].selector = @selector(runJob);
  methods[2].selector = @selector(getName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_search_", "LNetI2pRouterNetworkdbKademliaIterativeSearchJob;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_peer_", "LNetI2pDataHash;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;LNetI2pDataHash;LNetI2pRouterNetworkdbKademliaIterativeSearchJob;" };
  static const J2ObjcClassInfo _NetI2pRouterNetworkdbKademliaIterativeTimeoutJob = { "IterativeTimeoutJob", "net.i2p.router.networkdb.kademlia", ptrTable, methods, fields, 7, 0x0, 3, 2, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterNetworkdbKademliaIterativeTimeoutJob;
}

@end

void NetI2pRouterNetworkdbKademliaIterativeTimeoutJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_(NetI2pRouterNetworkdbKademliaIterativeTimeoutJob *self, NetI2pRouterRouterContext *ctx, NetI2pDataHash *peer, NetI2pRouterNetworkdbKademliaIterativeSearchJob *job) {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, ctx);
  JreStrongAssign(&self->_peer_, peer);
  JreStrongAssign(&self->_search_, job);
}

NetI2pRouterNetworkdbKademliaIterativeTimeoutJob *new_NetI2pRouterNetworkdbKademliaIterativeTimeoutJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *peer, NetI2pRouterNetworkdbKademliaIterativeSearchJob *job) {
  J2OBJC_NEW_IMPL(NetI2pRouterNetworkdbKademliaIterativeTimeoutJob, initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_, ctx, peer, job)
}

NetI2pRouterNetworkdbKademliaIterativeTimeoutJob *create_NetI2pRouterNetworkdbKademliaIterativeTimeoutJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *peer, NetI2pRouterNetworkdbKademliaIterativeSearchJob *job) {
  J2OBJC_CREATE_IMPL(NetI2pRouterNetworkdbKademliaIterativeTimeoutJob, initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_, ctx, peer, job)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterNetworkdbKademliaIterativeTimeoutJob)
