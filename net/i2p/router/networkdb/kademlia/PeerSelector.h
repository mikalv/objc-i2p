//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/PeerSelector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaPeerSelector")
#ifdef RESTRICT_NetI2pRouterNetworkdbKademliaPeerSelector
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaPeerSelector 0
#else
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaPeerSelector 1
#endif
#undef RESTRICT_NetI2pRouterNetworkdbKademliaPeerSelector

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterNetworkdbKademliaPeerSelector_) && (INCLUDE_ALL_NetI2pRouterNetworkdbKademliaPeerSelector || defined(INCLUDE_NetI2pRouterNetworkdbKademliaPeerSelector))
#define NetI2pRouterNetworkdbKademliaPeerSelector_

@class NetI2pDataHash;
@class NetI2pKademliaKBucketSet;
@class NetI2pRouterRouterContext;
@class NetI2pUtilLog;
@protocol JavaUtilList;
@protocol JavaUtilSet;

@interface NetI2pRouterNetworkdbKademliaPeerSelector : NSObject {
 @public
  NetI2pUtilLog *_log_;
  NetI2pRouterRouterContext *_context_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx;

#pragma mark Package-Private

- (id<JavaUtilList>)selectMostReliablePeersWithNetI2pDataHash:(NetI2pDataHash *)key
                                                      withInt:(jint)numClosest
                                              withJavaUtilSet:(id<JavaUtilSet>)alreadyChecked
                                 withNetI2pKademliaKBucketSet:(NetI2pKademliaKBucketSet *)kbuckets;

- (id<JavaUtilList>)selectNearestWithNetI2pDataHash:(NetI2pDataHash *)key
                                            withInt:(jint)maxNumRouters
                                    withJavaUtilSet:(id<JavaUtilSet>)peersToIgnore
                       withNetI2pKademliaKBucketSet:(NetI2pKademliaKBucketSet *)kbuckets;

- (id<JavaUtilList>)selectNearestExplicitWithNetI2pDataHash:(NetI2pDataHash *)key
                                                    withInt:(jint)maxNumRouters
                                            withJavaUtilSet:(id<JavaUtilSet>)peersToIgnore
                               withNetI2pKademliaKBucketSet:(NetI2pKademliaKBucketSet *)kbuckets;

- (id<JavaUtilList>)selectNearestExplicitThinWithNetI2pDataHash:(NetI2pDataHash *)key
                                                        withInt:(jint)maxNumRouters
                                                withJavaUtilSet:(id<JavaUtilSet>)peersToIgnore
                                   withNetI2pKademliaKBucketSet:(NetI2pKademliaKBucketSet *)kbuckets;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterNetworkdbKademliaPeerSelector)

J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaPeerSelector, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaPeerSelector, _context_, NetI2pRouterRouterContext *)

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaPeerSelector_initWithNetI2pRouterRouterContext_(NetI2pRouterNetworkdbKademliaPeerSelector *self, NetI2pRouterRouterContext *ctx);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterNetworkdbKademliaPeerSelector)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaPeerSelector")
