//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/IterativeFollowupJob.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaIterativeFollowupJob")
#ifdef RESTRICT_NetI2pRouterNetworkdbKademliaIterativeFollowupJob
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaIterativeFollowupJob 0
#else
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaIterativeFollowupJob 1
#endif
#undef RESTRICT_NetI2pRouterNetworkdbKademliaIterativeFollowupJob

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterNetworkdbKademliaIterativeFollowupJob_) && (INCLUDE_ALL_NetI2pRouterNetworkdbKademliaIterativeFollowupJob || defined(INCLUDE_NetI2pRouterNetworkdbKademliaIterativeFollowupJob))
#define NetI2pRouterNetworkdbKademliaIterativeFollowupJob_

#define RESTRICT_NetI2pRouterNetworkdbKademliaSingleSearchJob 1
#define INCLUDE_NetI2pRouterNetworkdbKademliaSingleSearchJob 1
#include "net/i2p/router/networkdb/kademlia/SingleSearchJob.h"

@class NetI2pDataHash;
@class NetI2pRouterNetworkdbKademliaIterativeSearchJob;
@class NetI2pRouterRouterContext;

@interface NetI2pRouterNetworkdbKademliaIterativeFollowupJob : NetI2pRouterNetworkdbKademliaSingleSearchJob

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                         withNetI2pDataHash:(NetI2pDataHash *)key
                                         withNetI2pDataHash:(NetI2pDataHash *)to
        withNetI2pRouterNetworkdbKademliaIterativeSearchJob:(NetI2pRouterNetworkdbKademliaIterativeSearchJob *)search;

- (NSString *)getName;

#pragma mark Package-Private

- (void)success;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)arg0
                                         withNetI2pDataHash:(NetI2pDataHash *)arg1
                                         withNetI2pDataHash:(NetI2pDataHash *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterNetworkdbKademliaIterativeFollowupJob)

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaIterativeFollowupJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_(NetI2pRouterNetworkdbKademliaIterativeFollowupJob *self, NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataHash *to, NetI2pRouterNetworkdbKademliaIterativeSearchJob *search);

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaIterativeFollowupJob *new_NetI2pRouterNetworkdbKademliaIterativeFollowupJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataHash *to, NetI2pRouterNetworkdbKademliaIterativeSearchJob *search) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaIterativeFollowupJob *create_NetI2pRouterNetworkdbKademliaIterativeFollowupJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataHash *to, NetI2pRouterNetworkdbKademliaIterativeSearchJob *search);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterNetworkdbKademliaIterativeFollowupJob)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaIterativeFollowupJob")
