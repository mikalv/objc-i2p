//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/HandleFloodfillDatabaseLookupMessageJob.java
//

#include "J2ObjC_source.h"
#include "java/util/Set.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/data/TunnelId.h"
#include "net/i2p/data/i2np/DatabaseLookupMessage.h"
#include "net/i2p/data/i2np/DatabaseStoreMessage.h"
#include "net/i2p/data/router/RouterIdentity.h"
#include "net/i2p/data/router/RouterInfo.h"
#include "net/i2p/router/NetworkDatabaseFacade.h"
#include "net/i2p/router/Router.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/networkdb/HandleDatabaseLookupMessageJob.h"
#include "net/i2p/router/networkdb/kademlia/FloodfillNetworkDatabaseFacade.h"
#include "net/i2p/router/networkdb/kademlia/HandleFloodfillDatabaseLookupMessageJob.h"

@implementation NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
          withNetI2pDataI2npDatabaseLookupMessage:(NetI2pDataI2npDatabaseLookupMessage *)receivedMessage
               withNetI2pDataRouterRouterIdentity:(NetI2pDataRouterRouterIdentity *)from
                               withNetI2pDataHash:(NetI2pDataHash *)fromHash {
  NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npDatabaseLookupMessage_withNetI2pDataRouterRouterIdentity_withNetI2pDataHash_(self, ctx, receivedMessage, from, fromHash);
  return self;
}

- (jboolean)answerAllQueries {
  if (![((NetI2pRouterNetworkDatabaseFacade *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) netDb])) floodfillEnabled]) return false;
  return NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_isFloodfillWithNetI2pDataRouterRouterInfo_([((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) router])) getRouterInfo]);
}

- (void)sendClosestWithNetI2pDataHash:(NetI2pDataHash *)key
                      withJavaUtilSet:(id<JavaUtilSet>)routerInfoSet
                   withNetI2pDataHash:(NetI2pDataHash *)toPeer
               withNetI2pDataTunnelId:(NetI2pDataTunnelId *)replyTunnel {
  [super sendClosestWithNetI2pDataHash:key withJavaUtilSet:routerInfoSet withNetI2pDataHash:toPeer withNetI2pDataTunnelId:replyTunnel];
  if (![((NetI2pRouterNetworkDatabaseFacade *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) netDb])) floodfillEnabled]) {
    NetI2pDataI2npDatabaseStoreMessage *msg = create_NetI2pDataI2npDatabaseStoreMessage_initWithNetI2pI2PAppContext_([self getContext]);
    NetI2pDataRouterRouterInfo *me = [((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) router])) getRouterInfo];
    [msg setEntryWithNetI2pDataDatabaseEntry:me];
    [self sendMessageWithNetI2pDataI2npI2NPMessage:msg withNetI2pDataHash:toPeer withNetI2pDataTunnelId:replyTunnel];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:withNetI2pDataI2npDatabaseLookupMessage:withNetI2pDataRouterRouterIdentity:withNetI2pDataHash:);
  methods[1].selector = @selector(answerAllQueries);
  methods[2].selector = @selector(sendClosestWithNetI2pDataHash:withJavaUtilSet:withNetI2pDataHash:withNetI2pDataTunnelId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;LNetI2pDataI2npDatabaseLookupMessage;LNetI2pDataRouterRouterIdentity;LNetI2pDataHash;", "sendClosest", "LNetI2pDataHash;LJavaUtilSet;LNetI2pDataHash;LNetI2pDataTunnelId;", "(Lnet/i2p/data/Hash;Ljava/util/Set<Lnet/i2p/data/Hash;>;Lnet/i2p/data/Hash;Lnet/i2p/data/TunnelId;)V" };
  static const J2ObjcClassInfo _NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob = { "HandleFloodfillDatabaseLookupMessageJob", "net.i2p.router.networkdb.kademlia", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob;
}

@end

void NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npDatabaseLookupMessage_withNetI2pDataRouterRouterIdentity_withNetI2pDataHash_(NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob *self, NetI2pRouterRouterContext *ctx, NetI2pDataI2npDatabaseLookupMessage *receivedMessage, NetI2pDataRouterRouterIdentity *from, NetI2pDataHash *fromHash) {
  NetI2pRouterNetworkdbHandleDatabaseLookupMessageJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npDatabaseLookupMessage_withNetI2pDataRouterRouterIdentity_withNetI2pDataHash_(self, ctx, receivedMessage, from, fromHash);
}

NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob *new_NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npDatabaseLookupMessage_withNetI2pDataRouterRouterIdentity_withNetI2pDataHash_(NetI2pRouterRouterContext *ctx, NetI2pDataI2npDatabaseLookupMessage *receivedMessage, NetI2pDataRouterRouterIdentity *from, NetI2pDataHash *fromHash) {
  J2OBJC_NEW_IMPL(NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob, initWithNetI2pRouterRouterContext_withNetI2pDataI2npDatabaseLookupMessage_withNetI2pDataRouterRouterIdentity_withNetI2pDataHash_, ctx, receivedMessage, from, fromHash)
}

NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob *create_NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob_initWithNetI2pRouterRouterContext_withNetI2pDataI2npDatabaseLookupMessage_withNetI2pDataRouterRouterIdentity_withNetI2pDataHash_(NetI2pRouterRouterContext *ctx, NetI2pDataI2npDatabaseLookupMessage *receivedMessage, NetI2pDataRouterRouterIdentity *from, NetI2pDataHash *fromHash) {
  J2OBJC_CREATE_IMPL(NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob, initWithNetI2pRouterRouterContext_withNetI2pDataI2npDatabaseLookupMessage_withNetI2pDataRouterRouterIdentity_withNetI2pDataHash_, ctx, receivedMessage, from, fromHash)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterNetworkdbKademliaHandleFloodfillDatabaseLookupMessageJob)
