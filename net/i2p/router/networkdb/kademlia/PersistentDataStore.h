//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/PersistentDataStore.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaPersistentDataStore")
#ifdef RESTRICT_NetI2pRouterNetworkdbKademliaPersistentDataStore
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaPersistentDataStore 0
#else
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaPersistentDataStore 1
#endif
#undef RESTRICT_NetI2pRouterNetworkdbKademliaPersistentDataStore

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterNetworkdbKademliaPersistentDataStore_) && (INCLUDE_ALL_NetI2pRouterNetworkdbKademliaPersistentDataStore || defined(INCLUDE_NetI2pRouterNetworkdbKademliaPersistentDataStore))
#define NetI2pRouterNetworkdbKademliaPersistentDataStore_

#define RESTRICT_NetI2pRouterNetworkdbKademliaTransientDataStore 1
#define INCLUDE_NetI2pRouterNetworkdbKademliaTransientDataStore 1
#include "net/i2p/router/networkdb/kademlia/TransientDataStore.h"

@class JavaIoFile;
@class NetI2pDataDatabaseEntry;
@class NetI2pDataHash;
@class NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade;
@class NetI2pRouterRouterContext;
@protocol JavaIoFileFilter;

@interface NetI2pRouterNetworkdbKademliaPersistentDataStore : NetI2pRouterNetworkdbKademliaTransientDataStore
@property (readonly, copy, class) NSString *DIR_PREFIX NS_SWIFT_NAME(DIR_PREFIX);
@property (readonly, class, strong) id<JavaIoFileFilter> RI_FILTER NS_SWIFT_NAME(RI_FILTER);

+ (NSString *)DIR_PREFIX;

+ (id<JavaIoFileFilter>)RI_FILTER;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                               withNSString:(NSString *)dbDir
withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)facade;

- (NetI2pDataDatabaseEntry *)getWithNetI2pDataHash:(NetI2pDataHash *)key;

- (NetI2pDataDatabaseEntry *)getWithNetI2pDataHash:(NetI2pDataHash *)key
                                       withBoolean:(jboolean)persist;

+ (JavaIoFile *)getRouterInfoFileWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                            withNetI2pDataHash:(NetI2pDataHash *)hash_;

- (jboolean)isInitialized;

- (jboolean)putWithNetI2pDataHash:(NetI2pDataHash *)key
      withNetI2pDataDatabaseEntry:(NetI2pDataDatabaseEntry *)data;

- (jboolean)putWithNetI2pDataHash:(NetI2pDataHash *)key
      withNetI2pDataDatabaseEntry:(NetI2pDataDatabaseEntry *)data
                      withBoolean:(jboolean)persist;

- (NetI2pDataDatabaseEntry *)removeWithNetI2pDataHash:(NetI2pDataHash *)key;

- (NetI2pDataDatabaseEntry *)removeWithNetI2pDataHash:(NetI2pDataHash *)key
                                          withBoolean:(jboolean)persist;

- (void)rescan;

- (void)restart;

- (void)stop;

#pragma mark Package-Private

+ (NetI2pDataHash *)getRouterInfoHashWithNSString:(NSString *)filename;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterNetworkdbKademliaPersistentDataStore)

inline NSString *NetI2pRouterNetworkdbKademliaPersistentDataStore_get_DIR_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterNetworkdbKademliaPersistentDataStore_DIR_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbKademliaPersistentDataStore, DIR_PREFIX, NSString *)

inline id<JavaIoFileFilter> NetI2pRouterNetworkdbKademliaPersistentDataStore_get_RI_FILTER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaIoFileFilter> NetI2pRouterNetworkdbKademliaPersistentDataStore_RI_FILTER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbKademliaPersistentDataStore, RI_FILTER, id<JavaIoFileFilter>)

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaPersistentDataStore_initWithNetI2pRouterRouterContext_withNSString_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_(NetI2pRouterNetworkdbKademliaPersistentDataStore *self, NetI2pRouterRouterContext *ctx, NSString *dbDir, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade);

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaPersistentDataStore *new_NetI2pRouterNetworkdbKademliaPersistentDataStore_initWithNetI2pRouterRouterContext_withNSString_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_(NetI2pRouterRouterContext *ctx, NSString *dbDir, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaPersistentDataStore *create_NetI2pRouterNetworkdbKademliaPersistentDataStore_initWithNetI2pRouterRouterContext_withNSString_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_(NetI2pRouterRouterContext *ctx, NSString *dbDir, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade);

FOUNDATION_EXPORT JavaIoFile *NetI2pRouterNetworkdbKademliaPersistentDataStore_getRouterInfoFileWithNetI2pRouterRouterContext_withNetI2pDataHash_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *hash_);

FOUNDATION_EXPORT NetI2pDataHash *NetI2pRouterNetworkdbKademliaPersistentDataStore_getRouterInfoHashWithNSString_(NSString *filename);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterNetworkdbKademliaPersistentDataStore)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaPersistentDataStore")
