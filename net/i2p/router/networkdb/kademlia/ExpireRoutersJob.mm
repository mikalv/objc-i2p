//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/ExpireRoutersJob.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Set.h"
#include "net/i2p/data/DatabaseEntry.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/data/router/RouterInfo.h"
#include "net/i2p/router/CommSystemFacade.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/networkdb/kademlia/ExpireRoutersJob.h"
#include "net/i2p/router/networkdb/kademlia/KademliaNetworkDatabaseFacade.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterNetworkdbKademliaExpireRoutersJob () {
 @public
  NetI2pUtilLog *_log_;
  NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *_facade_;
}

- (jint)expireKeys;

@end

J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaExpireRoutersJob, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaExpireRoutersJob, _facade_, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)

inline jlong NetI2pRouterNetworkdbKademliaExpireRoutersJob_get_RERUN_DELAY_MS(void);
#define NetI2pRouterNetworkdbKademliaExpireRoutersJob_RERUN_DELAY_MS 300000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterNetworkdbKademliaExpireRoutersJob, RERUN_DELAY_MS, jlong)

__attribute__((unused)) static jint NetI2pRouterNetworkdbKademliaExpireRoutersJob_expireKeys(NetI2pRouterNetworkdbKademliaExpireRoutersJob *self);

@implementation NetI2pRouterNetworkdbKademliaExpireRoutersJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)facade {
  NetI2pRouterNetworkdbKademliaExpireRoutersJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_(self, ctx, facade);
  return self;
}

- (NSString *)getName {
  return @"Expire Routers Job";
}

- (void)runJob {
  if ([((NetI2pRouterCommSystemFacade *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) commSystem])) getStatus] != JreLoadEnum(NetI2pRouterCommSystemFacade_Status, DISCONNECTED)) {
    jint removed = NetI2pRouterNetworkdbKademliaExpireRoutersJob_expireKeys(self);
    if ([((NetI2pUtilLog *) nil_chk(_log_)) shouldLogWithInt:NetI2pUtilLog_INFO]) [_log_ infoWithNSString:JreStrcat("$I", @"Routers expired: ", removed)];
  }
  [self requeueWithLong:NetI2pRouterNetworkdbKademliaExpireRoutersJob_RERUN_DELAY_MS];
}

- (jint)expireKeys {
  return NetI2pRouterNetworkdbKademliaExpireRoutersJob_expireKeys(self);
}

- (void)dealloc {
  RELEASE_(_log_);
  RELEASE_(_facade_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(runJob);
  methods[3].selector = @selector(expireKeys);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_log_", "LNetI2pUtilLog;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_facade_", "LNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "RERUN_DELAY_MS", "J", .constantValue.asLong = NetI2pRouterNetworkdbKademliaExpireRoutersJob_RERUN_DELAY_MS, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;LNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade;" };
  static const J2ObjcClassInfo _NetI2pRouterNetworkdbKademliaExpireRoutersJob = { "ExpireRoutersJob", "net.i2p.router.networkdb.kademlia", ptrTable, methods, fields, 7, 0x0, 4, 3, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterNetworkdbKademliaExpireRoutersJob;
}

@end

void NetI2pRouterNetworkdbKademliaExpireRoutersJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_(NetI2pRouterNetworkdbKademliaExpireRoutersJob *self, NetI2pRouterRouterContext *ctx, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade) {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, ctx);
  JreStrongAssign(&self->_log_, [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(ctx)) logManager])) getLogWithIOSClass:NetI2pRouterNetworkdbKademliaExpireRoutersJob_class_()]);
  JreStrongAssign(&self->_facade_, facade);
}

NetI2pRouterNetworkdbKademliaExpireRoutersJob *new_NetI2pRouterNetworkdbKademliaExpireRoutersJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_(NetI2pRouterRouterContext *ctx, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade) {
  J2OBJC_NEW_IMPL(NetI2pRouterNetworkdbKademliaExpireRoutersJob, initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_, ctx, facade)
}

NetI2pRouterNetworkdbKademliaExpireRoutersJob *create_NetI2pRouterNetworkdbKademliaExpireRoutersJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_(NetI2pRouterRouterContext *ctx, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade) {
  J2OBJC_CREATE_IMPL(NetI2pRouterNetworkdbKademliaExpireRoutersJob, initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_, ctx, facade)
}

jint NetI2pRouterNetworkdbKademliaExpireRoutersJob_expireKeys(NetI2pRouterNetworkdbKademliaExpireRoutersJob *self) {
  id<JavaUtilSet> keys = [((NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *) nil_chk(self->_facade_)) getAllRouters];
  [((id<JavaUtilSet>) nil_chk(keys)) removeWithId:[((NetI2pRouterRouterContext *) nil_chk([self getContext])) routerHash]];
  if ([keys size] < 150) return 0;
  jint removed = 0;
  for (NetI2pDataHash * __strong key in keys) {
    if (![((NetI2pRouterCommSystemFacade *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) commSystem])) isEstablishedWithNetI2pDataHash:key]) {
      NetI2pDataDatabaseEntry *e = [self->_facade_ lookupLocallyWithoutValidationWithNetI2pDataHash:key];
      if (e != nil && [e getType] == NetI2pDataDatabaseEntry_KEY_TYPE_ROUTERINFO) {
        @try {
          if ([self->_facade_ validateWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *) cast_chk(e, [NetI2pDataRouterRouterInfo class])] != nil) {
            [self->_facade_ dropAfterLookupFailedWithNetI2pDataHash:key];
            removed++;
          }
        }
        @catch (JavaLangIllegalArgumentException *iae) {
          [self->_facade_ dropAfterLookupFailedWithNetI2pDataHash:key];
          removed++;
        }
      }
    }
  }
  return removed;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterNetworkdbKademliaExpireRoutersJob)
