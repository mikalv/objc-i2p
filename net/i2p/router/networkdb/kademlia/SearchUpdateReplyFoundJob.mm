//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/SearchUpdateReplyFoundJob.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "net/i2p/data/DatabaseEntry.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/data/i2np/DatabaseSearchReplyMessage.h"
#include "net/i2p/data/i2np/DatabaseStoreMessage.h"
#include "net/i2p/data/i2np/I2NPMessage.h"
#include "net/i2p/data/router/RouterIdentity.h"
#include "net/i2p/data/router/RouterInfo.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/ProfileManager.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/TunnelInfo.h"
#include "net/i2p/router/networkdb/kademlia/FloodfillNetworkDatabaseFacade.h"
#include "net/i2p/router/networkdb/kademlia/KademliaNetworkDatabaseFacade.h"
#include "net/i2p/router/networkdb/kademlia/SearchJob.h"
#include "net/i2p/router/networkdb/kademlia/SearchState.h"
#include "net/i2p/router/networkdb/kademlia/SearchUpdateReplyFoundJob.h"
#include "net/i2p/router/networkdb/kademlia/UnsupportedCryptoException.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob () {
 @public
  NetI2pUtilLog *_log_;
  id<NetI2pDataI2npI2NPMessage> _message_;
  NetI2pDataHash *_peer_;
  NetI2pRouterNetworkdbKademliaSearchState *_state_;
  NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *_facade_;
  NetI2pRouterNetworkdbKademliaSearchJob *_job_;
  id<NetI2pRouterTunnelInfo> _outTunnel_;
  id<NetI2pRouterTunnelInfo> _replyTunnel_;
  jboolean _isFloodfillPeer_;
  jlong _sentOn_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, _message_, id<NetI2pDataI2npI2NPMessage>)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, _peer_, NetI2pDataHash *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, _state_, NetI2pRouterNetworkdbKademliaSearchState *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, _facade_, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, _job_, NetI2pRouterNetworkdbKademliaSearchJob *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, _outTunnel_, id<NetI2pRouterTunnelInfo>)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, _replyTunnel_, id<NetI2pRouterTunnelInfo>)

@implementation NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
                   withNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)peer
     withNetI2pRouterNetworkdbKademliaSearchState:(NetI2pRouterNetworkdbKademliaSearchState *)state
withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)facade
       withNetI2pRouterNetworkdbKademliaSearchJob:(NetI2pRouterNetworkdbKademliaSearchJob *)job {
  NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_(self, context, peer, state, facade, job);
  return self;
}

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
                   withNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)peer
     withNetI2pRouterNetworkdbKademliaSearchState:(NetI2pRouterNetworkdbKademliaSearchState *)state
withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *)facade
       withNetI2pRouterNetworkdbKademliaSearchJob:(NetI2pRouterNetworkdbKademliaSearchJob *)job
                       withNetI2pRouterTunnelInfo:(id<NetI2pRouterTunnelInfo>)outTunnel
                       withNetI2pRouterTunnelInfo:(id<NetI2pRouterTunnelInfo>)replyTunnel {
  NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterTunnelInfo_withNetI2pRouterTunnelInfo_(self, context, peer, state, facade, job, outTunnel, replyTunnel);
  return self;
}

- (NSString *)getName {
  return @"Update Reply Found for Kademlia Search";
}

- (void)runJob {
  if (_isFloodfillPeer_) [((NetI2pRouterNetworkdbKademliaSearchJob *) nil_chk(_job_)) decrementOutstandingFloodfillSearches];
  id<NetI2pDataI2npI2NPMessage> message = _message_;
  if ([((NetI2pUtilLog *) nil_chk(_log_)) shouldLogWithInt:NetI2pUtilLog_INFO]) [_log_ infoWithNSString:JreStrcat("J$$$$", [self getJobId], @": Reply from ", [((NetI2pDataHash *) nil_chk(_peer_)) toBase64], @" with message ", [[((id<NetI2pDataI2npI2NPMessage>) nil_chk(message)) java_getClass] getSimpleName])];
  jlong howLong = JavaLangSystem_currentTimeMillis() - _sentOn_;
  jint msgSize = 1024;
  if (_replyTunnel_ != nil) {
    for (jint i = 0; i < [_replyTunnel_ getLength]; i++) [((id<NetI2pRouterProfileManager>) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) profileManager])) tunnelDataPushedWithNetI2pDataHash:[_replyTunnel_ getPeerWithInt:i] withLong:howLong withInt:msgSize];
    [_replyTunnel_ incrementVerifiedBytesTransferredWithInt:msgSize];
  }
  if (_outTunnel_ != nil) {
    for (jint i = 0; i < [_outTunnel_ getLength]; i++) [((id<NetI2pRouterProfileManager>) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) profileManager])) tunnelDataPushedWithNetI2pDataHash:[_outTunnel_ getPeerWithInt:i] withLong:howLong withInt:msgSize];
    [_outTunnel_ incrementVerifiedBytesTransferredWithInt:msgSize];
  }
  if ([message isKindOfClass:[NetI2pDataI2npDatabaseStoreMessage class]]) {
    jlong timeToReply = [((NetI2pRouterNetworkdbKademliaSearchState *) nil_chk(_state_)) dataFoundWithNetI2pDataHash:_peer_];
    NetI2pDataI2npDatabaseStoreMessage *msg = (NetI2pDataI2npDatabaseStoreMessage *) cast_chk(message, [NetI2pDataI2npDatabaseStoreMessage class]);
    NetI2pDataDatabaseEntry *entry_ = [((NetI2pDataI2npDatabaseStoreMessage *) nil_chk(msg)) getEntry];
    @try {
      [((NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *) nil_chk(_facade_)) storeWithNetI2pDataHash:[msg getKey] withNetI2pDataDatabaseEntry:entry_];
      [((id<NetI2pRouterProfileManager>) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) profileManager])) dbLookupSuccessfulWithNetI2pDataHash:_peer_ withLong:timeToReply];
    }
    @catch (NetI2pRouterNetworkdbKademliaUnsupportedCryptoException *iae) {
      [((id<NetI2pRouterProfileManager>) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) profileManager])) dbLookupSuccessfulWithNetI2pDataHash:_peer_ withLong:timeToReply];
      [_state_ abort];
    }
    @catch (JavaLangIllegalArgumentException *iae) {
      if ([_log_ shouldLogWithInt:NetI2pUtilLog_WARN]) [_log_ warnWithNSString:JreStrcat("$@$", @"Peer ", _peer_, @" sent us invalid data: ") withJavaLangThrowable:iae];
      [((id<NetI2pRouterProfileManager>) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) profileManager])) dbLookupReplyWithNetI2pDataHash:_peer_ withInt:0 withInt:0 withInt:1 withInt:0 withLong:timeToReply];
    }
  }
  else if ([message isKindOfClass:[NetI2pDataI2npDatabaseSearchReplyMessage class]]) {
    [((NetI2pRouterNetworkdbKademliaSearchJob *) nil_chk(_job_)) replyFoundWithNetI2pDataI2npDatabaseSearchReplyMessage:(NetI2pDataI2npDatabaseSearchReplyMessage *) cast_chk(message, [NetI2pDataI2npDatabaseSearchReplyMessage class]) withNetI2pDataHash:_peer_];
  }
  else {
    if ([_log_ shouldLogWithInt:NetI2pUtilLog_ERROR]) [_log_ errorWithNSString:JreStrcat("J$@", [self getJobId], @": What?! Reply job matched a strange message: ", message)];
    return;
  }
  [((NetI2pRouterNetworkdbKademliaSearchJob *) nil_chk(_job_)) searchNext];
}

- (void)setMessageWithNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)message {
  JreStrongAssign(&_message_, message);
}

- (void)dealloc {
  RELEASE_(_log_);
  RELEASE_(_message_);
  RELEASE_(_peer_);
  RELEASE_(_state_);
  RELEASE_(_facade_);
  RELEASE_(_job_);
  RELEASE_(_outTunnel_);
  RELEASE_(_replyTunnel_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:withNetI2pDataRouterRouterInfo:withNetI2pRouterNetworkdbKademliaSearchState:withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:withNetI2pRouterNetworkdbKademliaSearchJob:);
  methods[1].selector = @selector(initWithNetI2pRouterRouterContext:withNetI2pDataRouterRouterInfo:withNetI2pRouterNetworkdbKademliaSearchState:withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade:withNetI2pRouterNetworkdbKademliaSearchJob:withNetI2pRouterTunnelInfo:withNetI2pRouterTunnelInfo:);
  methods[2].selector = @selector(getName);
  methods[3].selector = @selector(runJob);
  methods[4].selector = @selector(setMessageWithNetI2pDataI2npI2NPMessage:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_log_", "LNetI2pUtilLog;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_message_", "LNetI2pDataI2npI2NPMessage;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_peer_", "LNetI2pDataHash;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_state_", "LNetI2pRouterNetworkdbKademliaSearchState;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_facade_", "LNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_job_", "LNetI2pRouterNetworkdbKademliaSearchJob;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_outTunnel_", "LNetI2pRouterTunnelInfo;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_replyTunnel_", "LNetI2pRouterTunnelInfo;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_isFloodfillPeer_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_sentOn_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;LNetI2pDataRouterRouterInfo;LNetI2pRouterNetworkdbKademliaSearchState;LNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade;LNetI2pRouterNetworkdbKademliaSearchJob;", "LNetI2pRouterRouterContext;LNetI2pDataRouterRouterInfo;LNetI2pRouterNetworkdbKademliaSearchState;LNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade;LNetI2pRouterNetworkdbKademliaSearchJob;LNetI2pRouterTunnelInfo;LNetI2pRouterTunnelInfo;", "setMessage", "LNetI2pDataI2npI2NPMessage;" };
  static const J2ObjcClassInfo _NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob = { "SearchUpdateReplyFoundJob", "net.i2p.router.networkdb.kademlia", ptrTable, methods, fields, 7, 0x0, 5, 10, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob;
}

@end

void NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob *self, NetI2pRouterRouterContext *context, NetI2pDataRouterRouterInfo *peer, NetI2pRouterNetworkdbKademliaSearchState *state, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade, NetI2pRouterNetworkdbKademliaSearchJob *job) {
  NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterTunnelInfo_withNetI2pRouterTunnelInfo_(self, context, peer, state, facade, job, nil, nil);
}

NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob *new_NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_(NetI2pRouterRouterContext *context, NetI2pDataRouterRouterInfo *peer, NetI2pRouterNetworkdbKademliaSearchState *state, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade, NetI2pRouterNetworkdbKademliaSearchJob *job) {
  J2OBJC_NEW_IMPL(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_, context, peer, state, facade, job)
}

NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob *create_NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_(NetI2pRouterRouterContext *context, NetI2pDataRouterRouterInfo *peer, NetI2pRouterNetworkdbKademliaSearchState *state, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade, NetI2pRouterNetworkdbKademliaSearchJob *job) {
  J2OBJC_CREATE_IMPL(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_, context, peer, state, facade, job)
}

void NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterTunnelInfo_withNetI2pRouterTunnelInfo_(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob *self, NetI2pRouterRouterContext *context, NetI2pDataRouterRouterInfo *peer, NetI2pRouterNetworkdbKademliaSearchState *state, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade, NetI2pRouterNetworkdbKademliaSearchJob *job, id<NetI2pRouterTunnelInfo> outTunnel, id<NetI2pRouterTunnelInfo> replyTunnel) {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, context);
  JreStrongAssign(&self->_log_, [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(context)) logManager])) getLogWithIOSClass:NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob_class_()]);
  JreStrongAssign(&self->_peer_, [((NetI2pDataRouterRouterIdentity *) nil_chk([((NetI2pDataRouterRouterInfo *) nil_chk(peer)) getIdentity])) getHash]);
  self->_isFloodfillPeer_ = NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_isFloodfillWithNetI2pDataRouterRouterInfo_(peer);
  JreStrongAssign(&self->_state_, state);
  JreStrongAssign(&self->_facade_, facade);
  JreStrongAssign(&self->_job_, job);
  JreStrongAssign(&self->_outTunnel_, outTunnel);
  JreStrongAssign(&self->_replyTunnel_, replyTunnel);
  self->_sentOn_ = JavaLangSystem_currentTimeMillis();
}

NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob *new_NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterTunnelInfo_withNetI2pRouterTunnelInfo_(NetI2pRouterRouterContext *context, NetI2pDataRouterRouterInfo *peer, NetI2pRouterNetworkdbKademliaSearchState *state, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade, NetI2pRouterNetworkdbKademliaSearchJob *job, id<NetI2pRouterTunnelInfo> outTunnel, id<NetI2pRouterTunnelInfo> replyTunnel) {
  J2OBJC_NEW_IMPL(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterTunnelInfo_withNetI2pRouterTunnelInfo_, context, peer, state, facade, job, outTunnel, replyTunnel)
}

NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob *create_NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterTunnelInfo_withNetI2pRouterTunnelInfo_(NetI2pRouterRouterContext *context, NetI2pDataRouterRouterInfo *peer, NetI2pRouterNetworkdbKademliaSearchState *state, NetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade *facade, NetI2pRouterNetworkdbKademliaSearchJob *job, id<NetI2pRouterTunnelInfo> outTunnel, id<NetI2pRouterTunnelInfo> replyTunnel) {
  J2OBJC_CREATE_IMPL(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob, initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withNetI2pRouterNetworkdbKademliaSearchState_withNetI2pRouterNetworkdbKademliaKademliaNetworkDatabaseFacade_withNetI2pRouterNetworkdbKademliaSearchJob_withNetI2pRouterTunnelInfo_withNetI2pRouterTunnelInfo_, context, peer, state, facade, job, outTunnel, replyTunnel)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterNetworkdbKademliaSearchUpdateReplyFoundJob)
