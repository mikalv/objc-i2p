//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/SearchMessageSelector.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/Set.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/data/i2np/DatabaseSearchReplyMessage.h"
#include "net/i2p/data/i2np/DatabaseStoreMessage.h"
#include "net/i2p/data/i2np/I2NPMessage.h"
#include "net/i2p/data/router/RouterIdentity.h"
#include "net/i2p/data/router/RouterInfo.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/networkdb/kademlia/SearchMessageSelector.h"
#include "net/i2p/router/networkdb/kademlia/SearchState.h"
#include "net/i2p/util/Clock.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterNetworkdbKademliaSearchMessageSelector () {
 @public
  NetI2pUtilLog *_log_;
  NetI2pRouterRouterContext *_context_;
  NetI2pDataHash *_peer_;
  volatile_jboolean _found_;
  jint _id_;
  jlong _exp_;
  NetI2pRouterNetworkdbKademliaSearchState *_state_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchMessageSelector, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchMessageSelector, _context_, NetI2pRouterRouterContext *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchMessageSelector, _peer_, NetI2pDataHash *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaSearchMessageSelector, _state_, NetI2pRouterNetworkdbKademliaSearchState *)

inline JavaUtilConcurrentAtomicAtomicInteger *NetI2pRouterNetworkdbKademliaSearchMessageSelector_get___searchSelectorId(void);
static JavaUtilConcurrentAtomicAtomicInteger *NetI2pRouterNetworkdbKademliaSearchMessageSelector___searchSelectorId;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterNetworkdbKademliaSearchMessageSelector, __searchSelectorId, JavaUtilConcurrentAtomicAtomicInteger *)

J2OBJC_INITIALIZED_DEFN(NetI2pRouterNetworkdbKademliaSearchMessageSelector)

@implementation NetI2pRouterNetworkdbKademliaSearchMessageSelector

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
                   withNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)peer
                                         withLong:(jlong)expiration
     withNetI2pRouterNetworkdbKademliaSearchState:(NetI2pRouterNetworkdbKademliaSearchState *)state {
  NetI2pRouterNetworkdbKademliaSearchMessageSelector_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withLong_withNetI2pRouterNetworkdbKademliaSearchState_(self, context, peer, expiration, state);
  return self;
}

- (NSString *)description {
  return JreStrcat("$I$@$@", @"Search selector [", _id_, @"] looking for a reply from ", _peer_, @" with regards to ", [((NetI2pRouterNetworkdbKademliaSearchState *) nil_chk(_state_)) getTarget]);
}

- (jboolean)continueMatching {
  jboolean expired = [((NetI2pUtilClock *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) clock])) now] > _exp_;
  if (expired) return false;
  if ([((id<JavaUtilSet>) nil_chk([((NetI2pRouterNetworkdbKademliaSearchState *) nil_chk(_state_)) getPending])) size] > 1) return true;
  if (JreLoadVolatileBoolean(&_found_)) {
    if ([((NetI2pUtilLog *) nil_chk(_log_)) shouldLogWithInt:NetI2pUtilLog_DEBUG]) [_log_ debugWithNSString:JreStrcat("CI$@$@", '[', _id_, @"] Dont continue matching! looking for a reply from ", _peer_, @" with regards to ", [_state_ getTarget])];
    return false;
  }
  else {
    return true;
  }
}

- (jlong)getExpiration {
  return _exp_;
}

- (jboolean)isMatchWithNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)message {
  if ([((NetI2pUtilLog *) nil_chk(_log_)) shouldLogWithInt:NetI2pUtilLog_DEBUG]) [_log_ debugWithNSString:JreStrcat("CI$$$@$@C", '[', _id_, @"] isMatch(", [[((id<NetI2pDataI2npI2NPMessage>) nil_chk(message)) java_getClass] getName], @") [want dbStore or dbSearchReply from ", _peer_, @" for ", [((NetI2pRouterNetworkdbKademliaSearchState *) nil_chk(_state_)) getTarget], ']')];
  if ([message isKindOfClass:[NetI2pDataI2npDatabaseStoreMessage class]]) {
    NetI2pDataI2npDatabaseStoreMessage *msg = (NetI2pDataI2npDatabaseStoreMessage *) cast_chk(message, [NetI2pDataI2npDatabaseStoreMessage class]);
    if ([((NetI2pDataHash *) nil_chk([((NetI2pDataI2npDatabaseStoreMessage *) nil_chk(msg)) getKey])) isEqual:[((NetI2pRouterNetworkdbKademliaSearchState *) nil_chk(_state_)) getTarget]]) {
      if ([_log_ shouldLogWithInt:NetI2pUtilLog_DEBUG]) [_log_ debugWithNSString:JreStrcat("CI$", '[', _id_, @"] Was a DBStore of the key we're looking for.  May not have been from who we're checking against though, but DBStore doesn't include that info")];
      JreAssignVolatileBoolean(&_found_, true);
      return true;
    }
    else {
      if ([_log_ shouldLogWithInt:NetI2pUtilLog_DEBUG]) [_log_ debugWithNSString:JreStrcat("CI$", '[', _id_, @"] DBStore of a key we're not looking for")];
      return false;
    }
  }
  else if ([message isKindOfClass:[NetI2pDataI2npDatabaseSearchReplyMessage class]]) {
    NetI2pDataI2npDatabaseSearchReplyMessage *msg = (NetI2pDataI2npDatabaseSearchReplyMessage *) cast_chk(message, [NetI2pDataI2npDatabaseSearchReplyMessage class]);
    if ([((NetI2pDataHash *) nil_chk(_peer_)) isEqual:[((NetI2pDataI2npDatabaseSearchReplyMessage *) nil_chk(msg)) getFromHash]]) {
      if ([((NetI2pDataHash *) nil_chk([msg getSearchKey])) isEqual:[((NetI2pRouterNetworkdbKademliaSearchState *) nil_chk(_state_)) getTarget]]) {
        if ([_log_ shouldLogWithInt:NetI2pUtilLog_DEBUG]) [_log_ debugWithNSString:JreStrcat("CI$", '[', _id_, @"] Was a DBSearchReply from who we're checking with for a key we're looking for")];
        JreAssignVolatileBoolean(&_found_, true);
        return true;
      }
      else {
        if ([_log_ shouldLogWithInt:NetI2pUtilLog_DEBUG]) [_log_ debugWithNSString:JreStrcat("CI$", '[', _id_, @"] Was a DBSearchReply from who we're checking with but NOT for the key we're looking for")];
        return false;
      }
    }
    else {
      if ([_log_ shouldLogWithInt:NetI2pUtilLog_DEBUG]) [_log_ debugWithNSString:JreStrcat("CI$@$@C", '[', _id_, @"] DBSearchReply from someone we are not checking with [", [msg getFromHash], @", not ", [((NetI2pRouterNetworkdbKademliaSearchState *) nil_chk(_state_)) getTarget], ']')];
      return false;
    }
  }
  else {
    return false;
  }
}

- (void)dealloc {
  RELEASE_(_log_);
  RELEASE_(_context_);
  RELEASE_(_peer_);
  RELEASE_(_state_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:withNetI2pDataRouterRouterInfo:withLong:withNetI2pRouterNetworkdbKademliaSearchState:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(continueMatching);
  methods[3].selector = @selector(getExpiration);
  methods[4].selector = @selector(isMatchWithNetI2pDataI2npI2NPMessage:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_log_", "LNetI2pUtilLog;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_context_", "LNetI2pRouterRouterContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "__searchSelectorId", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "_peer_", "LNetI2pDataHash;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_found_", "Z", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "_id_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_exp_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_state_", "LNetI2pRouterNetworkdbKademliaSearchState;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;LNetI2pDataRouterRouterInfo;JLNetI2pRouterNetworkdbKademliaSearchState;", "toString", "isMatch", "LNetI2pDataI2npI2NPMessage;", &NetI2pRouterNetworkdbKademliaSearchMessageSelector___searchSelectorId };
  static const J2ObjcClassInfo _NetI2pRouterNetworkdbKademliaSearchMessageSelector = { "SearchMessageSelector", "net.i2p.router.networkdb.kademlia", ptrTable, methods, fields, 7, 0x0, 5, 8, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterNetworkdbKademliaSearchMessageSelector;
}

+ (void)initialize {
  if (self == [NetI2pRouterNetworkdbKademliaSearchMessageSelector class]) {
    JreStrongAssignAndConsume(&NetI2pRouterNetworkdbKademliaSearchMessageSelector___searchSelectorId, new_JavaUtilConcurrentAtomicAtomicInteger_init());
    J2OBJC_SET_INITIALIZED(NetI2pRouterNetworkdbKademliaSearchMessageSelector)
  }
}

@end

void NetI2pRouterNetworkdbKademliaSearchMessageSelector_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withLong_withNetI2pRouterNetworkdbKademliaSearchState_(NetI2pRouterNetworkdbKademliaSearchMessageSelector *self, NetI2pRouterRouterContext *context, NetI2pDataRouterRouterInfo *peer, jlong expiration, NetI2pRouterNetworkdbKademliaSearchState *state) {
  NSObject_init(self);
  JreStrongAssign(&self->_context_, context);
  JreStrongAssign(&self->_log_, [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(context)) logManager])) getLogWithIOSClass:NetI2pRouterNetworkdbKademliaSearchMessageSelector_class_()]);
  JreStrongAssign(&self->_peer_, [((NetI2pDataRouterRouterIdentity *) nil_chk([((NetI2pDataRouterRouterInfo *) nil_chk(peer)) getIdentity])) getHash]);
  self->_exp_ = expiration;
  JreStrongAssign(&self->_state_, state);
  self->_id_ = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(NetI2pRouterNetworkdbKademliaSearchMessageSelector___searchSelectorId)) incrementAndGet];
  if ([((NetI2pUtilLog *) nil_chk(self->_log_)) shouldLogWithInt:NetI2pUtilLog_DEBUG]) [self->_log_ debugWithNSString:JreStrcat("CI$$", '[', self->_id_, @"] Created: ", [self description])];
}

NetI2pRouterNetworkdbKademliaSearchMessageSelector *new_NetI2pRouterNetworkdbKademliaSearchMessageSelector_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withLong_withNetI2pRouterNetworkdbKademliaSearchState_(NetI2pRouterRouterContext *context, NetI2pDataRouterRouterInfo *peer, jlong expiration, NetI2pRouterNetworkdbKademliaSearchState *state) {
  J2OBJC_NEW_IMPL(NetI2pRouterNetworkdbKademliaSearchMessageSelector, initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withLong_withNetI2pRouterNetworkdbKademliaSearchState_, context, peer, expiration, state)
}

NetI2pRouterNetworkdbKademliaSearchMessageSelector *create_NetI2pRouterNetworkdbKademliaSearchMessageSelector_initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withLong_withNetI2pRouterNetworkdbKademliaSearchState_(NetI2pRouterRouterContext *context, NetI2pDataRouterRouterInfo *peer, jlong expiration, NetI2pRouterNetworkdbKademliaSearchState *state) {
  J2OBJC_CREATE_IMPL(NetI2pRouterNetworkdbKademliaSearchMessageSelector, initWithNetI2pRouterRouterContext_withNetI2pDataRouterRouterInfo_withLong_withNetI2pRouterNetworkdbKademliaSearchState_, context, peer, expiration, state)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterNetworkdbKademliaSearchMessageSelector)
