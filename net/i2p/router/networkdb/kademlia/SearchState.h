//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/SearchState.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaSearchState")
#ifdef RESTRICT_NetI2pRouterNetworkdbKademliaSearchState
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaSearchState 0
#else
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaSearchState 1
#endif
#undef RESTRICT_NetI2pRouterNetworkdbKademliaSearchState

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterNetworkdbKademliaSearchState_) && (INCLUDE_ALL_NetI2pRouterNetworkdbKademliaSearchState || defined(INCLUDE_NetI2pRouterNetworkdbKademliaSearchState))
#define NetI2pRouterNetworkdbKademliaSearchState_

@class NetI2pDataHash;
@class NetI2pRouterRouterContext;
@protocol JavaUtilCollection;
@protocol JavaUtilSet;

@interface NetI2pRouterNetworkdbKademliaSearchState : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
                                         withNetI2pDataHash:(NetI2pDataHash *)key;

- (void)abort;

- (void)addPendingWithJavaUtilCollection:(id<JavaUtilCollection>)pending;

- (void)addPendingWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)complete;

- (jboolean)completed;

- (jlong)dataFoundWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (id<JavaUtilSet>)getAttempted;

- (id<JavaUtilSet>)getClosestAttemptedWithInt:(jint)max;

- (id<JavaUtilSet>)getFailed;

- (id<JavaUtilSet>)getPending;

- (id<JavaUtilSet>)getRepliedPeers;

- (id<JavaUtilSet>)getSuccessful;

- (NetI2pDataHash *)getTarget;

- (jlong)getWhenCompleted;

- (jlong)getWhenStarted;

- (jboolean)isAborted;

- (void)removePendingWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (jlong)replyFoundWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)replyTimeoutWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (NSString *)description;

- (jboolean)wasAttemptedWithNetI2pDataHash:(NetI2pDataHash *)peer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterNetworkdbKademliaSearchState)

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaSearchState_initWithNetI2pRouterRouterContext_withNetI2pDataHash_(NetI2pRouterNetworkdbKademliaSearchState *self, NetI2pRouterRouterContext *context, NetI2pDataHash *key);

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaSearchState *new_NetI2pRouterNetworkdbKademliaSearchState_initWithNetI2pRouterRouterContext_withNetI2pDataHash_(NetI2pRouterRouterContext *context, NetI2pDataHash *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterNetworkdbKademliaSearchState *create_NetI2pRouterNetworkdbKademliaSearchState_initWithNetI2pRouterRouterContext_withNetI2pDataHash_(NetI2pRouterRouterContext *context, NetI2pDataHash *key);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterNetworkdbKademliaSearchState)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaSearchState")
