//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/FloodSearchJob.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaFloodSearchJob")
#ifdef RESTRICT_NetI2pRouterNetworkdbKademliaFloodSearchJob
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaFloodSearchJob 0
#else
#define INCLUDE_ALL_NetI2pRouterNetworkdbKademliaFloodSearchJob 1
#endif
#undef RESTRICT_NetI2pRouterNetworkdbKademliaFloodSearchJob

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterNetworkdbKademliaFloodSearchJob_) && (INCLUDE_ALL_NetI2pRouterNetworkdbKademliaFloodSearchJob || defined(INCLUDE_NetI2pRouterNetworkdbKademliaFloodSearchJob))
#define NetI2pRouterNetworkdbKademliaFloodSearchJob_

#define RESTRICT_NetI2pRouterJobImpl 1
#define INCLUDE_NetI2pRouterJobImpl 1
#include "net/i2p/router/JobImpl.h"

@class JavaUtilConcurrentAtomicAtomicInteger;
@class NetI2pDataHash;
@class NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade;
@class NetI2pRouterRouterContext;
@class NetI2pUtilLog;
@protocol JavaUtilList;
@protocol NetI2pRouterJob;

@interface NetI2pRouterNetworkdbKademliaFloodSearchJob : NetI2pRouterJobImpl {
 @public
  NetI2pUtilLog *_log_;
  NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *_facade_;
  NetI2pDataHash *_key_;
  id<JavaUtilList> _onFind_;
  id<JavaUtilList> _onFailed_;
  jlong _expiration_;
  jint _timeoutMs_;
  jboolean _isLease_;
  JavaUtilConcurrentAtomicAtomicInteger *_lookupsRemaining_;
  volatile_jboolean _dead_;
  jlong _created_;
  jboolean _success_;
}
@property (readonly, class) jint CONCURRENT_SEARCHES NS_SWIFT_NAME(CONCURRENT_SEARCHES);

+ (jint)CONCURRENT_SEARCHES;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade:(NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *)facade
                                         withNetI2pDataHash:(NetI2pDataHash *)key
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onFind
                                        withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailed
                                                    withInt:(jint)timeoutMs
                                                withBoolean:(jboolean)isLease;

- (jlong)getCreated;

- (jlong)getExpiration;

- (NSString *)getName;

- (void)runJob;

#pragma mark Protected

- (jint)decrementRemaining;

- (NetI2pDataHash *)getKey;

- (jint)getLookupsRemaining;

#pragma mark Package-Private

- (void)addDeferredWithNetI2pRouterJob:(id<NetI2pRouterJob>)onFind
                   withNetI2pRouterJob:(id<NetI2pRouterJob>)onFailed
                              withLong:(jlong)timeoutMs
                           withBoolean:(jboolean)isLease;

- (void)failed;

- (void)success;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterNetworkdbKademliaFloodSearchJob)

J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaFloodSearchJob, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaFloodSearchJob, _facade_, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaFloodSearchJob, _key_, NetI2pDataHash *)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaFloodSearchJob, _onFind_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaFloodSearchJob, _onFailed_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaFloodSearchJob, _lookupsRemaining_, JavaUtilConcurrentAtomicAtomicInteger *)

inline jint NetI2pRouterNetworkdbKademliaFloodSearchJob_get_CONCURRENT_SEARCHES(void);
#define NetI2pRouterNetworkdbKademliaFloodSearchJob_CONCURRENT_SEARCHES 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterNetworkdbKademliaFloodSearchJob, CONCURRENT_SEARCHES, jint)

FOUNDATION_EXPORT void NetI2pRouterNetworkdbKademliaFloodSearchJob_initWithNetI2pRouterRouterContext_withNetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade_withNetI2pDataHash_withNetI2pRouterJob_withNetI2pRouterJob_withInt_withBoolean_(NetI2pRouterNetworkdbKademliaFloodSearchJob *self, NetI2pRouterRouterContext *ctx, NetI2pRouterNetworkdbKademliaFloodfillNetworkDatabaseFacade *facade, NetI2pDataHash *key, id<NetI2pRouterJob> onFind, id<NetI2pRouterJob> onFailed, jint timeoutMs, jboolean isLease);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterNetworkdbKademliaFloodSearchJob)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterNetworkdbKademliaFloodSearchJob")
