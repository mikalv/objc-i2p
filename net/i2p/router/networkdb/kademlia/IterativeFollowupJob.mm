//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/networkdb/kademlia/IterativeFollowupJob.java
//

#include "J2ObjC_source.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/networkdb/kademlia/IterativeFollowupJob.h"
#include "net/i2p/router/networkdb/kademlia/IterativeSearchJob.h"
#include "net/i2p/router/networkdb/kademlia/SingleSearchJob.h"

@interface NetI2pRouterNetworkdbKademliaIterativeFollowupJob () {
 @public
  NetI2pRouterNetworkdbKademliaIterativeSearchJob *_search_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterNetworkdbKademliaIterativeFollowupJob, _search_, NetI2pRouterNetworkdbKademliaIterativeSearchJob *)

@implementation NetI2pRouterNetworkdbKademliaIterativeFollowupJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                               withNetI2pDataHash:(NetI2pDataHash *)key
                               withNetI2pDataHash:(NetI2pDataHash *)to
withNetI2pRouterNetworkdbKademliaIterativeSearchJob:(NetI2pRouterNetworkdbKademliaIterativeSearchJob *)search {
  NetI2pRouterNetworkdbKademliaIterativeFollowupJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_(self, ctx, key, to, search);
  return self;
}

- (NSString *)getName {
  return @"Iterative search key from DSRM";
}

- (void)success {
  [((NetI2pRouterNetworkdbKademliaIterativeSearchJob *) nil_chk(_search_)) newPeerToTryWithNetI2pDataHash:_key_];
  [super success];
}

- (void)dealloc {
  RELEASE_(_search_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:withNetI2pDataHash:withNetI2pDataHash:withNetI2pRouterNetworkdbKademliaIterativeSearchJob:);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(success);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_search_", "LNetI2pRouterNetworkdbKademliaIterativeSearchJob;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;LNetI2pDataHash;LNetI2pDataHash;LNetI2pRouterNetworkdbKademliaIterativeSearchJob;" };
  static const J2ObjcClassInfo _NetI2pRouterNetworkdbKademliaIterativeFollowupJob = { "IterativeFollowupJob", "net.i2p.router.networkdb.kademlia", ptrTable, methods, fields, 7, 0x0, 3, 1, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterNetworkdbKademliaIterativeFollowupJob;
}

@end

void NetI2pRouterNetworkdbKademliaIterativeFollowupJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_(NetI2pRouterNetworkdbKademliaIterativeFollowupJob *self, NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataHash *to, NetI2pRouterNetworkdbKademliaIterativeSearchJob *search) {
  NetI2pRouterNetworkdbKademliaSingleSearchJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataHash_(self, ctx, key, to);
  JreStrongAssign(&self->_search_, search);
}

NetI2pRouterNetworkdbKademliaIterativeFollowupJob *new_NetI2pRouterNetworkdbKademliaIterativeFollowupJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataHash *to, NetI2pRouterNetworkdbKademliaIterativeSearchJob *search) {
  J2OBJC_NEW_IMPL(NetI2pRouterNetworkdbKademliaIterativeFollowupJob, initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_, ctx, key, to, search)
}

NetI2pRouterNetworkdbKademliaIterativeFollowupJob *create_NetI2pRouterNetworkdbKademliaIterativeFollowupJob_initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_(NetI2pRouterRouterContext *ctx, NetI2pDataHash *key, NetI2pDataHash *to, NetI2pRouterNetworkdbKademliaIterativeSearchJob *search) {
  J2OBJC_CREATE_IMPL(NetI2pRouterNetworkdbKademliaIterativeFollowupJob, initWithNetI2pRouterRouterContext_withNetI2pDataHash_withNetI2pDataHash_withNetI2pRouterNetworkdbKademliaIterativeSearchJob_, ctx, key, to, search)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterNetworkdbKademliaIterativeFollowupJob)
