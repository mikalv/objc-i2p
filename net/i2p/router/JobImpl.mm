//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/JobImpl.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/JobQueue.h"
#include "net/i2p/router/JobTiming.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/util/Clock.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface NetI2pRouterJobImpl () {
 @public
  NetI2pRouterRouterContext *_context_;
  NetI2pRouterJobTiming *_timing_;
  jlong _id_;
  volatile_jlong _madeReadyOn_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterJobImpl, _context_, NetI2pRouterRouterContext *)
J2OBJC_FIELD_SETTER(NetI2pRouterJobImpl, _timing_, NetI2pRouterJobTiming *)

inline JavaUtilConcurrentAtomicAtomicLong *NetI2pRouterJobImpl_get__idSrc(void);
static JavaUtilConcurrentAtomicAtomicLong *NetI2pRouterJobImpl__idSrc;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterJobImpl, _idSrc, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static IOSObjectArray *NetI2pRouterJobImpl__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *NetI2pRouterJobImpl__Annotations$1(void);

J2OBJC_INITIALIZED_DEFN(NetI2pRouterJobImpl)

@implementation NetI2pRouterJobImpl

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, context);
  return self;
}

- (jlong)getJobId {
  return _id_;
}

- (NetI2pRouterJobTiming *)getTiming {
  return _timing_;
}

- (NetI2pRouterRouterContext *)getContext {
  return _context_;
}

- (NSString *)description {
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(128);
  [buf appendWithNSString:[[self java_getClass] getSimpleName]];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@": Job "])) appendWithLong:_id_])) appendWithNSString:@": "])) appendWithNSString:[self getName]];
  return [buf description];
}

- (void)addedToQueue {
}

- (JavaLangException *)getAddedBy {
  return nil;
}

- (jlong)getMadeReadyOn {
  return JreLoadVolatileLong(&_madeReadyOn_);
}

- (void)madeReady {
  JreAssignVolatileLong(&_madeReadyOn_, [((NetI2pUtilClock *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) clock])) now]);
}

- (void)dropped {
}

- (void)requeueWithLong:(jlong)delayMs {
  [((NetI2pRouterJobTiming *) nil_chk([self getTiming])) setStartAfterWithLong:[((NetI2pUtilClock *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) clock])) now] + delayMs];
  [((NetI2pRouterJobQueue *) nil_chk([_context_ jobQueue])) addJobWithNetI2pRouterJob:self];
}

- (void)dealloc {
  RELEASE_(_context_);
  RELEASE_(_timing_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pRouterJobTiming;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pRouterRouterContext;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, 2, -1 },
    { NULL, "LJavaLangException;", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:);
  methods[1].selector = @selector(getJobId);
  methods[2].selector = @selector(getTiming);
  methods[3].selector = @selector(getContext);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(addedToQueue);
  methods[6].selector = @selector(getAddedBy);
  methods[7].selector = @selector(getMadeReadyOn);
  methods[8].selector = @selector(madeReady);
  methods[9].selector = @selector(dropped);
  methods[10].selector = @selector(requeueWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_context_", "LNetI2pRouterRouterContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_timing_", "LNetI2pRouterJobTiming;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_idSrc", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "_id_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_madeReadyOn_", "J", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;", "toString", (void *)&NetI2pRouterJobImpl__Annotations$0, (void *)&NetI2pRouterJobImpl__Annotations$1, "requeue", "J", &NetI2pRouterJobImpl__idSrc };
  static const J2ObjcClassInfo _NetI2pRouterJobImpl = { "JobImpl", "net.i2p.router", ptrTable, methods, fields, 7, 0x401, 11, 5, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterJobImpl;
}

+ (void)initialize {
  if (self == [NetI2pRouterJobImpl class]) {
    JreStrongAssignAndConsume(&NetI2pRouterJobImpl__idSrc, new_JavaUtilConcurrentAtomicAtomicLong_init());
    J2OBJC_SET_INITIALIZED(NetI2pRouterJobImpl)
  }
}

@end

void NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(NetI2pRouterJobImpl *self, NetI2pRouterRouterContext *context) {
  NSObject_init(self);
  JreStrongAssign(&self->_context_, context);
  JreStrongAssignAndConsume(&self->_timing_, new_NetI2pRouterJobTiming_initWithNetI2pRouterRouterContext_(context));
  self->_id_ = [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(NetI2pRouterJobImpl__idSrc)) incrementAndGet];
}

IOSObjectArray *NetI2pRouterJobImpl__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pRouterJobImpl__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterJobImpl)
