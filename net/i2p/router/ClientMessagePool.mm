//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/ClientMessagePool.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "net/i2p/data/Destination.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/router/ClientManagerFacade.h"
#include "net/i2p/router/ClientMessage.h"
#include "net/i2p/router/ClientMessagePool.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/message/OutboundCache.h"
#include "net/i2p/router/message/OutboundClientMessageOneShotJob.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterClientMessagePool () {
 @public
  NetI2pUtilLog *_log_;
  NetI2pRouterRouterContext *_context_;
  NetI2pRouterMessageOutboundCache *_cache_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterClientMessagePool, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pRouterClientMessagePool, _context_, NetI2pRouterRouterContext *)
J2OBJC_FIELD_SETTER(NetI2pRouterClientMessagePool, _cache_, NetI2pRouterMessageOutboundCache *)

@implementation NetI2pRouterClientMessagePool

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context {
  NetI2pRouterClientMessagePool_initWithNetI2pRouterRouterContext_(self, context);
  return self;
}

- (void)shutdown {
  [((NetI2pRouterMessageOutboundCache *) nil_chk(_cache_)) clearAllCaches];
}

- (void)restart {
  [self shutdown];
}

- (void)addWithNetI2pRouterClientMessage:(NetI2pRouterClientMessage *)msg {
  [self addWithNetI2pRouterClientMessage:msg withBoolean:false];
}

- (void)addWithNetI2pRouterClientMessage:(NetI2pRouterClientMessage *)msg
                             withBoolean:(jboolean)isDefinitelyRemote {
  if (!isDefinitelyRemote || ([((NetI2pRouterClientManagerFacade *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) clientManager])) isLocalWithNetI2pDataDestination:[((NetI2pRouterClientMessage *) nil_chk(msg)) getDestination]]) || ([((NetI2pRouterClientManagerFacade *) nil_chk([_context_ clientManager])) isLocalWithNetI2pDataHash:[msg getDestinationHash]])) {
    if ([((NetI2pUtilLog *) nil_chk(_log_)) shouldLogWithInt:NetI2pUtilLog_DEBUG]) [_log_ debugWithNSString:@"Adding message for local delivery"];
    [((NetI2pRouterClientManagerFacade *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) clientManager])) messageReceivedWithNetI2pRouterClientMessage:msg];
  }
  else {
    if ([((NetI2pUtilLog *) nil_chk(_log_)) shouldLogWithInt:NetI2pUtilLog_DEBUG]) [_log_ debugWithNSString:@"Adding message for remote delivery"];
    NetI2pRouterMessageOutboundClientMessageOneShotJob *j = create_NetI2pRouterMessageOutboundClientMessageOneShotJob_initWithNetI2pRouterRouterContext_withNetI2pRouterMessageOutboundCache_withNetI2pRouterClientMessage_(_context_, _cache_, msg);
    [j runJob];
  }
}

- (void)dealloc {
  RELEASE_(_log_);
  RELEASE_(_context_);
  RELEASE_(_cache_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:);
  methods[1].selector = @selector(shutdown);
  methods[2].selector = @selector(restart);
  methods[3].selector = @selector(addWithNetI2pRouterClientMessage:);
  methods[4].selector = @selector(addWithNetI2pRouterClientMessage:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_log_", "LNetI2pUtilLog;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_context_", "LNetI2pRouterRouterContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_cache_", "LNetI2pRouterMessageOutboundCache;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;", "add", "LNetI2pRouterClientMessage;", "LNetI2pRouterClientMessage;Z" };
  static const J2ObjcClassInfo _NetI2pRouterClientMessagePool = { "ClientMessagePool", "net.i2p.router", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterClientMessagePool;
}

@end

void NetI2pRouterClientMessagePool_initWithNetI2pRouterRouterContext_(NetI2pRouterClientMessagePool *self, NetI2pRouterRouterContext *context) {
  NSObject_init(self);
  JreStrongAssign(&self->_context_, context);
  JreStrongAssign(&self->_log_, [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(self->_context_)) logManager])) getLogWithIOSClass:NetI2pRouterClientMessagePool_class_()]);
  JreStrongAssignAndConsume(&self->_cache_, new_NetI2pRouterMessageOutboundCache_initWithNetI2pRouterRouterContext_(self->_context_));
  NetI2pRouterMessageOutboundClientMessageOneShotJob_init__WithNetI2pRouterRouterContext_(self->_context_);
}

NetI2pRouterClientMessagePool *new_NetI2pRouterClientMessagePool_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) {
  J2OBJC_NEW_IMPL(NetI2pRouterClientMessagePool, initWithNetI2pRouterRouterContext_, context)
}

NetI2pRouterClientMessagePool *create_NetI2pRouterClientMessagePool_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) {
  J2OBJC_CREATE_IMPL(NetI2pRouterClientMessagePool, initWithNetI2pRouterRouterContext_, context)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterClientMessagePool)
