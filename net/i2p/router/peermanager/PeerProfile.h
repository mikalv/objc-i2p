//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/peermanager/PeerProfile.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterPeermanagerPeerProfile")
#ifdef RESTRICT_NetI2pRouterPeermanagerPeerProfile
#define INCLUDE_ALL_NetI2pRouterPeermanagerPeerProfile 0
#else
#define INCLUDE_ALL_NetI2pRouterPeermanagerPeerProfile 1
#endif
#undef RESTRICT_NetI2pRouterPeermanagerPeerProfile

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterPeermanagerPeerProfile_) && (INCLUDE_ALL_NetI2pRouterPeermanagerPeerProfile || defined(INCLUDE_NetI2pRouterPeermanagerPeerProfile))
#define NetI2pRouterPeermanagerPeerProfile_

@class NetI2pDataHash;
@class NetI2pRouterPeermanagerDBHistory;
@class NetI2pRouterPeermanagerTunnelHistory;
@class NetI2pRouterRouterContext;
@class NetI2pStatRateStat;

@interface NetI2pRouterPeermanagerPeerProfile : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
                                         withNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)coalesceStats;

- (jboolean)isEqual:(id)obj;

- (void)expandDBProfile;

- (void)expandProfile;

- (jint)getCapacityBonus;

- (jfloat)getCapacityValue;

- (NetI2pRouterPeermanagerDBHistory *)getDBHistory;

- (NetI2pStatRateStat *)getDbIntroduction;

- (NetI2pStatRateStat *)getDbResponseTime;

- (jlong)getFirstHeardAbout;

- (jint)getIntegrationBonus;

- (jfloat)getIntegrationValue;

- (jboolean)getIsActive;

- (jboolean)getIsActiveWithLong:(jlong)period;

- (jboolean)getIsExpanded;

- (jboolean)getIsExpandedDB;

- (jboolean)getIsFailing;

- (jlong)getLastHeardAbout;

- (jlong)getLastHeardFrom;

- (jlong)getLastSendFailed;

- (jlong)getLastSendSuccessful;

- (jfloat)getPeakThroughputKBps;

- (jfloat)getPeakTunnel1mThroughputKBps;

- (jfloat)getPeakTunnelThroughputKBps;

- (NetI2pDataHash *)getPeer;

- (jint)getSpeedBonus;

- (jfloat)getSpeedValue;

- (NetI2pStatRateStat *)getTunnelCreateResponseTime;

- (NetI2pRouterPeermanagerTunnelHistory *)getTunnelHistory;

- (NetI2pStatRateStat *)getTunnelTestResponseTime;

- (jfloat)getTunnelTestTimeAverage;

- (NSUInteger)hash;

- (void)setCapacityBonusWithInt:(jint)bonus;

- (void)setDBHistoryWithNetI2pRouterPeermanagerDBHistory:(NetI2pRouterPeermanagerDBHistory *)hist;

- (void)setIntegrationBonusWithInt:(jint)bonus;

- (void)setLastHeardAboutWithLong:(jlong)when;

- (void)setLastHeardFromWithLong:(jlong)when;

- (void)setLastSendFailedWithLong:(jlong)when;

- (void)setLastSendSuccessfulWithLong:(jlong)when;

- (void)setPeakThroughputKBpsWithFloat:(jfloat)kBps;

- (void)setPeakTunnel1mThroughputKBpsWithFloat:(jfloat)kBps;

- (void)setPeakTunnelThroughputKBpsWithFloat:(jfloat)kBps;

- (void)setSpeedBonusWithInt:(jint)bonus;

- (void)setTunnelHistoryWithNetI2pRouterPeermanagerTunnelHistory:(NetI2pRouterPeermanagerTunnelHistory *)history;

- (NSString *)description;

#pragma mark Package-Private

- (void)coalesceOnly;

- (void)dataPushedWithInt:(jint)size;

- (void)dataPushed1mWithInt:(jint)size;

- (NetI2pRouterRouterContext *)getContext;

- (jint)getXORDistance;

- (jboolean)isEstablished;

- (jboolean)isSameCountry;

- (void)setFirstHeardAboutWithLong:(jlong)when;

- (void)setIsFailingWithBoolean:(jboolean)val;

- (void)setTunnelTestTimeAverageWithFloat:(jfloat)avg;

- (void)tunnelDataTransferredWithLong:(jlong)tunnelByteLifetime;

- (void)updateTunnelTestTimeAverageWithLong:(jlong)ms;

- (void)updateValues;

- (jboolean)wasUnreachable;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterPeermanagerPeerProfile)

FOUNDATION_EXPORT void NetI2pRouterPeermanagerPeerProfile_initWithNetI2pRouterRouterContext_withNetI2pDataHash_(NetI2pRouterPeermanagerPeerProfile *self, NetI2pRouterRouterContext *context, NetI2pDataHash *peer);

FOUNDATION_EXPORT NetI2pRouterPeermanagerPeerProfile *new_NetI2pRouterPeermanagerPeerProfile_initWithNetI2pRouterRouterContext_withNetI2pDataHash_(NetI2pRouterRouterContext *context, NetI2pDataHash *peer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterPeermanagerPeerProfile *create_NetI2pRouterPeermanagerPeerProfile_initWithNetI2pRouterRouterContext_withNetI2pDataHash_(NetI2pRouterRouterContext *context, NetI2pDataHash *peer);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterPeermanagerPeerProfile)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterPeermanagerPeerProfile")
