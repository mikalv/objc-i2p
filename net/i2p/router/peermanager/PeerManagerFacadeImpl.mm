//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/peermanager/PeerManagerFacadeImpl.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Writer.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/router/PeerSelectionCriteria.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/peermanager/PeerManager.h"
#include "net/i2p/router/peermanager/PeerManagerFacadeImpl.h"
#include "net/i2p/router/peermanager/PeerTestJob.h"
#include "net/i2p/router/peermanager/ProfilePersistenceHelper.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterPeermanagerPeerManagerFacadeImpl () {
 @public
  NetI2pUtilLog *_log_;
  NetI2pRouterPeermanagerPeerManager *_manager_;
  NetI2pRouterRouterContext *_context_;
  NetI2pRouterPeermanagerProfilePersistenceHelper *_persistenceHelper_;
  NetI2pRouterPeermanagerPeerTestJob *_testJob_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterPeermanagerPeerManagerFacadeImpl, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pRouterPeermanagerPeerManagerFacadeImpl, _manager_, NetI2pRouterPeermanagerPeerManager *)
J2OBJC_FIELD_SETTER(NetI2pRouterPeermanagerPeerManagerFacadeImpl, _context_, NetI2pRouterRouterContext *)
J2OBJC_FIELD_SETTER(NetI2pRouterPeermanagerPeerManagerFacadeImpl, _persistenceHelper_, NetI2pRouterPeermanagerProfilePersistenceHelper *)
J2OBJC_FIELD_SETTER(NetI2pRouterPeermanagerPeerManagerFacadeImpl, _testJob_, NetI2pRouterPeermanagerPeerTestJob *)

__attribute__((unused)) static IOSObjectArray *NetI2pRouterPeermanagerPeerManagerFacadeImpl__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *NetI2pRouterPeermanagerPeerManagerFacadeImpl__Annotations$1(void);

@implementation NetI2pRouterPeermanagerPeerManagerFacadeImpl

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx {
  NetI2pRouterPeermanagerPeerManagerFacadeImpl_initWithNetI2pRouterRouterContext_(self, ctx);
  return self;
}

- (void)startup {
  @synchronized(self) {
    [((NetI2pUtilLog *) nil_chk(_log_)) infoWithNSString:@"Starting up the peer manager"];
    JreStrongAssignAndConsume(&_manager_, new_NetI2pRouterPeermanagerPeerManager_initWithNetI2pRouterRouterContext_(_context_));
    [((NetI2pRouterPeermanagerProfilePersistenceHelper *) nil_chk(_persistenceHelper_)) setUsWithNetI2pDataHash:[((NetI2pRouterRouterContext *) nil_chk(_context_)) routerHash]];
    [((NetI2pRouterPeermanagerPeerTestJob *) nil_chk(_testJob_)) startTestingWithNetI2pRouterPeermanagerPeerManager:_manager_];
  }
}

- (void)shutdown {
  @synchronized(self) {
    [((NetI2pUtilLog *) nil_chk(_log_)) infoWithNSString:@"Shutting down the peer manager"];
    [((NetI2pRouterPeermanagerPeerTestJob *) nil_chk(_testJob_)) stopTesting];
    if (_manager_ != nil) {
      [_manager_ storeProfiles];
      [((NetI2pRouterPeermanagerPeerManager *) nil_chk(_manager_)) clearProfiles];
    }
  }
}

- (void)restart {
  @synchronized(self) {
    [((NetI2pRouterPeermanagerPeerManager *) nil_chk(_manager_)) storeProfiles];
    [((NetI2pRouterPeermanagerProfilePersistenceHelper *) nil_chk(_persistenceHelper_)) setUsWithNetI2pDataHash:[((NetI2pRouterRouterContext *) nil_chk(_context_)) routerHash]];
    [((NetI2pRouterPeermanagerPeerManager *) nil_chk(_manager_)) loadProfiles];
  }
}

- (id<JavaUtilList>)selectPeersWithNetI2pRouterPeerSelectionCriteria:(NetI2pRouterPeerSelectionCriteria *)criteria {
  return [((NetI2pRouterPeermanagerPeerManager *) nil_chk(_manager_)) selectPeersWithNetI2pRouterPeerSelectionCriteria:criteria];
}

- (void)setCapabilitiesWithNetI2pDataHash:(NetI2pDataHash *)peer
                             withNSString:(NSString *)caps {
  if (_manager_ == nil) return;
  [_manager_ setCapabilitiesWithNetI2pDataHash:peer withNSString:caps];
}

- (void)removeCapabilitiesWithNetI2pDataHash:(NetI2pDataHash *)peer {
  if (_manager_ == nil) return;
  [_manager_ removeCapabilitiesWithNetI2pDataHash:peer];
}

- (NetI2pDataHash *)selectRandomByCapabilityWithChar:(jchar)capability {
  return nil;
}

- (id<JavaUtilSet>)getPeersByCapabilityWithChar:(jchar)capability {
  if (_manager_ == nil) return JavaUtilCollections_emptySet();
  return [_manager_ getPeersByCapabilityWithChar:capability];
}

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg {
}

- (void)dealloc {
  RELEASE_(_log_);
  RELEASE_(_manager_);
  RELEASE_(_context_);
  RELEASE_(_persistenceHelper_);
  RELEASE_(_testJob_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataHash;", 0x1, 8, 9, -1, -1, 10, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 11, 9, -1, 12, -1, -1 },
    { NULL, "V", 0x1, 13, 14, 15, -1, 16, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:);
  methods[1].selector = @selector(startup);
  methods[2].selector = @selector(shutdown);
  methods[3].selector = @selector(restart);
  methods[4].selector = @selector(selectPeersWithNetI2pRouterPeerSelectionCriteria:);
  methods[5].selector = @selector(setCapabilitiesWithNetI2pDataHash:withNSString:);
  methods[6].selector = @selector(removeCapabilitiesWithNetI2pDataHash:);
  methods[7].selector = @selector(selectRandomByCapabilityWithChar:);
  methods[8].selector = @selector(getPeersByCapabilityWithChar:);
  methods[9].selector = @selector(renderStatusHTMLWithJavaIoWriter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_log_", "LNetI2pUtilLog;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_manager_", "LNetI2pRouterPeermanagerPeerManager;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_context_", "LNetI2pRouterRouterContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_persistenceHelper_", "LNetI2pRouterPeermanagerProfilePersistenceHelper;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_testJob_", "LNetI2pRouterPeermanagerPeerTestJob;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;", "selectPeers", "LNetI2pRouterPeerSelectionCriteria;", "(Lnet/i2p/router/PeerSelectionCriteria;)Ljava/util/List<Lnet/i2p/data/Hash;>;", "setCapabilities", "LNetI2pDataHash;LNSString;", "removeCapabilities", "LNetI2pDataHash;", "selectRandomByCapability", "C", (void *)&NetI2pRouterPeermanagerPeerManagerFacadeImpl__Annotations$0, "getPeersByCapability", "(C)Ljava/util/Set<Lnet/i2p/data/Hash;>;", "renderStatusHTML", "LJavaIoWriter;", "LJavaIoIOException;", (void *)&NetI2pRouterPeermanagerPeerManagerFacadeImpl__Annotations$1 };
  static const J2ObjcClassInfo _NetI2pRouterPeermanagerPeerManagerFacadeImpl = { "PeerManagerFacadeImpl", "net.i2p.router.peermanager", ptrTable, methods, fields, 7, 0x1, 10, 5, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterPeermanagerPeerManagerFacadeImpl;
}

@end

void NetI2pRouterPeermanagerPeerManagerFacadeImpl_initWithNetI2pRouterRouterContext_(NetI2pRouterPeermanagerPeerManagerFacadeImpl *self, NetI2pRouterRouterContext *ctx) {
  NSObject_init(self);
  JreStrongAssign(&self->_context_, ctx);
  JreStrongAssign(&self->_log_, [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(ctx)) logManager])) getLogWithIOSClass:NetI2pRouterPeermanagerPeerManagerFacadeImpl_class_()]);
  JreStrongAssignAndConsume(&self->_persistenceHelper_, new_NetI2pRouterPeermanagerProfilePersistenceHelper_initWithNetI2pRouterRouterContext_(ctx));
  JreStrongAssignAndConsume(&self->_testJob_, new_NetI2pRouterPeermanagerPeerTestJob_initWithNetI2pRouterRouterContext_(self->_context_));
}

NetI2pRouterPeermanagerPeerManagerFacadeImpl *new_NetI2pRouterPeermanagerPeerManagerFacadeImpl_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) {
  J2OBJC_NEW_IMPL(NetI2pRouterPeermanagerPeerManagerFacadeImpl, initWithNetI2pRouterRouterContext_, ctx)
}

NetI2pRouterPeermanagerPeerManagerFacadeImpl *create_NetI2pRouterPeermanagerPeerManagerFacadeImpl_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) {
  J2OBJC_CREATE_IMPL(NetI2pRouterPeermanagerPeerManagerFacadeImpl, initWithNetI2pRouterRouterContext_, ctx)
}

IOSObjectArray *NetI2pRouterPeermanagerPeerManagerFacadeImpl__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pRouterPeermanagerPeerManagerFacadeImpl__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterPeermanagerPeerManagerFacadeImpl)
