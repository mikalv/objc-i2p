//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/startup/BootCommSystemJob.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "net/i2p/router/CommSystemFacade.h"
#include "net/i2p/router/Job.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/JobQueue.h"
#include "net/i2p/router/JobTiming.h"
#include "net/i2p/router/Router.h"
#include "net/i2p/router/RouterClock.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/TunnelManagerFacade.h"
#include "net/i2p/router/startup/BootCommSystemJob.h"
#include "net/i2p/router/startup/BootNetworkDbJob.h"
#include "net/i2p/router/startup/BootPeerManagerJob.h"
#include "net/i2p/router/startup/BuildTrustedLinksJob.h"
#include "net/i2p/router/startup/StartAcceptingClientsJob.h"
#include "net/i2p/router/tasks/ReadConfigJob.h"
#include "net/i2p/util/Clock.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"
#include "net/i2p/util/SystemVersion.h"

@interface NetI2pRouterStartupBootCommSystemJob () {
 @public
  NetI2pUtilLog *_log_;
}

- (void)startupDb;

@end

J2OBJC_FIELD_SETTER(NetI2pRouterStartupBootCommSystemJob, _log_, NetI2pUtilLog *)

__attribute__((unused)) static void NetI2pRouterStartupBootCommSystemJob_startupDb(NetI2pRouterStartupBootCommSystemJob *self);

NSString *NetI2pRouterStartupBootCommSystemJob_PROP_USE_TRUSTED_LINKS = @"router.trustedLinks";

@implementation NetI2pRouterStartupBootCommSystemJob

+ (NSString *)PROP_USE_TRUSTED_LINKS {
  return NetI2pRouterStartupBootCommSystemJob_PROP_USE_TRUSTED_LINKS;
}

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context {
  NetI2pRouterStartupBootCommSystemJob_initWithNetI2pRouterRouterContext_(self, context);
  return self;
}

- (NSString *)getName {
  return @"Boot Communication System";
}

- (void)runJob {
  [((NetI2pRouterJobQueue *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) jobQueue])) allowParallelOperation];
  NetI2pRouterStartupBootCommSystemJob_startupDb(self);
  [((NetI2pRouterJobQueue *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) jobQueue])) addJobWithNetI2pRouterJob:create_NetI2pRouterStartupBootPeerManagerJob_initWithNetI2pRouterRouterContext_([self getContext])];
  [((NetI2pRouterCommSystemFacade *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) commSystem])) startup];
  [((id<NetI2pRouterTunnelManagerFacade>) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) tunnelManager])) startup];
  [((NetI2pRouterJobQueue *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) jobQueue])) addJobWithNetI2pRouterJob:create_NetI2pRouterStartupStartAcceptingClientsJob_initWithNetI2pRouterRouterContext_([self getContext])];
  if (!NetI2pUtilSystemVersion_isAndroid()) {
    id<NetI2pRouterJob> j = create_NetI2pRouterTasksReadConfigJob_initWithNetI2pRouterRouterContext_([self getContext]);
    [((NetI2pRouterJobTiming *) nil_chk([j getTiming])) setStartAfterWithLong:[((NetI2pUtilClock *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) clock])) now] + 2 * 60 * 1000];
    [((NetI2pRouterJobQueue *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) jobQueue])) addJobWithNetI2pRouterJob:j];
  }
  [((NetI2pRouterRouterClock *) nil_chk(((NetI2pRouterRouterClock *) cast_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) clock], [NetI2pRouterRouterClock class])))) addShiftListenerWithNetI2pRouterRouterClock_ClockShiftListener:[((NetI2pRouterRouterContext *) nil_chk([self getContext])) router]];
}

- (void)startupDb {
  NetI2pRouterStartupBootCommSystemJob_startupDb(self);
}

- (void)dealloc {
  RELEASE_(_log_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(runJob);
  methods[3].selector = @selector(startupDb);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_log_", "LNetI2pUtilLog;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "PROP_USE_TRUSTED_LINKS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;", &NetI2pRouterStartupBootCommSystemJob_PROP_USE_TRUSTED_LINKS };
  static const J2ObjcClassInfo _NetI2pRouterStartupBootCommSystemJob = { "BootCommSystemJob", "net.i2p.router.startup", ptrTable, methods, fields, 7, 0x0, 4, 2, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterStartupBootCommSystemJob;
}

@end

void NetI2pRouterStartupBootCommSystemJob_initWithNetI2pRouterRouterContext_(NetI2pRouterStartupBootCommSystemJob *self, NetI2pRouterRouterContext *context) {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, context);
  JreStrongAssign(&self->_log_, [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(context)) logManager])) getLogWithIOSClass:NetI2pRouterStartupBootCommSystemJob_class_()]);
}

NetI2pRouterStartupBootCommSystemJob *new_NetI2pRouterStartupBootCommSystemJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) {
  J2OBJC_NEW_IMPL(NetI2pRouterStartupBootCommSystemJob, initWithNetI2pRouterRouterContext_, context)
}

NetI2pRouterStartupBootCommSystemJob *create_NetI2pRouterStartupBootCommSystemJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) {
  J2OBJC_CREATE_IMPL(NetI2pRouterStartupBootCommSystemJob, initWithNetI2pRouterRouterContext_, context)
}

void NetI2pRouterStartupBootCommSystemJob_startupDb(NetI2pRouterStartupBootCommSystemJob *self) {
  id<NetI2pRouterJob> bootDb = create_NetI2pRouterStartupBootNetworkDbJob_initWithNetI2pRouterRouterContext_([self getContext]);
  jboolean useTrusted = [((NetI2pRouterRouterContext *) nil_chk([self getContext])) getBooleanPropertyWithNSString:NetI2pRouterStartupBootCommSystemJob_PROP_USE_TRUSTED_LINKS];
  if (useTrusted) {
    [((NetI2pUtilLog *) nil_chk(self->_log_)) debugWithNSString:@"Using trusted links..."];
    [((NetI2pRouterJobQueue *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) jobQueue])) addJobWithNetI2pRouterJob:create_NetI2pRouterStartupBuildTrustedLinksJob_initWithNetI2pRouterRouterContext_withNetI2pRouterJob_([self getContext], bootDb)];
    return;
  }
  else {
    [((NetI2pUtilLog *) nil_chk(self->_log_)) debugWithNSString:@"Not using trusted links - boot db"];
    [((NetI2pRouterJobQueue *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) jobQueue])) addJobWithNetI2pRouterJob:bootDb];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterStartupBootCommSystemJob)
