//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/startup/StartAcceptingClientsJob.java
//

#include "J2ObjC_source.h"
#include "net/i2p/router/ClientManagerFacade.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/startup/StartAcceptingClientsJob.h"

@implementation NetI2pRouterStartupStartAcceptingClientsJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context {
  NetI2pRouterStartupStartAcceptingClientsJob_initWithNetI2pRouterRouterContext_(self, context);
  return self;
}

- (NSString *)getName {
  return @"Start Accepting Clients";
}

- (void)runJob {
  [((NetI2pRouterClientManagerFacade *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) clientManager])) startup];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(runJob);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;" };
  static const J2ObjcClassInfo _NetI2pRouterStartupStartAcceptingClientsJob = { "StartAcceptingClientsJob", "net.i2p.router.startup", ptrTable, methods, NULL, 7, 0x0, 3, 0, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterStartupStartAcceptingClientsJob;
}

@end

void NetI2pRouterStartupStartAcceptingClientsJob_initWithNetI2pRouterRouterContext_(NetI2pRouterStartupStartAcceptingClientsJob *self, NetI2pRouterRouterContext *context) {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, context);
}

NetI2pRouterStartupStartAcceptingClientsJob *new_NetI2pRouterStartupStartAcceptingClientsJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) {
  J2OBJC_NEW_IMPL(NetI2pRouterStartupStartAcceptingClientsJob, initWithNetI2pRouterRouterContext_, context)
}

NetI2pRouterStartupStartAcceptingClientsJob *create_NetI2pRouterStartupStartAcceptingClientsJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) {
  J2OBJC_CREATE_IMPL(NetI2pRouterStartupStartAcceptingClientsJob, initWithNetI2pRouterRouterContext_, context)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterStartupStartAcceptingClientsJob)
