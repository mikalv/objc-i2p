//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/startup/RebuildRouterInfoJob.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/FileOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/List.h"
#include "java/util/Properties.h"
#include "net/i2p/data/DataFormatException.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/data/SigningPrivateKey.h"
#include "net/i2p/data/router/RouterIdentity.h"
#include "net/i2p/data/router/RouterInfo.h"
#include "net/i2p/router/CommSystemFacade.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/KeyManager.h"
#include "net/i2p/router/Router.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/StatisticsManager.h"
#include "net/i2p/router/startup/CreateRouterInfoJob.h"
#include "net/i2p/router/startup/LoadRouterInfoJob.h"
#include "net/i2p/router/startup/RebuildRouterInfoJob.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"
#include "net/i2p/util/SecureFileOutputStream.h"

@interface NetI2pRouterStartupRebuildRouterInfoJob () {
 @public
  NetI2pUtilLog *_log_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterStartupRebuildRouterInfoJob, _log_, NetI2pUtilLog *)

inline jlong NetI2pRouterStartupRebuildRouterInfoJob_get_REBUILD_DELAY(void);
#define NetI2pRouterStartupRebuildRouterInfoJob_REBUILD_DELAY 45000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterStartupRebuildRouterInfoJob, REBUILD_DELAY, jlong)

@implementation NetI2pRouterStartupRebuildRouterInfoJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context {
  NetI2pRouterStartupRebuildRouterInfoJob_initWithNetI2pRouterRouterContext_(self, context);
  return self;
}

- (NSString *)getName {
  return @"Rebuild Router Info";
}

- (void)runJob {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)rebuildRouterInfo {
  [self rebuildRouterInfoWithBoolean:true];
}

- (void)rebuildRouterInfoWithBoolean:(jboolean)alreadyRunning {
  [((NetI2pUtilLog *) nil_chk(_log_)) debugWithNSString:@"Rebuilding the new router info"];
  NetI2pDataRouterRouterInfo *info = nil;
  JavaIoFile *infoFile = create_JavaIoFile_initWithJavaIoFile_withNSString_([((NetI2pRouterRouterContext *) nil_chk([self getContext])) getRouterDir], NetI2pRouterStartupCreateRouterInfoJob_INFO_FILENAME);
  JavaIoFile *keyFile = create_JavaIoFile_initWithJavaIoFile_withNSString_([((NetI2pRouterRouterContext *) nil_chk([self getContext])) getRouterDir], NetI2pRouterStartupCreateRouterInfoJob_KEYS_FILENAME);
  JavaIoFile *keyFile2 = create_JavaIoFile_initWithJavaIoFile_withNSString_([((NetI2pRouterRouterContext *) nil_chk([self getContext])) getRouterDir], NetI2pRouterStartupCreateRouterInfoJob_KEYS2_FILENAME);
  if ([keyFile2 exists] || [keyFile exists]) {
    NetI2pDataRouterRouterInfo *oldinfo = [((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) router])) getRouterInfo];
    if (oldinfo == nil) {
      @try {
        NetI2pRouterStartupLoadRouterInfoJob_KeyData *kd = NetI2pRouterStartupLoadRouterInfoJob_readKeyDataWithJavaIoFile_withJavaIoFile_(keyFile, keyFile2);
        info = create_NetI2pDataRouterRouterInfo_init();
        [info setIdentityWithNetI2pDataRouterRouterIdentity:((NetI2pRouterStartupLoadRouterInfoJob_KeyData *) nil_chk(kd))->routerIdentity_];
      }
      @catch (NetI2pDataDataFormatException *e) {
        [_log_ logWithInt:NetI2pUtilLog_CRIT withNSString:JreStrcat("$$", @"Error reading in the key data from ", [keyFile getAbsolutePath]) withJavaLangThrowable:e];
        [keyFile delete__];
        [keyFile2 delete__];
        [self rebuildRouterInfoWithBoolean:alreadyRunning];
        return;
      }
      @catch (JavaIoIOException *e) {
        [_log_ logWithInt:NetI2pUtilLog_CRIT withNSString:JreStrcat("$$", @"Error reading in the key data from ", [keyFile getAbsolutePath]) withJavaLangThrowable:e];
        [keyFile delete__];
        [keyFile2 delete__];
        [self rebuildRouterInfoWithBoolean:alreadyRunning];
        return;
      }
    }
    else {
      info = create_NetI2pDataRouterRouterInfo_initWithNetI2pDataRouterRouterInfo_(oldinfo);
    }
    @try {
      [((NetI2pDataRouterRouterInfo *) nil_chk(info)) setAddressesWithJavaUtilCollection:[((NetI2pRouterCommSystemFacade *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) commSystem])) createAddresses]];
      JavaUtilProperties *stats = [((NetI2pRouterStatisticsManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) statPublisher])) publishStatisticsWithNetI2pDataHash:[info getHash]];
      [info setOptionsWithJavaUtilProperties:stats];
      [info setPublishedWithLong:NetI2pRouterStartupCreateRouterInfoJob_getCurrentPublishDateWithNetI2pRouterRouterContext_([self getContext])];
      [info signWithNetI2pDataSigningPrivateKey:[((NetI2pRouterKeyManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) keyManager])) getSigningPrivateKey]];
    }
    @catch (NetI2pDataDataFormatException *dfe) {
      [_log_ logWithInt:NetI2pUtilLog_CRIT withNSString:@"Error rebuilding the new router info" withJavaLangThrowable:dfe];
      return;
    }
    if (![info isValid]) {
      [_log_ logWithInt:NetI2pUtilLog_CRIT withNSString:JreStrcat("$@", @"RouterInfo we just built is invalid: ", info) withJavaLangThrowable:create_JavaLangException_init()];
      return;
    }
    JavaIoFileOutputStream *fos = nil;
    @synchronized(((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) router]))->routerInfoFileLock_) {
      @try {
        fos = JreRetainedLocalValue(create_NetI2pUtilSecureFileOutputStream_initWithJavaIoFile_(infoFile));
        [info writeBytesWithJavaIoOutputStream:fos];
      }
      @catch (NetI2pDataDataFormatException *dfe) {
        [_log_ logWithInt:NetI2pUtilLog_CRIT withNSString:@"Error rebuilding the router information" withJavaLangThrowable:dfe];
      }
      @catch (JavaIoIOException *ioe) {
        [_log_ logWithInt:NetI2pUtilLog_CRIT withNSString:@"Error writing out the rebuilt router information" withJavaLangThrowable:ioe];
      }
      @finally {
        if (fos != nil) @try {
          [fos close];
        }
        @catch (JavaIoIOException *ioe) {
        }
      }
    }
  }
  else {
    [_log_ warnWithNSString:JreStrcat("$$$", @"Private key file ", [keyFile getAbsolutePath], @" deleted!  Rebuilding a brand new router identity!")];
    NetI2pRouterStartupCreateRouterInfoJob *j = create_NetI2pRouterStartupCreateRouterInfoJob_initWithNetI2pRouterRouterContext_withNetI2pRouterJob_([self getContext], nil);
    @synchronized(((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) router]))->routerInfoFileLock_) {
      info = JreRetainedLocalValue([j createRouterInfo]);
    }
  }
  [((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) router])) setRouterInfoWithNetI2pDataRouterRouterInfo:info];
  [_log_ infoWithNSString:JreStrcat("$@$@C", @"Router info rebuilt and stored at ", infoFile, @" [", info, ']')];
}

- (void)dealloc {
  RELEASE_(_log_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(runJob);
  methods[3].selector = @selector(rebuildRouterInfo);
  methods[4].selector = @selector(rebuildRouterInfoWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_log_", "LNetI2pUtilLog;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "REBUILD_DELAY", "J", .constantValue.asLong = NetI2pRouterStartupRebuildRouterInfoJob_REBUILD_DELAY, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;", "rebuildRouterInfo", "Z" };
  static const J2ObjcClassInfo _NetI2pRouterStartupRebuildRouterInfoJob = { "RebuildRouterInfoJob", "net.i2p.router.startup", ptrTable, methods, fields, 7, 0x0, 5, 2, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterStartupRebuildRouterInfoJob;
}

@end

void NetI2pRouterStartupRebuildRouterInfoJob_initWithNetI2pRouterRouterContext_(NetI2pRouterStartupRebuildRouterInfoJob *self, NetI2pRouterRouterContext *context) {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, context);
  JreStrongAssign(&self->_log_, [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(context)) logManager])) getLogWithIOSClass:NetI2pRouterStartupRebuildRouterInfoJob_class_()]);
}

NetI2pRouterStartupRebuildRouterInfoJob *new_NetI2pRouterStartupRebuildRouterInfoJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) {
  J2OBJC_NEW_IMPL(NetI2pRouterStartupRebuildRouterInfoJob, initWithNetI2pRouterRouterContext_, context)
}

NetI2pRouterStartupRebuildRouterInfoJob *create_NetI2pRouterStartupRebuildRouterInfoJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) {
  J2OBJC_CREATE_IMPL(NetI2pRouterStartupRebuildRouterInfoJob, initWithNetI2pRouterRouterContext_, context)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterStartupRebuildRouterInfoJob)
