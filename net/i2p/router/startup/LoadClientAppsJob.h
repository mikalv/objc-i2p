//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/startup/LoadClientAppsJob.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterStartupLoadClientAppsJob")
#ifdef RESTRICT_NetI2pRouterStartupLoadClientAppsJob
#define INCLUDE_ALL_NetI2pRouterStartupLoadClientAppsJob 0
#else
#define INCLUDE_ALL_NetI2pRouterStartupLoadClientAppsJob 1
#endif
#undef RESTRICT_NetI2pRouterStartupLoadClientAppsJob

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterStartupLoadClientAppsJob_) && (INCLUDE_ALL_NetI2pRouterStartupLoadClientAppsJob || defined(INCLUDE_NetI2pRouterStartupLoadClientAppsJob))
#define NetI2pRouterStartupLoadClientAppsJob_

#define RESTRICT_NetI2pRouterJobImpl 1
#define INCLUDE_NetI2pRouterJobImpl 1
#include "net/i2p/router/JobImpl.h"

@class IOSObjectArray;
@class JavaLangClassLoader;
@class JavaLangThreadGroup;
@class NetI2pRouterRouterContext;
@class NetI2pUtilLog;

@interface NetI2pRouterStartupLoadClientAppsJob : NetI2pRouterJobImpl

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx;

- (NSString *)getName;

+ (IOSObjectArray *)parseArgsWithNSString:(NSString *)args;

+ (void)runClientWithNSString:(NSString *)className_
                 withNSString:(NSString *)clientName
            withNSStringArray:(IOSObjectArray *)args
withNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
            withNetI2pUtilLog:(NetI2pUtilLog *)log;

+ (void)runClientWithNSString:(NSString *)className_
                 withNSString:(NSString *)clientName
            withNSStringArray:(IOSObjectArray *)args
withNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
            withNetI2pUtilLog:(NetI2pUtilLog *)log
      withJavaLangThreadGroup:(JavaLangThreadGroup *)threadGroup
      withJavaLangClassLoader:(JavaLangClassLoader *)cl;

+ (void)runClientInlineWithNSString:(NSString *)className_
                       withNSString:(NSString *)clientName
                  withNSStringArray:(IOSObjectArray *)args
                  withNetI2pUtilLog:(NetI2pUtilLog *)log;

+ (void)runClientInlineWithNSString:(NSString *)className_
                       withNSString:(NSString *)clientName
                  withNSStringArray:(IOSObjectArray *)args
                  withNetI2pUtilLog:(NetI2pUtilLog *)log
            withJavaLangClassLoader:(JavaLangClassLoader *)cl;

- (void)runJob;

+ (void)testClientWithNSString:(NSString *)className_
       withJavaLangClassLoader:(JavaLangClassLoader *)cl;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterStartupLoadClientAppsJob)

FOUNDATION_EXPORT void NetI2pRouterStartupLoadClientAppsJob_initWithNetI2pRouterRouterContext_(NetI2pRouterStartupLoadClientAppsJob *self, NetI2pRouterRouterContext *ctx);

FOUNDATION_EXPORT NetI2pRouterStartupLoadClientAppsJob *new_NetI2pRouterStartupLoadClientAppsJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterStartupLoadClientAppsJob *create_NetI2pRouterStartupLoadClientAppsJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx);

FOUNDATION_EXPORT IOSObjectArray *NetI2pRouterStartupLoadClientAppsJob_parseArgsWithNSString_(NSString *args);

FOUNDATION_EXPORT void NetI2pRouterStartupLoadClientAppsJob_testClientWithNSString_withJavaLangClassLoader_(NSString *className_, JavaLangClassLoader *cl);

FOUNDATION_EXPORT void NetI2pRouterStartupLoadClientAppsJob_runClientInlineWithNSString_withNSString_withNSStringArray_withNetI2pUtilLog_(NSString *className_, NSString *clientName, IOSObjectArray *args, NetI2pUtilLog *log);

FOUNDATION_EXPORT void NetI2pRouterStartupLoadClientAppsJob_runClientInlineWithNSString_withNSString_withNSStringArray_withNetI2pUtilLog_withJavaLangClassLoader_(NSString *className_, NSString *clientName, IOSObjectArray *args, NetI2pUtilLog *log, JavaLangClassLoader *cl);

FOUNDATION_EXPORT void NetI2pRouterStartupLoadClientAppsJob_runClientWithNSString_withNSString_withNSStringArray_withNetI2pRouterRouterContext_withNetI2pUtilLog_(NSString *className_, NSString *clientName, IOSObjectArray *args, NetI2pRouterRouterContext *ctx, NetI2pUtilLog *log);

FOUNDATION_EXPORT void NetI2pRouterStartupLoadClientAppsJob_runClientWithNSString_withNSString_withNSStringArray_withNetI2pRouterRouterContext_withNetI2pUtilLog_withJavaLangThreadGroup_withJavaLangClassLoader_(NSString *className_, NSString *clientName, IOSObjectArray *args, NetI2pRouterRouterContext *ctx, NetI2pUtilLog *log, JavaLangThreadGroup *threadGroup, JavaLangClassLoader *cl);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterStartupLoadClientAppsJob)

#endif

#if !defined (NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient_) && (INCLUDE_ALL_NetI2pRouterStartupLoadClientAppsJob || defined(INCLUDE_NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient))
#define NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient_

#define RESTRICT_NetI2pUtilSimpleTimer2 1
#define INCLUDE_NetI2pUtilSimpleTimer2_TimedEvent 1
#include "net/i2p/util/SimpleTimer2.h"

@class IOSObjectArray;
@class JavaLangClassLoader;
@class JavaLangThreadGroup;
@class NetI2pRouterRouterContext;
@class NetI2pUtilSimpleTimer2;

@interface NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient : NetI2pUtilSimpleTimer2_TimedEvent

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pUtilSimpleTimer2:(NetI2pUtilSimpleTimer2 *)pool
                           withNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)enclosingContext
                                            withNSString:(NSString *)className_
                                            withNSString:(NSString *)clientName
                                       withNSStringArray:(IOSObjectArray *)args;

- (instancetype __nonnull)initWithNetI2pUtilSimpleTimer2:(NetI2pUtilSimpleTimer2 *)pool
                           withNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)enclosingContext
                                            withNSString:(NSString *)className_
                                            withNSString:(NSString *)clientName
                                       withNSStringArray:(IOSObjectArray *)args
                                 withJavaLangThreadGroup:(JavaLangThreadGroup *)threadGroup
                                 withJavaLangClassLoader:(JavaLangClassLoader *)cl;

- (void)timeReached;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pUtilSimpleTimer2:(NetI2pUtilSimpleTimer2 *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNetI2pUtilSimpleTimer2:(NetI2pUtilSimpleTimer2 *)arg0
                                                withLong:(jlong)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient)

FOUNDATION_EXPORT void NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient_initWithNetI2pUtilSimpleTimer2_withNetI2pRouterRouterContext_withNSString_withNSString_withNSStringArray_(NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient *self, NetI2pUtilSimpleTimer2 *pool, NetI2pRouterRouterContext *enclosingContext, NSString *className_, NSString *clientName, IOSObjectArray *args);

FOUNDATION_EXPORT NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient *new_NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient_initWithNetI2pUtilSimpleTimer2_withNetI2pRouterRouterContext_withNSString_withNSString_withNSStringArray_(NetI2pUtilSimpleTimer2 *pool, NetI2pRouterRouterContext *enclosingContext, NSString *className_, NSString *clientName, IOSObjectArray *args) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient *create_NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient_initWithNetI2pUtilSimpleTimer2_withNetI2pRouterRouterContext_withNSString_withNSString_withNSStringArray_(NetI2pUtilSimpleTimer2 *pool, NetI2pRouterRouterContext *enclosingContext, NSString *className_, NSString *clientName, IOSObjectArray *args);

FOUNDATION_EXPORT void NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient_initWithNetI2pUtilSimpleTimer2_withNetI2pRouterRouterContext_withNSString_withNSString_withNSStringArray_withJavaLangThreadGroup_withJavaLangClassLoader_(NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient *self, NetI2pUtilSimpleTimer2 *pool, NetI2pRouterRouterContext *enclosingContext, NSString *className_, NSString *clientName, IOSObjectArray *args, JavaLangThreadGroup *threadGroup, JavaLangClassLoader *cl);

FOUNDATION_EXPORT NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient *new_NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient_initWithNetI2pUtilSimpleTimer2_withNetI2pRouterRouterContext_withNSString_withNSString_withNSStringArray_withJavaLangThreadGroup_withJavaLangClassLoader_(NetI2pUtilSimpleTimer2 *pool, NetI2pRouterRouterContext *enclosingContext, NSString *className_, NSString *clientName, IOSObjectArray *args, JavaLangThreadGroup *threadGroup, JavaLangClassLoader *cl) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient *create_NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient_initWithNetI2pUtilSimpleTimer2_withNetI2pRouterRouterContext_withNSString_withNSString_withNSStringArray_withJavaLangThreadGroup_withJavaLangClassLoader_(NetI2pUtilSimpleTimer2 *pool, NetI2pRouterRouterContext *enclosingContext, NSString *className_, NSString *clientName, IOSObjectArray *args, JavaLangThreadGroup *threadGroup, JavaLangClassLoader *cl);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterStartupLoadClientAppsJob_DelayedRunClient)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterStartupLoadClientAppsJob")
