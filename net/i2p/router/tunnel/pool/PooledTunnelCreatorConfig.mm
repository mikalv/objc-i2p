//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/pool/PooledTunnelCreatorConfig.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Exception.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Properties.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/router/Job.h"
#include "net/i2p/router/JobQueue.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/TunnelInfo.h"
#include "net/i2p/router/TunnelPoolSettings.h"
#include "net/i2p/router/tunnel/TunnelCreatorConfig.h"
#include "net/i2p/router/tunnel/pool/PooledTunnelCreatorConfig.h"
#include "net/i2p/router/tunnel/pool/TestJob.h"
#include "net/i2p/router/tunnel/pool/TunnelPool.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterTunnelPoolPooledTunnelCreatorConfig () {
 @public
  NetI2pRouterTunnelPoolTunnelPool *_pool_;
  NetI2pRouterTunnelPoolTestJob *_testJob_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterTunnelPoolPooledTunnelCreatorConfig, _pool_, NetI2pRouterTunnelPoolTunnelPool *)
J2OBJC_FIELD_SETTER(NetI2pRouterTunnelPoolPooledTunnelCreatorConfig, _testJob_, NetI2pRouterTunnelPoolTestJob *)

__attribute__((unused)) static IOSObjectArray *NetI2pRouterTunnelPoolPooledTunnelCreatorConfig__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *NetI2pRouterTunnelPoolPooledTunnelCreatorConfig__Annotations$1(void);

@implementation NetI2pRouterTunnelPoolPooledTunnelCreatorConfig

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                          withInt:(jint)length
                                      withBoolean:(jboolean)isInbound {
  NetI2pRouterTunnelPoolPooledTunnelCreatorConfig_initWithNetI2pRouterRouterContext_withInt_withBoolean_(self, ctx, length, isInbound);
  return self;
}

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                          withInt:(jint)length
                                      withBoolean:(jboolean)isInbound
                               withNetI2pDataHash:(NetI2pDataHash *)destination {
  NetI2pRouterTunnelPoolPooledTunnelCreatorConfig_initWithNetI2pRouterRouterContext_withInt_withBoolean_withNetI2pDataHash_(self, ctx, length, isInbound, destination);
  return self;
}

- (void)testSuccessfulWithInt:(jint)ms {
  if (_testJob_ != nil) [_testJob_ testSuccessfulWithInt:ms];
  [super testSuccessfulWithInt:ms];
}

- (void)testJobSuccessfulWithInt:(jint)ms {
  [super testSuccessfulWithInt:ms];
}

- (jboolean)tunnelFailed {
  jboolean rv = [super tunnelFailed];
  if (!rv) {
    [((NetI2pRouterTunnelPoolTunnelPool *) nil_chk(_pool_)) tunnelFailedWithNetI2pRouterTunnelInfo:self];
    if (_testJob_ != nil) [((NetI2pRouterJobQueue *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) jobQueue])) removeJobWithNetI2pRouterJob:_testJob_];
  }
  return rv;
}

- (JavaUtilProperties *)getOptions {
  if (_pool_ == nil) return nil;
  return [((NetI2pRouterTunnelPoolSettings *) nil_chk([_pool_ getSettings])) getUnknownOptions];
}

- (void)setTunnelPoolWithNetI2pRouterTunnelPoolTunnelPool:(NetI2pRouterTunnelPoolTunnelPool *)pool {
  if (pool != nil) {
    JreStrongAssign(&_pool_, pool);
  }
  else {
    NetI2pUtilLog *log = [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) logManager])) getLogWithIOSClass:[self java_getClass]];
    [((NetI2pUtilLog *) nil_chk(log)) errorWithNSString:@"Null tunnel pool?" withJavaLangThrowable:create_JavaLangException_initWithNSString_(@"foo")];
  }
}

- (NetI2pRouterTunnelPoolTunnelPool *)getTunnelPool {
  return _pool_;
}

- (void)setTestJobWithNetI2pRouterTunnelPoolTestJob:(NetI2pRouterTunnelPoolTestJob *)job {
  JreStrongAssign(&_testJob_, job);
}

- (void)setExpireJobWithNetI2pRouterJob:(id<NetI2pRouterJob>)job {
}

- (void)setPairedTunnelWithNetI2pRouterTunnelInfo:(id<NetI2pRouterTunnelInfo>)tunnel {
}

- (void)dealloc {
  RELEASE_(_pool_);
  RELEASE_(_testJob_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilProperties;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNetI2pRouterTunnelPoolTunnelPool;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 8, -1, -1, 9, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, 14, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:withInt:withBoolean:);
  methods[1].selector = @selector(initWithNetI2pRouterRouterContext:withInt:withBoolean:withNetI2pDataHash:);
  methods[2].selector = @selector(testSuccessfulWithInt:);
  methods[3].selector = @selector(testJobSuccessfulWithInt:);
  methods[4].selector = @selector(tunnelFailed);
  methods[5].selector = @selector(getOptions);
  methods[6].selector = @selector(setTunnelPoolWithNetI2pRouterTunnelPoolTunnelPool:);
  methods[7].selector = @selector(getTunnelPool);
  methods[8].selector = @selector(setTestJobWithNetI2pRouterTunnelPoolTestJob:);
  methods[9].selector = @selector(setExpireJobWithNetI2pRouterJob:);
  methods[10].selector = @selector(setPairedTunnelWithNetI2pRouterTunnelInfo:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_pool_", "LNetI2pRouterTunnelPoolTunnelPool;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_testJob_", "LNetI2pRouterTunnelPoolTestJob;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;IZ", "LNetI2pRouterRouterContext;IZLNetI2pDataHash;", "testSuccessful", "I", "testJobSuccessful", "setTunnelPool", "LNetI2pRouterTunnelPoolTunnelPool;", "setTestJob", "LNetI2pRouterTunnelPoolTestJob;", (void *)&NetI2pRouterTunnelPoolPooledTunnelCreatorConfig__Annotations$0, "setExpireJob", "LNetI2pRouterJob;", "setPairedTunnel", "LNetI2pRouterTunnelInfo;", (void *)&NetI2pRouterTunnelPoolPooledTunnelCreatorConfig__Annotations$1 };
  static const J2ObjcClassInfo _NetI2pRouterTunnelPoolPooledTunnelCreatorConfig = { "PooledTunnelCreatorConfig", "net.i2p.router.tunnel.pool", ptrTable, methods, fields, 7, 0x0, 11, 2, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterTunnelPoolPooledTunnelCreatorConfig;
}

@end

void NetI2pRouterTunnelPoolPooledTunnelCreatorConfig_initWithNetI2pRouterRouterContext_withInt_withBoolean_(NetI2pRouterTunnelPoolPooledTunnelCreatorConfig *self, NetI2pRouterRouterContext *ctx, jint length, jboolean isInbound) {
  NetI2pRouterTunnelPoolPooledTunnelCreatorConfig_initWithNetI2pRouterRouterContext_withInt_withBoolean_withNetI2pDataHash_(self, ctx, length, isInbound, nil);
}

NetI2pRouterTunnelPoolPooledTunnelCreatorConfig *new_NetI2pRouterTunnelPoolPooledTunnelCreatorConfig_initWithNetI2pRouterRouterContext_withInt_withBoolean_(NetI2pRouterRouterContext *ctx, jint length, jboolean isInbound) {
  J2OBJC_NEW_IMPL(NetI2pRouterTunnelPoolPooledTunnelCreatorConfig, initWithNetI2pRouterRouterContext_withInt_withBoolean_, ctx, length, isInbound)
}

NetI2pRouterTunnelPoolPooledTunnelCreatorConfig *create_NetI2pRouterTunnelPoolPooledTunnelCreatorConfig_initWithNetI2pRouterRouterContext_withInt_withBoolean_(NetI2pRouterRouterContext *ctx, jint length, jboolean isInbound) {
  J2OBJC_CREATE_IMPL(NetI2pRouterTunnelPoolPooledTunnelCreatorConfig, initWithNetI2pRouterRouterContext_withInt_withBoolean_, ctx, length, isInbound)
}

void NetI2pRouterTunnelPoolPooledTunnelCreatorConfig_initWithNetI2pRouterRouterContext_withInt_withBoolean_withNetI2pDataHash_(NetI2pRouterTunnelPoolPooledTunnelCreatorConfig *self, NetI2pRouterRouterContext *ctx, jint length, jboolean isInbound, NetI2pDataHash *destination) {
  NetI2pRouterTunnelTunnelCreatorConfig_initWithNetI2pRouterRouterContext_withInt_withBoolean_withNetI2pDataHash_(self, ctx, length, isInbound, destination);
}

NetI2pRouterTunnelPoolPooledTunnelCreatorConfig *new_NetI2pRouterTunnelPoolPooledTunnelCreatorConfig_initWithNetI2pRouterRouterContext_withInt_withBoolean_withNetI2pDataHash_(NetI2pRouterRouterContext *ctx, jint length, jboolean isInbound, NetI2pDataHash *destination) {
  J2OBJC_NEW_IMPL(NetI2pRouterTunnelPoolPooledTunnelCreatorConfig, initWithNetI2pRouterRouterContext_withInt_withBoolean_withNetI2pDataHash_, ctx, length, isInbound, destination)
}

NetI2pRouterTunnelPoolPooledTunnelCreatorConfig *create_NetI2pRouterTunnelPoolPooledTunnelCreatorConfig_initWithNetI2pRouterRouterContext_withInt_withBoolean_withNetI2pDataHash_(NetI2pRouterRouterContext *ctx, jint length, jboolean isInbound, NetI2pDataHash *destination) {
  J2OBJC_CREATE_IMPL(NetI2pRouterTunnelPoolPooledTunnelCreatorConfig, initWithNetI2pRouterRouterContext_withInt_withBoolean_withNetI2pDataHash_, ctx, length, isInbound, destination)
}

IOSObjectArray *NetI2pRouterTunnelPoolPooledTunnelCreatorConfig__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pRouterTunnelPoolPooledTunnelCreatorConfig__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTunnelPoolPooledTunnelCreatorConfig)
