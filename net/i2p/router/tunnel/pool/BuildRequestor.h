//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/pool/BuildRequestor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTunnelPoolBuildRequestor")
#ifdef RESTRICT_NetI2pRouterTunnelPoolBuildRequestor
#define INCLUDE_ALL_NetI2pRouterTunnelPoolBuildRequestor 0
#else
#define INCLUDE_ALL_NetI2pRouterTunnelPoolBuildRequestor 1
#endif
#undef RESTRICT_NetI2pRouterTunnelPoolBuildRequestor

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTunnelPoolBuildRequestor_) && (INCLUDE_ALL_NetI2pRouterTunnelPoolBuildRequestor || defined(INCLUDE_NetI2pRouterTunnelPoolBuildRequestor))
#define NetI2pRouterTunnelPoolBuildRequestor_

@class NetI2pRouterRouterContext;
@class NetI2pRouterTunnelPoolBuildExecutor;
@class NetI2pRouterTunnelPoolPooledTunnelCreatorConfig;
@class NetI2pRouterTunnelPoolTunnelPool;

@interface NetI2pRouterTunnelPoolBuildRequestor : NSObject
@property (readonly, class) jint REQUEST_TIMEOUT NS_SWIFT_NAME(REQUEST_TIMEOUT);

+ (jint)REQUEST_TIMEOUT;

#pragma mark Public

+ (jboolean)requestWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
            withNetI2pRouterTunnelPoolTunnelPool:(NetI2pRouterTunnelPoolTunnelPool *)pool
withNetI2pRouterTunnelPoolPooledTunnelCreatorConfig:(NetI2pRouterTunnelPoolPooledTunnelCreatorConfig *)cfg
         withNetI2pRouterTunnelPoolBuildExecutor:(NetI2pRouterTunnelPoolBuildExecutor *)exec;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTunnelPoolBuildRequestor)

inline jint NetI2pRouterTunnelPoolBuildRequestor_get_REQUEST_TIMEOUT(void);
#define NetI2pRouterTunnelPoolBuildRequestor_REQUEST_TIMEOUT 13000
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTunnelPoolBuildRequestor, REQUEST_TIMEOUT, jint)

FOUNDATION_EXPORT void NetI2pRouterTunnelPoolBuildRequestor_init(NetI2pRouterTunnelPoolBuildRequestor *self);

FOUNDATION_EXPORT jboolean NetI2pRouterTunnelPoolBuildRequestor_requestWithNetI2pRouterRouterContext_withNetI2pRouterTunnelPoolTunnelPool_withNetI2pRouterTunnelPoolPooledTunnelCreatorConfig_withNetI2pRouterTunnelPoolBuildExecutor_(NetI2pRouterRouterContext *ctx, NetI2pRouterTunnelPoolTunnelPool *pool, NetI2pRouterTunnelPoolPooledTunnelCreatorConfig *cfg, NetI2pRouterTunnelPoolBuildExecutor *exec);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTunnelPoolBuildRequestor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTunnelPoolBuildRequestor")
