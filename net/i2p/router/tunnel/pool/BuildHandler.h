//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/pool/BuildHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTunnelPoolBuildHandler")
#ifdef RESTRICT_NetI2pRouterTunnelPoolBuildHandler
#define INCLUDE_ALL_NetI2pRouterTunnelPoolBuildHandler 0
#else
#define INCLUDE_ALL_NetI2pRouterTunnelPoolBuildHandler 1
#endif
#undef RESTRICT_NetI2pRouterTunnelPoolBuildHandler

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTunnelPoolBuildHandler_) && (INCLUDE_ALL_NetI2pRouterTunnelPoolBuildHandler || defined(INCLUDE_NetI2pRouterTunnelPoolBuildHandler))
#define NetI2pRouterTunnelPoolBuildHandler_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class NetI2pRouterRouterContext;
@class NetI2pRouterTunnelPoolBuildExecutor;
@class NetI2pRouterTunnelPoolTunnelPoolManager;

@interface NetI2pRouterTunnelPoolBuildHandler : NSObject < JavaLangRunnable >

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                withNetI2pRouterTunnelPoolTunnelPoolManager:(NetI2pRouterTunnelPoolTunnelPoolManager *)manager
                    withNetI2pRouterTunnelPoolBuildExecutor:(NetI2pRouterTunnelPoolBuildExecutor *)exec;

- (jint)getInboundBuildQueueSize;

- (void)restart;

- (void)run;

- (void)shutdownWithInt:(jint)numThreads;

#pragma mark Package-Private

- (void)init__ OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTunnelPoolBuildHandler)

FOUNDATION_EXPORT void NetI2pRouterTunnelPoolBuildHandler_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelPoolTunnelPoolManager_withNetI2pRouterTunnelPoolBuildExecutor_(NetI2pRouterTunnelPoolBuildHandler *self, NetI2pRouterRouterContext *ctx, NetI2pRouterTunnelPoolTunnelPoolManager *manager, NetI2pRouterTunnelPoolBuildExecutor *exec);

FOUNDATION_EXPORT NetI2pRouterTunnelPoolBuildHandler *new_NetI2pRouterTunnelPoolBuildHandler_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelPoolTunnelPoolManager_withNetI2pRouterTunnelPoolBuildExecutor_(NetI2pRouterRouterContext *ctx, NetI2pRouterTunnelPoolTunnelPoolManager *manager, NetI2pRouterTunnelPoolBuildExecutor *exec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTunnelPoolBuildHandler *create_NetI2pRouterTunnelPoolBuildHandler_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelPoolTunnelPoolManager_withNetI2pRouterTunnelPoolBuildExecutor_(NetI2pRouterRouterContext *ctx, NetI2pRouterTunnelPoolTunnelPoolManager *manager, NetI2pRouterTunnelPoolBuildExecutor *exec);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTunnelPoolBuildHandler)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTunnelPoolBuildHandler")
