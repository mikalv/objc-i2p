//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/pool/ConnectChecker.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTunnelPoolConnectChecker")
#ifdef RESTRICT_NetI2pRouterTunnelPoolConnectChecker
#define INCLUDE_ALL_NetI2pRouterTunnelPoolConnectChecker 0
#else
#define INCLUDE_ALL_NetI2pRouterTunnelPoolConnectChecker 1
#endif
#undef RESTRICT_NetI2pRouterTunnelPoolConnectChecker

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTunnelPoolConnectChecker_) && (INCLUDE_ALL_NetI2pRouterTunnelPoolConnectChecker || defined(INCLUDE_NetI2pRouterTunnelPoolConnectChecker))
#define NetI2pRouterTunnelPoolConnectChecker_

@class NetI2pDataHash;
@class NetI2pDataRouterRouterInfo;
@class NetI2pRouterRouterContext;
@class NetI2pUtilLog;

@interface NetI2pRouterTunnelPoolConnectChecker : NSObject {
 @public
  NetI2pRouterRouterContext *ctx_;
  NetI2pUtilLog *log_;
}
@property (readonly, class) jint ANY_V4 NS_SWIFT_NAME(ANY_V4);

+ (jint)ANY_V4;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context;

- (jboolean)canConnectWithNetI2pDataHash:(NetI2pDataHash *)from
                      withNetI2pDataHash:(NetI2pDataHash *)to;

- (jboolean)canConnectWithInt:(jint)ourMask
withNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)to;

- (jboolean)canConnectWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)from
                                             withInt:(jint)ourMask;

- (jint)getInboundMaskWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)us;

- (jint)getOutboundMaskWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)us;

#pragma mark Protected

- (jboolean)isNTCPDisabled;

- (jboolean)isSSUDisabled;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTunnelPoolConnectChecker)

J2OBJC_FIELD_SETTER(NetI2pRouterTunnelPoolConnectChecker, ctx_, NetI2pRouterRouterContext *)
J2OBJC_FIELD_SETTER(NetI2pRouterTunnelPoolConnectChecker, log_, NetI2pUtilLog *)

inline jint NetI2pRouterTunnelPoolConnectChecker_get_ANY_V4(void);
#define NetI2pRouterTunnelPoolConnectChecker_ANY_V4 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTunnelPoolConnectChecker, ANY_V4, jint)

FOUNDATION_EXPORT void NetI2pRouterTunnelPoolConnectChecker_initWithNetI2pRouterRouterContext_(NetI2pRouterTunnelPoolConnectChecker *self, NetI2pRouterRouterContext *context);

FOUNDATION_EXPORT NetI2pRouterTunnelPoolConnectChecker *new_NetI2pRouterTunnelPoolConnectChecker_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTunnelPoolConnectChecker *create_NetI2pRouterTunnelPoolConnectChecker_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTunnelPoolConnectChecker)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTunnelPoolConnectChecker")
