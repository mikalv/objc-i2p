//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/BatchedRouterPreprocessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTunnelBatchedRouterPreprocessor")
#ifdef RESTRICT_NetI2pRouterTunnelBatchedRouterPreprocessor
#define INCLUDE_ALL_NetI2pRouterTunnelBatchedRouterPreprocessor 0
#else
#define INCLUDE_ALL_NetI2pRouterTunnelBatchedRouterPreprocessor 1
#endif
#undef RESTRICT_NetI2pRouterTunnelBatchedRouterPreprocessor

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTunnelBatchedRouterPreprocessor_) && (INCLUDE_ALL_NetI2pRouterTunnelBatchedRouterPreprocessor || defined(INCLUDE_NetI2pRouterTunnelBatchedRouterPreprocessor))
#define NetI2pRouterTunnelBatchedRouterPreprocessor_

#define RESTRICT_NetI2pRouterTunnelBatchedPreprocessor 1
#define INCLUDE_NetI2pRouterTunnelBatchedPreprocessor 1
#include "net/i2p/router/tunnel/BatchedPreprocessor.h"

@class NetI2pRouterRouterContext;
@class NetI2pRouterTunnelHopConfig;
@class NetI2pRouterTunnelTunnelCreatorConfig;
@protocol JavaUtilList;

@interface NetI2pRouterTunnelBatchedRouterPreprocessor : NetI2pRouterTunnelBatchedPreprocessor {
 @public
  NetI2pRouterTunnelHopConfig *_hopConfig_;
}
@property (readonly, copy, class) NSString *PROP_BATCH_FREQUENCY NS_SWIFT_NAME(PROP_BATCH_FREQUENCY);
@property (readonly, copy, class) NSString *PROP_ROUTER_BATCH_FREQUENCY NS_SWIFT_NAME(PROP_ROUTER_BATCH_FREQUENCY);
@property (readonly, class) jint OB_CLIENT_BATCH_FREQ NS_SWIFT_NAME(OB_CLIENT_BATCH_FREQ);
@property (readonly, class) jint OB_EXPL_BATCH_FREQ NS_SWIFT_NAME(OB_EXPL_BATCH_FREQ);
@property (readonly, class) jint DEFAULT_BATCH_FREQUENCY NS_SWIFT_NAME(DEFAULT_BATCH_FREQUENCY);

+ (NSString *)PROP_BATCH_FREQUENCY;

+ (NSString *)PROP_ROUTER_BATCH_FREQUENCY;

+ (jint)OB_CLIENT_BATCH_FREQ;

+ (jint)OB_EXPL_BATCH_FREQ;

+ (jint)DEFAULT_BATCH_FREQUENCY;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                            withNetI2pRouterTunnelHopConfig:(NetI2pRouterTunnelHopConfig *)cfg;

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                  withNetI2pRouterTunnelTunnelCreatorConfig:(NetI2pRouterTunnelTunnelCreatorConfig *)cfg;

#pragma mark Protected

- (jlong)getSendDelay;

- (void)notePreprocessingWithLong:(jlong)messageId
                          withInt:(jint)numFragments
                          withInt:(jint)totalLength
                 withJavaUtilList:(id<JavaUtilList>)messageIds
                     withNSString:(NSString *)msg;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)arg0
                                               withNSString:(NSString *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTunnelBatchedRouterPreprocessor)

J2OBJC_FIELD_SETTER(NetI2pRouterTunnelBatchedRouterPreprocessor, _hopConfig_, NetI2pRouterTunnelHopConfig *)

inline NSString *NetI2pRouterTunnelBatchedRouterPreprocessor_get_PROP_BATCH_FREQUENCY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTunnelBatchedRouterPreprocessor_PROP_BATCH_FREQUENCY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTunnelBatchedRouterPreprocessor, PROP_BATCH_FREQUENCY, NSString *)

inline NSString *NetI2pRouterTunnelBatchedRouterPreprocessor_get_PROP_ROUTER_BATCH_FREQUENCY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTunnelBatchedRouterPreprocessor_PROP_ROUTER_BATCH_FREQUENCY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTunnelBatchedRouterPreprocessor, PROP_ROUTER_BATCH_FREQUENCY, NSString *)

inline jint NetI2pRouterTunnelBatchedRouterPreprocessor_get_OB_CLIENT_BATCH_FREQ(void);
#define NetI2pRouterTunnelBatchedRouterPreprocessor_OB_CLIENT_BATCH_FREQ 75
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTunnelBatchedRouterPreprocessor, OB_CLIENT_BATCH_FREQ, jint)

inline jint NetI2pRouterTunnelBatchedRouterPreprocessor_get_OB_EXPL_BATCH_FREQ(void);
#define NetI2pRouterTunnelBatchedRouterPreprocessor_OB_EXPL_BATCH_FREQ 100
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTunnelBatchedRouterPreprocessor, OB_EXPL_BATCH_FREQ, jint)

inline jint NetI2pRouterTunnelBatchedRouterPreprocessor_get_DEFAULT_BATCH_FREQUENCY(void);
#define NetI2pRouterTunnelBatchedRouterPreprocessor_DEFAULT_BATCH_FREQUENCY 175
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTunnelBatchedRouterPreprocessor, DEFAULT_BATCH_FREQUENCY, jint)

FOUNDATION_EXPORT void NetI2pRouterTunnelBatchedRouterPreprocessor_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelTunnelCreatorConfig_(NetI2pRouterTunnelBatchedRouterPreprocessor *self, NetI2pRouterRouterContext *ctx, NetI2pRouterTunnelTunnelCreatorConfig *cfg);

FOUNDATION_EXPORT NetI2pRouterTunnelBatchedRouterPreprocessor *new_NetI2pRouterTunnelBatchedRouterPreprocessor_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelTunnelCreatorConfig_(NetI2pRouterRouterContext *ctx, NetI2pRouterTunnelTunnelCreatorConfig *cfg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTunnelBatchedRouterPreprocessor *create_NetI2pRouterTunnelBatchedRouterPreprocessor_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelTunnelCreatorConfig_(NetI2pRouterRouterContext *ctx, NetI2pRouterTunnelTunnelCreatorConfig *cfg);

FOUNDATION_EXPORT void NetI2pRouterTunnelBatchedRouterPreprocessor_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelHopConfig_(NetI2pRouterTunnelBatchedRouterPreprocessor *self, NetI2pRouterRouterContext *ctx, NetI2pRouterTunnelHopConfig *cfg);

FOUNDATION_EXPORT NetI2pRouterTunnelBatchedRouterPreprocessor *new_NetI2pRouterTunnelBatchedRouterPreprocessor_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelHopConfig_(NetI2pRouterRouterContext *ctx, NetI2pRouterTunnelHopConfig *cfg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTunnelBatchedRouterPreprocessor *create_NetI2pRouterTunnelBatchedRouterPreprocessor_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelHopConfig_(NetI2pRouterRouterContext *ctx, NetI2pRouterTunnelHopConfig *cfg);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTunnelBatchedRouterPreprocessor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTunnelBatchedRouterPreprocessor")
