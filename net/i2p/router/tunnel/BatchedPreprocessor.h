//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/BatchedPreprocessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTunnelBatchedPreprocessor")
#ifdef RESTRICT_NetI2pRouterTunnelBatchedPreprocessor
#define INCLUDE_ALL_NetI2pRouterTunnelBatchedPreprocessor 0
#else
#define INCLUDE_ALL_NetI2pRouterTunnelBatchedPreprocessor 1
#endif
#undef RESTRICT_NetI2pRouterTunnelBatchedPreprocessor

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTunnelBatchedPreprocessor_) && (INCLUDE_ALL_NetI2pRouterTunnelBatchedPreprocessor || defined(INCLUDE_NetI2pRouterTunnelBatchedPreprocessor))
#define NetI2pRouterTunnelBatchedPreprocessor_

#define RESTRICT_NetI2pRouterTunnelTrivialPreprocessor 1
#define INCLUDE_NetI2pRouterTunnelTrivialPreprocessor 1
#include "net/i2p/router/tunnel/TrivialPreprocessor.h"

@class NetI2pRouterRouterContext;
@protocol JavaUtilList;
@protocol NetI2pRouterTunnelTunnelGateway_Receiver;
@protocol NetI2pRouterTunnelTunnelGateway_Sender;

@interface NetI2pRouterTunnelBatchedPreprocessor : NetI2pRouterTunnelTrivialPreprocessor
@property (class) jlong DEFAULT_DELAY NS_SWIFT_NAME(DEFAULT_DELAY);

+ (jlong)DEFAULT_DELAY;

+ (void)setDEFAULT_DELAY:(jlong)value;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                               withNSString:(NSString *)name;

- (jlong)getDelayAmount;

- (jboolean)preprocessQueueWithJavaUtilList:(id<JavaUtilList>)pending
 withNetI2pRouterTunnelTunnelGateway_Sender:(id<NetI2pRouterTunnelTunnelGateway_Sender>)sender
withNetI2pRouterTunnelTunnelGateway_Receiver:(id<NetI2pRouterTunnelTunnelGateway_Receiver>)rec;

#pragma mark Protected

- (jlong)getSendDelay;

- (void)sendWithJavaUtilList:(id<JavaUtilList>)pending
                     withInt:(jint)startAt
                     withInt:(jint)sendThrough
withNetI2pRouterTunnelTunnelGateway_Sender:(id<NetI2pRouterTunnelTunnelGateway_Sender>)sender
withNetI2pRouterTunnelTunnelGateway_Receiver:(id<NetI2pRouterTunnelTunnelGateway_Receiver>)rec;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTunnelBatchedPreprocessor)

inline jlong NetI2pRouterTunnelBatchedPreprocessor_get_DEFAULT_DELAY(void);
inline jlong NetI2pRouterTunnelBatchedPreprocessor_set_DEFAULT_DELAY(jlong value);
inline jlong *NetI2pRouterTunnelBatchedPreprocessor_getRef_DEFAULT_DELAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jlong NetI2pRouterTunnelBatchedPreprocessor_DEFAULT_DELAY;
J2OBJC_STATIC_FIELD_PRIMITIVE(NetI2pRouterTunnelBatchedPreprocessor, DEFAULT_DELAY, jlong)

FOUNDATION_EXPORT void NetI2pRouterTunnelBatchedPreprocessor_initWithNetI2pRouterRouterContext_withNSString_(NetI2pRouterTunnelBatchedPreprocessor *self, NetI2pRouterRouterContext *ctx, NSString *name);

FOUNDATION_EXPORT NetI2pRouterTunnelBatchedPreprocessor *new_NetI2pRouterTunnelBatchedPreprocessor_initWithNetI2pRouterRouterContext_withNSString_(NetI2pRouterRouterContext *ctx, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTunnelBatchedPreprocessor *create_NetI2pRouterTunnelBatchedPreprocessor_initWithNetI2pRouterRouterContext_withNSString_(NetI2pRouterRouterContext *ctx, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTunnelBatchedPreprocessor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTunnelBatchedPreprocessor")
