//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/TrivialPreprocessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTunnelTrivialPreprocessor")
#ifdef RESTRICT_NetI2pRouterTunnelTrivialPreprocessor
#define INCLUDE_ALL_NetI2pRouterTunnelTrivialPreprocessor 0
#else
#define INCLUDE_ALL_NetI2pRouterTunnelTrivialPreprocessor 1
#endif
#undef RESTRICT_NetI2pRouterTunnelTrivialPreprocessor

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTunnelTrivialPreprocessor_) && (INCLUDE_ALL_NetI2pRouterTunnelTrivialPreprocessor || defined(INCLUDE_NetI2pRouterTunnelTrivialPreprocessor))
#define NetI2pRouterTunnelTrivialPreprocessor_

#define RESTRICT_NetI2pRouterTunnelTunnelGateway 1
#define INCLUDE_NetI2pRouterTunnelTunnelGateway_QueuePreprocessor 1
#include "net/i2p/router/tunnel/TunnelGateway.h"

@class IOSByteArray;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTunnelPendingGatewayMessage;
@class NetI2pUtilByteCache;
@class NetI2pUtilLog;
@protocol JavaUtilList;
@protocol NetI2pRouterTunnelTunnelGateway_Receiver;
@protocol NetI2pRouterTunnelTunnelGateway_Sender;

@interface NetI2pRouterTunnelTrivialPreprocessor : NSObject < NetI2pRouterTunnelTunnelGateway_QueuePreprocessor > {
 @public
  NetI2pRouterRouterContext *_context_;
  NetI2pUtilLog *_log_;
}
@property (readonly, class) jint PREPROCESSED_SIZE NS_SWIFT_NAME(PREPROCESSED_SIZE);
@property (readonly, class) jint IV_SIZE NS_SWIFT_NAME(IV_SIZE);
@property (readonly, class, strong) NetI2pUtilByteCache *_dataCache NS_SWIFT_NAME(_dataCache);

+ (jint)PREPROCESSED_SIZE;

+ (jint)IV_SIZE;

+ (NetI2pUtilByteCache *)_dataCache;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx;

- (jlong)getDelayAmount;

- (jboolean)preprocessQueueWithJavaUtilList:(id<JavaUtilList>)pending
 withNetI2pRouterTunnelTunnelGateway_Sender:(id<NetI2pRouterTunnelTunnelGateway_Sender>)sender
withNetI2pRouterTunnelTunnelGateway_Receiver:(id<NetI2pRouterTunnelTunnelGateway_Receiver>)rec;

#pragma mark Protected

+ (jint)getInstructionAugmentationSizeWithNetI2pRouterTunnelPendingGatewayMessage:(NetI2pRouterTunnelPendingGatewayMessage *)msg
                                                                          withInt:(jint)offset
                                                                          withInt:(jint)instructionsSize;

+ (jint)getInstructionsSizeWithNetI2pRouterTunnelPendingGatewayMessage:(NetI2pRouterTunnelPendingGatewayMessage *)msg;

- (void)notePreprocessingWithLong:(jlong)messageId
                          withInt:(jint)numFragments
                          withInt:(jint)totalLength
                 withJavaUtilList:(id<JavaUtilList>)messageIds
                     withNSString:(NSString *)msg;

- (void)preprocessWithByteArray:(IOSByteArray *)fragments
                        withInt:(jint)fragmentLength;

- (jint)writeFirstFragmentWithNetI2pRouterTunnelPendingGatewayMessage:(NetI2pRouterTunnelPendingGatewayMessage *)msg
                                                        withByteArray:(IOSByteArray *)target
                                                              withInt:(jint)offset;

- (jint)writeSubsequentFragmentWithNetI2pRouterTunnelPendingGatewayMessage:(NetI2pRouterTunnelPendingGatewayMessage *)msg
                                                             withByteArray:(IOSByteArray *)target
                                                                   withInt:(jint)offset;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTunnelTrivialPreprocessor)

J2OBJC_FIELD_SETTER(NetI2pRouterTunnelTrivialPreprocessor, _context_, NetI2pRouterRouterContext *)
J2OBJC_FIELD_SETTER(NetI2pRouterTunnelTrivialPreprocessor, _log_, NetI2pUtilLog *)

inline jint NetI2pRouterTunnelTrivialPreprocessor_get_PREPROCESSED_SIZE(void);
#define NetI2pRouterTunnelTrivialPreprocessor_PREPROCESSED_SIZE 1024
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTunnelTrivialPreprocessor, PREPROCESSED_SIZE, jint)

inline jint NetI2pRouterTunnelTrivialPreprocessor_get_IV_SIZE(void);
#define NetI2pRouterTunnelTrivialPreprocessor_IV_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTunnelTrivialPreprocessor, IV_SIZE, jint)

inline NetI2pUtilByteCache *NetI2pRouterTunnelTrivialPreprocessor_get__dataCache(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NetI2pUtilByteCache *NetI2pRouterTunnelTrivialPreprocessor__dataCache;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTunnelTrivialPreprocessor, _dataCache, NetI2pUtilByteCache *)

FOUNDATION_EXPORT void NetI2pRouterTunnelTrivialPreprocessor_initWithNetI2pRouterRouterContext_(NetI2pRouterTunnelTrivialPreprocessor *self, NetI2pRouterRouterContext *ctx);

FOUNDATION_EXPORT NetI2pRouterTunnelTrivialPreprocessor *new_NetI2pRouterTunnelTrivialPreprocessor_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTunnelTrivialPreprocessor *create_NetI2pRouterTunnelTrivialPreprocessor_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx);

FOUNDATION_EXPORT jint NetI2pRouterTunnelTrivialPreprocessor_getInstructionsSizeWithNetI2pRouterTunnelPendingGatewayMessage_(NetI2pRouterTunnelPendingGatewayMessage *msg);

FOUNDATION_EXPORT jint NetI2pRouterTunnelTrivialPreprocessor_getInstructionAugmentationSizeWithNetI2pRouterTunnelPendingGatewayMessage_withInt_withInt_(NetI2pRouterTunnelPendingGatewayMessage *msg, jint offset, jint instructionsSize);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTunnelTrivialPreprocessor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTunnelTrivialPreprocessor")
