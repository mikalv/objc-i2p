//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/OutboundSender.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "net/i2p/I2PAppContext.h"
#include "net/i2p/router/tunnel/OutboundGatewayProcessor.h"
#include "net/i2p/router/tunnel/OutboundSender.h"
#include "net/i2p/router/tunnel/TunnelCreatorConfig.h"
#include "net/i2p/router/tunnel/TunnelGateway.h"

@interface NetI2pRouterTunnelOutboundSender () {
 @public
  NetI2pRouterTunnelTunnelCreatorConfig *_config_;
  NetI2pRouterTunnelOutboundGatewayProcessor *_processor_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterTunnelOutboundSender, _config_, NetI2pRouterTunnelTunnelCreatorConfig *)
J2OBJC_FIELD_SETTER(NetI2pRouterTunnelOutboundSender, _processor_, NetI2pRouterTunnelOutboundGatewayProcessor *)

@implementation NetI2pRouterTunnelOutboundSender

- (instancetype)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
  withNetI2pRouterTunnelTunnelCreatorConfig:(NetI2pRouterTunnelTunnelCreatorConfig *)config {
  NetI2pRouterTunnelOutboundSender_initWithNetI2pI2PAppContext_withNetI2pRouterTunnelTunnelCreatorConfig_(self, ctx, config);
  return self;
}

- (jlong)sendPreprocessedWithByteArray:(IOSByteArray *)preprocessed
withNetI2pRouterTunnelTunnelGateway_Receiver:(id<NetI2pRouterTunnelTunnelGateway_Receiver>)receiver {
  [((NetI2pRouterTunnelOutboundGatewayProcessor *) nil_chk(_processor_)) processWithByteArray:preprocessed withInt:0 withInt:((IOSByteArray *) nil_chk(preprocessed))->size_];
  jlong rv = [((id<NetI2pRouterTunnelTunnelGateway_Receiver>) nil_chk(receiver)) receiveEncryptedWithByteArray:preprocessed];
  return rv;
}

- (void)dealloc {
  RELEASE_(_config_);
  RELEASE_(_processor_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pI2PAppContext:withNetI2pRouterTunnelTunnelCreatorConfig:);
  methods[1].selector = @selector(sendPreprocessedWithByteArray:withNetI2pRouterTunnelTunnelGateway_Receiver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_config_", "LNetI2pRouterTunnelTunnelCreatorConfig;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_processor_", "LNetI2pRouterTunnelOutboundGatewayProcessor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pI2PAppContext;LNetI2pRouterTunnelTunnelCreatorConfig;", "sendPreprocessed", "[BLNetI2pRouterTunnelTunnelGateway_Receiver;" };
  static const J2ObjcClassInfo _NetI2pRouterTunnelOutboundSender = { "OutboundSender", "net.i2p.router.tunnel", ptrTable, methods, fields, 7, 0x0, 2, 2, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterTunnelOutboundSender;
}

@end

void NetI2pRouterTunnelOutboundSender_initWithNetI2pI2PAppContext_withNetI2pRouterTunnelTunnelCreatorConfig_(NetI2pRouterTunnelOutboundSender *self, NetI2pI2PAppContext *ctx, NetI2pRouterTunnelTunnelCreatorConfig *config) {
  NSObject_init(self);
  JreStrongAssign(&self->_config_, config);
  JreStrongAssignAndConsume(&self->_processor_, new_NetI2pRouterTunnelOutboundGatewayProcessor_initWithNetI2pI2PAppContext_withNetI2pRouterTunnelTunnelCreatorConfig_(ctx, config));
}

NetI2pRouterTunnelOutboundSender *new_NetI2pRouterTunnelOutboundSender_initWithNetI2pI2PAppContext_withNetI2pRouterTunnelTunnelCreatorConfig_(NetI2pI2PAppContext *ctx, NetI2pRouterTunnelTunnelCreatorConfig *config) {
  J2OBJC_NEW_IMPL(NetI2pRouterTunnelOutboundSender, initWithNetI2pI2PAppContext_withNetI2pRouterTunnelTunnelCreatorConfig_, ctx, config)
}

NetI2pRouterTunnelOutboundSender *create_NetI2pRouterTunnelOutboundSender_initWithNetI2pI2PAppContext_withNetI2pRouterTunnelTunnelCreatorConfig_(NetI2pI2PAppContext *ctx, NetI2pRouterTunnelTunnelCreatorConfig *config) {
  J2OBJC_CREATE_IMPL(NetI2pRouterTunnelOutboundSender, initWithNetI2pI2PAppContext_withNetI2pRouterTunnelTunnelCreatorConfig_, ctx, config)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTunnelOutboundSender)
