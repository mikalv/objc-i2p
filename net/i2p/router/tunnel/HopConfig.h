//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/HopConfig.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTunnelHopConfig")
#ifdef RESTRICT_NetI2pRouterTunnelHopConfig
#define INCLUDE_ALL_NetI2pRouterTunnelHopConfig 0
#else
#define INCLUDE_ALL_NetI2pRouterTunnelHopConfig 1
#endif
#undef RESTRICT_NetI2pRouterTunnelHopConfig

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTunnelHopConfig_) && (INCLUDE_ALL_NetI2pRouterTunnelHopConfig || defined(INCLUDE_NetI2pRouterTunnelHopConfig))
#define NetI2pRouterTunnelHopConfig_

@class IOSByteArray;
@class NetI2pDataHash;
@class NetI2pDataSessionKey;
@class NetI2pDataTunnelId;

@interface NetI2pRouterTunnelHopConfig : NSObject
@property (readonly, class) jint REPLY_IV_LENGTH NS_SWIFT_NAME(REPLY_IV_LENGTH);

+ (jint)REPLY_IV_LENGTH;

#pragma mark Public

- (instancetype __nonnull)init;

- (jlong)getCreation;

- (jlong)getExpiration;

- (NetI2pDataSessionKey *)getIVKey;

- (NetI2pDataSessionKey *)getLayerKey;

- (jint)getProcessedMessagesCount;

- (NetI2pDataHash *)getReceiveFrom;

- (NetI2pDataTunnelId *)getReceiveTunnel;

- (IOSByteArray *)getReceiveTunnelId;

- (jint)getRecentMessagesCount;

- (IOSByteArray *)getReplyIV;

- (NetI2pDataSessionKey *)getReplyKey;

- (NetI2pDataHash *)getSendTo;

- (NetI2pDataTunnelId *)getSendTunnel;

- (IOSByteArray *)getSendTunnelId;

- (void)incrementProcessedMessages;

- (void)setCreationWithLong:(jlong)when;

- (void)setExpirationWithLong:(jlong)when;

- (void)setIVKeyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key;

- (void)setLayerKeyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key;

- (void)setReceiveFromWithNetI2pDataHash:(NetI2pDataHash *)from;

- (void)setReceiveTunnelIdWithByteArray:(IOSByteArray *)id_;

- (void)setReceiveTunnelIdWithNetI2pDataTunnelId:(NetI2pDataTunnelId *)id_;

- (void)setReplyIVWithByteArray:(IOSByteArray *)iv;

- (void)setReplyKeyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key;

- (void)setSendToWithNetI2pDataHash:(NetI2pDataHash *)to;

- (void)setSendTunnelIdWithByteArray:(IOSByteArray *)id_;

- (NSString *)description;

#pragma mark Package-Private

- (jint)getAndResetRecentMessagesCount;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTunnelHopConfig)

inline jint NetI2pRouterTunnelHopConfig_get_REPLY_IV_LENGTH(void);
#define NetI2pRouterTunnelHopConfig_REPLY_IV_LENGTH 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTunnelHopConfig, REPLY_IV_LENGTH, jint)

FOUNDATION_EXPORT void NetI2pRouterTunnelHopConfig_init(NetI2pRouterTunnelHopConfig *self);

FOUNDATION_EXPORT NetI2pRouterTunnelHopConfig *new_NetI2pRouterTunnelHopConfig_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTunnelHopConfig *create_NetI2pRouterTunnelHopConfig_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTunnelHopConfig)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTunnelHopConfig")
