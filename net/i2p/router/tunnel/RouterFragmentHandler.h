//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/RouterFragmentHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTunnelRouterFragmentHandler")
#ifdef RESTRICT_NetI2pRouterTunnelRouterFragmentHandler
#define INCLUDE_ALL_NetI2pRouterTunnelRouterFragmentHandler 0
#else
#define INCLUDE_ALL_NetI2pRouterTunnelRouterFragmentHandler 1
#endif
#undef RESTRICT_NetI2pRouterTunnelRouterFragmentHandler

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTunnelRouterFragmentHandler_) && (INCLUDE_ALL_NetI2pRouterTunnelRouterFragmentHandler || defined(INCLUDE_NetI2pRouterTunnelRouterFragmentHandler))
#define NetI2pRouterTunnelRouterFragmentHandler_

#define RESTRICT_NetI2pRouterTunnelFragmentHandler 1
#define INCLUDE_NetI2pRouterTunnelFragmentHandler 1
#include "net/i2p/router/tunnel/FragmentHandler.h"

@class NetI2pRouterRouterContext;
@protocol NetI2pRouterTunnelFragmentHandler_DefragmentedReceiver;

@interface NetI2pRouterTunnelRouterFragmentHandler : NetI2pRouterTunnelFragmentHandler

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
 withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver:(id<NetI2pRouterTunnelFragmentHandler_DefragmentedReceiver>)receiver;

#pragma mark Protected

- (void)noteCompletionWithLong:(jlong)messageId;

- (void)noteFailureWithLong:(jlong)messageId
               withNSString:(NSString *)status;

- (void)noteReceptionWithLong:(jlong)messageId
                      withInt:(jint)fragmentId
                       withId:(id)status;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTunnelRouterFragmentHandler)

FOUNDATION_EXPORT void NetI2pRouterTunnelRouterFragmentHandler_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver_(NetI2pRouterTunnelRouterFragmentHandler *self, NetI2pRouterRouterContext *context, id<NetI2pRouterTunnelFragmentHandler_DefragmentedReceiver> receiver);

FOUNDATION_EXPORT NetI2pRouterTunnelRouterFragmentHandler *new_NetI2pRouterTunnelRouterFragmentHandler_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver_(NetI2pRouterRouterContext *context, id<NetI2pRouterTunnelFragmentHandler_DefragmentedReceiver> receiver) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTunnelRouterFragmentHandler *create_NetI2pRouterTunnelRouterFragmentHandler_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver_(NetI2pRouterRouterContext *context, id<NetI2pRouterTunnelFragmentHandler_DefragmentedReceiver> receiver);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTunnelRouterFragmentHandler)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTunnelRouterFragmentHandler")
