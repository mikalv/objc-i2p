//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/BuildReplyHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTunnelBuildReplyHandler")
#ifdef RESTRICT_NetI2pRouterTunnelBuildReplyHandler
#define INCLUDE_ALL_NetI2pRouterTunnelBuildReplyHandler 0
#else
#define INCLUDE_ALL_NetI2pRouterTunnelBuildReplyHandler 1
#endif
#undef RESTRICT_NetI2pRouterTunnelBuildReplyHandler

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTunnelBuildReplyHandler_) && (INCLUDE_ALL_NetI2pRouterTunnelBuildReplyHandler || defined(INCLUDE_NetI2pRouterTunnelBuildReplyHandler))
#define NetI2pRouterTunnelBuildReplyHandler_

@class IOSIntArray;
@class NetI2pDataI2npTunnelBuildReplyMessage;
@class NetI2pI2PAppContext;
@class NetI2pRouterTunnelTunnelCreatorConfig;
@protocol JavaUtilList;

@interface NetI2pRouterTunnelBuildReplyHandler : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (IOSIntArray *)decryptWithNetI2pDataI2npTunnelBuildReplyMessage:(NetI2pDataI2npTunnelBuildReplyMessage *)reply
                        withNetI2pRouterTunnelTunnelCreatorConfig:(NetI2pRouterTunnelTunnelCreatorConfig *)cfg
                                                 withJavaUtilList:(id<JavaUtilList>)recordOrder;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTunnelBuildReplyHandler)

FOUNDATION_EXPORT void NetI2pRouterTunnelBuildReplyHandler_initWithNetI2pI2PAppContext_(NetI2pRouterTunnelBuildReplyHandler *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pRouterTunnelBuildReplyHandler *new_NetI2pRouterTunnelBuildReplyHandler_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTunnelBuildReplyHandler *create_NetI2pRouterTunnelBuildReplyHandler_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTunnelBuildReplyHandler)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTunnelBuildReplyHandler")
