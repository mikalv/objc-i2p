//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/OutboundGatewayMessage.java
//

#include "J2ObjC_source.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/data/TunnelId.h"
#include "net/i2p/data/i2np/DataMessage.h"
#include "net/i2p/data/i2np/DatabaseLookupMessage.h"
#include "net/i2p/data/i2np/DatabaseSearchReplyMessage.h"
#include "net/i2p/data/i2np/DatabaseStoreMessage.h"
#include "net/i2p/data/i2np/DeliveryStatusMessage.h"
#include "net/i2p/data/i2np/GarlicMessage.h"
#include "net/i2p/data/i2np/I2NPMessage.h"
#include "net/i2p/data/i2np/TunnelBuildMessage.h"
#include "net/i2p/data/i2np/TunnelBuildReplyMessage.h"
#include "net/i2p/data/i2np/TunnelDataMessage.h"
#include "net/i2p/data/i2np/TunnelGatewayMessage.h"
#include "net/i2p/data/i2np/VariableTunnelBuildMessage.h"
#include "net/i2p/data/i2np/VariableTunnelBuildReplyMessage.h"
#include "net/i2p/router/tunnel/OutboundGatewayMessage.h"
#include "net/i2p/router/tunnel/PendingGatewayMessage.h"

@interface NetI2pRouterTunnelOutboundGatewayMessage () {
 @public
  jlong _seqNum_;
  jint _priority_;
}

+ (jint)getPriorityWithNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)message;

@end

__attribute__((unused)) static jint NetI2pRouterTunnelOutboundGatewayMessage_getPriorityWithNetI2pDataI2npI2NPMessage_(id<NetI2pDataI2npI2NPMessage> message);

@implementation NetI2pRouterTunnelOutboundGatewayMessage

- (instancetype)initWithNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)message
                               withNetI2pDataHash:(NetI2pDataHash *)toRouter
                           withNetI2pDataTunnelId:(NetI2pDataTunnelId *)toTunnel {
  NetI2pRouterTunnelOutboundGatewayMessage_initWithNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pDataTunnelId_(self, message, toRouter, toTunnel);
  return self;
}

- (void)setSeqNumWithLong:(jlong)num {
  _seqNum_ = num;
}

- (jlong)getSeqNum {
  return _seqNum_;
}

- (jint)getPriority {
  return _priority_;
}

+ (jint)getPriorityWithNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)message {
  return NetI2pRouterTunnelOutboundGatewayMessage_getPriorityWithNetI2pDataI2npI2NPMessage_(message);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pDataI2npI2NPMessage:withNetI2pDataHash:withNetI2pDataTunnelId:);
  methods[1].selector = @selector(setSeqNumWithLong:);
  methods[2].selector = @selector(getSeqNum);
  methods[3].selector = @selector(getPriority);
  methods[4].selector = @selector(getPriorityWithNetI2pDataI2npI2NPMessage:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_seqNum_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_priority_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pDataI2npI2NPMessage;LNetI2pDataHash;LNetI2pDataTunnelId;", "setSeqNum", "J", "getPriority", "LNetI2pDataI2npI2NPMessage;" };
  static const J2ObjcClassInfo _NetI2pRouterTunnelOutboundGatewayMessage = { "OutboundGatewayMessage", "net.i2p.router.tunnel", ptrTable, methods, fields, 7, 0x0, 5, 2, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterTunnelOutboundGatewayMessage;
}

@end

void NetI2pRouterTunnelOutboundGatewayMessage_initWithNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pDataTunnelId_(NetI2pRouterTunnelOutboundGatewayMessage *self, id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toRouter, NetI2pDataTunnelId *toTunnel) {
  NetI2pRouterTunnelPendingGatewayMessage_initWithNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pDataTunnelId_(self, message, toRouter, toTunnel);
  self->_priority_ = NetI2pRouterTunnelOutboundGatewayMessage_getPriorityWithNetI2pDataI2npI2NPMessage_(message);
}

NetI2pRouterTunnelOutboundGatewayMessage *new_NetI2pRouterTunnelOutboundGatewayMessage_initWithNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pDataTunnelId_(id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toRouter, NetI2pDataTunnelId *toTunnel) {
  J2OBJC_NEW_IMPL(NetI2pRouterTunnelOutboundGatewayMessage, initWithNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pDataTunnelId_, message, toRouter, toTunnel)
}

NetI2pRouterTunnelOutboundGatewayMessage *create_NetI2pRouterTunnelOutboundGatewayMessage_initWithNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pDataTunnelId_(id<NetI2pDataI2npI2NPMessage> message, NetI2pDataHash *toRouter, NetI2pDataTunnelId *toTunnel) {
  J2OBJC_CREATE_IMPL(NetI2pRouterTunnelOutboundGatewayMessage, initWithNetI2pDataI2npI2NPMessage_withNetI2pDataHash_withNetI2pDataTunnelId_, message, toRouter, toTunnel)
}

jint NetI2pRouterTunnelOutboundGatewayMessage_getPriorityWithNetI2pDataI2npI2NPMessage_(id<NetI2pDataI2npI2NPMessage> message) {
  NetI2pRouterTunnelOutboundGatewayMessage_initialize();
  switch ([((id<NetI2pDataI2npI2NPMessage>) nil_chk(message)) getType]) {
    case NetI2pDataI2npDeliveryStatusMessage_MESSAGE_TYPE:
    return 1000;
    case NetI2pDataI2npTunnelBuildMessage_MESSAGE_TYPE:
    case NetI2pDataI2npVariableTunnelBuildMessage_MESSAGE_TYPE:
    return 500;
    case NetI2pDataI2npDatabaseStoreMessage_MESSAGE_TYPE:
    return 400;
    case NetI2pDataI2npDatabaseLookupMessage_MESSAGE_TYPE:
    return 300;
    case NetI2pDataI2npGarlicMessage_MESSAGE_TYPE:
    return 200;
    case NetI2pDataI2npDatabaseSearchReplyMessage_MESSAGE_TYPE:
    case NetI2pDataI2npDataMessage_MESSAGE_TYPE:
    case NetI2pDataI2npTunnelBuildReplyMessage_MESSAGE_TYPE:
    case NetI2pDataI2npTunnelDataMessage_MESSAGE_TYPE:
    case NetI2pDataI2npTunnelGatewayMessage_MESSAGE_TYPE:
    case NetI2pDataI2npVariableTunnelBuildReplyMessage_MESSAGE_TYPE:
    default:
    return 100;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTunnelOutboundGatewayMessage)
