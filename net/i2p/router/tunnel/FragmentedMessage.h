//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/FragmentedMessage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTunnelFragmentedMessage")
#ifdef RESTRICT_NetI2pRouterTunnelFragmentedMessage
#define INCLUDE_ALL_NetI2pRouterTunnelFragmentedMessage 0
#else
#define INCLUDE_ALL_NetI2pRouterTunnelFragmentedMessage 1
#endif
#undef RESTRICT_NetI2pRouterTunnelFragmentedMessage

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTunnelFragmentedMessage_) && (INCLUDE_ALL_NetI2pRouterTunnelFragmentedMessage || defined(INCLUDE_NetI2pRouterTunnelFragmentedMessage))
#define NetI2pRouterTunnelFragmentedMessage_

@class IOSByteArray;
@class NetI2pDataHash;
@class NetI2pDataTunnelId;
@class NetI2pI2PAppContext;
@class NetI2pUtilSimpleTimer2_TimedEvent;

@interface NetI2pRouterTunnelFragmentedMessage : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                             withLong:(jlong)messageId;

- (void)failed;

- (jint)getCompleteSize;

- (NetI2pUtilSimpleTimer2_TimedEvent *)getExpireEvent;

- (jint)getFragmentCount;

- (jlong)getLifetime;

- (jlong)getMessageId;

- (jboolean)getReleased;

- (jlong)getReleasedAfter;

- (NetI2pDataHash *)getTargetRouter;

- (NetI2pDataTunnelId *)getTargetTunnel;

- (jboolean)isComplete;

- (jboolean)receiveWithByteArray:(IOSByteArray *)payload
                         withInt:(jint)offset
                         withInt:(jint)length
                     withBoolean:(jboolean)isLast
              withNetI2pDataHash:(NetI2pDataHash *)toRouter
          withNetI2pDataTunnelId:(NetI2pDataTunnelId *)toTunnel;

- (jboolean)receiveWithInt:(jint)fragmentNum
             withByteArray:(IOSByteArray *)payload
                   withInt:(jint)offset
                   withInt:(jint)length
               withBoolean:(jboolean)isLast;

- (void)setExpireEventWithNetI2pUtilSimpleTimer2_TimedEvent:(NetI2pUtilSimpleTimer2_TimedEvent *)evt;

- (IOSByteArray *)toByteArray;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTunnelFragmentedMessage)

FOUNDATION_EXPORT void NetI2pRouterTunnelFragmentedMessage_initWithNetI2pI2PAppContext_withLong_(NetI2pRouterTunnelFragmentedMessage *self, NetI2pI2PAppContext *ctx, jlong messageId);

FOUNDATION_EXPORT NetI2pRouterTunnelFragmentedMessage *new_NetI2pRouterTunnelFragmentedMessage_initWithNetI2pI2PAppContext_withLong_(NetI2pI2PAppContext *ctx, jlong messageId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTunnelFragmentedMessage *create_NetI2pRouterTunnelFragmentedMessage_initWithNetI2pI2PAppContext_withLong_(NetI2pI2PAppContext *ctx, jlong messageId);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTunnelFragmentedMessage)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTunnelFragmentedMessage")
