//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tunnel/RouterFragmentHandler.java
//

#include "J2ObjC_source.h"
#include "net/i2p/router/MessageHistory.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/tunnel/FragmentHandler.h"
#include "net/i2p/router/tunnel/RouterFragmentHandler.h"
#include "net/i2p/util/Log.h"

@implementation NetI2pRouterTunnelRouterFragmentHandler

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context
withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver:(id<NetI2pRouterTunnelFragmentHandler_DefragmentedReceiver>)receiver {
  NetI2pRouterTunnelRouterFragmentHandler_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver_(self, context, receiver);
  return self;
}

- (void)noteReceptionWithLong:(jlong)messageId
                      withInt:(jint)fragmentId
                       withId:(id)status {
  if ([((NetI2pUtilLog *) nil_chk(_log_)) shouldLogWithInt:NetI2pUtilLog_INFO]) [_log_ infoWithNSString:JreStrcat("$I$J$@", @"Received fragment ", fragmentId, @" for message ", messageId, @": ", status)];
  [((NetI2pRouterMessageHistory *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) messageHistory])) receiveTunnelFragmentWithLong:messageId withInt:fragmentId withId:status];
}

- (void)noteCompletionWithLong:(jlong)messageId {
  if ([((NetI2pUtilLog *) nil_chk(_log_)) shouldLogWithInt:NetI2pUtilLog_INFO]) [_log_ infoWithNSString:JreStrcat("$J", @"Received complete message ", messageId)];
  [((NetI2pRouterMessageHistory *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) messageHistory])) receiveTunnelFragmentCompleteWithLong:messageId];
}

- (void)noteFailureWithLong:(jlong)messageId
               withNSString:(NSString *)status {
  if ([((NetI2pUtilLog *) nil_chk(_log_)) shouldLogWithInt:NetI2pUtilLog_INFO]) [_log_ infoWithNSString:JreStrcat("$J$$", @"Dropped message ", messageId, @": ", status)];
  [((NetI2pRouterMessageHistory *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) messageHistory])) droppedFragmentedMessageWithLong:messageId withNSString:status];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver:);
  methods[1].selector = @selector(noteReceptionWithLong:withInt:withId:);
  methods[2].selector = @selector(noteCompletionWithLong:);
  methods[3].selector = @selector(noteFailureWithLong:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;LNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver;", "noteReception", "JILNSObject;", "noteCompletion", "J", "noteFailure", "JLNSString;" };
  static const J2ObjcClassInfo _NetI2pRouterTunnelRouterFragmentHandler = { "RouterFragmentHandler", "net.i2p.router.tunnel", ptrTable, methods, NULL, 7, 0x0, 4, 0, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterTunnelRouterFragmentHandler;
}

@end

void NetI2pRouterTunnelRouterFragmentHandler_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver_(NetI2pRouterTunnelRouterFragmentHandler *self, NetI2pRouterRouterContext *context, id<NetI2pRouterTunnelFragmentHandler_DefragmentedReceiver> receiver) {
  NetI2pRouterTunnelFragmentHandler_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver_(self, context, receiver);
}

NetI2pRouterTunnelRouterFragmentHandler *new_NetI2pRouterTunnelRouterFragmentHandler_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver_(NetI2pRouterRouterContext *context, id<NetI2pRouterTunnelFragmentHandler_DefragmentedReceiver> receiver) {
  J2OBJC_NEW_IMPL(NetI2pRouterTunnelRouterFragmentHandler, initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver_, context, receiver)
}

NetI2pRouterTunnelRouterFragmentHandler *create_NetI2pRouterTunnelRouterFragmentHandler_initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver_(NetI2pRouterRouterContext *context, id<NetI2pRouterTunnelFragmentHandler_DefragmentedReceiver> receiver) {
  J2OBJC_CREATE_IMPL(NetI2pRouterTunnelRouterFragmentHandler, initWithNetI2pRouterRouterContext_withNetI2pRouterTunnelFragmentHandler_DefragmentedReceiver_, context, receiver)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTunnelRouterFragmentHandler)
