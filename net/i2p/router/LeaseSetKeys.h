//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/LeaseSetKeys.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterLeaseSetKeys")
#ifdef RESTRICT_NetI2pRouterLeaseSetKeys
#define INCLUDE_ALL_NetI2pRouterLeaseSetKeys 0
#else
#define INCLUDE_ALL_NetI2pRouterLeaseSetKeys 1
#endif
#undef RESTRICT_NetI2pRouterLeaseSetKeys

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterLeaseSetKeys_) && (INCLUDE_ALL_NetI2pRouterLeaseSetKeys || defined(INCLUDE_NetI2pRouterLeaseSetKeys))
#define NetI2pRouterLeaseSetKeys_

@class NetI2pDataDestination;
@class NetI2pDataPrivateKey;
@class NetI2pDataSigningPrivateKey;

@interface NetI2pRouterLeaseSetKeys : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                        withNetI2pDataSigningPrivateKey:(NetI2pDataSigningPrivateKey *)revocationKey
                               withNetI2pDataPrivateKey:(NetI2pDataPrivateKey *)decryptionKey;

- (NetI2pDataPrivateKey *)getDecryptionKey;

- (NetI2pDataSigningPrivateKey *)getRevocationKey;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterLeaseSetKeys)

FOUNDATION_EXPORT void NetI2pRouterLeaseSetKeys_initWithNetI2pDataDestination_withNetI2pDataSigningPrivateKey_withNetI2pDataPrivateKey_(NetI2pRouterLeaseSetKeys *self, NetI2pDataDestination *dest, NetI2pDataSigningPrivateKey *revocationKey, NetI2pDataPrivateKey *decryptionKey);

FOUNDATION_EXPORT NetI2pRouterLeaseSetKeys *new_NetI2pRouterLeaseSetKeys_initWithNetI2pDataDestination_withNetI2pDataSigningPrivateKey_withNetI2pDataPrivateKey_(NetI2pDataDestination *dest, NetI2pDataSigningPrivateKey *revocationKey, NetI2pDataPrivateKey *decryptionKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterLeaseSetKeys *create_NetI2pRouterLeaseSetKeys_initWithNetI2pDataDestination_withNetI2pDataSigningPrivateKey_withNetI2pDataPrivateKey_(NetI2pDataDestination *dest, NetI2pDataSigningPrivateKey *revocationKey, NetI2pDataPrivateKey *decryptionKey);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterLeaseSetKeys)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterLeaseSetKeys")
