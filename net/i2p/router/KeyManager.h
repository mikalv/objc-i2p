//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/KeyManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterKeyManager")
#ifdef RESTRICT_NetI2pRouterKeyManager
#define INCLUDE_ALL_NetI2pRouterKeyManager 0
#else
#define INCLUDE_ALL_NetI2pRouterKeyManager 1
#endif
#undef RESTRICT_NetI2pRouterKeyManager

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterKeyManager_) && (INCLUDE_ALL_NetI2pRouterKeyManager || defined(INCLUDE_NetI2pRouterKeyManager))
#define NetI2pRouterKeyManager_

@class NetI2pDataDestination;
@class NetI2pDataHash;
@class NetI2pDataPrivateKey;
@class NetI2pDataPublicKey;
@class NetI2pDataSigningPrivateKey;
@class NetI2pDataSigningPublicKey;
@class NetI2pRouterLeaseSetKeys;
@class NetI2pRouterRouterContext;

@interface NetI2pRouterKeyManager : NSObject
@property (readonly, copy, class) NSString *PROP_KEYDIR NS_SWIFT_NAME(PROP_KEYDIR);
@property (readonly, copy, class) NSString *DEFAULT_KEYDIR NS_SWIFT_NAME(DEFAULT_KEYDIR);
@property (readonly, copy, class) NSString *KEYFILE_PRIVATE_ENC NS_SWIFT_NAME(KEYFILE_PRIVATE_ENC);
@property (readonly, copy, class) NSString *KEYFILE_PUBLIC_ENC NS_SWIFT_NAME(KEYFILE_PUBLIC_ENC);
@property (readonly, copy, class) NSString *KEYFILE_PRIVATE_SIGNING NS_SWIFT_NAME(KEYFILE_PRIVATE_SIGNING);
@property (readonly, copy, class) NSString *KEYFILE_PUBLIC_SIGNING NS_SWIFT_NAME(KEYFILE_PUBLIC_SIGNING);

+ (NSString *)PROP_KEYDIR;

+ (NSString *)DEFAULT_KEYDIR;

+ (NSString *)KEYFILE_PRIVATE_ENC;

+ (NSString *)KEYFILE_PUBLIC_ENC;

+ (NSString *)KEYFILE_PRIVATE_SIGNING;

+ (NSString *)KEYFILE_PUBLIC_SIGNING;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context;

- (NetI2pRouterLeaseSetKeys *)getKeysWithNetI2pDataDestination:(NetI2pDataDestination *)dest;

- (NetI2pRouterLeaseSetKeys *)getKeysWithNetI2pDataHash:(NetI2pDataHash *)dest;

- (NetI2pDataPrivateKey *)getPrivateKey;

- (NetI2pDataPublicKey *)getPublicKey;

- (NetI2pDataSigningPrivateKey *)getSigningPrivateKey;

- (NetI2pDataSigningPublicKey *)getSigningPublicKey;

- (void)registerKeysWithNetI2pDataDestination:(NetI2pDataDestination *)dest
              withNetI2pDataSigningPrivateKey:(NetI2pDataSigningPrivateKey *)leaseRevocationPrivateKey
                     withNetI2pDataPrivateKey:(NetI2pDataPrivateKey *)endpointDecryptionKey;

- (void)setKeysWithNetI2pDataPublicKey:(NetI2pDataPublicKey *)key1
              withNetI2pDataPrivateKey:(NetI2pDataPrivateKey *)key2
        withNetI2pDataSigningPublicKey:(NetI2pDataSigningPublicKey *)key3
       withNetI2pDataSigningPrivateKey:(NetI2pDataSigningPrivateKey *)key4;

- (void)startup;

- (NetI2pRouterLeaseSetKeys *)unregisterKeysWithNetI2pDataDestination:(NetI2pDataDestination *)dest;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterKeyManager)

inline NSString *NetI2pRouterKeyManager_get_PROP_KEYDIR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterKeyManager_PROP_KEYDIR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterKeyManager, PROP_KEYDIR, NSString *)

inline NSString *NetI2pRouterKeyManager_get_DEFAULT_KEYDIR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterKeyManager_DEFAULT_KEYDIR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterKeyManager, DEFAULT_KEYDIR, NSString *)

inline NSString *NetI2pRouterKeyManager_get_KEYFILE_PRIVATE_ENC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterKeyManager_KEYFILE_PRIVATE_ENC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterKeyManager, KEYFILE_PRIVATE_ENC, NSString *)

inline NSString *NetI2pRouterKeyManager_get_KEYFILE_PUBLIC_ENC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterKeyManager_KEYFILE_PUBLIC_ENC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterKeyManager, KEYFILE_PUBLIC_ENC, NSString *)

inline NSString *NetI2pRouterKeyManager_get_KEYFILE_PRIVATE_SIGNING(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterKeyManager_KEYFILE_PRIVATE_SIGNING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterKeyManager, KEYFILE_PRIVATE_SIGNING, NSString *)

inline NSString *NetI2pRouterKeyManager_get_KEYFILE_PUBLIC_SIGNING(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterKeyManager_KEYFILE_PUBLIC_SIGNING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterKeyManager, KEYFILE_PUBLIC_SIGNING, NSString *)

FOUNDATION_EXPORT void NetI2pRouterKeyManager_initWithNetI2pRouterRouterContext_(NetI2pRouterKeyManager *self, NetI2pRouterRouterContext *context);

FOUNDATION_EXPORT NetI2pRouterKeyManager *new_NetI2pRouterKeyManager_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterKeyManager *create_NetI2pRouterKeyManager_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterKeyManager)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterKeyManager")
