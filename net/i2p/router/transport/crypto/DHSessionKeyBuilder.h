//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/crypto/DHSessionKeyBuilder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportCryptoDHSessionKeyBuilder")
#ifdef RESTRICT_NetI2pRouterTransportCryptoDHSessionKeyBuilder
#define INCLUDE_ALL_NetI2pRouterTransportCryptoDHSessionKeyBuilder 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportCryptoDHSessionKeyBuilder 1
#endif
#undef RESTRICT_NetI2pRouterTransportCryptoDHSessionKeyBuilder
#ifdef INCLUDE_NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner
#define INCLUDE_NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportCryptoDHSessionKeyBuilder_) && (INCLUDE_ALL_NetI2pRouterTransportCryptoDHSessionKeyBuilder || defined(INCLUDE_NetI2pRouterTransportCryptoDHSessionKeyBuilder))
#define NetI2pRouterTransportCryptoDHSessionKeyBuilder_

@class IOSByteArray;
@class JavaMathBigInteger;
@class NetI2pDataByteArray;
@class NetI2pDataSessionKey;
@class NetI2pI2PAppContext;

@interface NetI2pRouterTransportCryptoDHSessionKeyBuilder : NSObject

#pragma mark Public

- (NetI2pDataByteArray *)getExtraBytes;

- (JavaMathBigInteger *)getMyPublicValue;

- (IOSByteArray *)getMyPublicValueBytes;

- (JavaMathBigInteger *)getPeerPublicValue;

- (IOSByteArray *)getPeerPublicValueBytes;

- (NetI2pDataSessionKey *)getSessionKey;

- (void)setPeerPublicValueWithJavaMathBigInteger:(JavaMathBigInteger *)peerVal;

- (void)setPeerPublicValueWithByteArray:(IOSByteArray *)val;

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportCryptoDHSessionKeyBuilder)

FOUNDATION_EXPORT void NetI2pRouterTransportCryptoDHSessionKeyBuilder_init(NetI2pRouterTransportCryptoDHSessionKeyBuilder *self);

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder *new_NetI2pRouterTransportCryptoDHSessionKeyBuilder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder *create_NetI2pRouterTransportCryptoDHSessionKeyBuilder_init(void);

FOUNDATION_EXPORT void NetI2pRouterTransportCryptoDHSessionKeyBuilder_initWithNetI2pI2PAppContext_(NetI2pRouterTransportCryptoDHSessionKeyBuilder *self, NetI2pI2PAppContext *ctx);

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder *new_NetI2pRouterTransportCryptoDHSessionKeyBuilder_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder *create_NetI2pRouterTransportCryptoDHSessionKeyBuilder_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportCryptoDHSessionKeyBuilder)

#endif

#if !defined (NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory_) && (INCLUDE_ALL_NetI2pRouterTransportCryptoDHSessionKeyBuilder || defined(INCLUDE_NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory))
#define NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory_

@class NetI2pRouterTransportCryptoDHSessionKeyBuilder;

@protocol NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory < JavaObject >

- (NetI2pRouterTransportCryptoDHSessionKeyBuilder *)getBuilder;

- (void)returnUnusedWithNetI2pRouterTransportCryptoDHSessionKeyBuilder:(NetI2pRouterTransportCryptoDHSessionKeyBuilder *)builder;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory)

#endif

#if !defined (NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner_) && (INCLUDE_ALL_NetI2pRouterTransportCryptoDHSessionKeyBuilder || defined(INCLUDE_NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner))
#define NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner_

#define RESTRICT_NetI2pUtilI2PThread 1
#define INCLUDE_NetI2pUtilI2PThread 1
#include "net/i2p/util/I2PThread.h"

@class JavaLangThreadGroup;
@class NetI2pI2PAppContext;
@class NetI2pRouterTransportCryptoDHSessionKeyBuilder;
@protocol JavaLangRunnable;

@interface NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner : NetI2pUtilI2PThread < NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory >

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx;

- (NetI2pRouterTransportCryptoDHSessionKeyBuilder *)getBuilder;

- (void)returnUnusedWithNetI2pRouterTransportCryptoDHSessionKeyBuilder:(NetI2pRouterTransportCryptoDHSessionKeyBuilder *)builder;

- (void)run;

- (void)shutdown;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangRunnable:(id<JavaLangRunnable>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangRunnable:(id<JavaLangRunnable>)arg0
                                      withNSString:(NSString *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangRunnable:(id<JavaLangRunnable>)arg0
                                      withNSString:(NSString *)arg1
                                       withBoolean:(jboolean)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThreadGroup:(JavaLangThreadGroup *)arg0
                                 withJavaLangRunnable:(id<JavaLangRunnable>)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThreadGroup:(JavaLangThreadGroup *)arg0
                                 withJavaLangRunnable:(id<JavaLangRunnable>)arg1
                                         withNSString:(NSString *)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner)

FOUNDATION_EXPORT void NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner_initWithNetI2pI2PAppContext_(NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner *self, NetI2pI2PAppContext *ctx);

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner *new_NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner *create_NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportCryptoDHSessionKeyBuilder_PrecalcRunner)

#endif

#if !defined (NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException_) && (INCLUDE_ALL_NetI2pRouterTransportCryptoDHSessionKeyBuilder || defined(INCLUDE_NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException))
#define NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException_

#define RESTRICT_NetI2pI2PException 1
#define INCLUDE_NetI2pI2PException 1
#include "net/i2p/I2PException.h"

@class JavaLangThrowable;

@interface NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException : NetI2pI2PException

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)msg;

- (instancetype __nonnull)initWithNSString:(NSString *)msg
                     withJavaLangThrowable:(JavaLangThrowable *)t;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException)

FOUNDATION_EXPORT void NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException_init(NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException *self);

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException *new_NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException *create_NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException_init(void);

FOUNDATION_EXPORT void NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException_initWithNSString_(NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException *self, NSString *msg);

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException *new_NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException *create_NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException_initWithNSString_withJavaLangThrowable_(NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException *self, NSString *msg, JavaLangThrowable *t);

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException *new_NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException *create_NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *t);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportCryptoDHSessionKeyBuilder_InvalidPublicParameterException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportCryptoDHSessionKeyBuilder")
