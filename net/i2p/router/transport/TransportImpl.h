//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/TransportImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportTransportImpl")
#ifdef RESTRICT_NetI2pRouterTransportTransportImpl
#define INCLUDE_ALL_NetI2pRouterTransportTransportImpl 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportTransportImpl 1
#endif
#undef RESTRICT_NetI2pRouterTransportTransportImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportTransportImpl_) && (INCLUDE_ALL_NetI2pRouterTransportTransportImpl || defined(INCLUDE_NetI2pRouterTransportTransportImpl))
#define NetI2pRouterTransportTransportImpl_

#define RESTRICT_NetI2pRouterTransportTransport 1
#define INCLUDE_NetI2pRouterTransportTransport 1
#include "net/i2p/router/transport/Transport.h"

@class IOSByteArray;
@class JavaIoWriter;
@class JavaNetInetAddress;
@class JavaUtilVector;
@class NetI2pDataHash;
@class NetI2pDataRouterRouterAddress;
@class NetI2pDataRouterRouterIdentity;
@class NetI2pDataRouterRouterInfo;
@class NetI2pRouterCommSystemFacade_Status;
@class NetI2pRouterOutNetMessage;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportTransportUtil_IPv6Config;
@class NetI2pRouterTransportTransport_AddressSource;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol NetI2pDataI2npI2NPMessage;
@protocol NetI2pRouterTransportTransportEventListener;

@interface NetI2pRouterTransportTransportImpl : NSObject < NetI2pRouterTransportTransport > {
 @public
  id<JavaUtilList> _currentAddresses_;
  NetI2pRouterRouterContext *_context_;
}
@property (readonly, class) jboolean ADJUST_COST NS_SWIFT_NAME(ADJUST_COST);
@property (readonly, class) jint CONGESTION_COST_ADJUSTMENT NS_SWIFT_NAME(CONGESTION_COST_ADJUSTMENT);

+ (jboolean)ADJUST_COST;

+ (jint)CONGESTION_COST_ADJUSTMENT;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context;

- (jboolean)allowLocal;

- (jint)countActivePeers;

- (jint)countActiveSendPeers;

- (jint)countPeers;

- (void)externalAddressReceivedWithNetI2pRouterTransportTransport_AddressSource:(NetI2pRouterTransportTransport_AddressSource *)source
                                                                  withByteArray:(IOSByteArray *)ip
                                                                        withInt:(jint)port;

- (void)externalAddressRemovedWithNetI2pRouterTransportTransport_AddressSource:(NetI2pRouterTransportTransport_AddressSource *)source
                                                                   withBoolean:(jboolean)ipv6;

- (void)forwardPortStatusWithByteArray:(IOSByteArray *)ip
                               withInt:(jint)port
                               withInt:(jint)externalPort
                           withBoolean:(jboolean)success
                          withNSString:(NSString *)reason;

- (NSString *)getAltStyle;

- (JavaUtilVector *)getClockSkews;

- (NetI2pDataRouterRouterAddress *)getCurrentAddressWithBoolean:(jboolean)ipv6;

- (id<JavaUtilList>)getCurrentAddresses;

+ (IOSByteArray *)getIPWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (NetI2pRouterTransportTransportUtil_IPv6Config *)getIPv6Config;

- (jint)getMaxConnections;

- (id<JavaUtilList>)getMostRecentErrorMessages;

- (NetI2pRouterCommSystemFacade_Status *)getReachabilityStatus;

- (jint)getRequestedPort;

- (jboolean)hasCurrentAddress;

- (jboolean)haveCapacity;

- (jboolean)haveCapacityWithInt:(jint)pct;

- (jboolean)isBackloggedWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (jboolean)isEstablishedWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (jboolean)isIPv4Firewalled;

- (jboolean)isIPv6Firewalled;

- (jboolean)isUnreachableWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)markReachableWithNetI2pDataHash:(NetI2pDataHash *)peer
                            withBoolean:(jboolean)isInbound;

- (void)markUnreachableWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)mayDisconnectWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)messageReceivedWithNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)inMsg
                  withNetI2pDataRouterRouterIdentity:(NetI2pDataRouterRouterIdentity *)remoteIdent
                                  withNetI2pDataHash:(NetI2pDataHash *)remoteIdentHash
                                            withLong:(jlong)msToReceive
                                             withInt:(jint)bytesReceived;

- (void)recheckReachability;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg
                            withNSString:(NSString *)urlBase
                                 withInt:(jint)sortFlags;

- (void)sendWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg;

- (void)setIPWithNetI2pDataHash:(NetI2pDataHash *)peer
                  withByteArray:(IOSByteArray *)ip;

- (void)setListenerWithNetI2pRouterTransportTransportEventListener:(id<NetI2pRouterTransportTransportEventListener>)listener;

- (id<JavaUtilList>)updateAddress;

- (jboolean)wasUnreachableWithNetI2pDataHash:(NetI2pDataHash *)peer;

#pragma mark Protected

- (NSString *)_tWithNSString:(NSString *)s;

- (NSString *)_tWithNSString:(NSString *)s
                      withId:(id)o;

- (void)afterSendWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg
                                   withBoolean:(jboolean)sendSuccessful;

- (void)afterSendWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg
                                   withBoolean:(jboolean)sendSuccessful
                                   withBoolean:(jboolean)allowRequeue;

- (void)afterSendWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg
                                   withBoolean:(jboolean)sendSuccessful
                                   withBoolean:(jboolean)allowRequeue
                                      withLong:(jlong)msToSend;

- (void)afterSendWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg
                                   withBoolean:(jboolean)sendSuccessful
                                      withLong:(jlong)msToSend;

- (NetI2pRouterOutNetMessage *)getNextMessage;

- (id<JavaUtilCollection>)getSavedLocalAddresses;

- (id<JavaUtilList>)getTargetAddressesWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)target;

- (jboolean)isPubliclyRoutableWithByteArray:(IOSByteArray *)addr;

- (NSString *)ngettextWithNSString:(NSString *)s
                      withNSString:(NSString *)p
                           withInt:(jint)n;

- (void)outboundMessageReady;

- (void)removeAddressWithBoolean:(jboolean)ipv6;

- (void)removeAddressWithNetI2pDataRouterRouterAddress:(NetI2pDataRouterRouterAddress *)address;

- (void)replaceAddressWithNetI2pDataRouterRouterAddress:(NetI2pDataRouterRouterAddress *)address;

- (void)saveLocalAddressWithJavaNetInetAddress:(JavaNetInetAddress *)address;

#pragma mark Package-Private

+ (void)clearCaches;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportTransportImpl)

J2OBJC_FIELD_SETTER(NetI2pRouterTransportTransportImpl, _currentAddresses_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(NetI2pRouterTransportTransportImpl, _context_, NetI2pRouterRouterContext *)

inline jboolean NetI2pRouterTransportTransportImpl_get_ADJUST_COST(void);
#define NetI2pRouterTransportTransportImpl_ADJUST_COST true
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportTransportImpl, ADJUST_COST, jboolean)

inline jint NetI2pRouterTransportTransportImpl_get_CONGESTION_COST_ADJUSTMENT(void);
#define NetI2pRouterTransportTransportImpl_CONGESTION_COST_ADJUSTMENT 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportTransportImpl, CONGESTION_COST_ADJUSTMENT, jint)

FOUNDATION_EXPORT void NetI2pRouterTransportTransportImpl_initWithNetI2pRouterRouterContext_(NetI2pRouterTransportTransportImpl *self, NetI2pRouterRouterContext *context);

FOUNDATION_EXPORT IOSByteArray *NetI2pRouterTransportTransportImpl_getIPWithNetI2pDataHash_(NetI2pDataHash *peer);

FOUNDATION_EXPORT void NetI2pRouterTransportTransportImpl_clearCaches(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportTransportImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportTransportImpl")
