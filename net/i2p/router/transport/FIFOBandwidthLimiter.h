//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/FIFOBandwidthLimiter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthLimiter")
#ifdef RESTRICT_NetI2pRouterTransportFIFOBandwidthLimiter
#define INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthLimiter 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthLimiter 1
#endif
#undef RESTRICT_NetI2pRouterTransportFIFOBandwidthLimiter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportFIFOBandwidthLimiter_) && (INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthLimiter || defined(INCLUDE_NetI2pRouterTransportFIFOBandwidthLimiter))
#define NetI2pRouterTransportFIFOBandwidthLimiter_

@class JavaIoWriter;
@class JavaLangStringBuilder;
@class NetI2pI2PAppContext;
@protocol JavaUtilList;
@protocol NetI2pRouterTransportFIFOBandwidthLimiter_Request;

@interface NetI2pRouterTransportFIFOBandwidthLimiter : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (jint)getCurrentParticipatingBandwidth;

- (jint)getInboundBurstBytes;

- (jint)getInboundBurstKBytesPerSecond;

- (jint)getInboundKBytesPerSecond;

- (jint)getOutboundBurstBytes;

- (jint)getOutboundBurstKBytesPerSecond;

- (jint)getOutboundKBytesPerSecond;

- (jfloat)getReceiveBps;

- (jfloat)getReceiveBps15s;

- (jfloat)getSendBps;

- (jfloat)getSendBps15s;

- (jlong)getTotalAllocatedInboundBytes;

- (jlong)getTotalAllocatedOutboundBytes;

- (jlong)now;

- (void)reinitialize;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg;

- (id<NetI2pRouterTransportFIFOBandwidthLimiter_Request>)requestInboundWithInt:(jint)bytesIn
                                                                  withNSString:(NSString *)purpose;

- (id<NetI2pRouterTransportFIFOBandwidthLimiter_Request>)requestOutboundWithInt:(jint)bytesOut
                                                                        withInt:(jint)priority
                                                                   withNSString:(NSString *)purpose;

- (void)sentParticipatingMessageWithInt:(jint)size;

- (void)shutdown;

#pragma mark Package-Private

- (JavaLangStringBuilder *)getStatus;

- (void)refillBandwidthQueuesWithJavaUtilList:(id<JavaUtilList>)buf
                                     withLong:(jlong)bytesInbound
                                     withLong:(jlong)bytesOutbound
                                     withLong:(jlong)maxBurstIn
                                     withLong:(jlong)maxBurstOut;

- (void)setInboundBurstBytesWithInt:(jint)bytes;

- (void)setInboundBurstKBpsWithInt:(jint)kbytesPerSecond;

- (void)setInboundUnlimitedWithBoolean:(jboolean)isUnlimited;

- (void)setOutboundBurstBytesWithInt:(jint)bytes;

- (void)setOutboundBurstKBpsWithInt:(jint)kbytesPerSecond;

- (void)setOutboundUnlimitedWithBoolean:(jboolean)isUnlimited;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportFIFOBandwidthLimiter)

FOUNDATION_EXPORT void NetI2pRouterTransportFIFOBandwidthLimiter_initWithNetI2pI2PAppContext_(NetI2pRouterTransportFIFOBandwidthLimiter *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pRouterTransportFIFOBandwidthLimiter *new_NetI2pRouterTransportFIFOBandwidthLimiter_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportFIFOBandwidthLimiter *create_NetI2pRouterTransportFIFOBandwidthLimiter_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportFIFOBandwidthLimiter)

#endif

#if !defined (NetI2pRouterTransportFIFOBandwidthLimiter_Request_) && (INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthLimiter || defined(INCLUDE_NetI2pRouterTransportFIFOBandwidthLimiter_Request))
#define NetI2pRouterTransportFIFOBandwidthLimiter_Request_

#define RESTRICT_NetI2pRouterUtilPQEntry 1
#define INCLUDE_NetI2pRouterUtilPQEntry 1
#include "net/i2p/router/util/PQEntry.h"

@protocol NetI2pRouterTransportFIFOBandwidthLimiter_CompleteListener;

@protocol NetI2pRouterTransportFIFOBandwidthLimiter_Request < NetI2pRouterUtilPQEntry, JavaObject >

- (jlong)getRequestTime;

- (jint)getTotalRequested;

- (jint)getPendingRequested;

- (void)waitForNextAllocation;

- (void)abort;

- (jboolean)getAborted;

- (void)setCompleteListenerWithNetI2pRouterTransportFIFOBandwidthLimiter_CompleteListener:(id<NetI2pRouterTransportFIFOBandwidthLimiter_CompleteListener>)lsnr;

- (void)attachWithId:(id)obj;

- (id)attachment;

- (id<NetI2pRouterTransportFIFOBandwidthLimiter_CompleteListener>)getCompleteListener;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportFIFOBandwidthLimiter_Request)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportFIFOBandwidthLimiter_Request)

#endif

#if !defined (NetI2pRouterTransportFIFOBandwidthLimiter_CompleteListener_) && (INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthLimiter || defined(INCLUDE_NetI2pRouterTransportFIFOBandwidthLimiter_CompleteListener))
#define NetI2pRouterTransportFIFOBandwidthLimiter_CompleteListener_

@protocol NetI2pRouterTransportFIFOBandwidthLimiter_Request;

@protocol NetI2pRouterTransportFIFOBandwidthLimiter_CompleteListener < JavaObject >

- (void)completeWithNetI2pRouterTransportFIFOBandwidthLimiter_Request:(id<NetI2pRouterTransportFIFOBandwidthLimiter_Request>)req;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportFIFOBandwidthLimiter_CompleteListener)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportFIFOBandwidthLimiter_CompleteListener)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthLimiter")
