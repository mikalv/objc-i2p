//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/udp/OutboundMessageFragments.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportUdpOutboundMessageFragments")
#ifdef RESTRICT_NetI2pRouterTransportUdpOutboundMessageFragments
#define INCLUDE_ALL_NetI2pRouterTransportUdpOutboundMessageFragments 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportUdpOutboundMessageFragments 1
#endif
#undef RESTRICT_NetI2pRouterTransportUdpOutboundMessageFragments

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportUdpOutboundMessageFragments_) && (INCLUDE_ALL_NetI2pRouterTransportUdpOutboundMessageFragments || defined(INCLUDE_NetI2pRouterTransportUdpOutboundMessageFragments))
#define NetI2pRouterTransportUdpOutboundMessageFragments_

@class NetI2pRouterOutNetMessage;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportUdpOutboundMessageState;
@class NetI2pRouterTransportUdpPeerState;
@class NetI2pRouterTransportUdpUDPTransport;
@protocol JavaUtilList;
@protocol NetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle;

@interface NetI2pRouterTransportUdpOutboundMessageFragments : NSObject
@property (readonly, class) jint MAX_VOLLEYS NS_SWIFT_NAME(MAX_VOLLEYS);

+ (jint)MAX_VOLLEYS;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                   withNetI2pRouterTransportUdpUDPTransport:(NetI2pRouterTransportUdpUDPTransport *)transport
withNetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle:(id<NetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle>)throttle;

- (void)addWithJavaUtilList:(id<JavaUtilList>)states
withNetI2pRouterTransportUdpPeerState:(NetI2pRouterTransportUdpPeerState *)peer;

- (void)addWithNetI2pRouterTransportUdpOutboundMessageState:(NetI2pRouterTransportUdpOutboundMessageState *)state
                      withNetI2pRouterTransportUdpPeerState:(NetI2pRouterTransportUdpPeerState *)peer;

- (void)addWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg;

- (void)addWithNetI2pRouterTransportUdpPeerState:(NetI2pRouterTransportUdpPeerState *)peer
                                         withInt:(jint)size;

- (id<JavaUtilList>)getNextVolley;

- (void)shutdown;

- (void)startup;

- (jboolean)waitForMoreAllowed;

#pragma mark Package-Private

- (void)dropPeerWithNetI2pRouterTransportUdpPeerState:(NetI2pRouterTransportUdpPeerState *)peer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpOutboundMessageFragments)

inline jint NetI2pRouterTransportUdpOutboundMessageFragments_get_MAX_VOLLEYS(void);
#define NetI2pRouterTransportUdpOutboundMessageFragments_MAX_VOLLEYS 10
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpOutboundMessageFragments, MAX_VOLLEYS, jint)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpOutboundMessageFragments_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpUDPTransport_withNetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle_(NetI2pRouterTransportUdpOutboundMessageFragments *self, NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpUDPTransport *transport, id<NetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle> throttle);

FOUNDATION_EXPORT NetI2pRouterTransportUdpOutboundMessageFragments *new_NetI2pRouterTransportUdpOutboundMessageFragments_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpUDPTransport_withNetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpUDPTransport *transport, id<NetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle> throttle) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpOutboundMessageFragments *create_NetI2pRouterTransportUdpOutboundMessageFragments_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpUDPTransport_withNetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpUDPTransport *transport, id<NetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle> throttle);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpOutboundMessageFragments)

#endif

#if !defined (NetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle_) && (INCLUDE_ALL_NetI2pRouterTransportUdpOutboundMessageFragments || defined(INCLUDE_NetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle))
#define NetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle_

@class NetI2pDataHash;

@protocol NetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle < JavaObject >

- (void)chokeWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)unchokeWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (jboolean)isChokedWithNetI2pDataHash:(NetI2pDataHash *)peer;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpOutboundMessageFragments_ActiveThrottle)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportUdpOutboundMessageFragments")
