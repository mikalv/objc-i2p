//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/udp/InboundEstablishState.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportUdpInboundEstablishState")
#ifdef RESTRICT_NetI2pRouterTransportUdpInboundEstablishState
#define INCLUDE_ALL_NetI2pRouterTransportUdpInboundEstablishState 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportUdpInboundEstablishState 1
#endif
#undef RESTRICT_NetI2pRouterTransportUdpInboundEstablishState

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportUdpInboundEstablishState_) && (INCLUDE_ALL_NetI2pRouterTransportUdpInboundEstablishState || defined(INCLUDE_NetI2pRouterTransportUdpInboundEstablishState))
#define NetI2pRouterTransportUdpInboundEstablishState_

@class IOSByteArray;
@class NetI2pDataRouterRouterIdentity;
@class NetI2pDataSessionKey;
@class NetI2pDataSignature;
@class NetI2pRouterOutNetMessage;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportCryptoDHSessionKeyBuilder;
@class NetI2pRouterTransportUdpInboundEstablishState_InboundState;
@class NetI2pRouterTransportUdpRemoteHostId;
@class NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader;
@class NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader;

@interface NetI2pRouterTransportUdpInboundEstablishState : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                              withByteArray:(IOSByteArray *)remoteIP
                                                    withInt:(jint)remotePort
                                                    withInt:(jint)localPort
         withNetI2pRouterTransportCryptoDHSessionKeyBuilder:(NetI2pRouterTransportCryptoDHSessionKeyBuilder *)dh;

- (void)addMessageWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg;

- (void)complete;

- (void)createdPacketSent;

- (void)fail;

- (void)generateSessionKey;

- (NetI2pDataSessionKey *)getCipherKey;

- (NetI2pDataRouterRouterIdentity *)getConfirmedIdentity;

- (jlong)getEstablishBeginTime;

- (jlong)getLifetime;

- (NetI2pDataSessionKey *)getMACKey;

- (NetI2pRouterOutNetMessage *)getNextQueuedMessage;

- (jlong)getNextSendTime;

- (IOSByteArray *)getReceivedOurIP;

- (IOSByteArray *)getReceivedX;

- (IOSByteArray *)getSentIP;

- (jint)getSentPort;

- (jlong)getSentRelayTag;

- (NetI2pDataSignature *)getSentSignature;

- (jlong)getSentSignedOnTime;

- (IOSByteArray *)getSentY;

- (NetI2pRouterTransportUdpInboundEstablishState_InboundState *)getState;

- (jboolean)isComplete;

- (jboolean)isIntroductionRequested;

- (void)prepareSessionCreated;

- (void)receiveSessionConfirmedWithNetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader:(NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader *)conf;

- (void)receiveSessionRequestWithNetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader:(NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader *)req;

- (jboolean)sessionRequestReceived;

- (void)setSentRelayTagWithLong:(jlong)tag;

- (NSString *)description;

#pragma mark Package-Private

- (NetI2pRouterTransportUdpRemoteHostId *)getRemoteHostId;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpInboundEstablishState)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpInboundEstablishState_initWithNetI2pRouterRouterContext_withByteArray_withInt_withInt_withNetI2pRouterTransportCryptoDHSessionKeyBuilder_(NetI2pRouterTransportUdpInboundEstablishState *self, NetI2pRouterRouterContext *ctx, IOSByteArray *remoteIP, jint remotePort, jint localPort, NetI2pRouterTransportCryptoDHSessionKeyBuilder *dh);

FOUNDATION_EXPORT NetI2pRouterTransportUdpInboundEstablishState *new_NetI2pRouterTransportUdpInboundEstablishState_initWithNetI2pRouterRouterContext_withByteArray_withInt_withInt_withNetI2pRouterTransportCryptoDHSessionKeyBuilder_(NetI2pRouterRouterContext *ctx, IOSByteArray *remoteIP, jint remotePort, jint localPort, NetI2pRouterTransportCryptoDHSessionKeyBuilder *dh) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpInboundEstablishState *create_NetI2pRouterTransportUdpInboundEstablishState_initWithNetI2pRouterRouterContext_withByteArray_withInt_withInt_withNetI2pRouterTransportCryptoDHSessionKeyBuilder_(NetI2pRouterRouterContext *ctx, IOSByteArray *remoteIP, jint remotePort, jint localPort, NetI2pRouterTransportCryptoDHSessionKeyBuilder *dh);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpInboundEstablishState)

#endif

#if !defined (NetI2pRouterTransportUdpInboundEstablishState_InboundState_) && (INCLUDE_ALL_NetI2pRouterTransportUdpInboundEstablishState || defined(INCLUDE_NetI2pRouterTransportUdpInboundEstablishState_InboundState))
#define NetI2pRouterTransportUdpInboundEstablishState_InboundState_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pRouterTransportUdpInboundEstablishState_InboundState_Enum) {
  NetI2pRouterTransportUdpInboundEstablishState_InboundState_Enum_IB_STATE_UNKNOWN = 0,
  NetI2pRouterTransportUdpInboundEstablishState_InboundState_Enum_IB_STATE_REQUEST_RECEIVED = 1,
  NetI2pRouterTransportUdpInboundEstablishState_InboundState_Enum_IB_STATE_CREATED_SENT = 2,
  NetI2pRouterTransportUdpInboundEstablishState_InboundState_Enum_IB_STATE_CONFIRMED_PARTIALLY = 3,
  NetI2pRouterTransportUdpInboundEstablishState_InboundState_Enum_IB_STATE_CONFIRMED_COMPLETELY = 4,
  NetI2pRouterTransportUdpInboundEstablishState_InboundState_Enum_IB_STATE_FAILED = 5,
  NetI2pRouterTransportUdpInboundEstablishState_InboundState_Enum_IB_STATE_COMPLETE = 6,
};

@interface NetI2pRouterTransportUdpInboundEstablishState_InboundState : JavaLangEnum

@property (readonly, class, nonnull) NetI2pRouterTransportUdpInboundEstablishState_InboundState *IB_STATE_UNKNOWN NS_SWIFT_NAME(IB_STATE_UNKNOWN);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpInboundEstablishState_InboundState *IB_STATE_REQUEST_RECEIVED NS_SWIFT_NAME(IB_STATE_REQUEST_RECEIVED);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpInboundEstablishState_InboundState *IB_STATE_CREATED_SENT NS_SWIFT_NAME(IB_STATE_CREATED_SENT);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpInboundEstablishState_InboundState *IB_STATE_CONFIRMED_PARTIALLY NS_SWIFT_NAME(IB_STATE_CONFIRMED_PARTIALLY);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpInboundEstablishState_InboundState *IB_STATE_CONFIRMED_COMPLETELY NS_SWIFT_NAME(IB_STATE_CONFIRMED_COMPLETELY);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpInboundEstablishState_InboundState *IB_STATE_FAILED NS_SWIFT_NAME(IB_STATE_FAILED);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpInboundEstablishState_InboundState *IB_STATE_COMPLETE NS_SWIFT_NAME(IB_STATE_COMPLETE);
+ (NetI2pRouterTransportUdpInboundEstablishState_InboundState * __nonnull)IB_STATE_UNKNOWN;

+ (NetI2pRouterTransportUdpInboundEstablishState_InboundState * __nonnull)IB_STATE_REQUEST_RECEIVED;

+ (NetI2pRouterTransportUdpInboundEstablishState_InboundState * __nonnull)IB_STATE_CREATED_SENT;

+ (NetI2pRouterTransportUdpInboundEstablishState_InboundState * __nonnull)IB_STATE_CONFIRMED_PARTIALLY;

+ (NetI2pRouterTransportUdpInboundEstablishState_InboundState * __nonnull)IB_STATE_CONFIRMED_COMPLETELY;

+ (NetI2pRouterTransportUdpInboundEstablishState_InboundState * __nonnull)IB_STATE_FAILED;

+ (NetI2pRouterTransportUdpInboundEstablishState_InboundState * __nonnull)IB_STATE_COMPLETE;

#pragma mark Public

+ (NetI2pRouterTransportUdpInboundEstablishState_InboundState *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pRouterTransportUdpInboundEstablishState_InboundState_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportUdpInboundEstablishState_InboundState)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pRouterTransportUdpInboundEstablishState_InboundState *NetI2pRouterTransportUdpInboundEstablishState_InboundState_values_[];

inline NetI2pRouterTransportUdpInboundEstablishState_InboundState *NetI2pRouterTransportUdpInboundEstablishState_InboundState_get_IB_STATE_UNKNOWN(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpInboundEstablishState_InboundState, IB_STATE_UNKNOWN)

inline NetI2pRouterTransportUdpInboundEstablishState_InboundState *NetI2pRouterTransportUdpInboundEstablishState_InboundState_get_IB_STATE_REQUEST_RECEIVED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpInboundEstablishState_InboundState, IB_STATE_REQUEST_RECEIVED)

inline NetI2pRouterTransportUdpInboundEstablishState_InboundState *NetI2pRouterTransportUdpInboundEstablishState_InboundState_get_IB_STATE_CREATED_SENT(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpInboundEstablishState_InboundState, IB_STATE_CREATED_SENT)

inline NetI2pRouterTransportUdpInboundEstablishState_InboundState *NetI2pRouterTransportUdpInboundEstablishState_InboundState_get_IB_STATE_CONFIRMED_PARTIALLY(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpInboundEstablishState_InboundState, IB_STATE_CONFIRMED_PARTIALLY)

inline NetI2pRouterTransportUdpInboundEstablishState_InboundState *NetI2pRouterTransportUdpInboundEstablishState_InboundState_get_IB_STATE_CONFIRMED_COMPLETELY(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpInboundEstablishState_InboundState, IB_STATE_CONFIRMED_COMPLETELY)

inline NetI2pRouterTransportUdpInboundEstablishState_InboundState *NetI2pRouterTransportUdpInboundEstablishState_InboundState_get_IB_STATE_FAILED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpInboundEstablishState_InboundState, IB_STATE_FAILED)

inline NetI2pRouterTransportUdpInboundEstablishState_InboundState *NetI2pRouterTransportUdpInboundEstablishState_InboundState_get_IB_STATE_COMPLETE(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpInboundEstablishState_InboundState, IB_STATE_COMPLETE)

FOUNDATION_EXPORT IOSObjectArray *NetI2pRouterTransportUdpInboundEstablishState_InboundState_values(void);

FOUNDATION_EXPORT NetI2pRouterTransportUdpInboundEstablishState_InboundState *NetI2pRouterTransportUdpInboundEstablishState_InboundState_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pRouterTransportUdpInboundEstablishState_InboundState *NetI2pRouterTransportUdpInboundEstablishState_InboundState_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpInboundEstablishState_InboundState)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportUdpInboundEstablishState")
