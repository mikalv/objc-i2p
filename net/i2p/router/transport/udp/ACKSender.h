//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/udp/ACKSender.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportUdpACKSender")
#ifdef RESTRICT_NetI2pRouterTransportUdpACKSender
#define INCLUDE_ALL_NetI2pRouterTransportUdpACKSender 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportUdpACKSender 1
#endif
#undef RESTRICT_NetI2pRouterTransportUdpACKSender

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportUdpACKSender_) && (INCLUDE_ALL_NetI2pRouterTransportUdpACKSender || defined(INCLUDE_NetI2pRouterTransportUdpACKSender))
#define NetI2pRouterTransportUdpACKSender_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportUdpPeerState;
@class NetI2pRouterTransportUdpUDPTransport;

@interface NetI2pRouterTransportUdpACKSender : NSObject < JavaLangRunnable >
@property (readonly, class) jint ACK_FREQUENCY NS_SWIFT_NAME(ACK_FREQUENCY);

+ (jint)ACK_FREQUENCY;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                   withNetI2pRouterTransportUdpUDPTransport:(NetI2pRouterTransportUdpUDPTransport *)transport;

- (void)ackPeerWithNetI2pRouterTransportUdpPeerState:(NetI2pRouterTransportUdpPeerState *)peer;

- (void)run;

- (void)shutdown;

- (void)startup;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpACKSender)

inline jint NetI2pRouterTransportUdpACKSender_get_ACK_FREQUENCY(void);
#define NetI2pRouterTransportUdpACKSender_ACK_FREQUENCY 250
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpACKSender, ACK_FREQUENCY, jint)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpACKSender_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpUDPTransport_(NetI2pRouterTransportUdpACKSender *self, NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpUDPTransport *transport);

FOUNDATION_EXPORT NetI2pRouterTransportUdpACKSender *new_NetI2pRouterTransportUdpACKSender_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpUDPTransport_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpUDPTransport *transport) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpACKSender *create_NetI2pRouterTransportUdpACKSender_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpUDPTransport_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpUDPTransport *transport);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpACKSender)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportUdpACKSender")
