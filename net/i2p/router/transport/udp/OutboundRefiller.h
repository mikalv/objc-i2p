//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/udp/OutboundRefiller.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportUdpOutboundRefiller")
#ifdef RESTRICT_NetI2pRouterTransportUdpOutboundRefiller
#define INCLUDE_ALL_NetI2pRouterTransportUdpOutboundRefiller 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportUdpOutboundRefiller 1
#endif
#undef RESTRICT_NetI2pRouterTransportUdpOutboundRefiller

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportUdpOutboundRefiller_) && (INCLUDE_ALL_NetI2pRouterTransportUdpOutboundRefiller || defined(INCLUDE_NetI2pRouterTransportUdpOutboundRefiller))
#define NetI2pRouterTransportUdpOutboundRefiller_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportUdpOutboundMessageFragments;
@protocol NetI2pRouterTransportUdpMessageQueue;

@interface NetI2pRouterTransportUdpOutboundRefiller : NSObject < JavaLangRunnable >

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
       withNetI2pRouterTransportUdpOutboundMessageFragments:(NetI2pRouterTransportUdpOutboundMessageFragments *)fragments
                   withNetI2pRouterTransportUdpMessageQueue:(id<NetI2pRouterTransportUdpMessageQueue>)messages;

- (void)run;

- (void)shutdown;

- (void)startup;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpOutboundRefiller)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpOutboundRefiller_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpOutboundMessageFragments_withNetI2pRouterTransportUdpMessageQueue_(NetI2pRouterTransportUdpOutboundRefiller *self, NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpOutboundMessageFragments *fragments, id<NetI2pRouterTransportUdpMessageQueue> messages);

FOUNDATION_EXPORT NetI2pRouterTransportUdpOutboundRefiller *new_NetI2pRouterTransportUdpOutboundRefiller_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpOutboundMessageFragments_withNetI2pRouterTransportUdpMessageQueue_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpOutboundMessageFragments *fragments, id<NetI2pRouterTransportUdpMessageQueue> messages) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpOutboundRefiller *create_NetI2pRouterTransportUdpOutboundRefiller_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpOutboundMessageFragments_withNetI2pRouterTransportUdpMessageQueue_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpOutboundMessageFragments *fragments, id<NetI2pRouterTransportUdpMessageQueue> messages);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpOutboundRefiller)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportUdpOutboundRefiller")
