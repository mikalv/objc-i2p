//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/udp/UDPAddress.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportUdpUDPAddress")
#ifdef RESTRICT_NetI2pRouterTransportUdpUDPAddress
#define INCLUDE_ALL_NetI2pRouterTransportUdpUDPAddress 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportUdpUDPAddress 1
#endif
#undef RESTRICT_NetI2pRouterTransportUdpUDPAddress

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportUdpUDPAddress_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPAddress || defined(INCLUDE_NetI2pRouterTransportUdpUDPAddress))
#define NetI2pRouterTransportUdpUDPAddress_

@class IOSByteArray;
@class JavaNetInetAddress;
@class NetI2pDataRouterRouterAddress;

@interface NetI2pRouterTransportUdpUDPAddress : NSObject
@property (readonly, copy, class) NSString *PROP_PORT NS_SWIFT_NAME(PROP_PORT);
@property (readonly, copy, class) NSString *PROP_HOST NS_SWIFT_NAME(PROP_HOST);
@property (readonly, copy, class) NSString *PROP_INTRO_KEY NS_SWIFT_NAME(PROP_INTRO_KEY);
@property (readonly, copy, class) NSString *PROP_MTU NS_SWIFT_NAME(PROP_MTU);
@property (readonly, copy, class) NSString *PROP_CAPACITY NS_SWIFT_NAME(PROP_CAPACITY);
@property (readonly, class) jchar CAPACITY_TESTING NS_SWIFT_NAME(CAPACITY_TESTING);
@property (readonly, class) jchar CAPACITY_INTRODUCER NS_SWIFT_NAME(CAPACITY_INTRODUCER);
@property (readonly, copy, class) NSString *PROP_INTRO_HOST_PREFIX NS_SWIFT_NAME(PROP_INTRO_HOST_PREFIX);
@property (readonly, copy, class) NSString *PROP_INTRO_PORT_PREFIX NS_SWIFT_NAME(PROP_INTRO_PORT_PREFIX);
@property (readonly, copy, class) NSString *PROP_INTRO_KEY_PREFIX NS_SWIFT_NAME(PROP_INTRO_KEY_PREFIX);
@property (readonly, copy, class) NSString *PROP_INTRO_TAG_PREFIX NS_SWIFT_NAME(PROP_INTRO_TAG_PREFIX);
@property (readonly, copy, class) NSString *PROP_INTRO_EXP_PREFIX NS_SWIFT_NAME(PROP_INTRO_EXP_PREFIX);
@property (readonly, class) jint MAX_INTRODUCERS NS_SWIFT_NAME(MAX_INTRODUCERS);

+ (NSString *)PROP_PORT;

+ (NSString *)PROP_HOST;

+ (NSString *)PROP_INTRO_KEY;

+ (NSString *)PROP_MTU;

+ (NSString *)PROP_CAPACITY;

+ (jchar)CAPACITY_TESTING;

+ (jchar)CAPACITY_INTRODUCER;

+ (NSString *)PROP_INTRO_HOST_PREFIX;

+ (NSString *)PROP_INTRO_PORT_PREFIX;

+ (NSString *)PROP_INTRO_KEY_PREFIX;

+ (NSString *)PROP_INTRO_TAG_PREFIX;

+ (NSString *)PROP_INTRO_EXP_PREFIX;

+ (jint)MAX_INTRODUCERS;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pDataRouterRouterAddress:(NetI2pDataRouterRouterAddress *)addr;

- (NSString *)getHost;

- (jint)getPort;

- (NSString *)description;

#pragma mark Package-Private

+ (void)clearCache;

- (JavaNetInetAddress *)getHostAddress;

- (jint)getIntroducerCount;

- (jlong)getIntroducerExpirationWithInt:(jint)i;

- (JavaNetInetAddress *)getIntroducerHostWithInt:(jint)i;

- (IOSByteArray *)getIntroducerKeyWithInt:(jint)i;

- (jint)getIntroducerPortWithInt:(jint)i;

- (jlong)getIntroducerTagWithInt:(jint)i;

- (IOSByteArray *)getIntroKey;

- (jint)getMTU;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportUdpUDPAddress)

inline NSString *NetI2pRouterTransportUdpUDPAddress_get_PROP_PORT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportUdpUDPAddress_PROP_PORT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportUdpUDPAddress, PROP_PORT, NSString *)

inline NSString *NetI2pRouterTransportUdpUDPAddress_get_PROP_HOST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportUdpUDPAddress_PROP_HOST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportUdpUDPAddress, PROP_HOST, NSString *)

inline NSString *NetI2pRouterTransportUdpUDPAddress_get_PROP_INTRO_KEY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportUdpUDPAddress_PROP_INTRO_KEY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportUdpUDPAddress, PROP_INTRO_KEY, NSString *)

inline NSString *NetI2pRouterTransportUdpUDPAddress_get_PROP_MTU(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportUdpUDPAddress_PROP_MTU;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportUdpUDPAddress, PROP_MTU, NSString *)

inline NSString *NetI2pRouterTransportUdpUDPAddress_get_PROP_CAPACITY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportUdpUDPAddress_PROP_CAPACITY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportUdpUDPAddress, PROP_CAPACITY, NSString *)

inline jchar NetI2pRouterTransportUdpUDPAddress_get_CAPACITY_TESTING(void);
#define NetI2pRouterTransportUdpUDPAddress_CAPACITY_TESTING 'B'
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPAddress, CAPACITY_TESTING, jchar)

inline jchar NetI2pRouterTransportUdpUDPAddress_get_CAPACITY_INTRODUCER(void);
#define NetI2pRouterTransportUdpUDPAddress_CAPACITY_INTRODUCER 'C'
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPAddress, CAPACITY_INTRODUCER, jchar)

inline NSString *NetI2pRouterTransportUdpUDPAddress_get_PROP_INTRO_HOST_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportUdpUDPAddress_PROP_INTRO_HOST_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportUdpUDPAddress, PROP_INTRO_HOST_PREFIX, NSString *)

inline NSString *NetI2pRouterTransportUdpUDPAddress_get_PROP_INTRO_PORT_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportUdpUDPAddress_PROP_INTRO_PORT_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportUdpUDPAddress, PROP_INTRO_PORT_PREFIX, NSString *)

inline NSString *NetI2pRouterTransportUdpUDPAddress_get_PROP_INTRO_KEY_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportUdpUDPAddress_PROP_INTRO_KEY_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportUdpUDPAddress, PROP_INTRO_KEY_PREFIX, NSString *)

inline NSString *NetI2pRouterTransportUdpUDPAddress_get_PROP_INTRO_TAG_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportUdpUDPAddress_PROP_INTRO_TAG_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportUdpUDPAddress, PROP_INTRO_TAG_PREFIX, NSString *)

inline NSString *NetI2pRouterTransportUdpUDPAddress_get_PROP_INTRO_EXP_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportUdpUDPAddress_PROP_INTRO_EXP_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportUdpUDPAddress, PROP_INTRO_EXP_PREFIX, NSString *)

inline jint NetI2pRouterTransportUdpUDPAddress_get_MAX_INTRODUCERS(void);
#define NetI2pRouterTransportUdpUDPAddress_MAX_INTRODUCERS 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPAddress, MAX_INTRODUCERS, jint)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPAddress_initWithNetI2pDataRouterRouterAddress_(NetI2pRouterTransportUdpUDPAddress *self, NetI2pDataRouterRouterAddress *addr);

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPAddress *new_NetI2pRouterTransportUdpUDPAddress_initWithNetI2pDataRouterRouterAddress_(NetI2pDataRouterRouterAddress *addr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPAddress *create_NetI2pRouterTransportUdpUDPAddress_initWithNetI2pDataRouterRouterAddress_(NetI2pDataRouterRouterAddress *addr);

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPAddress_clearCache(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPAddress)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportUdpUDPAddress")
