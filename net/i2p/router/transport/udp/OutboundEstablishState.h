//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/udp/OutboundEstablishState.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportUdpOutboundEstablishState")
#ifdef RESTRICT_NetI2pRouterTransportUdpOutboundEstablishState
#define INCLUDE_ALL_NetI2pRouterTransportUdpOutboundEstablishState 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportUdpOutboundEstablishState 1
#endif
#undef RESTRICT_NetI2pRouterTransportUdpOutboundEstablishState

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportUdpOutboundEstablishState_) && (INCLUDE_ALL_NetI2pRouterTransportUdpOutboundEstablishState || defined(INCLUDE_NetI2pRouterTransportUdpOutboundEstablishState))
#define NetI2pRouterTransportUdpOutboundEstablishState_

@class IOSByteArray;
@class NetI2pDataRouterRouterIdentity;
@class NetI2pDataSessionKey;
@class NetI2pDataSignature;
@class NetI2pRouterOutNetMessage;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportUdpOutboundEstablishState_OutboundState;
@class NetI2pRouterTransportUdpRemoteHostId;
@class NetI2pRouterTransportUdpUDPAddress;
@class NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader;
@protocol NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory;

@interface NetI2pRouterTransportUdpOutboundEstablishState : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                   withNetI2pRouterTransportUdpRemoteHostId:(NetI2pRouterTransportUdpRemoteHostId *)claimedAddress
                   withNetI2pRouterTransportUdpRemoteHostId:(NetI2pRouterTransportUdpRemoteHostId *)remoteHostId
                         withNetI2pDataRouterRouterIdentity:(NetI2pDataRouterRouterIdentity *)remotePeer
                                                withBoolean:(jboolean)allowExtendedOptions
                                                withBoolean:(jboolean)needIntroduction
                                   withNetI2pDataSessionKey:(NetI2pDataSessionKey *)introKey
                     withNetI2pRouterTransportUdpUDPAddress:(NetI2pRouterTransportUdpUDPAddress *)addr
 withNetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory:(id<NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory>)dh;

- (void)addMessageWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg;

- (jboolean)complete;

- (void)confirmedPacketsSent;

- (void)dataReceived;

- (void)fail;

- (NetI2pDataSessionKey *)getCipherKey;

- (jlong)getConfirmedSentTime;

- (jlong)getEstablishBeginTime;

- (NetI2pDataSessionKey *)getIntroKey;

- (jlong)getIntroNonce;

- (jlong)getIntroSentTime;

- (jlong)getLifetime;

- (NetI2pDataSessionKey *)getMACKey;

- (NetI2pRouterOutNetMessage *)getNextQueuedMessage;

- (jlong)getNextSendTime;

- (IOSByteArray *)getReceivedIP;

- (jint)getReceivedPort;

- (jlong)getReceivedRelayTag;

- (jlong)getReceivedSignedOnTime;

- (NetI2pRouterTransportUdpUDPAddress *)getRemoteAddress;

- (NetI2pDataRouterRouterIdentity *)getRemoteIdentity;

- (jlong)getRequestSentTime;

- (IOSByteArray *)getSentIP;

- (jint)getSentPort;

- (NetI2pDataSignature *)getSentSignature;

- (jlong)getSentSignedOnTime;

- (IOSByteArray *)getSentX;

- (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *)getState;

- (void)introducedWithByteArray:(IOSByteArray *)bobIP
                        withInt:(jint)bobPort;

- (void)introductionFailed;

- (void)introSent;

- (jboolean)isExtendedOptionsAllowed;

- (jboolean)isFirstMessageOurDSM;

- (jboolean)needIntroduction;

- (void)prepareSessionConfirmed;

- (void)receiveSessionCreatedWithNetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader:(NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader *)reader;

- (void)requestSent;

- (void)setIntroNonceWithLong:(jlong)nonce;

- (NSString *)description;

- (jboolean)validateSessionCreated;

#pragma mark Package-Private

- (NetI2pRouterTransportUdpRemoteHostId *)getClaimedAddress;

- (NetI2pRouterTransportUdpRemoteHostId *)getRemoteHostId;

- (jboolean)receiveHolePunch;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpOutboundEstablishState)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpOutboundEstablishState_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpRemoteHostId_withNetI2pRouterTransportUdpRemoteHostId_withNetI2pDataRouterRouterIdentity_withBoolean_withBoolean_withNetI2pDataSessionKey_withNetI2pRouterTransportUdpUDPAddress_withNetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory_(NetI2pRouterTransportUdpOutboundEstablishState *self, NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpRemoteHostId *claimedAddress, NetI2pRouterTransportUdpRemoteHostId *remoteHostId, NetI2pDataRouterRouterIdentity *remotePeer, jboolean allowExtendedOptions, jboolean needIntroduction, NetI2pDataSessionKey *introKey, NetI2pRouterTransportUdpUDPAddress *addr, id<NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory> dh);

FOUNDATION_EXPORT NetI2pRouterTransportUdpOutboundEstablishState *new_NetI2pRouterTransportUdpOutboundEstablishState_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpRemoteHostId_withNetI2pRouterTransportUdpRemoteHostId_withNetI2pDataRouterRouterIdentity_withBoolean_withBoolean_withNetI2pDataSessionKey_withNetI2pRouterTransportUdpUDPAddress_withNetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpRemoteHostId *claimedAddress, NetI2pRouterTransportUdpRemoteHostId *remoteHostId, NetI2pDataRouterRouterIdentity *remotePeer, jboolean allowExtendedOptions, jboolean needIntroduction, NetI2pDataSessionKey *introKey, NetI2pRouterTransportUdpUDPAddress *addr, id<NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory> dh) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpOutboundEstablishState *create_NetI2pRouterTransportUdpOutboundEstablishState_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportUdpRemoteHostId_withNetI2pRouterTransportUdpRemoteHostId_withNetI2pDataRouterRouterIdentity_withBoolean_withBoolean_withNetI2pDataSessionKey_withNetI2pRouterTransportUdpUDPAddress_withNetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportUdpRemoteHostId *claimedAddress, NetI2pRouterTransportUdpRemoteHostId *remoteHostId, NetI2pDataRouterRouterIdentity *remotePeer, jboolean allowExtendedOptions, jboolean needIntroduction, NetI2pDataSessionKey *introKey, NetI2pRouterTransportUdpUDPAddress *addr, id<NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory> dh);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpOutboundEstablishState)

#endif

#if !defined (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_) && (INCLUDE_ALL_NetI2pRouterTransportUdpOutboundEstablishState || defined(INCLUDE_NetI2pRouterTransportUdpOutboundEstablishState_OutboundState))
#define NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_Enum) {
  NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_Enum_OB_STATE_UNKNOWN = 0,
  NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_Enum_OB_STATE_REQUEST_SENT = 1,
  NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_Enum_OB_STATE_CREATED_RECEIVED = 2,
  NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_Enum_OB_STATE_CONFIRMED_PARTIALLY = 3,
  NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_Enum_OB_STATE_CONFIRMED_COMPLETELY = 4,
  NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_Enum_OB_STATE_PENDING_INTRO = 5,
  NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_Enum_OB_STATE_INTRODUCED = 6,
  NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_Enum_OB_STATE_VALIDATION_FAILED = 7,
};

@interface NetI2pRouterTransportUdpOutboundEstablishState_OutboundState : JavaLangEnum

@property (readonly, class, nonnull) NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *OB_STATE_UNKNOWN NS_SWIFT_NAME(OB_STATE_UNKNOWN);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *OB_STATE_REQUEST_SENT NS_SWIFT_NAME(OB_STATE_REQUEST_SENT);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *OB_STATE_CREATED_RECEIVED NS_SWIFT_NAME(OB_STATE_CREATED_RECEIVED);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *OB_STATE_CONFIRMED_PARTIALLY NS_SWIFT_NAME(OB_STATE_CONFIRMED_PARTIALLY);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *OB_STATE_CONFIRMED_COMPLETELY NS_SWIFT_NAME(OB_STATE_CONFIRMED_COMPLETELY);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *OB_STATE_PENDING_INTRO NS_SWIFT_NAME(OB_STATE_PENDING_INTRO);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *OB_STATE_INTRODUCED NS_SWIFT_NAME(OB_STATE_INTRODUCED);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *OB_STATE_VALIDATION_FAILED NS_SWIFT_NAME(OB_STATE_VALIDATION_FAILED);
+ (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState * __nonnull)OB_STATE_UNKNOWN;

+ (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState * __nonnull)OB_STATE_REQUEST_SENT;

+ (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState * __nonnull)OB_STATE_CREATED_RECEIVED;

+ (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState * __nonnull)OB_STATE_CONFIRMED_PARTIALLY;

+ (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState * __nonnull)OB_STATE_CONFIRMED_COMPLETELY;

+ (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState * __nonnull)OB_STATE_PENDING_INTRO;

+ (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState * __nonnull)OB_STATE_INTRODUCED;

+ (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState * __nonnull)OB_STATE_VALIDATION_FAILED;

#pragma mark Public

+ (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportUdpOutboundEstablishState_OutboundState)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_values_[];

inline NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_get_OB_STATE_UNKNOWN(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpOutboundEstablishState_OutboundState, OB_STATE_UNKNOWN)

inline NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_get_OB_STATE_REQUEST_SENT(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpOutboundEstablishState_OutboundState, OB_STATE_REQUEST_SENT)

inline NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_get_OB_STATE_CREATED_RECEIVED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpOutboundEstablishState_OutboundState, OB_STATE_CREATED_RECEIVED)

inline NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_get_OB_STATE_CONFIRMED_PARTIALLY(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpOutboundEstablishState_OutboundState, OB_STATE_CONFIRMED_PARTIALLY)

inline NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_get_OB_STATE_CONFIRMED_COMPLETELY(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpOutboundEstablishState_OutboundState, OB_STATE_CONFIRMED_COMPLETELY)

inline NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_get_OB_STATE_PENDING_INTRO(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpOutboundEstablishState_OutboundState, OB_STATE_PENDING_INTRO)

inline NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_get_OB_STATE_INTRODUCED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpOutboundEstablishState_OutboundState, OB_STATE_INTRODUCED)

inline NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_get_OB_STATE_VALIDATION_FAILED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpOutboundEstablishState_OutboundState, OB_STATE_VALIDATION_FAILED)

FOUNDATION_EXPORT IOSObjectArray *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_values(void);

FOUNDATION_EXPORT NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pRouterTransportUdpOutboundEstablishState_OutboundState *NetI2pRouterTransportUdpOutboundEstablishState_OutboundState_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpOutboundEstablishState_OutboundState)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportUdpOutboundEstablishState")
