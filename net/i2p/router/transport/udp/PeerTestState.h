//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/udp/PeerTestState.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportUdpPeerTestState")
#ifdef RESTRICT_NetI2pRouterTransportUdpPeerTestState
#define INCLUDE_ALL_NetI2pRouterTransportUdpPeerTestState 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportUdpPeerTestState 1
#endif
#undef RESTRICT_NetI2pRouterTransportUdpPeerTestState

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportUdpPeerTestState_) && (INCLUDE_ALL_NetI2pRouterTransportUdpPeerTestState || defined(INCLUDE_NetI2pRouterTransportUdpPeerTestState))
#define NetI2pRouterTransportUdpPeerTestState_

@class JavaNetInetAddress;
@class NetI2pDataSessionKey;
@class NetI2pRouterTransportUdpPeerTestState_Role;

@interface NetI2pRouterTransportUdpPeerTestState : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterTransportUdpPeerTestState_Role:(NetI2pRouterTransportUdpPeerTestState_Role *)role
                                                                 withBoolean:(jboolean)isIPv6
                                                                    withLong:(jlong)nonce
                                                                    withLong:(jlong)now;

- (NetI2pDataSessionKey *)getAliceIntroKey;

- (JavaNetInetAddress *)getAliceIP;

- (JavaNetInetAddress *)getAliceIPFromCharlie;

- (jint)getAlicePort;

- (jint)getAlicePortFromCharlie;

- (jlong)getBeginTime;

- (NetI2pDataSessionKey *)getBobCipherKey;

- (JavaNetInetAddress *)getBobIP;

- (NetI2pDataSessionKey *)getBobMACKey;

- (jint)getBobPort;

- (NetI2pDataSessionKey *)getCharlieIntroKey;

- (JavaNetInetAddress *)getCharlieIP;

- (jint)getCharliePort;

- (jlong)getLastSendTime;

- (jlong)getNonce;

- (NetI2pRouterTransportUdpPeerTestState_Role *)getOurRole;

- (jlong)getReceiveAliceTime;

- (jlong)getReceiveBobTime;

- (jlong)getReceiveCharlieTime;

- (jint)incrementPacketsRelayed;

- (jboolean)isIPv6;

- (void)setAliceIntroKeyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key;

- (void)setAliceIPWithJavaNetInetAddress:(JavaNetInetAddress *)ip;

- (void)setAliceIPFromCharlieWithJavaNetInetAddress:(JavaNetInetAddress *)ip;

- (void)setAlicePortWithInt:(jint)alicePort;

- (void)setAlicePortFromCharlieWithInt:(jint)alicePortFromCharlie;

- (void)setBobCipherKeyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key;

- (void)setBobIPWithJavaNetInetAddress:(JavaNetInetAddress *)ip;

- (void)setBobMACKeyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key;

- (void)setBobPortWithInt:(jint)bobPort;

- (void)setCharlieIntroKeyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key;

- (void)setCharlieIPWithJavaNetInetAddress:(JavaNetInetAddress *)ip;

- (void)setCharliePortWithInt:(jint)charliePort;

- (void)setLastSendTimeWithLong:(jlong)when;

- (void)setReceiveAliceTimeWithLong:(jlong)when;

- (void)setReceiveBobTimeWithLong:(jlong)when;

- (void)setReceiveCharlieTimeWithLong:(jlong)when;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpPeerTestState)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpPeerTestState_initWithNetI2pRouterTransportUdpPeerTestState_Role_withBoolean_withLong_withLong_(NetI2pRouterTransportUdpPeerTestState *self, NetI2pRouterTransportUdpPeerTestState_Role *role, jboolean isIPv6, jlong nonce, jlong now);

FOUNDATION_EXPORT NetI2pRouterTransportUdpPeerTestState *new_NetI2pRouterTransportUdpPeerTestState_initWithNetI2pRouterTransportUdpPeerTestState_Role_withBoolean_withLong_withLong_(NetI2pRouterTransportUdpPeerTestState_Role *role, jboolean isIPv6, jlong nonce, jlong now) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpPeerTestState *create_NetI2pRouterTransportUdpPeerTestState_initWithNetI2pRouterTransportUdpPeerTestState_Role_withBoolean_withLong_withLong_(NetI2pRouterTransportUdpPeerTestState_Role *role, jboolean isIPv6, jlong nonce, jlong now);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpPeerTestState)

#endif

#if !defined (NetI2pRouterTransportUdpPeerTestState_Role_) && (INCLUDE_ALL_NetI2pRouterTransportUdpPeerTestState || defined(INCLUDE_NetI2pRouterTransportUdpPeerTestState_Role))
#define NetI2pRouterTransportUdpPeerTestState_Role_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pRouterTransportUdpPeerTestState_Role_Enum) {
  NetI2pRouterTransportUdpPeerTestState_Role_Enum_ALICE = 0,
  NetI2pRouterTransportUdpPeerTestState_Role_Enum_BOB = 1,
  NetI2pRouterTransportUdpPeerTestState_Role_Enum_CHARLIE = 2,
};

@interface NetI2pRouterTransportUdpPeerTestState_Role : JavaLangEnum

@property (readonly, class, nonnull) NetI2pRouterTransportUdpPeerTestState_Role *ALICE NS_SWIFT_NAME(ALICE);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpPeerTestState_Role *BOB NS_SWIFT_NAME(BOB);
@property (readonly, class, nonnull) NetI2pRouterTransportUdpPeerTestState_Role *CHARLIE NS_SWIFT_NAME(CHARLIE);
+ (NetI2pRouterTransportUdpPeerTestState_Role * __nonnull)ALICE;

+ (NetI2pRouterTransportUdpPeerTestState_Role * __nonnull)BOB;

+ (NetI2pRouterTransportUdpPeerTestState_Role * __nonnull)CHARLIE;

#pragma mark Public

+ (NetI2pRouterTransportUdpPeerTestState_Role *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pRouterTransportUdpPeerTestState_Role_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportUdpPeerTestState_Role)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pRouterTransportUdpPeerTestState_Role *NetI2pRouterTransportUdpPeerTestState_Role_values_[];

inline NetI2pRouterTransportUdpPeerTestState_Role *NetI2pRouterTransportUdpPeerTestState_Role_get_ALICE(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpPeerTestState_Role, ALICE)

inline NetI2pRouterTransportUdpPeerTestState_Role *NetI2pRouterTransportUdpPeerTestState_Role_get_BOB(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpPeerTestState_Role, BOB)

inline NetI2pRouterTransportUdpPeerTestState_Role *NetI2pRouterTransportUdpPeerTestState_Role_get_CHARLIE(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportUdpPeerTestState_Role, CHARLIE)

FOUNDATION_EXPORT IOSObjectArray *NetI2pRouterTransportUdpPeerTestState_Role_values(void);

FOUNDATION_EXPORT NetI2pRouterTransportUdpPeerTestState_Role *NetI2pRouterTransportUdpPeerTestState_Role_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pRouterTransportUdpPeerTestState_Role *NetI2pRouterTransportUdpPeerTestState_Role_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpPeerTestState_Role)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportUdpPeerTestState")
