//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/udp/UDPPacket.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacket")
#ifdef RESTRICT_NetI2pRouterTransportUdpUDPPacket
#define INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacket 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacket 1
#endif
#undef RESTRICT_NetI2pRouterTransportUdpUDPPacket

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportUdpUDPPacket_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacket || defined(INCLUDE_NetI2pRouterTransportUdpUDPPacket))
#define NetI2pRouterTransportUdpUDPPacket_

#define RESTRICT_NetI2pRouterUtilCDQEntry 1
#define INCLUDE_NetI2pRouterUtilCDQEntry 1
#include "net/i2p/router/util/CDQEntry.h"

@class JavaNetDatagramPacket;
@class NetI2pDataSessionKey;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportUdpRemoteHostId;
@protocol NetI2pRouterTransportFIFOBandwidthLimiter_Request;

@interface NetI2pRouterTransportUdpUDPPacket : NSObject < NetI2pRouterUtilCDQEntry >
@property (readonly, class) jint MAX_PACKET_SIZE NS_SWIFT_NAME(MAX_PACKET_SIZE);
@property (readonly, class) jint IV_SIZE NS_SWIFT_NAME(IV_SIZE);
@property (readonly, class) jint MAC_SIZE NS_SWIFT_NAME(MAC_SIZE);
@property (readonly, class) jint PAYLOAD_TYPE_SESSION_REQUEST NS_SWIFT_NAME(PAYLOAD_TYPE_SESSION_REQUEST);
@property (readonly, class) jint PAYLOAD_TYPE_SESSION_CREATED NS_SWIFT_NAME(PAYLOAD_TYPE_SESSION_CREATED);
@property (readonly, class) jint PAYLOAD_TYPE_SESSION_CONFIRMED NS_SWIFT_NAME(PAYLOAD_TYPE_SESSION_CONFIRMED);
@property (readonly, class) jint PAYLOAD_TYPE_RELAY_REQUEST NS_SWIFT_NAME(PAYLOAD_TYPE_RELAY_REQUEST);
@property (readonly, class) jint PAYLOAD_TYPE_RELAY_RESPONSE NS_SWIFT_NAME(PAYLOAD_TYPE_RELAY_RESPONSE);
@property (readonly, class) jint PAYLOAD_TYPE_RELAY_INTRO NS_SWIFT_NAME(PAYLOAD_TYPE_RELAY_INTRO);
@property (readonly, class) jint PAYLOAD_TYPE_DATA NS_SWIFT_NAME(PAYLOAD_TYPE_DATA);
@property (readonly, class) jint PAYLOAD_TYPE_TEST NS_SWIFT_NAME(PAYLOAD_TYPE_TEST);
@property (readonly, class) jint PAYLOAD_TYPE_SESSION_DESTROY NS_SWIFT_NAME(PAYLOAD_TYPE_SESSION_DESTROY);
@property (readonly, class) jint MAX_PAYLOAD_TYPE NS_SWIFT_NAME(MAX_PAYLOAD_TYPE);
@property (readonly, class) jbyte HEADER_FLAG_REKEY NS_SWIFT_NAME(HEADER_FLAG_REKEY);
@property (readonly, class) jbyte HEADER_FLAG_EXTENDED_OPTIONS NS_SWIFT_NAME(HEADER_FLAG_EXTENDED_OPTIONS);
@property (readonly, class) jint SESS_REQ_MIN_EXT_OPTIONS_LENGTH NS_SWIFT_NAME(SESS_REQ_MIN_EXT_OPTIONS_LENGTH);
@property (readonly, class) jint SESS_REQ_EXT_FLAG_REQUEST_RELAY_TAG NS_SWIFT_NAME(SESS_REQ_EXT_FLAG_REQUEST_RELAY_TAG);
@property (readonly, class) jbyte DATA_FLAG_EXPLICIT_ACK NS_SWIFT_NAME(DATA_FLAG_EXPLICIT_ACK);
@property (readonly, class) jbyte DATA_FLAG_ACK_BITFIELDS NS_SWIFT_NAME(DATA_FLAG_ACK_BITFIELDS);
@property (readonly, class) jbyte DATA_FLAG_ECN NS_SWIFT_NAME(DATA_FLAG_ECN);
@property (readonly, class) jbyte DATA_FLAG_WANT_ACKS NS_SWIFT_NAME(DATA_FLAG_WANT_ACKS);
@property (readonly, class) jbyte DATA_FLAG_WANT_REPLY NS_SWIFT_NAME(DATA_FLAG_WANT_REPLY);
@property (readonly, class) jbyte DATA_FLAG_EXTENDED NS_SWIFT_NAME(DATA_FLAG_EXTENDED);
@property (readonly, class) jbyte BITFIELD_CONTINUATION NS_SWIFT_NAME(BITFIELD_CONTINUATION);

+ (jint)MAX_PACKET_SIZE;

+ (jint)IV_SIZE;

+ (jint)MAC_SIZE;

+ (jint)PAYLOAD_TYPE_SESSION_REQUEST;

+ (jint)PAYLOAD_TYPE_SESSION_CREATED;

+ (jint)PAYLOAD_TYPE_SESSION_CONFIRMED;

+ (jint)PAYLOAD_TYPE_RELAY_REQUEST;

+ (jint)PAYLOAD_TYPE_RELAY_RESPONSE;

+ (jint)PAYLOAD_TYPE_RELAY_INTRO;

+ (jint)PAYLOAD_TYPE_DATA;

+ (jint)PAYLOAD_TYPE_TEST;

+ (jint)PAYLOAD_TYPE_SESSION_DESTROY;

+ (jint)MAX_PAYLOAD_TYPE;

+ (jbyte)HEADER_FLAG_REKEY;

+ (jbyte)HEADER_FLAG_EXTENDED_OPTIONS;

+ (jint)SESS_REQ_MIN_EXT_OPTIONS_LENGTH;

+ (jint)SESS_REQ_EXT_FLAG_REQUEST_RELAY_TAG;

+ (jbyte)DATA_FLAG_EXPLICIT_ACK;

+ (jbyte)DATA_FLAG_ACK_BITFIELDS;

+ (jbyte)DATA_FLAG_ECN;

+ (jbyte)DATA_FLAG_WANT_ACKS;

+ (jbyte)DATA_FLAG_WANT_REPLY;

+ (jbyte)DATA_FLAG_EXTENDED;

+ (jbyte)BITFIELD_CONTINUATION;

#pragma mark Public

+ (NetI2pRouterTransportUdpUDPPacket *)acquireWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                                                withBoolean:(jboolean)inbound;

+ (void)clearCache;

- (void)decryptWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)cipherKey;

- (void)drop;

- (id<NetI2pRouterTransportFIFOBandwidthLimiter_Request>)getBandwidthRequest;

- (jlong)getBegin;

- (jlong)getEnqueueTime;

- (jlong)getLifetime;

- (jint)getMarkedType;

- (JavaNetDatagramPacket *)getPacket;

- (jshort)getPriority;

- (void)markTypeWithInt:(jint)type;

- (void)release__;

- (void)requestInboundBandwidth;

- (void)requestOutboundBandwidth;

- (void)resetBegin;

- (void)setEnqueueTimeWithLong:(jlong)now;

- (NSString *)description;

- (jboolean)validateWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)macKey;

#pragma mark Package-Private

- (jint)getFragmentCount;

- (jint)getMessageType;

- (NetI2pRouterTransportUdpRemoteHostId *)getRemoteHost;

- (jlong)getTimeSinceReceived;

- (void)received;

- (void)setFragmentCountWithInt:(jint)count;

- (void)setMessageTypeWithInt:(jint)type;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportUdpUDPPacket)

inline jint NetI2pRouterTransportUdpUDPPacket_get_MAX_PACKET_SIZE(void);
#define NetI2pRouterTransportUdpUDPPacket_MAX_PACKET_SIZE 1572
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, MAX_PACKET_SIZE, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_IV_SIZE(void);
#define NetI2pRouterTransportUdpUDPPacket_IV_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, IV_SIZE, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_MAC_SIZE(void);
#define NetI2pRouterTransportUdpUDPPacket_MAC_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, MAC_SIZE, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_PAYLOAD_TYPE_SESSION_REQUEST(void);
#define NetI2pRouterTransportUdpUDPPacket_PAYLOAD_TYPE_SESSION_REQUEST 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, PAYLOAD_TYPE_SESSION_REQUEST, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_PAYLOAD_TYPE_SESSION_CREATED(void);
#define NetI2pRouterTransportUdpUDPPacket_PAYLOAD_TYPE_SESSION_CREATED 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, PAYLOAD_TYPE_SESSION_CREATED, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_PAYLOAD_TYPE_SESSION_CONFIRMED(void);
#define NetI2pRouterTransportUdpUDPPacket_PAYLOAD_TYPE_SESSION_CONFIRMED 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, PAYLOAD_TYPE_SESSION_CONFIRMED, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_PAYLOAD_TYPE_RELAY_REQUEST(void);
#define NetI2pRouterTransportUdpUDPPacket_PAYLOAD_TYPE_RELAY_REQUEST 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, PAYLOAD_TYPE_RELAY_REQUEST, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_PAYLOAD_TYPE_RELAY_RESPONSE(void);
#define NetI2pRouterTransportUdpUDPPacket_PAYLOAD_TYPE_RELAY_RESPONSE 4
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, PAYLOAD_TYPE_RELAY_RESPONSE, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_PAYLOAD_TYPE_RELAY_INTRO(void);
#define NetI2pRouterTransportUdpUDPPacket_PAYLOAD_TYPE_RELAY_INTRO 5
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, PAYLOAD_TYPE_RELAY_INTRO, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_PAYLOAD_TYPE_DATA(void);
#define NetI2pRouterTransportUdpUDPPacket_PAYLOAD_TYPE_DATA 6
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, PAYLOAD_TYPE_DATA, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_PAYLOAD_TYPE_TEST(void);
#define NetI2pRouterTransportUdpUDPPacket_PAYLOAD_TYPE_TEST 7
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, PAYLOAD_TYPE_TEST, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_PAYLOAD_TYPE_SESSION_DESTROY(void);
#define NetI2pRouterTransportUdpUDPPacket_PAYLOAD_TYPE_SESSION_DESTROY 8
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, PAYLOAD_TYPE_SESSION_DESTROY, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_MAX_PAYLOAD_TYPE(void);
#define NetI2pRouterTransportUdpUDPPacket_MAX_PAYLOAD_TYPE 8
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, MAX_PAYLOAD_TYPE, jint)

inline jbyte NetI2pRouterTransportUdpUDPPacket_get_HEADER_FLAG_REKEY(void);
#define NetI2pRouterTransportUdpUDPPacket_HEADER_FLAG_REKEY 8
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, HEADER_FLAG_REKEY, jbyte)

inline jbyte NetI2pRouterTransportUdpUDPPacket_get_HEADER_FLAG_EXTENDED_OPTIONS(void);
#define NetI2pRouterTransportUdpUDPPacket_HEADER_FLAG_EXTENDED_OPTIONS 4
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, HEADER_FLAG_EXTENDED_OPTIONS, jbyte)

inline jint NetI2pRouterTransportUdpUDPPacket_get_SESS_REQ_MIN_EXT_OPTIONS_LENGTH(void);
#define NetI2pRouterTransportUdpUDPPacket_SESS_REQ_MIN_EXT_OPTIONS_LENGTH 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, SESS_REQ_MIN_EXT_OPTIONS_LENGTH, jint)

inline jint NetI2pRouterTransportUdpUDPPacket_get_SESS_REQ_EXT_FLAG_REQUEST_RELAY_TAG(void);
#define NetI2pRouterTransportUdpUDPPacket_SESS_REQ_EXT_FLAG_REQUEST_RELAY_TAG 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, SESS_REQ_EXT_FLAG_REQUEST_RELAY_TAG, jint)

inline jbyte NetI2pRouterTransportUdpUDPPacket_get_DATA_FLAG_EXPLICIT_ACK(void);
#define NetI2pRouterTransportUdpUDPPacket_DATA_FLAG_EXPLICIT_ACK -128
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, DATA_FLAG_EXPLICIT_ACK, jbyte)

inline jbyte NetI2pRouterTransportUdpUDPPacket_get_DATA_FLAG_ACK_BITFIELDS(void);
#define NetI2pRouterTransportUdpUDPPacket_DATA_FLAG_ACK_BITFIELDS 64
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, DATA_FLAG_ACK_BITFIELDS, jbyte)

inline jbyte NetI2pRouterTransportUdpUDPPacket_get_DATA_FLAG_ECN(void);
#define NetI2pRouterTransportUdpUDPPacket_DATA_FLAG_ECN 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, DATA_FLAG_ECN, jbyte)

inline jbyte NetI2pRouterTransportUdpUDPPacket_get_DATA_FLAG_WANT_ACKS(void);
#define NetI2pRouterTransportUdpUDPPacket_DATA_FLAG_WANT_ACKS 8
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, DATA_FLAG_WANT_ACKS, jbyte)

inline jbyte NetI2pRouterTransportUdpUDPPacket_get_DATA_FLAG_WANT_REPLY(void);
#define NetI2pRouterTransportUdpUDPPacket_DATA_FLAG_WANT_REPLY 4
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, DATA_FLAG_WANT_REPLY, jbyte)

inline jbyte NetI2pRouterTransportUdpUDPPacket_get_DATA_FLAG_EXTENDED(void);
#define NetI2pRouterTransportUdpUDPPacket_DATA_FLAG_EXTENDED 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, DATA_FLAG_EXTENDED, jbyte)

inline jbyte NetI2pRouterTransportUdpUDPPacket_get_BITFIELD_CONTINUATION(void);
#define NetI2pRouterTransportUdpUDPPacket_BITFIELD_CONTINUATION -128
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacket, BITFIELD_CONTINUATION, jbyte)

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacket *NetI2pRouterTransportUdpUDPPacket_acquireWithNetI2pRouterRouterContext_withBoolean_(NetI2pRouterRouterContext *ctx, jboolean inbound);

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPPacket_clearCache(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPPacket)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacket")
