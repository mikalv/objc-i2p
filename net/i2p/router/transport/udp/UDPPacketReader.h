//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/udp/UDPPacketReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader")
#ifdef RESTRICT_NetI2pRouterTransportUdpUDPPacketReader
#define INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader 1
#endif
#undef RESTRICT_NetI2pRouterTransportUdpUDPPacketReader
#ifdef INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader
#define INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_Reader 1
#endif
#ifdef INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader
#define INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_Reader 1
#endif
#ifdef INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader
#define INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_Reader 1
#endif
#ifdef INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader
#define INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_Reader 1
#endif
#ifdef INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_DataReader
#define INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_Reader 1
#endif
#ifdef INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader
#define INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_Reader 1
#endif
#ifdef INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader
#define INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_Reader 1
#endif
#ifdef INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader
#define INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_Reader 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportUdpUDPPacketReader_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader || defined(INCLUDE_NetI2pRouterTransportUdpUDPPacketReader))
#define NetI2pRouterTransportUdpUDPPacketReader_

@class IOSByteArray;
@class JavaLangStringBuilder;
@class NetI2pI2PAppContext;
@class NetI2pRouterTransportUdpUDPPacket;
@class NetI2pRouterTransportUdpUDPPacketReader_DataReader;
@class NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader;
@class NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader;
@class NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader;
@class NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader;
@class NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader;
@class NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader;
@class NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader;

@interface NetI2pRouterTransportUdpUDPPacketReader : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx;

- (NetI2pRouterTransportUdpUDPPacketReader_DataReader *)getDataReader;

- (NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader *)getPeerTestReader;

- (NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader *)getRelayIntroReader;

- (NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader *)getRelayRequestReader;

- (NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader *)getRelayResponseReader;

- (NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader *)getSessionConfirmedReader;

- (NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader *)getSessionCreatedReader;

- (NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader *)getSessionRequestReader;

- (void)initialize__WithNetI2pRouterTransportUdpUDPPacket:(NetI2pRouterTransportUdpUDPPacket *)packet OBJC_METHOD_FAMILY_NONE;

- (jboolean)isExtendedOptionsIncluded;

- (jboolean)isRekeyingIncluded;

- (IOSByteArray *)readExtendedOptions;

- (IOSByteArray *)readKeyingMaterial;

- (jint)readPayloadType;

- (jlong)readTimestamp;

- (void)toRawStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)buf;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpUDPPacketReader)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPPacketReader_initWithNetI2pI2PAppContext_(NetI2pRouterTransportUdpUDPPacketReader *self, NetI2pI2PAppContext *ctx);

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader *new_NetI2pRouterTransportUdpUDPPacketReader_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader *create_NetI2pRouterTransportUdpUDPPacketReader_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPPacketReader)

#endif

#if !defined (NetI2pRouterTransportUdpUDPPacketReader_Reader_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader || defined(INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_Reader))
#define NetI2pRouterTransportUdpUDPPacketReader_Reader_

@class IOSByteArray;
@class NetI2pRouterTransportUdpUDPPacketReader;

@interface NetI2pRouterTransportUdpUDPPacketReader_Reader : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterTransportUdpUDPPacketReader:(NetI2pRouterTransportUdpUDPPacketReader *)outer$;

- (IOSByteArray *)readExtendedOptions;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpUDPPacketReader_Reader)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPPacketReader_Reader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader_Reader *self, NetI2pRouterTransportUdpUDPPacketReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPPacketReader_Reader)

#endif

#if !defined (NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader || defined(INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader))
#define NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader_

@class IOSByteArray;
@class NetI2pRouterTransportUdpUDPPacketReader;

@interface NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader : NetI2pRouterTransportUdpUDPPacketReader_Reader
@property (readonly, class) jint X_LENGTH NS_SWIFT_NAME(X_LENGTH);

+ (jint)X_LENGTH;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterTransportUdpUDPPacketReader:(NetI2pRouterTransportUdpUDPPacketReader *)outer$;

- (void)readIPWithByteArray:(IOSByteArray *)target
                    withInt:(jint)targetOffset;

- (jint)readIPSize;

- (void)readXWithByteArray:(IOSByteArray *)target
                   withInt:(jint)targetOffset;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader)

inline jint NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader_get_X_LENGTH(void);
#define NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader_X_LENGTH 256
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader, X_LENGTH, jint)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader *self, NetI2pRouterTransportUdpUDPPacketReader *outer$);

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader *new_NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader *create_NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPPacketReader_SessionRequestReader)

#endif

#if !defined (NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader || defined(INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader))
#define NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader_

@class IOSByteArray;
@class NetI2pRouterTransportUdpUDPPacketReader;

@interface NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader : NetI2pRouterTransportUdpUDPPacketReader_Reader
@property (readonly, class) jint Y_LENGTH NS_SWIFT_NAME(Y_LENGTH);

+ (jint)Y_LENGTH;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterTransportUdpUDPPacketReader:(NetI2pRouterTransportUdpUDPPacketReader *)outer$;

- (void)readEncryptedSignatureWithByteArray:(IOSByteArray *)target
                                    withInt:(jint)targetOffset
                                    withInt:(jint)size;

- (void)readIPWithByteArray:(IOSByteArray *)target
                    withInt:(jint)targetOffset;

- (jint)readIPSize;

- (void)readIVWithByteArray:(IOSByteArray *)target
                    withInt:(jint)targetOffset;

- (jint)readPort;

- (jlong)readRelayTag;

- (jlong)readSignedOnTime;

- (void)readYWithByteArray:(IOSByteArray *)target
                   withInt:(jint)targetOffset;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader)

inline jint NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader_get_Y_LENGTH(void);
#define NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader_Y_LENGTH 256
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader, Y_LENGTH, jint)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader *self, NetI2pRouterTransportUdpUDPPacketReader *outer$);

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader *new_NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader *create_NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPPacketReader_SessionCreatedReader)

#endif

#if !defined (NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader || defined(INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader))
#define NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader_

@class IOSByteArray;
@class NetI2pRouterTransportUdpUDPPacketReader;

@interface NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader : NetI2pRouterTransportUdpUDPPacketReader_Reader

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterTransportUdpUDPPacketReader:(NetI2pRouterTransportUdpUDPPacketReader *)outer$;

- (jint)readCurrentFragmentNum;

- (jint)readCurrentFragmentSize;

- (jlong)readFinalFragmentSignedOnTime;

- (void)readFinalSignatureWithByteArray:(IOSByteArray *)target
                                withInt:(jint)targetOffset
                                withInt:(jint)size;

- (void)readFragmentDataWithByteArray:(IOSByteArray *)target
                              withInt:(jint)targetOffset;

- (jint)readTotalFragmentNum;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader *self, NetI2pRouterTransportUdpUDPPacketReader *outer$);

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader *new_NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader *create_NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPPacketReader_SessionConfirmedReader)

#endif

#if !defined (NetI2pRouterTransportUdpUDPPacketReader_DataReader_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader || defined(INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_DataReader))
#define NetI2pRouterTransportUdpUDPPacketReader_DataReader_

@class IOSByteArray;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@class NetI2pRouterTransportUdpUDPPacketReader;

@interface NetI2pRouterTransportUdpUDPPacketReader_DataReader : NetI2pRouterTransportUdpUDPPacketReader_Reader

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterTransportUdpUDPPacketReader:(NetI2pRouterTransportUdpUDPPacketReader *)outer$;

- (jint)getPacketSize;

- (jlong)readACKWithInt:(jint)index;

- (IOSObjectArray *)readACKBitfields;

- (jboolean)readACKBitfieldsIncluded;

- (jint)readACKCount;

- (jboolean)readACKsIncluded;

- (jboolean)readECN;

- (jboolean)readExtendedDataIncluded;

- (jint)readFragmentCount;

- (void)readMessageFragmentWithInt:(jint)fragmentNum
                     withByteArray:(IOSByteArray *)target
                           withInt:(jint)targetOffset;

- (jint)readMessageFragmentNumWithInt:(jint)fragmentNum;

- (jint)readMessageFragmentSizeWithInt:(jint)fragmentNum;

- (jlong)readMessageIdWithInt:(jint)fragmentNum;

- (jboolean)readMessageIsLastWithInt:(jint)fragmentNum;

- (jboolean)readReplyRequested;

- (jboolean)readWantPreviousACKs;

- (void)toRawStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)buf;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpUDPPacketReader_DataReader)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPPacketReader_DataReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader_DataReader *self, NetI2pRouterTransportUdpUDPPacketReader *outer$);

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_DataReader *new_NetI2pRouterTransportUdpUDPPacketReader_DataReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_DataReader *create_NetI2pRouterTransportUdpUDPPacketReader_DataReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPPacketReader_DataReader)

#endif

#if !defined (NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader || defined(INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader))
#define NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader_

@class IOSByteArray;
@class NetI2pRouterTransportUdpUDPPacketReader;

@interface NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader : NetI2pRouterTransportUdpUDPPacketReader_Reader

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterTransportUdpUDPPacketReader:(NetI2pRouterTransportUdpUDPPacketReader *)outer$;

- (void)readIntroKeyWithByteArray:(IOSByteArray *)target
                          withInt:(jint)targetOffset;

- (void)readIPWithByteArray:(IOSByteArray *)target
                    withInt:(jint)targetOffset;

- (jint)readIPSize;

- (jlong)readNonce;

- (jint)readPort;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader *self, NetI2pRouterTransportUdpUDPPacketReader *outer$);

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader *new_NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader *create_NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPPacketReader_PeerTestReader)

#endif

#if !defined (NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader || defined(INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader))
#define NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader_

@class IOSByteArray;
@class NetI2pRouterTransportUdpUDPPacketReader;

@interface NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader : NetI2pRouterTransportUdpUDPPacketReader_Reader

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterTransportUdpUDPPacketReader:(NetI2pRouterTransportUdpUDPPacketReader *)outer$;

- (void)readAliceIntroKeyWithByteArray:(IOSByteArray *)target
                               withInt:(jint)targetOffset;

- (jint)readChallengeSize;

- (void)readChallengeSizeWithByteArray:(IOSByteArray *)target
                               withInt:(jint)targetOffset;

- (void)readIPWithByteArray:(IOSByteArray *)target
                    withInt:(jint)targetOffset;

- (jint)readIPSize;

- (jlong)readNonce;

- (jint)readPort;

- (jlong)readTag;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader *self, NetI2pRouterTransportUdpUDPPacketReader *outer$);

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader *new_NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader *create_NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPPacketReader_RelayRequestReader)

#endif

#if !defined (NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader || defined(INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader))
#define NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader_

@class IOSByteArray;
@class NetI2pRouterTransportUdpUDPPacketReader;

@interface NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader : NetI2pRouterTransportUdpUDPPacketReader_Reader

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterTransportUdpUDPPacketReader:(NetI2pRouterTransportUdpUDPPacketReader *)outer$;

- (jint)readChallengeSize;

- (void)readChallengeSizeWithByteArray:(IOSByteArray *)target
                               withInt:(jint)targetOffset;

- (void)readIPWithByteArray:(IOSByteArray *)target
                    withInt:(jint)targetOffset;

- (jint)readIPSize;

- (jint)readPort;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader *self, NetI2pRouterTransportUdpUDPPacketReader *outer$);

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader *new_NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader *create_NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPPacketReader_RelayIntroReader)

#endif

#if !defined (NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader_) && (INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader || defined(INCLUDE_NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader))
#define NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader_

@class IOSByteArray;
@class NetI2pRouterTransportUdpUDPPacketReader;

@interface NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader : NetI2pRouterTransportUdpUDPPacketReader_Reader

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterTransportUdpUDPPacketReader:(NetI2pRouterTransportUdpUDPPacketReader *)outer$;

- (void)readAliceIPWithByteArray:(IOSByteArray *)target
                         withInt:(jint)targetOffset;

- (jint)readAliceIPSize;

- (jint)readAlicePort;

- (void)readCharlieIPWithByteArray:(IOSByteArray *)target
                           withInt:(jint)targetOffset;

- (jint)readCharlieIPSize;

- (jint)readCharliePort;

- (jlong)readNonce;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader)

FOUNDATION_EXPORT void NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader *self, NetI2pRouterTransportUdpUDPPacketReader *outer$);

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader *new_NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader *create_NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader_initWithNetI2pRouterTransportUdpUDPPacketReader_(NetI2pRouterTransportUdpUDPPacketReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportUdpUDPPacketReader_RelayResponseReader)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportUdpUDPPacketReader")
