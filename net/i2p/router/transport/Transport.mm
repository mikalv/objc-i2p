//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/Transport.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "net/i2p/router/transport/Transport.h"

@interface NetI2pRouterTransportTransport : NSObject

@end

__attribute__((unused)) static IOSObjectArray *NetI2pRouterTransportTransport__Annotations$0(void);

@interface NetI2pRouterTransportTransport_AddressSource () {
 @public
  NSString *cfgstr_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterTransportTransport_AddressSource, cfgstr_, NSString *)

__attribute__((unused)) static void NetI2pRouterTransportTransport_AddressSource_initWithNSString_withNSString_withInt_(NetI2pRouterTransportTransport_AddressSource *self, NSString *cfgstr, NSString *__name, jint __ordinal);

@implementation NetI2pRouterTransportTransport

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNetI2pRouterTransportTransportBid;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 4, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 4, -1, -1 },
    { NULL, "V", 0x401, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 12, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x401, -1, -1, -1, 13, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 14, 15, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x401, -1, -1, -1, 16, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 17, -1, -1 },
    { NULL, "V", 0x401, 18, 19, 20, -1, -1, -1 },
    { NULL, "LNetI2pRouterCommSystemFacade_Status;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, 21, -1 },
    { NULL, "Z", 0x401, 22, 23, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 24, 23, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 25, 23, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 26, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 27, 23, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(bidWithNetI2pDataRouterRouterInfo:withInt:);
  methods[1].selector = @selector(sendWithNetI2pRouterOutNetMessage:);
  methods[2].selector = @selector(startListening);
  methods[3].selector = @selector(stopListening);
  methods[4].selector = @selector(getCurrentAddresses);
  methods[5].selector = @selector(hasCurrentAddress);
  methods[6].selector = @selector(updateAddress);
  methods[7].selector = @selector(externalAddressReceivedWithNetI2pRouterTransportTransport_AddressSource:withByteArray:withInt:);
  methods[8].selector = @selector(externalAddressRemovedWithNetI2pRouterTransportTransport_AddressSource:withBoolean:);
  methods[9].selector = @selector(forwardPortStatusWithByteArray:withInt:withInt:withBoolean:withNSString:);
  methods[10].selector = @selector(getRequestedPort);
  methods[11].selector = @selector(setListenerWithNetI2pRouterTransportTransportEventListener:);
  methods[12].selector = @selector(getStyle);
  methods[13].selector = @selector(getEstablished);
  methods[14].selector = @selector(countPeers);
  methods[15].selector = @selector(countActivePeers);
  methods[16].selector = @selector(countActiveSendPeers);
  methods[17].selector = @selector(haveCapacity);
  methods[18].selector = @selector(haveCapacityWithInt:);
  methods[19].selector = @selector(getClockSkews);
  methods[20].selector = @selector(getMostRecentErrorMessages);
  methods[21].selector = @selector(renderStatusHTMLWithJavaIoWriter:withNSString:withInt:);
  methods[22].selector = @selector(getReachabilityStatus);
  methods[23].selector = @selector(recheckReachability);
  methods[24].selector = @selector(isBackloggedWithNetI2pDataHash:);
  methods[25].selector = @selector(wasUnreachableWithNetI2pDataHash:);
  methods[26].selector = @selector(isUnreachableWithNetI2pDataHash:);
  methods[27].selector = @selector(isEstablishedWithNetI2pDataHash:);
  methods[28].selector = @selector(mayDisconnectWithNetI2pDataHash:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "bid", "LNetI2pDataRouterRouterInfo;I", "send", "LNetI2pRouterOutNetMessage;", "()Ljava/util/List<Lnet/i2p/data/router/RouterAddress;>;", "externalAddressReceived", "LNetI2pRouterTransportTransport_AddressSource;[BI", "externalAddressRemoved", "LNetI2pRouterTransportTransport_AddressSource;Z", "forwardPortStatus", "[BIIZLNSString;", "setListener", "LNetI2pRouterTransportTransportEventListener;", "()Ljava/util/Set<Lnet/i2p/data/Hash;>;", "haveCapacity", "I", "()Ljava/util/Vector<Ljava/lang/Long;>;", "()Ljava/util/List<Ljava/lang/String;>;", "renderStatusHTML", "LJavaIoWriter;LNSString;I", "LJavaIoIOException;", (void *)&NetI2pRouterTransportTransport__Annotations$0, "isBacklogged", "LNetI2pDataHash;", "wasUnreachable", "isUnreachable", "isEstablished", "mayDisconnect", "LNetI2pRouterTransportTransport_AddressSource;" };
  static const J2ObjcClassInfo _NetI2pRouterTransportTransport = { "Transport", "net.i2p.router.transport", ptrTable, methods, NULL, 7, 0x609, 29, 0, -1, 28, -1, -1, -1 };
  return &_NetI2pRouterTransportTransport;
}

@end

IOSObjectArray *NetI2pRouterTransportTransport__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(NetI2pRouterTransportTransport)

J2OBJC_INITIALIZED_DEFN(NetI2pRouterTransportTransport_AddressSource)

NetI2pRouterTransportTransport_AddressSource *NetI2pRouterTransportTransport_AddressSource_values_[4];

@implementation NetI2pRouterTransportTransport_AddressSource

+ (NetI2pRouterTransportTransport_AddressSource *)SOURCE_UPNP {
  return JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_UPNP);
}

+ (NetI2pRouterTransportTransport_AddressSource *)SOURCE_INTERFACE {
  return JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_INTERFACE);
}

+ (NetI2pRouterTransportTransport_AddressSource *)SOURCE_CONFIG {
  return JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_CONFIG);
}

+ (NetI2pRouterTransportTransport_AddressSource *)SOURCE_SSU {
  return JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_SSU);
}

- (NSString *)toConfigString {
  return cfgstr_;
}

+ (IOSObjectArray *)values {
  return NetI2pRouterTransportTransport_AddressSource_values();
}

+ (NetI2pRouterTransportTransport_AddressSource *)valueOfWithNSString:(NSString *)name {
  return NetI2pRouterTransportTransport_AddressSource_valueOfWithNSString_(name);
}

- (NetI2pRouterTransportTransport_AddressSource_Enum)toNSEnum {
  return (NetI2pRouterTransportTransport_AddressSource_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNetI2pRouterTransportTransport_AddressSource;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pRouterTransportTransport_AddressSource;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(toConfigString);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SOURCE_UPNP", "LNetI2pRouterTransportTransport_AddressSource;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "SOURCE_INTERFACE", "LNetI2pRouterTransportTransport_AddressSource;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "SOURCE_CONFIG", "LNetI2pRouterTransportTransport_AddressSource;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "SOURCE_SSU", "LNetI2pRouterTransportTransport_AddressSource;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "cfgstr_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_UPNP), &JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_INTERFACE), &JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_CONFIG), &JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_SSU), "LNetI2pRouterTransportTransport;", "Ljava/lang/Enum<Lnet/i2p/router/transport/Transport$AddressSource;>;" };
  static const J2ObjcClassInfo _NetI2pRouterTransportTransport_AddressSource = { "AddressSource", "net.i2p.router.transport", ptrTable, methods, fields, 7, 0x4019, 3, 5, 6, -1, -1, 7, -1 };
  return &_NetI2pRouterTransportTransport_AddressSource;
}

+ (void)initialize {
  if (self == [NetI2pRouterTransportTransport_AddressSource class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 4 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_UPNP) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    NetI2pRouterTransportTransport_AddressSource_initWithNSString_withNSString_withInt_(e, @"upnp", @"SOURCE_UPNP", 0);
    ((void) (JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_INTERFACE) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    NetI2pRouterTransportTransport_AddressSource_initWithNSString_withNSString_withInt_(e, @"local", @"SOURCE_INTERFACE", 1);
    ((void) (JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_CONFIG) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    NetI2pRouterTransportTransport_AddressSource_initWithNSString_withNSString_withInt_(e, @"config", @"SOURCE_CONFIG", 2);
    ((void) (JreEnum(NetI2pRouterTransportTransport_AddressSource, SOURCE_SSU) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    NetI2pRouterTransportTransport_AddressSource_initWithNSString_withNSString_withInt_(e, @"ssu", @"SOURCE_SSU", 3);
    J2OBJC_SET_INITIALIZED(NetI2pRouterTransportTransport_AddressSource)
  }
}

@end

void NetI2pRouterTransportTransport_AddressSource_initWithNSString_withNSString_withInt_(NetI2pRouterTransportTransport_AddressSource *self, NSString *cfgstr, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->cfgstr_, cfgstr);
}

IOSObjectArray *NetI2pRouterTransportTransport_AddressSource_values() {
  NetI2pRouterTransportTransport_AddressSource_initialize();
  return [IOSObjectArray arrayWithObjects:NetI2pRouterTransportTransport_AddressSource_values_ count:4 type:NetI2pRouterTransportTransport_AddressSource_class_()];
}

NetI2pRouterTransportTransport_AddressSource *NetI2pRouterTransportTransport_AddressSource_valueOfWithNSString_(NSString *name) {
  NetI2pRouterTransportTransport_AddressSource_initialize();
  for (int i = 0; i < 4; i++) {
    NetI2pRouterTransportTransport_AddressSource *e = NetI2pRouterTransportTransport_AddressSource_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

NetI2pRouterTransportTransport_AddressSource *NetI2pRouterTransportTransport_AddressSource_fromOrdinal(NSUInteger ordinal) {
  NetI2pRouterTransportTransport_AddressSource_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return NetI2pRouterTransportTransport_AddressSource_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTransportTransport_AddressSource)
