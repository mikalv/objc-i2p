//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/GeoIP.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportGeoIP")
#ifdef RESTRICT_NetI2pRouterTransportGeoIP
#define INCLUDE_ALL_NetI2pRouterTransportGeoIP 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportGeoIP 1
#endif
#undef RESTRICT_NetI2pRouterTransportGeoIP

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportGeoIP_) && (INCLUDE_ALL_NetI2pRouterTransportGeoIP || defined(INCLUDE_NetI2pRouterTransportGeoIP))
#define NetI2pRouterTransportGeoIP_

@class IOSByteArray;
@class NetI2pI2PAppContext;

@interface NetI2pRouterTransportGeoIP : NSObject
@property (readonly, copy, class) NSString *PROP_GEOIP_ENABLED NS_SWIFT_NAME(PROP_GEOIP_ENABLED);
@property (readonly, copy, class) NSString *PROP_GEOIP_DIR NS_SWIFT_NAME(PROP_GEOIP_DIR);
@property (readonly, copy, class) NSString *GEOIP_DIR_DEFAULT NS_SWIFT_NAME(GEOIP_DIR_DEFAULT);
@property (readonly, copy, class) NSString *GEOIP_FILE_DEFAULT NS_SWIFT_NAME(GEOIP_FILE_DEFAULT);
@property (readonly, copy, class) NSString *COUNTRY_FILE_DEFAULT NS_SWIFT_NAME(COUNTRY_FILE_DEFAULT);
@property (readonly, copy, class) NSString *PROP_IP_COUNTRY NS_SWIFT_NAME(PROP_IP_COUNTRY);
@property (readonly, copy, class) NSString *PROP_DEBIAN_GEOIP NS_SWIFT_NAME(PROP_DEBIAN_GEOIP);
@property (readonly, copy, class) NSString *PROP_DEBIAN_GEOIPV6 NS_SWIFT_NAME(PROP_DEBIAN_GEOIPV6);

+ (NSString *)PROP_GEOIP_ENABLED;

+ (NSString *)PROP_GEOIP_DIR;

+ (NSString *)GEOIP_DIR_DEFAULT;

+ (NSString *)GEOIP_FILE_DEFAULT;

+ (NSString *)COUNTRY_FILE_DEFAULT;

+ (NSString *)PROP_IP_COUNTRY;

+ (NSString *)PROP_DEBIAN_GEOIP;

+ (NSString *)PROP_DEBIAN_GEOIPV6;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (void)addWithByteArray:(IOSByteArray *)ip;

- (void)addWithNSString:(NSString *)ip;

- (void)blockingLookup;

- (NSString *)fullNameWithNSString:(NSString *)code;

- (NSString *)getWithByteArray:(IOSByteArray *)ip;

- (NSString *)getWithNSString:(NSString *)ip;

- (void)shutdown;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportGeoIP)

inline NSString *NetI2pRouterTransportGeoIP_get_PROP_GEOIP_ENABLED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportGeoIP_PROP_GEOIP_ENABLED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportGeoIP, PROP_GEOIP_ENABLED, NSString *)

inline NSString *NetI2pRouterTransportGeoIP_get_PROP_GEOIP_DIR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportGeoIP_PROP_GEOIP_DIR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportGeoIP, PROP_GEOIP_DIR, NSString *)

inline NSString *NetI2pRouterTransportGeoIP_get_GEOIP_DIR_DEFAULT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportGeoIP_GEOIP_DIR_DEFAULT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportGeoIP, GEOIP_DIR_DEFAULT, NSString *)

inline NSString *NetI2pRouterTransportGeoIP_get_GEOIP_FILE_DEFAULT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportGeoIP_GEOIP_FILE_DEFAULT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportGeoIP, GEOIP_FILE_DEFAULT, NSString *)

inline NSString *NetI2pRouterTransportGeoIP_get_COUNTRY_FILE_DEFAULT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportGeoIP_COUNTRY_FILE_DEFAULT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportGeoIP, COUNTRY_FILE_DEFAULT, NSString *)

inline NSString *NetI2pRouterTransportGeoIP_get_PROP_IP_COUNTRY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportGeoIP_PROP_IP_COUNTRY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportGeoIP, PROP_IP_COUNTRY, NSString *)

inline NSString *NetI2pRouterTransportGeoIP_get_PROP_DEBIAN_GEOIP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportGeoIP_PROP_DEBIAN_GEOIP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportGeoIP, PROP_DEBIAN_GEOIP, NSString *)

inline NSString *NetI2pRouterTransportGeoIP_get_PROP_DEBIAN_GEOIPV6(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportGeoIP_PROP_DEBIAN_GEOIPV6;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportGeoIP, PROP_DEBIAN_GEOIPV6, NSString *)

FOUNDATION_EXPORT void NetI2pRouterTransportGeoIP_initWithNetI2pI2PAppContext_(NetI2pRouterTransportGeoIP *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pRouterTransportGeoIP *new_NetI2pRouterTransportGeoIP_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportGeoIP *create_NetI2pRouterTransportGeoIP_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportGeoIP)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportGeoIP")
