//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/ntcp/NTCP2Options.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportNtcpNTCP2Options")
#ifdef RESTRICT_NetI2pRouterTransportNtcpNTCP2Options
#define INCLUDE_ALL_NetI2pRouterTransportNtcpNTCP2Options 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportNtcpNTCP2Options 1
#endif
#undef RESTRICT_NetI2pRouterTransportNtcpNTCP2Options

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportNtcpNTCP2Options_) && (INCLUDE_ALL_NetI2pRouterTransportNtcpNTCP2Options || defined(INCLUDE_NetI2pRouterTransportNtcpNTCP2Options))
#define NetI2pRouterTransportNtcpNTCP2Options_

@class IOSByteArray;

@interface NetI2pRouterTransportNtcpNTCP2Options : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithFloat:(jfloat)sendMin
                              withFloat:(jfloat)sendMax
                              withFloat:(jfloat)recvMin
                              withFloat:(jfloat)recvMax
                                withInt:(jint)sendDummy
                                withInt:(jint)recvDummy
                                withInt:(jint)sendDelay
                                withInt:(jint)recvDelay;

+ (NetI2pRouterTransportNtcpNTCP2Options *)fromByteArrayWithByteArray:(IOSByteArray *)options;

- (jint)getRecvDelay;

- (jint)getRecvDummy;

- (jfloat)getRecvMax;

- (jfloat)getRecvMin;

- (jint)getSendDelay;

- (jint)getSendDummy;

- (jfloat)getSendMax;

- (jfloat)getSendMin;

- (NetI2pRouterTransportNtcpNTCP2Options *)mergeWithNetI2pRouterTransportNtcpNTCP2Options:(NetI2pRouterTransportNtcpNTCP2Options *)his;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportNtcpNTCP2Options)

FOUNDATION_EXPORT void NetI2pRouterTransportNtcpNTCP2Options_initWithFloat_withFloat_withFloat_withFloat_withInt_withInt_withInt_withInt_(NetI2pRouterTransportNtcpNTCP2Options *self, jfloat sendMin, jfloat sendMax, jfloat recvMin, jfloat recvMax, jint sendDummy, jint recvDummy, jint sendDelay, jint recvDelay);

FOUNDATION_EXPORT NetI2pRouterTransportNtcpNTCP2Options *new_NetI2pRouterTransportNtcpNTCP2Options_initWithFloat_withFloat_withFloat_withFloat_withInt_withInt_withInt_withInt_(jfloat sendMin, jfloat sendMax, jfloat recvMin, jfloat recvMax, jint sendDummy, jint recvDummy, jint sendDelay, jint recvDelay) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportNtcpNTCP2Options *create_NetI2pRouterTransportNtcpNTCP2Options_initWithFloat_withFloat_withFloat_withFloat_withInt_withInt_withInt_withInt_(jfloat sendMin, jfloat sendMax, jfloat recvMin, jfloat recvMax, jint sendDummy, jint recvDummy, jint sendDelay, jint recvDelay);

FOUNDATION_EXPORT NetI2pRouterTransportNtcpNTCP2Options *NetI2pRouterTransportNtcpNTCP2Options_fromByteArrayWithByteArray_(IOSByteArray *options);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportNtcpNTCP2Options)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportNtcpNTCP2Options")
