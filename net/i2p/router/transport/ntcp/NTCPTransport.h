//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/ntcp/NTCPTransport.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportNtcpNTCPTransport")
#ifdef RESTRICT_NetI2pRouterTransportNtcpNTCPTransport
#define INCLUDE_ALL_NetI2pRouterTransportNtcpNTCPTransport 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportNtcpNTCPTransport 1
#endif
#undef RESTRICT_NetI2pRouterTransportNtcpNTCPTransport

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportNtcpNTCPTransport_) && (INCLUDE_ALL_NetI2pRouterTransportNtcpNTCPTransport || defined(INCLUDE_NetI2pRouterTransportNtcpNTCPTransport))
#define NetI2pRouterTransportNtcpNTCPTransport_

#define RESTRICT_NetI2pRouterTransportTransportImpl 1
#define INCLUDE_NetI2pRouterTransportTransportImpl 1
#include "net/i2p/router/transport/TransportImpl.h"

@class IOSByteArray;
@class JavaIoWriter;
@class JavaUtilVector;
@class NetI2pDataHash;
@class NetI2pDataRouterRouterInfo;
@class NetI2pRouterCommSystemFacade_Status;
@class NetI2pRouterOutNetMessage;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportCryptoDHSessionKeyBuilder;
@class NetI2pRouterTransportCryptoX25519KeyFactory;
@class NetI2pRouterTransportNtcpEventPumper;
@class NetI2pRouterTransportNtcpNTCPConnection;
@class NetI2pRouterTransportNtcpReader;
@class NetI2pRouterTransportNtcpWriter;
@class NetI2pRouterTransportTransportBid;
@class NetI2pRouterTransportTransport_AddressSource;
@protocol JavaUtilCollection;
@protocol JavaUtilSet;
@protocol NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory;

@interface NetI2pRouterTransportNtcpNTCPTransport : NetI2pRouterTransportTransportImpl
@property (readonly, copy, class) NSString *PROP_I2NP_NTCP_HOSTNAME NS_SWIFT_NAME(PROP_I2NP_NTCP_HOSTNAME);
@property (readonly, copy, class) NSString *PROP_I2NP_NTCP_PORT NS_SWIFT_NAME(PROP_I2NP_NTCP_PORT);
@property (readonly, copy, class) NSString *PROP_I2NP_NTCP_AUTO_PORT NS_SWIFT_NAME(PROP_I2NP_NTCP_AUTO_PORT);
@property (readonly, copy, class) NSString *PROP_I2NP_NTCP_AUTO_IP NS_SWIFT_NAME(PROP_I2NP_NTCP_AUTO_IP);
@property (readonly, copy, class) NSString *PROP_BIND_INTERFACE NS_SWIFT_NAME(PROP_BIND_INTERFACE);
@property (readonly, copy, class) NSString *MIN_SIGTYPE_VERSION NS_SWIFT_NAME(MIN_SIGTYPE_VERSION);
@property (readonly, copy, class) NSString *STYLE NS_SWIFT_NAME(STYLE);
@property (readonly, copy, class) NSString *STYLE2 NS_SWIFT_NAME(STYLE2);
@property (readonly, class) jint NTCP2_INT_VERSION NS_SWIFT_NAME(NTCP2_INT_VERSION);
@property (readonly, copy, class) NSString *NTCP2_VERSION NS_SWIFT_NAME(NTCP2_VERSION);
@property (readonly, copy, class) NSString *NTCP2_VERSION_ALT NS_SWIFT_NAME(NTCP2_VERSION_ALT);
@property (readonly, copy, class) NSString *PROP_NTCP2_SP NS_SWIFT_NAME(PROP_NTCP2_SP);
@property (readonly, copy, class) NSString *PROP_NTCP2_IV NS_SWIFT_NAME(PROP_NTCP2_IV);
@property (readonly, class) jint ESTABLISH_TIMEOUT NS_SWIFT_NAME(ESTABLISH_TIMEOUT);

+ (NSString *)PROP_I2NP_NTCP_HOSTNAME;

+ (NSString *)PROP_I2NP_NTCP_PORT;

+ (NSString *)PROP_I2NP_NTCP_AUTO_PORT;

+ (NSString *)PROP_I2NP_NTCP_AUTO_IP;

+ (NSString *)PROP_BIND_INTERFACE;

+ (NSString *)MIN_SIGTYPE_VERSION;

+ (NSString *)STYLE;

+ (NSString *)STYLE2;

+ (jint)NTCP2_INT_VERSION;

+ (NSString *)NTCP2_VERSION;

+ (NSString *)NTCP2_VERSION_ALT;

+ (NSString *)PROP_NTCP2_SP;

+ (NSString *)PROP_NTCP2_IV;

+ (jint)ESTABLISH_TIMEOUT;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
 withNetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory:(id<NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory>)dh
            withNetI2pRouterTransportCryptoX25519KeyFactory:(NetI2pRouterTransportCryptoX25519KeyFactory *)xdh;

- (void)afterSendWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg
                                   withBoolean:(jboolean)sendSuccessful
                                   withBoolean:(jboolean)allowRequeue
                                      withLong:(jlong)msToSend;

- (jboolean)allowConnection;

- (NetI2pRouterTransportTransportBid *)bidWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)toAddress
                                                                 withInt:(jint)dataSize;

- (jint)countActivePeers;

- (jint)countActiveSendPeers;

- (jint)countPeers;

- (void)externalAddressReceivedWithNetI2pRouterTransportTransport_AddressSource:(NetI2pRouterTransportTransport_AddressSource *)source
                                                                  withByteArray:(IOSByteArray *)ip
                                                                        withInt:(jint)port;

- (void)externalAddressRemovedWithNetI2pRouterTransportTransport_AddressSource:(NetI2pRouterTransportTransport_AddressSource *)source
                                                                   withBoolean:(jboolean)ipv6;

- (void)forwardPortStatusWithByteArray:(IOSByteArray *)ip
                               withInt:(jint)port
                               withInt:(jint)externalPort
                           withBoolean:(jboolean)success
                          withNSString:(NSString *)reason;

- (NSString *)getAltStyle;

- (JavaUtilVector *)getClockSkews;

- (id<JavaUtilSet>)getEstablished;

- (id<JavaUtilCollection>)getPeers;

- (NetI2pRouterCommSystemFacade_Status *)getReachabilityStatus;

- (jint)getRequestedPort;

- (NSString *)getStyle;

- (jboolean)isAlive;

- (jboolean)isBackloggedWithNetI2pDataHash:(NetI2pDataHash *)dest;

- (jboolean)isEstablishedWithNetI2pDataHash:(NetI2pDataHash *)dest;

- (void)mayDisconnectWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg
                                 withInt:(jint)sortFlags;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg
                            withNSString:(NSString *)urlBase
                                 withInt:(jint)sortFlags;

- (void)startListening;

- (void)stopListening;

#pragma mark Protected

- (void)outboundMessageReady;

#pragma mark Package-Private

- (void)establishingWithNetI2pRouterTransportNtcpNTCPConnection:(NetI2pRouterTransportNtcpNTCPConnection *)con;

- (void)expireTimedOut;

- (NetI2pRouterTransportCryptoDHSessionKeyBuilder *)getDHBuilder;

- (IOSByteArray *)getNTCP2StaticIV;

- (IOSByteArray *)getNTCP2StaticPrivkey;

- (IOSByteArray *)getNTCP2StaticPubkey;

- (NetI2pRouterTransportNtcpEventPumper *)getPumper;

- (NetI2pRouterTransportNtcpReader *)getReader;

- (NetI2pRouterTransportNtcpWriter *)getWriter;

- (NetI2pRouterTransportCryptoX25519KeyFactory *)getXDHFactory;

- (NetI2pRouterTransportNtcpNTCPConnection *)inboundEstablishedWithNetI2pRouterTransportNtcpNTCPConnection:(NetI2pRouterTransportNtcpNTCPConnection *)con;

- (jboolean)isHXHIValidWithByteArray:(IOSByteArray *)hxhi;

- (jboolean)isNTCP2Enabled;

- (NetI2pRouterTransportNtcpNTCPConnection *)removeConWithNetI2pRouterTransportNtcpNTCPConnection:(NetI2pRouterTransportNtcpNTCPConnection *)con;

- (void)returnUnusedWithNetI2pRouterTransportCryptoDHSessionKeyBuilder:(NetI2pRouterTransportCryptoDHSessionKeyBuilder *)builder;

- (void)sendCompleteWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg;

- (void)setLastBadSkewWithLong:(jlong)skew;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportNtcpNTCPTransport)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_PROP_I2NP_NTCP_HOSTNAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_PROP_I2NP_NTCP_HOSTNAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, PROP_I2NP_NTCP_HOSTNAME, NSString *)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_PROP_I2NP_NTCP_PORT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_PROP_I2NP_NTCP_PORT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, PROP_I2NP_NTCP_PORT, NSString *)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_PROP_I2NP_NTCP_AUTO_PORT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_PROP_I2NP_NTCP_AUTO_PORT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, PROP_I2NP_NTCP_AUTO_PORT, NSString *)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_PROP_I2NP_NTCP_AUTO_IP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_PROP_I2NP_NTCP_AUTO_IP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, PROP_I2NP_NTCP_AUTO_IP, NSString *)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_PROP_BIND_INTERFACE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_PROP_BIND_INTERFACE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, PROP_BIND_INTERFACE, NSString *)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_MIN_SIGTYPE_VERSION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_MIN_SIGTYPE_VERSION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, MIN_SIGTYPE_VERSION, NSString *)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_STYLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_STYLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, STYLE, NSString *)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_STYLE2(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_STYLE2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, STYLE2, NSString *)

inline jint NetI2pRouterTransportNtcpNTCPTransport_get_NTCP2_INT_VERSION(void);
#define NetI2pRouterTransportNtcpNTCPTransport_NTCP2_INT_VERSION 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpNTCPTransport, NTCP2_INT_VERSION, jint)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_NTCP2_VERSION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_NTCP2_VERSION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, NTCP2_VERSION, NSString *)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_NTCP2_VERSION_ALT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_NTCP2_VERSION_ALT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, NTCP2_VERSION_ALT, NSString *)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_PROP_NTCP2_SP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_PROP_NTCP2_SP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, PROP_NTCP2_SP, NSString *)

inline NSString *NetI2pRouterTransportNtcpNTCPTransport_get_PROP_NTCP2_IV(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportNtcpNTCPTransport_PROP_NTCP2_IV;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpNTCPTransport, PROP_NTCP2_IV, NSString *)

inline jint NetI2pRouterTransportNtcpNTCPTransport_get_ESTABLISH_TIMEOUT(void);
#define NetI2pRouterTransportNtcpNTCPTransport_ESTABLISH_TIMEOUT 10000
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpNTCPTransport, ESTABLISH_TIMEOUT, jint)

FOUNDATION_EXPORT void NetI2pRouterTransportNtcpNTCPTransport_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory_withNetI2pRouterTransportCryptoX25519KeyFactory_(NetI2pRouterTransportNtcpNTCPTransport *self, NetI2pRouterRouterContext *ctx, id<NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory> dh, NetI2pRouterTransportCryptoX25519KeyFactory *xdh);

FOUNDATION_EXPORT NetI2pRouterTransportNtcpNTCPTransport *new_NetI2pRouterTransportNtcpNTCPTransport_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory_withNetI2pRouterTransportCryptoX25519KeyFactory_(NetI2pRouterRouterContext *ctx, id<NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory> dh, NetI2pRouterTransportCryptoX25519KeyFactory *xdh) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportNtcpNTCPTransport *create_NetI2pRouterTransportNtcpNTCPTransport_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory_withNetI2pRouterTransportCryptoX25519KeyFactory_(NetI2pRouterRouterContext *ctx, id<NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory> dh, NetI2pRouterTransportCryptoX25519KeyFactory *xdh);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportNtcpNTCPTransport)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportNtcpNTCPTransport")
