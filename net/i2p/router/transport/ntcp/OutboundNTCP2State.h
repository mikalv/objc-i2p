//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/ntcp/OutboundNTCP2State.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportNtcpOutboundNTCP2State")
#ifdef RESTRICT_NetI2pRouterTransportNtcpOutboundNTCP2State
#define INCLUDE_ALL_NetI2pRouterTransportNtcpOutboundNTCP2State 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportNtcpOutboundNTCP2State 1
#endif
#undef RESTRICT_NetI2pRouterTransportNtcpOutboundNTCP2State

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportNtcpOutboundNTCP2State_) && (INCLUDE_ALL_NetI2pRouterTransportNtcpOutboundNTCP2State || defined(INCLUDE_NetI2pRouterTransportNtcpOutboundNTCP2State))
#define NetI2pRouterTransportNtcpOutboundNTCP2State_

#define RESTRICT_NetI2pRouterTransportNtcpEstablishState 1
#define INCLUDE_NetI2pRouterTransportNtcpEstablishState 1
#include "net/i2p/router/transport/ntcp/EstablishState.h"

@class ComSouthernstormNoiseProtocolHandshakeState;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaLangException;
@class JavaNioByteBuffer;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportNtcpNTCPConnection;
@class NetI2pRouterTransportNtcpNTCPTransport;

@interface NetI2pRouterTransportNtcpOutboundNTCP2State : NSObject < NetI2pRouterTransportNtcpEstablishState >
@property (readonly, class) jint KEY_SIZE NS_SWIFT_NAME(KEY_SIZE);
@property (readonly, class) jint MAC_SIZE NS_SWIFT_NAME(MAC_SIZE);
@property (readonly, class) jint IV_SIZE NS_SWIFT_NAME(IV_SIZE);
@property (readonly, class) jint OPTIONS1_SIZE NS_SWIFT_NAME(OPTIONS1_SIZE);
@property (readonly, class) jint MSG1_SIZE NS_SWIFT_NAME(MSG1_SIZE);
@property (readonly, class) jint TOTAL1_MAX NS_SWIFT_NAME(TOTAL1_MAX);
@property (readonly, class) jint OPTIONS2_SIZE NS_SWIFT_NAME(OPTIONS2_SIZE);
@property (readonly, class) jint MSG2_SIZE NS_SWIFT_NAME(MSG2_SIZE);
@property (readonly, class) jint MSG3P1_SIZE NS_SWIFT_NAME(MSG3P1_SIZE);
@property (readonly, class) jlong MAX_SKEW NS_SWIFT_NAME(MAX_SKEW);
@property (readonly, class, strong) IOSByteArray *ZEROKEY NS_SWIFT_NAME(ZEROKEY);

+ (jint)KEY_SIZE;

+ (jint)MAC_SIZE;

+ (jint)IV_SIZE;

+ (jint)OPTIONS1_SIZE;

+ (jint)MSG1_SIZE;

+ (jint)TOTAL1_MAX;

+ (jint)OPTIONS2_SIZE;

+ (jint)MSG2_SIZE;

+ (jint)MSG3P1_SIZE;

+ (jlong)MAX_SKEW;

+ (IOSByteArray *)ZEROKEY;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                 withNetI2pRouterTransportNtcpNTCPTransport:(NetI2pRouterTransportNtcpNTCPTransport *)transport
                withNetI2pRouterTransportNtcpNTCPConnection:(NetI2pRouterTransportNtcpNTCPConnection *)con;

- (void)closeWithNSString:(NSString *)reason
    withJavaLangException:(JavaLangException *)e;

- (jint)getVersion;

- (jboolean)isComplete;

- (jboolean)isCorrupt;

- (void)prepareOutbound;

- (void)receiveWithJavaNioByteBuffer:(JavaNioByteBuffer *)src;

- (NSString *)description;

#pragma mark Protected

- (void)failWithNSString:(NSString *)reason;

- (void)failWithNSString:(NSString *)reason
   withJavaLangException:(JavaLangException *)e;

- (void)failWithNSString:(NSString *)reason
   withJavaLangException:(JavaLangException *)e
             withBoolean:(jboolean)bySkew;

#pragma mark Package-Private

+ (IOSObjectArray *)generateSipHashKeysWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                     withComSouthernstormNoiseProtocolHandshakeState:(ComSouthernstormNoiseProtocolHandshakeState *)state;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportNtcpOutboundNTCP2State)

inline jint NetI2pRouterTransportNtcpOutboundNTCP2State_get_KEY_SIZE(void);
#define NetI2pRouterTransportNtcpOutboundNTCP2State_KEY_SIZE 32
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpOutboundNTCP2State, KEY_SIZE, jint)

inline jint NetI2pRouterTransportNtcpOutboundNTCP2State_get_MAC_SIZE(void);
#define NetI2pRouterTransportNtcpOutboundNTCP2State_MAC_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpOutboundNTCP2State, MAC_SIZE, jint)

inline jint NetI2pRouterTransportNtcpOutboundNTCP2State_get_IV_SIZE(void);
#define NetI2pRouterTransportNtcpOutboundNTCP2State_IV_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpOutboundNTCP2State, IV_SIZE, jint)

inline jint NetI2pRouterTransportNtcpOutboundNTCP2State_get_OPTIONS1_SIZE(void);
#define NetI2pRouterTransportNtcpOutboundNTCP2State_OPTIONS1_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpOutboundNTCP2State, OPTIONS1_SIZE, jint)

inline jint NetI2pRouterTransportNtcpOutboundNTCP2State_get_MSG1_SIZE(void);
#define NetI2pRouterTransportNtcpOutboundNTCP2State_MSG1_SIZE 64
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpOutboundNTCP2State, MSG1_SIZE, jint)

inline jint NetI2pRouterTransportNtcpOutboundNTCP2State_get_TOTAL1_MAX(void);
#define NetI2pRouterTransportNtcpOutboundNTCP2State_TOTAL1_MAX 287
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpOutboundNTCP2State, TOTAL1_MAX, jint)

inline jint NetI2pRouterTransportNtcpOutboundNTCP2State_get_OPTIONS2_SIZE(void);
#define NetI2pRouterTransportNtcpOutboundNTCP2State_OPTIONS2_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpOutboundNTCP2State, OPTIONS2_SIZE, jint)

inline jint NetI2pRouterTransportNtcpOutboundNTCP2State_get_MSG2_SIZE(void);
#define NetI2pRouterTransportNtcpOutboundNTCP2State_MSG2_SIZE 64
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpOutboundNTCP2State, MSG2_SIZE, jint)

inline jint NetI2pRouterTransportNtcpOutboundNTCP2State_get_MSG3P1_SIZE(void);
#define NetI2pRouterTransportNtcpOutboundNTCP2State_MSG3P1_SIZE 48
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpOutboundNTCP2State, MSG3P1_SIZE, jint)

inline jlong NetI2pRouterTransportNtcpOutboundNTCP2State_get_MAX_SKEW(void);
#define NetI2pRouterTransportNtcpOutboundNTCP2State_MAX_SKEW 60LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportNtcpOutboundNTCP2State, MAX_SKEW, jlong)

inline IOSByteArray *NetI2pRouterTransportNtcpOutboundNTCP2State_get_ZEROKEY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *NetI2pRouterTransportNtcpOutboundNTCP2State_ZEROKEY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportNtcpOutboundNTCP2State, ZEROKEY, IOSByteArray *)

FOUNDATION_EXPORT void NetI2pRouterTransportNtcpOutboundNTCP2State_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportNtcpNTCPTransport_withNetI2pRouterTransportNtcpNTCPConnection_(NetI2pRouterTransportNtcpOutboundNTCP2State *self, NetI2pRouterRouterContext *ctx, NetI2pRouterTransportNtcpNTCPTransport *transport, NetI2pRouterTransportNtcpNTCPConnection *con);

FOUNDATION_EXPORT NetI2pRouterTransportNtcpOutboundNTCP2State *new_NetI2pRouterTransportNtcpOutboundNTCP2State_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportNtcpNTCPTransport_withNetI2pRouterTransportNtcpNTCPConnection_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportNtcpNTCPTransport *transport, NetI2pRouterTransportNtcpNTCPConnection *con) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportNtcpOutboundNTCP2State *create_NetI2pRouterTransportNtcpOutboundNTCP2State_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportNtcpNTCPTransport_withNetI2pRouterTransportNtcpNTCPConnection_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportNtcpNTCPTransport *transport, NetI2pRouterTransportNtcpNTCPConnection *con);

FOUNDATION_EXPORT IOSObjectArray *NetI2pRouterTransportNtcpOutboundNTCP2State_generateSipHashKeysWithNetI2pRouterRouterContext_withComSouthernstormNoiseProtocolHandshakeState_(NetI2pRouterRouterContext *ctx, ComSouthernstormNoiseProtocolHandshakeState *state);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportNtcpOutboundNTCP2State)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportNtcpOutboundNTCP2State")
