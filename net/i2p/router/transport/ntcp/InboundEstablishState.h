//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/ntcp/InboundEstablishState.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportNtcpInboundEstablishState")
#ifdef RESTRICT_NetI2pRouterTransportNtcpInboundEstablishState
#define INCLUDE_ALL_NetI2pRouterTransportNtcpInboundEstablishState 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportNtcpInboundEstablishState 1
#endif
#undef RESTRICT_NetI2pRouterTransportNtcpInboundEstablishState

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportNtcpInboundEstablishState_) && (INCLUDE_ALL_NetI2pRouterTransportNtcpInboundEstablishState || defined(INCLUDE_NetI2pRouterTransportNtcpInboundEstablishState))
#define NetI2pRouterTransportNtcpInboundEstablishState_

#define RESTRICT_NetI2pRouterTransportNtcpEstablishBase 1
#define INCLUDE_NetI2pRouterTransportNtcpEstablishBase 1
#include "net/i2p/router/transport/ntcp/EstablishBase.h"

#define RESTRICT_NetI2pRouterTransportNtcpNTCP2Payload 1
#define INCLUDE_NetI2pRouterTransportNtcpNTCP2Payload_PayloadCallback 1
#include "net/i2p/router/transport/ntcp/NTCP2Payload.h"

@class IOSByteArray;
@class JavaLangException;
@class JavaNioByteBuffer;
@class NetI2pDataRouterRouterInfo;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportNtcpNTCPConnection;
@class NetI2pRouterTransportNtcpNTCPTransport;
@protocol NetI2pDataI2npI2NPMessage;

@interface NetI2pRouterTransportNtcpInboundEstablishState : NetI2pRouterTransportNtcpEstablishBase < NetI2pRouterTransportNtcpNTCP2Payload_PayloadCallback >

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                 withNetI2pRouterTransportNtcpNTCPTransport:(NetI2pRouterTransportNtcpNTCPTransport *)transport
                withNetI2pRouterTransportNtcpNTCPConnection:(NetI2pRouterTransportNtcpNTCPConnection *)con;

- (jint)getVersion;

- (void)gotDateTimeWithLong:(jlong)time;

- (void)gotI2NPWithNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)msg;

- (void)gotOptionsWithByteArray:(IOSByteArray *)options
                    withBoolean:(jboolean)isHandshake;

- (void)gotPaddingWithInt:(jint)paddingLength
                  withInt:(jint)frameLength;

- (void)gotRIWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)ri
                                withBoolean:(jboolean)isHandshake
                                withBoolean:(jboolean)flood;

- (void)gotTerminationWithInt:(jint)reason
                     withLong:(jlong)lastReceived;

- (void)gotUnknownWithInt:(jint)type
                  withInt:(jint)len;

- (void)receiveWithJavaNioByteBuffer:(JavaNioByteBuffer *)src;

#pragma mark Protected

- (void)failWithNSString:(NSString *)reason
   withJavaLangException:(JavaLangException *)e
             withBoolean:(jboolean)bySkew;

- (void)releaseBufsWithBoolean:(jboolean)isVerified;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportNtcpInboundEstablishState)

FOUNDATION_EXPORT void NetI2pRouterTransportNtcpInboundEstablishState_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportNtcpNTCPTransport_withNetI2pRouterTransportNtcpNTCPConnection_(NetI2pRouterTransportNtcpInboundEstablishState *self, NetI2pRouterRouterContext *ctx, NetI2pRouterTransportNtcpNTCPTransport *transport, NetI2pRouterTransportNtcpNTCPConnection *con);

FOUNDATION_EXPORT NetI2pRouterTransportNtcpInboundEstablishState *new_NetI2pRouterTransportNtcpInboundEstablishState_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportNtcpNTCPTransport_withNetI2pRouterTransportNtcpNTCPConnection_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportNtcpNTCPTransport *transport, NetI2pRouterTransportNtcpNTCPConnection *con) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportNtcpInboundEstablishState *create_NetI2pRouterTransportNtcpInboundEstablishState_initWithNetI2pRouterRouterContext_withNetI2pRouterTransportNtcpNTCPTransport_withNetI2pRouterTransportNtcpNTCPConnection_(NetI2pRouterRouterContext *ctx, NetI2pRouterTransportNtcpNTCPTransport *transport, NetI2pRouterTransportNtcpNTCPConnection *con);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportNtcpInboundEstablishState)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportNtcpInboundEstablishState")
