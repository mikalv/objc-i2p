//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/FIFOBandwidthRefiller.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthRefiller")
#ifdef RESTRICT_NetI2pRouterTransportFIFOBandwidthRefiller
#define INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthRefiller 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthRefiller 1
#endif
#undef RESTRICT_NetI2pRouterTransportFIFOBandwidthRefiller

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportFIFOBandwidthRefiller_) && (INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthRefiller || defined(INCLUDE_NetI2pRouterTransportFIFOBandwidthRefiller))
#define NetI2pRouterTransportFIFOBandwidthRefiller_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class NetI2pI2PAppContext;
@class NetI2pRouterTransportFIFOBandwidthLimiter;

@interface NetI2pRouterTransportFIFOBandwidthRefiller : NSObject < JavaLangRunnable >
@property (readonly, copy, class) NSString *PROP_INBOUND_BANDWIDTH NS_SWIFT_NAME(PROP_INBOUND_BANDWIDTH);
@property (readonly, copy, class) NSString *PROP_OUTBOUND_BANDWIDTH NS_SWIFT_NAME(PROP_OUTBOUND_BANDWIDTH);
@property (readonly, copy, class) NSString *PROP_INBOUND_BURST_BANDWIDTH NS_SWIFT_NAME(PROP_INBOUND_BURST_BANDWIDTH);
@property (readonly, copy, class) NSString *PROP_OUTBOUND_BURST_BANDWIDTH NS_SWIFT_NAME(PROP_OUTBOUND_BURST_BANDWIDTH);
@property (readonly, copy, class) NSString *PROP_INBOUND_BANDWIDTH_PEAK NS_SWIFT_NAME(PROP_INBOUND_BANDWIDTH_PEAK);
@property (readonly, copy, class) NSString *PROP_OUTBOUND_BANDWIDTH_PEAK NS_SWIFT_NAME(PROP_OUTBOUND_BANDWIDTH_PEAK);
@property (readonly, class) jint DEFAULT_INBOUND_BANDWIDTH NS_SWIFT_NAME(DEFAULT_INBOUND_BANDWIDTH);
@property (readonly, class) jint DEFAULT_OUTBOUND_BANDWIDTH NS_SWIFT_NAME(DEFAULT_OUTBOUND_BANDWIDTH);
@property (readonly, class) jint DEFAULT_INBOUND_BURST_BANDWIDTH NS_SWIFT_NAME(DEFAULT_INBOUND_BURST_BANDWIDTH);
@property (readonly, class) jint DEFAULT_OUTBOUND_BURST_BANDWIDTH NS_SWIFT_NAME(DEFAULT_OUTBOUND_BURST_BANDWIDTH);
@property (readonly, class) jint DEFAULT_BURST_SECONDS NS_SWIFT_NAME(DEFAULT_BURST_SECONDS);
@property (readonly, class) jint MIN_INBOUND_BANDWIDTH NS_SWIFT_NAME(MIN_INBOUND_BANDWIDTH);
@property (readonly, class) jint MIN_OUTBOUND_BANDWIDTH NS_SWIFT_NAME(MIN_OUTBOUND_BANDWIDTH);
@property (readonly, class) jint MIN_INBOUND_BANDWIDTH_PEAK NS_SWIFT_NAME(MIN_INBOUND_BANDWIDTH_PEAK);
@property (readonly, class) jint MIN_OUTBOUND_BANDWIDTH_PEAK NS_SWIFT_NAME(MIN_OUTBOUND_BANDWIDTH_PEAK);
@property (readonly, class) jint MAX_OUTBOUND_BANDWIDTH NS_SWIFT_NAME(MAX_OUTBOUND_BANDWIDTH);

+ (NSString *)PROP_INBOUND_BANDWIDTH;

+ (NSString *)PROP_OUTBOUND_BANDWIDTH;

+ (NSString *)PROP_INBOUND_BURST_BANDWIDTH;

+ (NSString *)PROP_OUTBOUND_BURST_BANDWIDTH;

+ (NSString *)PROP_INBOUND_BANDWIDTH_PEAK;

+ (NSString *)PROP_OUTBOUND_BANDWIDTH_PEAK;

+ (jint)DEFAULT_INBOUND_BANDWIDTH;

+ (jint)DEFAULT_OUTBOUND_BANDWIDTH;

+ (jint)DEFAULT_INBOUND_BURST_BANDWIDTH;

+ (jint)DEFAULT_OUTBOUND_BURST_BANDWIDTH;

+ (jint)DEFAULT_BURST_SECONDS;

+ (jint)MIN_INBOUND_BANDWIDTH;

+ (jint)MIN_OUTBOUND_BANDWIDTH;

+ (jint)MIN_INBOUND_BANDWIDTH_PEAK;

+ (jint)MIN_OUTBOUND_BANDWIDTH_PEAK;

+ (jint)MAX_OUTBOUND_BANDWIDTH;

#pragma mark Public

- (void)run;

#pragma mark Package-Private

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context
        withNetI2pRouterTransportFIFOBandwidthLimiter:(NetI2pRouterTransportFIFOBandwidthLimiter *)limiter;

- (jint)getCurrentParticipatingBandwidth;

- (jint)getInboundBurstKBytesPerSecond;

- (jint)getInboundKBytesPerSecond;

- (jint)getOutboundBurstKBytesPerSecond;

- (jint)getOutboundKBytesPerSecond;

- (void)incrementParticipatingMessageBytesWithInt:(jint)size;

- (void)reinitialize;

- (void)shutdown;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportFIFOBandwidthRefiller)

inline NSString *NetI2pRouterTransportFIFOBandwidthRefiller_get_PROP_INBOUND_BANDWIDTH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportFIFOBandwidthRefiller_PROP_INBOUND_BANDWIDTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportFIFOBandwidthRefiller, PROP_INBOUND_BANDWIDTH, NSString *)

inline NSString *NetI2pRouterTransportFIFOBandwidthRefiller_get_PROP_OUTBOUND_BANDWIDTH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportFIFOBandwidthRefiller_PROP_OUTBOUND_BANDWIDTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportFIFOBandwidthRefiller, PROP_OUTBOUND_BANDWIDTH, NSString *)

inline NSString *NetI2pRouterTransportFIFOBandwidthRefiller_get_PROP_INBOUND_BURST_BANDWIDTH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportFIFOBandwidthRefiller_PROP_INBOUND_BURST_BANDWIDTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportFIFOBandwidthRefiller, PROP_INBOUND_BURST_BANDWIDTH, NSString *)

inline NSString *NetI2pRouterTransportFIFOBandwidthRefiller_get_PROP_OUTBOUND_BURST_BANDWIDTH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportFIFOBandwidthRefiller_PROP_OUTBOUND_BURST_BANDWIDTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportFIFOBandwidthRefiller, PROP_OUTBOUND_BURST_BANDWIDTH, NSString *)

inline NSString *NetI2pRouterTransportFIFOBandwidthRefiller_get_PROP_INBOUND_BANDWIDTH_PEAK(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportFIFOBandwidthRefiller_PROP_INBOUND_BANDWIDTH_PEAK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportFIFOBandwidthRefiller, PROP_INBOUND_BANDWIDTH_PEAK, NSString *)

inline NSString *NetI2pRouterTransportFIFOBandwidthRefiller_get_PROP_OUTBOUND_BANDWIDTH_PEAK(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportFIFOBandwidthRefiller_PROP_OUTBOUND_BANDWIDTH_PEAK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportFIFOBandwidthRefiller, PROP_OUTBOUND_BANDWIDTH_PEAK, NSString *)

inline jint NetI2pRouterTransportFIFOBandwidthRefiller_get_DEFAULT_INBOUND_BANDWIDTH(void);
#define NetI2pRouterTransportFIFOBandwidthRefiller_DEFAULT_INBOUND_BANDWIDTH 300
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportFIFOBandwidthRefiller, DEFAULT_INBOUND_BANDWIDTH, jint)

inline jint NetI2pRouterTransportFIFOBandwidthRefiller_get_DEFAULT_OUTBOUND_BANDWIDTH(void);
#define NetI2pRouterTransportFIFOBandwidthRefiller_DEFAULT_OUTBOUND_BANDWIDTH 60
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportFIFOBandwidthRefiller, DEFAULT_OUTBOUND_BANDWIDTH, jint)

inline jint NetI2pRouterTransportFIFOBandwidthRefiller_get_DEFAULT_INBOUND_BURST_BANDWIDTH(void);
#define NetI2pRouterTransportFIFOBandwidthRefiller_DEFAULT_INBOUND_BURST_BANDWIDTH 300
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportFIFOBandwidthRefiller, DEFAULT_INBOUND_BURST_BANDWIDTH, jint)

inline jint NetI2pRouterTransportFIFOBandwidthRefiller_get_DEFAULT_OUTBOUND_BURST_BANDWIDTH(void);
#define NetI2pRouterTransportFIFOBandwidthRefiller_DEFAULT_OUTBOUND_BURST_BANDWIDTH 60
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportFIFOBandwidthRefiller, DEFAULT_OUTBOUND_BURST_BANDWIDTH, jint)

inline jint NetI2pRouterTransportFIFOBandwidthRefiller_get_DEFAULT_BURST_SECONDS(void);
#define NetI2pRouterTransportFIFOBandwidthRefiller_DEFAULT_BURST_SECONDS 60
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportFIFOBandwidthRefiller, DEFAULT_BURST_SECONDS, jint)

inline jint NetI2pRouterTransportFIFOBandwidthRefiller_get_MIN_INBOUND_BANDWIDTH(void);
#define NetI2pRouterTransportFIFOBandwidthRefiller_MIN_INBOUND_BANDWIDTH 5
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportFIFOBandwidthRefiller, MIN_INBOUND_BANDWIDTH, jint)

inline jint NetI2pRouterTransportFIFOBandwidthRefiller_get_MIN_OUTBOUND_BANDWIDTH(void);
#define NetI2pRouterTransportFIFOBandwidthRefiller_MIN_OUTBOUND_BANDWIDTH 5
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportFIFOBandwidthRefiller, MIN_OUTBOUND_BANDWIDTH, jint)

inline jint NetI2pRouterTransportFIFOBandwidthRefiller_get_MIN_INBOUND_BANDWIDTH_PEAK(void);
#define NetI2pRouterTransportFIFOBandwidthRefiller_MIN_INBOUND_BANDWIDTH_PEAK 5
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportFIFOBandwidthRefiller, MIN_INBOUND_BANDWIDTH_PEAK, jint)

inline jint NetI2pRouterTransportFIFOBandwidthRefiller_get_MIN_OUTBOUND_BANDWIDTH_PEAK(void);
#define NetI2pRouterTransportFIFOBandwidthRefiller_MIN_OUTBOUND_BANDWIDTH_PEAK 5
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportFIFOBandwidthRefiller, MIN_OUTBOUND_BANDWIDTH_PEAK, jint)

inline jint NetI2pRouterTransportFIFOBandwidthRefiller_get_MAX_OUTBOUND_BANDWIDTH(void);
#define NetI2pRouterTransportFIFOBandwidthRefiller_MAX_OUTBOUND_BANDWIDTH 16384
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTransportFIFOBandwidthRefiller, MAX_OUTBOUND_BANDWIDTH, jint)

FOUNDATION_EXPORT void NetI2pRouterTransportFIFOBandwidthRefiller_initWithNetI2pI2PAppContext_withNetI2pRouterTransportFIFOBandwidthLimiter_(NetI2pRouterTransportFIFOBandwidthRefiller *self, NetI2pI2PAppContext *context, NetI2pRouterTransportFIFOBandwidthLimiter *limiter);

FOUNDATION_EXPORT NetI2pRouterTransportFIFOBandwidthRefiller *new_NetI2pRouterTransportFIFOBandwidthRefiller_initWithNetI2pI2PAppContext_withNetI2pRouterTransportFIFOBandwidthLimiter_(NetI2pI2PAppContext *context, NetI2pRouterTransportFIFOBandwidthLimiter *limiter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportFIFOBandwidthRefiller *create_NetI2pRouterTransportFIFOBandwidthRefiller_initWithNetI2pI2PAppContext_withNetI2pRouterTransportFIFOBandwidthLimiter_(NetI2pI2PAppContext *context, NetI2pRouterTransportFIFOBandwidthLimiter *limiter);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportFIFOBandwidthRefiller)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportFIFOBandwidthRefiller")
