//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/TransportUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportTransportUtil")
#ifdef RESTRICT_NetI2pRouterTransportTransportUtil
#define INCLUDE_ALL_NetI2pRouterTransportTransportUtil 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportTransportUtil 1
#endif
#undef RESTRICT_NetI2pRouterTransportTransportUtil

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportTransportUtil_) && (INCLUDE_ALL_NetI2pRouterTransportTransportUtil || defined(INCLUDE_NetI2pRouterTransportTransportUtil))
#define NetI2pRouterTransportTransportUtil_

@class IOSByteArray;
@class NetI2pDataRouterRouterAddress;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportTransportUtil_IPv6Config;

@interface NetI2pRouterTransportTransportUtil : NSObject
@property (readonly, copy, class) NSString *NTCP_IPV6_CONFIG NS_SWIFT_NAME(NTCP_IPV6_CONFIG);
@property (readonly, copy, class) NSString *SSU_IPV6_CONFIG NS_SWIFT_NAME(SSU_IPV6_CONFIG);
@property (readonly, copy, class) NSString *PROP_IPV4_FIREWALLED NS_SWIFT_NAME(PROP_IPV4_FIREWALLED);
@property (readonly, copy, class) NSString *PROP_IPV6_FIREWALLED NS_SWIFT_NAME(PROP_IPV6_FIREWALLED);
@property (readonly, class, strong) NetI2pRouterTransportTransportUtil_IPv6Config *DEFAULT_IPV6_CONFIG NS_SWIFT_NAME(DEFAULT_IPV6_CONFIG);

+ (NSString *)NTCP_IPV6_CONFIG;

+ (NSString *)SSU_IPV6_CONFIG;

+ (NSString *)PROP_IPV4_FIREWALLED;

+ (NSString *)PROP_IPV6_FIREWALLED;

+ (NetI2pRouterTransportTransportUtil_IPv6Config *)DEFAULT_IPV6_CONFIG;

#pragma mark Public

- (instancetype __nonnull)init;

+ (NetI2pRouterTransportTransportUtil_IPv6Config *)getIPv6ConfigWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                                                                 withNSString:(NSString *)transportStyle;

+ (NetI2pRouterTransportTransportUtil_IPv6Config *)getIPv6ConfigWithNSString:(NSString *)cfg;

+ (jboolean)isIPv4FirewalledWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                             withNSString:(NSString *)transportStyle;

+ (jboolean)isIPv6WithNetI2pDataRouterRouterAddress:(NetI2pDataRouterRouterAddress *)addr;

+ (jboolean)isIPv6FirewalledWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx
                                             withNSString:(NSString *)transportStyle;

+ (jboolean)isPubliclyRoutableWithByteArray:(IOSByteArray *)addr
                                withBoolean:(jboolean)allowIPv6;

+ (jboolean)isPubliclyRoutableWithByteArray:(IOSByteArray *)addr
                                withBoolean:(jboolean)allowIPv4
                                withBoolean:(jboolean)allowIPv6;

+ (jboolean)isValidPortWithInt:(jint)port;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportTransportUtil)

inline NSString *NetI2pRouterTransportTransportUtil_get_NTCP_IPV6_CONFIG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportTransportUtil_NTCP_IPV6_CONFIG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportTransportUtil, NTCP_IPV6_CONFIG, NSString *)

inline NSString *NetI2pRouterTransportTransportUtil_get_SSU_IPV6_CONFIG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportTransportUtil_SSU_IPV6_CONFIG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportTransportUtil, SSU_IPV6_CONFIG, NSString *)

inline NSString *NetI2pRouterTransportTransportUtil_get_PROP_IPV4_FIREWALLED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportTransportUtil_PROP_IPV4_FIREWALLED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportTransportUtil, PROP_IPV4_FIREWALLED, NSString *)

inline NSString *NetI2pRouterTransportTransportUtil_get_PROP_IPV6_FIREWALLED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportTransportUtil_PROP_IPV6_FIREWALLED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportTransportUtil, PROP_IPV6_FIREWALLED, NSString *)

inline NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_get_DEFAULT_IPV6_CONFIG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_DEFAULT_IPV6_CONFIG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportTransportUtil, DEFAULT_IPV6_CONFIG, NetI2pRouterTransportTransportUtil_IPv6Config *)

FOUNDATION_EXPORT void NetI2pRouterTransportTransportUtil_init(NetI2pRouterTransportTransportUtil *self);

FOUNDATION_EXPORT NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_getIPv6ConfigWithNetI2pRouterRouterContext_withNSString_(NetI2pRouterRouterContext *ctx, NSString *transportStyle);

FOUNDATION_EXPORT NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_getIPv6ConfigWithNSString_(NSString *cfg);

FOUNDATION_EXPORT jboolean NetI2pRouterTransportTransportUtil_isIPv4FirewalledWithNetI2pRouterRouterContext_withNSString_(NetI2pRouterRouterContext *ctx, NSString *transportStyle);

FOUNDATION_EXPORT jboolean NetI2pRouterTransportTransportUtil_isIPv6FirewalledWithNetI2pRouterRouterContext_withNSString_(NetI2pRouterRouterContext *ctx, NSString *transportStyle);

FOUNDATION_EXPORT jboolean NetI2pRouterTransportTransportUtil_isIPv6WithNetI2pDataRouterRouterAddress_(NetI2pDataRouterRouterAddress *addr);

FOUNDATION_EXPORT jboolean NetI2pRouterTransportTransportUtil_isPubliclyRoutableWithByteArray_withBoolean_(IOSByteArray *addr, jboolean allowIPv6);

FOUNDATION_EXPORT jboolean NetI2pRouterTransportTransportUtil_isPubliclyRoutableWithByteArray_withBoolean_withBoolean_(IOSByteArray *addr, jboolean allowIPv4, jboolean allowIPv6);

FOUNDATION_EXPORT jboolean NetI2pRouterTransportTransportUtil_isValidPortWithInt_(jint port);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportTransportUtil)

#endif

#if !defined (NetI2pRouterTransportTransportUtil_IPv6Config_) && (INCLUDE_ALL_NetI2pRouterTransportTransportUtil || defined(INCLUDE_NetI2pRouterTransportTransportUtil_IPv6Config))
#define NetI2pRouterTransportTransportUtil_IPv6Config_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pRouterTransportTransportUtil_IPv6Config_Enum) {
  NetI2pRouterTransportTransportUtil_IPv6Config_Enum_IPV6_DISABLED = 0,
  NetI2pRouterTransportTransportUtil_IPv6Config_Enum_IPV6_NOT_PREFERRED = 1,
  NetI2pRouterTransportTransportUtil_IPv6Config_Enum_IPV6_ENABLED = 2,
  NetI2pRouterTransportTransportUtil_IPv6Config_Enum_IPV6_PREFERRED = 3,
  NetI2pRouterTransportTransportUtil_IPv6Config_Enum_IPV6_ONLY = 4,
};

@interface NetI2pRouterTransportTransportUtil_IPv6Config : JavaLangEnum

@property (readonly, class, nonnull) NetI2pRouterTransportTransportUtil_IPv6Config *IPV6_DISABLED NS_SWIFT_NAME(IPV6_DISABLED);
@property (readonly, class, nonnull) NetI2pRouterTransportTransportUtil_IPv6Config *IPV6_NOT_PREFERRED NS_SWIFT_NAME(IPV6_NOT_PREFERRED);
@property (readonly, class, nonnull) NetI2pRouterTransportTransportUtil_IPv6Config *IPV6_ENABLED NS_SWIFT_NAME(IPV6_ENABLED);
@property (readonly, class, nonnull) NetI2pRouterTransportTransportUtil_IPv6Config *IPV6_PREFERRED NS_SWIFT_NAME(IPV6_PREFERRED);
@property (readonly, class, nonnull) NetI2pRouterTransportTransportUtil_IPv6Config *IPV6_ONLY NS_SWIFT_NAME(IPV6_ONLY);
+ (NetI2pRouterTransportTransportUtil_IPv6Config * __nonnull)IPV6_DISABLED;

+ (NetI2pRouterTransportTransportUtil_IPv6Config * __nonnull)IPV6_NOT_PREFERRED;

+ (NetI2pRouterTransportTransportUtil_IPv6Config * __nonnull)IPV6_ENABLED;

+ (NetI2pRouterTransportTransportUtil_IPv6Config * __nonnull)IPV6_PREFERRED;

+ (NetI2pRouterTransportTransportUtil_IPv6Config * __nonnull)IPV6_ONLY;

#pragma mark Public

- (NSString *)toConfigString;

+ (NetI2pRouterTransportTransportUtil_IPv6Config *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pRouterTransportTransportUtil_IPv6Config_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pRouterTransportTransportUtil_IPv6Config)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_IPv6Config_values_[];

inline NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_IPv6Config_get_IPV6_DISABLED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportTransportUtil_IPv6Config, IPV6_DISABLED)

inline NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_IPv6Config_get_IPV6_NOT_PREFERRED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportTransportUtil_IPv6Config, IPV6_NOT_PREFERRED)

inline NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_IPv6Config_get_IPV6_ENABLED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportTransportUtil_IPv6Config, IPV6_ENABLED)

inline NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_IPv6Config_get_IPV6_PREFERRED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportTransportUtil_IPv6Config, IPV6_PREFERRED)

inline NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_IPv6Config_get_IPV6_ONLY(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterTransportTransportUtil_IPv6Config, IPV6_ONLY)

FOUNDATION_EXPORT IOSObjectArray *NetI2pRouterTransportTransportUtil_IPv6Config_values(void);

FOUNDATION_EXPORT NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_IPv6Config_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pRouterTransportTransportUtil_IPv6Config *NetI2pRouterTransportTransportUtil_IPv6Config_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportTransportUtil_IPv6Config)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportTransportUtil")
