//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/transport/TransportManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTransportTransportManager")
#ifdef RESTRICT_NetI2pRouterTransportTransportManager
#define INCLUDE_ALL_NetI2pRouterTransportTransportManager 0
#else
#define INCLUDE_ALL_NetI2pRouterTransportTransportManager 1
#endif
#undef RESTRICT_NetI2pRouterTransportTransportManager

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTransportTransportManager_) && (INCLUDE_ALL_NetI2pRouterTransportTransportManager || defined(INCLUDE_NetI2pRouterTransportTransportManager))
#define NetI2pRouterTransportTransportManager_

#define RESTRICT_NetI2pRouterTransportTransportEventListener 1
#define INCLUDE_NetI2pRouterTransportTransportEventListener 1
#include "net/i2p/router/transport/TransportEventListener.h"

@class IOSByteArray;
@class JavaIoWriter;
@class JavaUtilVector;
@class NetI2pDataHash;
@class NetI2pDataRouterRouterIdentity;
@class NetI2pRouterCommSystemFacade_Status;
@class NetI2pRouterOutNetMessage;
@class NetI2pRouterRouterContext;
@class NetI2pRouterTransportTransportBid;
@class NetI2pRouterTransportTransport_AddressSource;
@protocol JavaUtilList;
@protocol JavaUtilSet;
@protocol JavaUtilSortedMap;
@protocol NetI2pDataI2npI2NPMessage;
@protocol NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory;
@protocol NetI2pRouterTransportTransport;

@interface NetI2pRouterTransportTransportManager : NSObject < NetI2pRouterTransportTransportEventListener >
@property (readonly, copy, class) NSString *PROP_ENABLE_UDP NS_SWIFT_NAME(PROP_ENABLE_UDP);
@property (readonly, copy, class) NSString *PROP_ENABLE_NTCP NS_SWIFT_NAME(PROP_ENABLE_NTCP);
@property (readonly, copy, class) NSString *PROP_ENABLE_UPNP NS_SWIFT_NAME(PROP_ENABLE_UPNP);

+ (NSString *)PROP_ENABLE_UDP;

+ (NSString *)PROP_ENABLE_NTCP;

+ (NSString *)PROP_ENABLE_UPNP;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)context;

- (id<JavaUtilSet>)getEstablished;

+ (jboolean)isNTCPEnabledWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx;

- (void)messageReceivedWithNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)message
                  withNetI2pDataRouterRouterIdentity:(NetI2pDataRouterRouterIdentity *)fromRouter
                                  withNetI2pDataHash:(NetI2pDataHash *)fromRouterHash;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg
                            withNSString:(NSString *)urlBase
                                 withInt:(jint)sortFlags;

- (void)transportAddressChanged;

#pragma mark Package-Private

- (jint)countActivePeers;

- (jint)countActiveSendPeers;

- (void)externalAddressReceivedWithNetI2pRouterTransportTransport_AddressSource:(NetI2pRouterTransportTransport_AddressSource *)source
                                                                  withByteArray:(IOSByteArray *)ip
                                                                        withInt:(jint)port;

- (void)externalAddressRemovedWithNetI2pRouterTransportTransport_AddressSource:(NetI2pRouterTransportTransport_AddressSource *)source
                                                                   withBoolean:(jboolean)ipv6;

- (void)forwardPortStatusWithNSString:(NSString *)style
                        withByteArray:(IOSByteArray *)ip
                              withInt:(jint)port
                              withInt:(jint)externalPort
                          withBoolean:(jboolean)success
                         withNSString:(NSString *)reason;

- (id<JavaUtilList>)getAddresses;

- (NetI2pRouterTransportTransportBid *)getBidWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg;

- (id<JavaUtilList>)getBidsWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg;

- (JavaUtilVector *)getClockSkews;

- (id<NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory>)getDHFactory;

- (IOSByteArray *)getIPWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (id<JavaUtilList>)getMostRecentErrorMessages;

- (NetI2pRouterTransportTransportBid *)getNextBidWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg;

- (NetI2pRouterCommSystemFacade_Status *)getReachabilityStatus;

- (id<NetI2pRouterTransportTransport>)getTransportWithNSString:(NSString *)style;

- (jint)getTransportCount;

- (id<JavaUtilSortedMap>)getTransports;

- (jboolean)haveHighOutboundCapacity;

- (jboolean)haveInboundCapacityWithInt:(jint)pct;

- (jboolean)haveOutboundCapacityWithInt:(jint)pct;

- (void)initializeAddress OBJC_METHOD_FAMILY_NONE;

- (jboolean)isBackloggedWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (jboolean)isEstablishedWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)mayDisconnectWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)recheckReachability;

- (void)registerAndStartWithNetI2pRouterTransportTransport:(id<NetI2pRouterTransportTransport>)t;

- (void)restart;

- (void)shutdown;

- (void)startListening;

- (void)stopAndUnregisterWithNetI2pRouterTransportTransport:(id<NetI2pRouterTransportTransport>)t;

- (void)stopListening;

- (jboolean)wasUnreachableWithNetI2pDataHash:(NetI2pDataHash *)peer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportTransportManager)

inline NSString *NetI2pRouterTransportTransportManager_get_PROP_ENABLE_UDP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportTransportManager_PROP_ENABLE_UDP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportTransportManager, PROP_ENABLE_UDP, NSString *)

inline NSString *NetI2pRouterTransportTransportManager_get_PROP_ENABLE_NTCP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportTransportManager_PROP_ENABLE_NTCP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportTransportManager, PROP_ENABLE_NTCP, NSString *)

inline NSString *NetI2pRouterTransportTransportManager_get_PROP_ENABLE_UPNP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pRouterTransportTransportManager_PROP_ENABLE_UPNP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTransportTransportManager, PROP_ENABLE_UPNP, NSString *)

FOUNDATION_EXPORT void NetI2pRouterTransportTransportManager_initWithNetI2pRouterRouterContext_(NetI2pRouterTransportTransportManager *self, NetI2pRouterRouterContext *context);

FOUNDATION_EXPORT NetI2pRouterTransportTransportManager *new_NetI2pRouterTransportTransportManager_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportTransportManager *create_NetI2pRouterTransportTransportManager_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *context);

FOUNDATION_EXPORT jboolean NetI2pRouterTransportTransportManager_isNTCPEnabledWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportTransportManager)

#endif

#if !defined (NetI2pRouterTransportTransportManager_Port_) && (INCLUDE_ALL_NetI2pRouterTransportTransportManager || defined(INCLUDE_NetI2pRouterTransportTransportManager_Port))
#define NetI2pRouterTransportTransportManager_Port_

@interface NetI2pRouterTransportTransportManager_Port : NSObject {
 @public
  NSString *style_;
  jint port_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)style
                                   withInt:(jint)port;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTransportTransportManager_Port)

J2OBJC_FIELD_SETTER(NetI2pRouterTransportTransportManager_Port, style_, NSString *)

FOUNDATION_EXPORT void NetI2pRouterTransportTransportManager_Port_initWithNSString_withInt_(NetI2pRouterTransportTransportManager_Port *self, NSString *style, jint port);

FOUNDATION_EXPORT NetI2pRouterTransportTransportManager_Port *new_NetI2pRouterTransportTransportManager_Port_initWithNSString_withInt_(NSString *style, jint port) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTransportTransportManager_Port *create_NetI2pRouterTransportTransportManager_Port_initWithNSString_withInt_(NSString *style, jint port);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTransportTransportManager_Port)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTransportTransportManager")
