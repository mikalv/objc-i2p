//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/CommSystemFacade.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterCommSystemFacade")
#ifdef RESTRICT_NetI2pRouterCommSystemFacade
#define INCLUDE_ALL_NetI2pRouterCommSystemFacade 0
#else
#define INCLUDE_ALL_NetI2pRouterCommSystemFacade 1
#endif
#undef RESTRICT_NetI2pRouterCommSystemFacade

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterCommSystemFacade_) && (INCLUDE_ALL_NetI2pRouterCommSystemFacade || defined(INCLUDE_NetI2pRouterCommSystemFacade))
#define NetI2pRouterCommSystemFacade_

#define RESTRICT_NetI2pRouterService 1
#define INCLUDE_NetI2pRouterService 1
#include "net/i2p/router/Service.h"

@class IOSByteArray;
@class JavaIoWriter;
@class JavaLangLong;
@class NetI2pDataHash;
@class NetI2pDataRouterRouterAddress;
@class NetI2pDataRouterRouterInfo;
@class NetI2pRouterCommSystemFacade_Status;
@class NetI2pRouterOutNetMessage;
@protocol JavaUtilList;
@protocol JavaUtilSet;
@protocol JavaUtilSortedMap;
@protocol NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory;
@protocol NetI2pRouterTransportTransport;

@interface NetI2pRouterCommSystemFacade : NSObject < NetI2pRouterService >
@property (readonly, class) jshort STATUS_OK NS_SWIFT_NAME(STATUS_OK);
@property (readonly, class) jshort STATUS_IPV4_OK_IPV6_UNKNOWN NS_SWIFT_NAME(STATUS_IPV4_OK_IPV6_UNKNOWN);
@property (readonly, class) jshort STATUS_IPV4_OK_IPV6_FIREWALLED NS_SWIFT_NAME(STATUS_IPV4_OK_IPV6_FIREWALLED);
@property (readonly, class) jshort STATUS_IPV4_UNKNOWN_IPV6_OK NS_SWIFT_NAME(STATUS_IPV4_UNKNOWN_IPV6_OK);
@property (readonly, class) jshort STATUS_IPV4_FIREWALLED_IPV6_OK NS_SWIFT_NAME(STATUS_IPV4_FIREWALLED_IPV6_OK);
@property (readonly, class) jshort STATUS_IPV4_DISABLED_IPV6_OK NS_SWIFT_NAME(STATUS_IPV4_DISABLED_IPV6_OK);
@property (readonly, class) jshort STATUS_IPV4_SNAT_IPV6_OK NS_SWIFT_NAME(STATUS_IPV4_SNAT_IPV6_OK);
@property (readonly, class) jshort STATUS_DIFFERENT NS_SWIFT_NAME(STATUS_DIFFERENT);
@property (readonly, class) jshort STATUS_IPV4_SNAT_IPV6_UNKNOWN NS_SWIFT_NAME(STATUS_IPV4_SNAT_IPV6_UNKNOWN);
@property (readonly, class) jshort STATUS_IPV4_FIREWALLED_IPV6_UNKNOWN NS_SWIFT_NAME(STATUS_IPV4_FIREWALLED_IPV6_UNKNOWN);
@property (readonly, class) jshort STATUS_REJECT_UNSOLICITED NS_SWIFT_NAME(STATUS_REJECT_UNSOLICITED);
@property (readonly, class) jshort STATUS_IPV4_UNKNOWN_IPV6_FIREWALLED NS_SWIFT_NAME(STATUS_IPV4_UNKNOWN_IPV6_FIREWALLED);
@property (readonly, class) jshort STATUS_IPV4_DISABLED_IPV6_UNKNOWN NS_SWIFT_NAME(STATUS_IPV4_DISABLED_IPV6_UNKNOWN);
@property (readonly, class) jshort STATUS_IPV4_DISABLED_IPV6_FIREWALLED NS_SWIFT_NAME(STATUS_IPV4_DISABLED_IPV6_FIREWALLED);
@property (readonly, class) jshort STATUS_DISCONNECTED NS_SWIFT_NAME(STATUS_DISCONNECTED);
@property (readonly, class) jshort STATUS_HOSED NS_SWIFT_NAME(STATUS_HOSED);
@property (readonly, class) jshort STATUS_UNKNOWN NS_SWIFT_NAME(STATUS_UNKNOWN);

+ (jshort)STATUS_OK;

+ (jshort)STATUS_IPV4_OK_IPV6_UNKNOWN;

+ (jshort)STATUS_IPV4_OK_IPV6_FIREWALLED;

+ (jshort)STATUS_IPV4_UNKNOWN_IPV6_OK;

+ (jshort)STATUS_IPV4_FIREWALLED_IPV6_OK;

+ (jshort)STATUS_IPV4_DISABLED_IPV6_OK;

+ (jshort)STATUS_IPV4_SNAT_IPV6_OK;

+ (jshort)STATUS_DIFFERENT;

+ (jshort)STATUS_IPV4_SNAT_IPV6_UNKNOWN;

+ (jshort)STATUS_IPV4_FIREWALLED_IPV6_UNKNOWN;

+ (jshort)STATUS_REJECT_UNSOLICITED;

+ (jshort)STATUS_IPV4_UNKNOWN_IPV6_FIREWALLED;

+ (jshort)STATUS_IPV4_DISABLED_IPV6_UNKNOWN;

+ (jshort)STATUS_IPV4_DISABLED_IPV6_FIREWALLED;

+ (jshort)STATUS_DISCONNECTED;

+ (jshort)STATUS_HOSED;

+ (jshort)STATUS_UNKNOWN;

#pragma mark Public

- (instancetype __nonnull)init;

- (jint)countActivePeers;

- (jint)countActiveSendPeers;

- (id<JavaUtilList>)createAddresses;

- (NSString *)getCountryWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (NSString *)getCountryNameWithNSString:(NSString *)code;

- (id<NetI2pRouterTransportCryptoDHSessionKeyBuilder_Factory>)getDHFactory;

- (id<JavaUtilSet>)getEstablished;

- (jlong)getFramedAveragePeerClockSkewWithInt:(jint)percentToInclude;

- (IOSByteArray *)getIPWithNetI2pDataHash:(NetI2pDataHash *)dest;

- (JavaLangLong *)getMedianPeerClockSkew;

- (id<JavaUtilList>)getMostRecentErrorMessages;

- (NSString *)getOurCountry;

- (jshort)getReachabilityStatus;

- (NetI2pRouterCommSystemFacade_Status *)getStatus;

- (id<JavaUtilSortedMap>)getTransports;

- (jboolean)haveHighOutboundCapacity;

- (jboolean)haveInboundCapacityWithInt:(jint)pct;

- (jboolean)haveOutboundCapacityWithInt:(jint)pct;

- (jboolean)isBackloggedWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (jboolean)isDummy;

- (jboolean)isEstablishedWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (jboolean)isInBadCountry;

- (jboolean)isInBadCountryWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (jboolean)isInBadCountryWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)ri;

- (void)mayDisconnectWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)notifyRemoveAddressWithBoolean:(jboolean)ipv6;

- (void)notifyRemoveAddressWithNetI2pDataRouterRouterAddress:(NetI2pDataRouterRouterAddress *)address;

- (void)notifyReplaceAddressWithNetI2pDataRouterRouterAddress:(NetI2pDataRouterRouterAddress *)address;

- (void)processMessageWithNetI2pRouterOutNetMessage:(NetI2pRouterOutNetMessage *)msg;

- (void)queueLookupWithByteArray:(IOSByteArray *)ip;

- (void)recheckReachability;

- (void)registerTransportWithNetI2pRouterTransportTransport:(id<NetI2pRouterTransportTransport>)t;

- (NSString *)renderPeerHTMLWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg
                            withNSString:(NSString *)urlBase
                                 withInt:(jint)sortFlags;

- (void)unregisterTransportWithNetI2pRouterTransportTransport:(id<NetI2pRouterTransportTransport>)t;

- (jboolean)wasUnreachableWithNetI2pDataHash:(NetI2pDataHash *)peer;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterCommSystemFacade)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_OK(void);
#define NetI2pRouterCommSystemFacade_STATUS_OK 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_OK, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_IPV4_OK_IPV6_UNKNOWN(void);
#define NetI2pRouterCommSystemFacade_STATUS_IPV4_OK_IPV6_UNKNOWN 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_IPV4_OK_IPV6_UNKNOWN, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_IPV4_OK_IPV6_FIREWALLED(void);
#define NetI2pRouterCommSystemFacade_STATUS_IPV4_OK_IPV6_FIREWALLED 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_IPV4_OK_IPV6_FIREWALLED, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_IPV4_UNKNOWN_IPV6_OK(void);
#define NetI2pRouterCommSystemFacade_STATUS_IPV4_UNKNOWN_IPV6_OK 4
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_IPV4_UNKNOWN_IPV6_OK, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_IPV4_FIREWALLED_IPV6_OK(void);
#define NetI2pRouterCommSystemFacade_STATUS_IPV4_FIREWALLED_IPV6_OK 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_IPV4_FIREWALLED_IPV6_OK, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_IPV4_DISABLED_IPV6_OK(void);
#define NetI2pRouterCommSystemFacade_STATUS_IPV4_DISABLED_IPV6_OK 5
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_IPV4_DISABLED_IPV6_OK, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_IPV4_SNAT_IPV6_OK(void);
#define NetI2pRouterCommSystemFacade_STATUS_IPV4_SNAT_IPV6_OK 6
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_IPV4_SNAT_IPV6_OK, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_DIFFERENT(void);
#define NetI2pRouterCommSystemFacade_STATUS_DIFFERENT 7
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_DIFFERENT, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_IPV4_SNAT_IPV6_UNKNOWN(void);
#define NetI2pRouterCommSystemFacade_STATUS_IPV4_SNAT_IPV6_UNKNOWN 8
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_IPV4_SNAT_IPV6_UNKNOWN, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_IPV4_FIREWALLED_IPV6_UNKNOWN(void);
#define NetI2pRouterCommSystemFacade_STATUS_IPV4_FIREWALLED_IPV6_UNKNOWN 10
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_IPV4_FIREWALLED_IPV6_UNKNOWN, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_REJECT_UNSOLICITED(void);
#define NetI2pRouterCommSystemFacade_STATUS_REJECT_UNSOLICITED 9
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_REJECT_UNSOLICITED, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_IPV4_UNKNOWN_IPV6_FIREWALLED(void);
#define NetI2pRouterCommSystemFacade_STATUS_IPV4_UNKNOWN_IPV6_FIREWALLED 11
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_IPV4_UNKNOWN_IPV6_FIREWALLED, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_IPV4_DISABLED_IPV6_UNKNOWN(void);
#define NetI2pRouterCommSystemFacade_STATUS_IPV4_DISABLED_IPV6_UNKNOWN 13
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_IPV4_DISABLED_IPV6_UNKNOWN, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_IPV4_DISABLED_IPV6_FIREWALLED(void);
#define NetI2pRouterCommSystemFacade_STATUS_IPV4_DISABLED_IPV6_FIREWALLED 12
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_IPV4_DISABLED_IPV6_FIREWALLED, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_DISCONNECTED(void);
#define NetI2pRouterCommSystemFacade_STATUS_DISCONNECTED 14
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_DISCONNECTED, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_HOSED(void);
#define NetI2pRouterCommSystemFacade_STATUS_HOSED 15
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_HOSED, jshort)

inline jshort NetI2pRouterCommSystemFacade_get_STATUS_UNKNOWN(void);
#define NetI2pRouterCommSystemFacade_STATUS_UNKNOWN 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterCommSystemFacade, STATUS_UNKNOWN, jshort)

FOUNDATION_EXPORT void NetI2pRouterCommSystemFacade_init(NetI2pRouterCommSystemFacade *self);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterCommSystemFacade)

#endif

#if !defined (NetI2pRouterCommSystemFacade_Status_) && (INCLUDE_ALL_NetI2pRouterCommSystemFacade || defined(INCLUDE_NetI2pRouterCommSystemFacade_Status))
#define NetI2pRouterCommSystemFacade_Status_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pRouterCommSystemFacade_Status_Enum) {
  NetI2pRouterCommSystemFacade_Status_Enum_OK = 0,
  NetI2pRouterCommSystemFacade_Status_Enum_IPV4_OK_IPV6_UNKNOWN = 1,
  NetI2pRouterCommSystemFacade_Status_Enum_IPV4_OK_IPV6_FIREWALLED = 2,
  NetI2pRouterCommSystemFacade_Status_Enum_IPV4_UNKNOWN_IPV6_OK = 3,
  NetI2pRouterCommSystemFacade_Status_Enum_IPV4_FIREWALLED_IPV6_OK = 4,
  NetI2pRouterCommSystemFacade_Status_Enum_IPV4_DISABLED_IPV6_OK = 5,
  NetI2pRouterCommSystemFacade_Status_Enum_IPV4_SNAT_IPV6_OK = 6,
  NetI2pRouterCommSystemFacade_Status_Enum_DIFFERENT = 7,
  NetI2pRouterCommSystemFacade_Status_Enum_IPV4_SNAT_IPV6_UNKNOWN = 8,
  NetI2pRouterCommSystemFacade_Status_Enum_IPV4_FIREWALLED_IPV6_UNKNOWN = 9,
  NetI2pRouterCommSystemFacade_Status_Enum_REJECT_UNSOLICITED = 10,
  NetI2pRouterCommSystemFacade_Status_Enum_IPV4_UNKNOWN_IPV6_FIREWALLED = 11,
  NetI2pRouterCommSystemFacade_Status_Enum_IPV4_DISABLED_IPV6_UNKNOWN = 12,
  NetI2pRouterCommSystemFacade_Status_Enum_IPV4_DISABLED_IPV6_FIREWALLED = 13,
  NetI2pRouterCommSystemFacade_Status_Enum_DISCONNECTED = 14,
  NetI2pRouterCommSystemFacade_Status_Enum_HOSED = 15,
  NetI2pRouterCommSystemFacade_Status_Enum_UNKNOWN = 16,
};

@interface NetI2pRouterCommSystemFacade_Status : JavaLangEnum

@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *OK NS_SWIFT_NAME(OK);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *IPV4_OK_IPV6_UNKNOWN NS_SWIFT_NAME(IPV4_OK_IPV6_UNKNOWN);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *IPV4_OK_IPV6_FIREWALLED NS_SWIFT_NAME(IPV4_OK_IPV6_FIREWALLED);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *IPV4_UNKNOWN_IPV6_OK NS_SWIFT_NAME(IPV4_UNKNOWN_IPV6_OK);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *IPV4_FIREWALLED_IPV6_OK NS_SWIFT_NAME(IPV4_FIREWALLED_IPV6_OK);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *IPV4_DISABLED_IPV6_OK NS_SWIFT_NAME(IPV4_DISABLED_IPV6_OK);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *IPV4_SNAT_IPV6_OK NS_SWIFT_NAME(IPV4_SNAT_IPV6_OK);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *DIFFERENT NS_SWIFT_NAME(DIFFERENT);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *IPV4_SNAT_IPV6_UNKNOWN NS_SWIFT_NAME(IPV4_SNAT_IPV6_UNKNOWN);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *IPV4_FIREWALLED_IPV6_UNKNOWN NS_SWIFT_NAME(IPV4_FIREWALLED_IPV6_UNKNOWN);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *REJECT_UNSOLICITED NS_SWIFT_NAME(REJECT_UNSOLICITED);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *IPV4_UNKNOWN_IPV6_FIREWALLED NS_SWIFT_NAME(IPV4_UNKNOWN_IPV6_FIREWALLED);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *IPV4_DISABLED_IPV6_UNKNOWN NS_SWIFT_NAME(IPV4_DISABLED_IPV6_UNKNOWN);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *IPV4_DISABLED_IPV6_FIREWALLED NS_SWIFT_NAME(IPV4_DISABLED_IPV6_FIREWALLED);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *DISCONNECTED NS_SWIFT_NAME(DISCONNECTED);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *HOSED NS_SWIFT_NAME(HOSED);
@property (readonly, class, nonnull) NetI2pRouterCommSystemFacade_Status *UNKNOWN NS_SWIFT_NAME(UNKNOWN);
+ (NetI2pRouterCommSystemFacade_Status * __nonnull)OK;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)IPV4_OK_IPV6_UNKNOWN;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)IPV4_OK_IPV6_FIREWALLED;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)IPV4_UNKNOWN_IPV6_OK;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)IPV4_FIREWALLED_IPV6_OK;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)IPV4_DISABLED_IPV6_OK;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)IPV4_SNAT_IPV6_OK;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)DIFFERENT;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)IPV4_SNAT_IPV6_UNKNOWN;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)IPV4_FIREWALLED_IPV6_UNKNOWN;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)REJECT_UNSOLICITED;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)IPV4_UNKNOWN_IPV6_FIREWALLED;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)IPV4_DISABLED_IPV6_UNKNOWN;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)IPV4_DISABLED_IPV6_FIREWALLED;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)DISCONNECTED;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)HOSED;

+ (NetI2pRouterCommSystemFacade_Status * __nonnull)UNKNOWN;

#pragma mark Public

- (jint)getCode;

+ (NetI2pRouterCommSystemFacade_Status *)mergeWithNetI2pRouterCommSystemFacade_Status:(NetI2pRouterCommSystemFacade_Status *)oldStatus
                                              withNetI2pRouterCommSystemFacade_Status:(NetI2pRouterCommSystemFacade_Status *)newStatus;

- (NSString *)toStatusString;

- (NSString *)description;

+ (NetI2pRouterCommSystemFacade_Status *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pRouterCommSystemFacade_Status_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pRouterCommSystemFacade_Status)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_values_[];

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_OK(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, OK)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_IPV4_OK_IPV6_UNKNOWN(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, IPV4_OK_IPV6_UNKNOWN)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_IPV4_OK_IPV6_FIREWALLED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, IPV4_OK_IPV6_FIREWALLED)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_IPV4_UNKNOWN_IPV6_OK(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, IPV4_UNKNOWN_IPV6_OK)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_IPV4_FIREWALLED_IPV6_OK(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, IPV4_FIREWALLED_IPV6_OK)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_IPV4_DISABLED_IPV6_OK(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, IPV4_DISABLED_IPV6_OK)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_IPV4_SNAT_IPV6_OK(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, IPV4_SNAT_IPV6_OK)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_DIFFERENT(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, DIFFERENT)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_IPV4_SNAT_IPV6_UNKNOWN(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, IPV4_SNAT_IPV6_UNKNOWN)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_IPV4_FIREWALLED_IPV6_UNKNOWN(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, IPV4_FIREWALLED_IPV6_UNKNOWN)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_REJECT_UNSOLICITED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, REJECT_UNSOLICITED)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_IPV4_UNKNOWN_IPV6_FIREWALLED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, IPV4_UNKNOWN_IPV6_FIREWALLED)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_IPV4_DISABLED_IPV6_UNKNOWN(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, IPV4_DISABLED_IPV6_UNKNOWN)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_IPV4_DISABLED_IPV6_FIREWALLED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, IPV4_DISABLED_IPV6_FIREWALLED)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_DISCONNECTED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, DISCONNECTED)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_HOSED(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, HOSED)

inline NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_get_UNKNOWN(void);
J2OBJC_ENUM_CONSTANT(NetI2pRouterCommSystemFacade_Status, UNKNOWN)

FOUNDATION_EXPORT NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_mergeWithNetI2pRouterCommSystemFacade_Status_withNetI2pRouterCommSystemFacade_Status_(NetI2pRouterCommSystemFacade_Status *oldStatus, NetI2pRouterCommSystemFacade_Status *newStatus);

FOUNDATION_EXPORT IOSObjectArray *NetI2pRouterCommSystemFacade_Status_values(void);

FOUNDATION_EXPORT NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pRouterCommSystemFacade_Status *NetI2pRouterCommSystemFacade_Status_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterCommSystemFacade_Status)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterCommSystemFacade")
