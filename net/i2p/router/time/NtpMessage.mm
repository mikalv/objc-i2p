//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/time/NtpMessage.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/text/DecimalFormat.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Arrays.h"
#include "java/util/Date.h"
#include "net/i2p/router/time/NtpClient.h"
#include "net/i2p/router/time/NtpMessage.h"
#include "net/i2p/util/RandomSource.h"

@interface NetI2pRouterTimeNtpMessage ()

+ (jshort)unsignedByteToShortWithByte:(jbyte)b;

+ (jdouble)decodeTimestampWithByteArray:(IOSByteArray *)array
                                withInt:(jint)pointer;

+ (NSString *)timestampToStringWithDouble:(jdouble)timestamp;

+ (NSString *)referenceIdentifierToStringWithByteArray:(IOSByteArray *)ref
                                             withShort:(jshort)stratum
                                              withByte:(jbyte)version_;

@end

__attribute__((unused)) static jshort NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(jbyte b);

__attribute__((unused)) static jdouble NetI2pRouterTimeNtpMessage_decodeTimestampWithByteArray_withInt_(IOSByteArray *array, jint pointer);

__attribute__((unused)) static NSString *NetI2pRouterTimeNtpMessage_timestampToStringWithDouble_(jdouble timestamp);

__attribute__((unused)) static NSString *NetI2pRouterTimeNtpMessage_referenceIdentifierToStringWithByteArray_withShort_withByte_(IOSByteArray *ref, jshort stratum, jbyte version_);

@implementation NetI2pRouterTimeNtpMessage

- (instancetype)initWithByteArray:(IOSByteArray *)array {
  NetI2pRouterTimeNtpMessage_initWithByteArray_(self, array);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pRouterTimeNtpMessage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSByteArray *)toByteArray {
  IOSByteArray *p = [IOSByteArray arrayWithLength:48];
  *IOSByteArray_GetRef(p, 0) = (jbyte) ((JreLShift32(leapIndicator_, 6)) | (JreLShift32(version__, 3)) | mode_);
  *IOSByteArray_GetRef(p, 1) = (jbyte) stratum_;
  *IOSByteArray_GetRef(p, 2) = pollInterval_;
  *IOSByteArray_GetRef(p, 3) = precision_;
  jint l = JreFpToInt((rootDelay_ * 65536.0));
  *IOSByteArray_GetRef(p, 4) = (jbyte) ((JreRShift32(l, 24)) & (jint) 0xFF);
  *IOSByteArray_GetRef(p, 5) = (jbyte) ((JreRShift32(l, 16)) & (jint) 0xFF);
  *IOSByteArray_GetRef(p, 6) = (jbyte) ((JreRShift32(l, 8)) & (jint) 0xFF);
  *IOSByteArray_GetRef(p, 7) = (jbyte) (l & (jint) 0xFF);
  jlong ul = JreFpToLong((rootDispersion_ * 65536.0));
  *IOSByteArray_GetRef(p, 8) = (jbyte) ((JreRShift64(ul, 24)) & (jint) 0xFF);
  *IOSByteArray_GetRef(p, 9) = (jbyte) ((JreRShift64(ul, 16)) & (jint) 0xFF);
  *IOSByteArray_GetRef(p, 10) = (jbyte) ((JreRShift64(ul, 8)) & (jint) 0xFF);
  *IOSByteArray_GetRef(p, 11) = (jbyte) (ul & (jint) 0xFF);
  *IOSByteArray_GetRef(p, 12) = IOSByteArray_Get(nil_chk(referenceIdentifier_), 0);
  *IOSByteArray_GetRef(p, 13) = IOSByteArray_Get(referenceIdentifier_, 1);
  *IOSByteArray_GetRef(p, 14) = IOSByteArray_Get(referenceIdentifier_, 2);
  *IOSByteArray_GetRef(p, 15) = IOSByteArray_Get(referenceIdentifier_, 3);
  NetI2pRouterTimeNtpMessage_encodeTimestampWithByteArray_withInt_withDouble_(p, 16, referenceTimestamp_);
  NetI2pRouterTimeNtpMessage_encodeTimestampWithByteArray_withInt_withDouble_(p, 24, originateTimestamp_);
  NetI2pRouterTimeNtpMessage_encodeTimestampWithByteArray_withInt_withDouble_(p, 32, receiveTimestamp_);
  NetI2pRouterTimeNtpMessage_encodeTimestampWithByteArray_withInt_withDouble_(p, 40, transmitTimestamp_);
  return p;
}

- (NSString *)description {
  NSString *precisionStr = [create_JavaTextDecimalFormat_initWithNSString_(@"0.#E0") formatWithDouble:JavaLangMath_powWithDouble_withDouble_(2, precision_)];
  return JreStrcat("$B$B$B$S$B$B$$$$$$$$$$$$$$$$", @"Leap indicator: ", leapIndicator_, @"\nVersion: ", version__, @"\nMode: ", mode_, @"\nStratum: ", stratum_, @"\nPoll: ", pollInterval_, @"\nPrecision: ", precision_, @" (", precisionStr, @" seconds)\nRoot delay: ", [create_JavaTextDecimalFormat_initWithNSString_(@"0.00") formatWithDouble:rootDelay_ * 1000], @" ms\nRoot dispersion: ", [create_JavaTextDecimalFormat_initWithNSString_(@"0.00") formatWithDouble:rootDispersion_ * 1000], @" ms\nReference identifier: ", [self referenceIdentifierToString], @"\nReference timestamp: ", NetI2pRouterTimeNtpMessage_timestampToStringWithDouble_(referenceTimestamp_), @"\nOriginate timestamp: ", NetI2pRouterTimeNtpMessage_timestampToStringWithDouble_(originateTimestamp_), @"\nReceive timestamp:   ", NetI2pRouterTimeNtpMessage_timestampToStringWithDouble_(receiveTimestamp_), @"\nTransmit timestamp:  ", NetI2pRouterTimeNtpMessage_timestampToStringWithDouble_(transmitTimestamp_));
}

+ (jshort)unsignedByteToShortWithByte:(jbyte)b {
  return NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(b);
}

+ (jdouble)decodeTimestampWithByteArray:(IOSByteArray *)array
                                withInt:(jint)pointer {
  return NetI2pRouterTimeNtpMessage_decodeTimestampWithByteArray_withInt_(array, pointer);
}

+ (void)encodeTimestampWithByteArray:(IOSByteArray *)array
                             withInt:(jint)pointer
                          withDouble:(jdouble)timestamp {
  NetI2pRouterTimeNtpMessage_encodeTimestampWithByteArray_withInt_withDouble_(array, pointer, timestamp);
}

+ (NSString *)timestampToStringWithDouble:(jdouble)timestamp {
  return NetI2pRouterTimeNtpMessage_timestampToStringWithDouble_(timestamp);
}

- (NSString *)referenceIdentifierToString {
  return NetI2pRouterTimeNtpMessage_referenceIdentifierToStringWithByteArray_withShort_withByte_(referenceIdentifier_, stratum_, version__);
}

+ (NSString *)referenceIdentifierToStringWithByteArray:(IOSByteArray *)ref
                                             withShort:(jshort)stratum
                                              withByte:(jbyte)version_ {
  return NetI2pRouterTimeNtpMessage_referenceIdentifierToStringWithByteArray_withShort_withByte_(ref, stratum, version_);
}

- (void)dealloc {
  RELEASE_(referenceIdentifier_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "S", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "D", 0xa, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 10, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(toByteArray);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(unsignedByteToShortWithByte:);
  methods[5].selector = @selector(decodeTimestampWithByteArray:withInt:);
  methods[6].selector = @selector(encodeTimestampWithByteArray:withInt:withDouble:);
  methods[7].selector = @selector(timestampToStringWithDouble:);
  methods[8].selector = @selector(referenceIdentifierToString);
  methods[9].selector = @selector(referenceIdentifierToStringWithByteArray:withShort:withByte:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "leapIndicator_", "B", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "version__", "B", .constantValue.asLong = 0, 0x1, 12, -1, -1, -1 },
    { "mode_", "B", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "stratum_", "S", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "pollInterval_", "B", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "precision_", "B", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "rootDelay_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "rootDispersion_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "referenceIdentifier_", "[B", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "referenceTimestamp_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "originateTimestamp_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "receiveTimestamp_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "transmitTimestamp_", "D", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "toString", "unsignedByteToShort", "B", "decodeTimestamp", "[BI", "encodeTimestamp", "[BID", "timestampToString", "D", "referenceIdentifierToString", "[BSB", "version" };
  static const J2ObjcClassInfo _NetI2pRouterTimeNtpMessage = { "NtpMessage", "net.i2p.router.time", ptrTable, methods, fields, 7, 0x0, 10, 13, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterTimeNtpMessage;
}

@end

void NetI2pRouterTimeNtpMessage_initWithByteArray_(NetI2pRouterTimeNtpMessage *self, IOSByteArray *array) {
  NSObject_init(self);
  self->leapIndicator_ = 0;
  self->version__ = 3;
  self->stratum_ = 0;
  self->pollInterval_ = 0;
  self->precision_ = 0;
  self->rootDelay_ = 0;
  self->rootDispersion_ = 0;
  JreStrongAssignAndConsume(&self->referenceIdentifier_, [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 0, 0, 0 } count:4]);
  self->referenceTimestamp_ = 0;
  self->originateTimestamp_ = 0;
  self->receiveTimestamp_ = 0;
  self->leapIndicator_ = (jbyte) ((JreRShift32(IOSByteArray_Get(nil_chk(array), 0), 6)) & (jint) 0x3);
  self->version__ = (jbyte) ((JreRShift32(IOSByteArray_Get(array, 0), 3)) & (jint) 0x7);
  self->mode_ = (jbyte) (IOSByteArray_Get(array, 0) & (jint) 0x7);
  self->stratum_ = NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(array, 1));
  self->pollInterval_ = IOSByteArray_Get(array, 2);
  self->precision_ = IOSByteArray_Get(array, 3);
  self->rootDelay_ = (IOSByteArray_Get(array, 4) * 256.0) + NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(array, 5)) + (NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(array, 6)) / 256.0) + (NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(array, 7)) / 65536.0);
  self->rootDispersion_ = (NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(array, 8)) * 256.0) + NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(array, 9)) + (NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(array, 10)) / 256.0) + (NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(array, 11)) / 65536.0);
  *IOSByteArray_GetRef(self->referenceIdentifier_, 0) = IOSByteArray_Get(array, 12);
  *IOSByteArray_GetRef(self->referenceIdentifier_, 1) = IOSByteArray_Get(array, 13);
  *IOSByteArray_GetRef(self->referenceIdentifier_, 2) = IOSByteArray_Get(array, 14);
  *IOSByteArray_GetRef(self->referenceIdentifier_, 3) = IOSByteArray_Get(array, 15);
  self->referenceTimestamp_ = NetI2pRouterTimeNtpMessage_decodeTimestampWithByteArray_withInt_(array, 16);
  self->originateTimestamp_ = NetI2pRouterTimeNtpMessage_decodeTimestampWithByteArray_withInt_(array, 24);
  self->receiveTimestamp_ = NetI2pRouterTimeNtpMessage_decodeTimestampWithByteArray_withInt_(array, 32);
  self->transmitTimestamp_ = NetI2pRouterTimeNtpMessage_decodeTimestampWithByteArray_withInt_(array, 40);
}

NetI2pRouterTimeNtpMessage *new_NetI2pRouterTimeNtpMessage_initWithByteArray_(IOSByteArray *array) {
  J2OBJC_NEW_IMPL(NetI2pRouterTimeNtpMessage, initWithByteArray_, array)
}

NetI2pRouterTimeNtpMessage *create_NetI2pRouterTimeNtpMessage_initWithByteArray_(IOSByteArray *array) {
  J2OBJC_CREATE_IMPL(NetI2pRouterTimeNtpMessage, initWithByteArray_, array)
}

void NetI2pRouterTimeNtpMessage_init(NetI2pRouterTimeNtpMessage *self) {
  NSObject_init(self);
  self->leapIndicator_ = 0;
  self->version__ = 3;
  self->stratum_ = 0;
  self->pollInterval_ = 0;
  self->precision_ = 0;
  self->rootDelay_ = 0;
  self->rootDispersion_ = 0;
  JreStrongAssignAndConsume(&self->referenceIdentifier_, [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 0, 0, 0 } count:4]);
  self->referenceTimestamp_ = 0;
  self->originateTimestamp_ = 0;
  self->receiveTimestamp_ = 0;
  self->mode_ = 3;
  self->transmitTimestamp_ = (JavaLangSystem_currentTimeMillis() / 1000.0) + NetI2pRouterTimeNtpClient_SECONDS_1900_TO_EPOCH;
}

NetI2pRouterTimeNtpMessage *new_NetI2pRouterTimeNtpMessage_init() {
  J2OBJC_NEW_IMPL(NetI2pRouterTimeNtpMessage, init)
}

NetI2pRouterTimeNtpMessage *create_NetI2pRouterTimeNtpMessage_init() {
  J2OBJC_CREATE_IMPL(NetI2pRouterTimeNtpMessage, init)
}

jshort NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(jbyte b) {
  NetI2pRouterTimeNtpMessage_initialize();
  if ((b & (jint) 0x80) == (jint) 0x80) return (jshort) (128 + (b & (jint) 0x7f));
  else return b;
}

jdouble NetI2pRouterTimeNtpMessage_decodeTimestampWithByteArray_withInt_(IOSByteArray *array, jint pointer) {
  NetI2pRouterTimeNtpMessage_initialize();
  jdouble r = 0.0;
  for (jint i = 0; i < 8; i++) {
    JrePlusAssignDoubleD(&r, NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(nil_chk(array), pointer + i)) * JavaLangMath_powWithDouble_withDouble_(2, (3 - i) * 8));
  }
  return r;
}

void NetI2pRouterTimeNtpMessage_encodeTimestampWithByteArray_withInt_withDouble_(IOSByteArray *array, jint pointer, jdouble timestamp) {
  NetI2pRouterTimeNtpMessage_initialize();
  if (timestamp == 0.0) {
    JavaUtilArrays_fillWithByteArray_withInt_withInt_withByte_(array, pointer, pointer + 8, (jbyte) 0);
    return;
  }
  for (jint i = 0; i < 7; i++) {
    jdouble base = JavaLangMath_powWithDouble_withDouble_(2, (3 - i) * 8);
    *IOSByteArray_GetRef(nil_chk(array), pointer + i) = (jbyte) JreFpToInt((timestamp / base));
    timestamp = timestamp - (NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(array, pointer + i)) * base);
  }
  [((NetI2pUtilRandomSource *) nil_chk(NetI2pUtilRandomSource_getInstance())) nextBytesWithByteArray:array withInt:pointer + 6 withInt:2];
}

NSString *NetI2pRouterTimeNtpMessage_timestampToStringWithDouble_(jdouble timestamp) {
  NetI2pRouterTimeNtpMessage_initialize();
  if (timestamp == 0) return @"0";
  jdouble utc = timestamp - NetI2pRouterTimeNtpClient_SECONDS_1900_TO_EPOCH;
  jlong ms = JreFpToLong((utc * 1000.0));
  NSString *date = [create_JavaTextSimpleDateFormat_initWithNSString_(@"dd-MMM-yyyy HH:mm:ss") formatWithJavaUtilDate:create_JavaUtilDate_initWithLong_(ms)];
  jdouble fraction = timestamp - (JreFpToLong(timestamp));
  NSString *fractionSting = [create_JavaTextDecimalFormat_initWithNSString_(@".000000000") formatWithDouble:fraction];
  return JreStrcat("$$", date, fractionSting);
}

NSString *NetI2pRouterTimeNtpMessage_referenceIdentifierToStringWithByteArray_withShort_withByte_(IOSByteArray *ref, jshort stratum, jbyte version_) {
  NetI2pRouterTimeNtpMessage_initialize();
  if (stratum == 0 || stratum == 1) {
    JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(4);
    for (jint i = 0; i < 4; i++) {
      if (IOSByteArray_Get(nil_chk(ref), i) == 0) break;
      [buf appendWithChar:(jchar) (IOSByteArray_Get(ref, i) & (jint) 0xff)];
    }
    return [buf description];
  }
  else if (version_ == 3) {
    return JreStrcat("SCSCSCS", NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(nil_chk(ref), 0)), '.', NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(ref, 1)), '.', NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(ref, 2)), '.', NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(ref, 3)));
  }
  else if (version_ == 4) {
    return JreStrcat("D", ((NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(nil_chk(ref), 0)) / 256.0) + (NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(ref, 1)) / 65536.0) + (NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(ref, 2)) / 16777216.0) + (NetI2pRouterTimeNtpMessage_unsignedByteToShortWithByte_(IOSByteArray_Get(ref, 3)) / 4294967296.0)));
  }
  return @"";
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTimeNtpMessage)
