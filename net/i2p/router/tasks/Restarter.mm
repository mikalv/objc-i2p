//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tasks/Restarter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Thread.h"
#include "java/lang/Throwable.h"
#include "net/i2p/router/ClientManagerFacade.h"
#include "net/i2p/router/ClientMessagePool.h"
#include "net/i2p/router/CommSystemFacade.h"
#include "net/i2p/router/Router.h"
#include "net/i2p/router/RouterClock.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/TunnelManagerFacade.h"
#include "net/i2p/router/tasks/Restarter.h"
#include "net/i2p/router/transport/FIFOBandwidthLimiter.h"
#include "net/i2p/router/transport/OutboundMessageRegistry.h"
#include "net/i2p/router/util/EventLog.h"
#include "net/i2p/util/Clock.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterTasksRestarter () {
 @public
  NetI2pRouterRouterContext *_context_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterTasksRestarter, _context_, NetI2pRouterRouterContext *)

@implementation NetI2pRouterTasksRestarter

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx {
  NetI2pRouterTasksRestarter_initWithNetI2pRouterRouterContext_(self, ctx);
  return self;
}

- (void)run {
  [((NetI2pRouterUtilEventLog *) nil_chk([((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) router])) eventLog])) addEventWithNSString:NetI2pRouterUtilEventLog_SOFT_RESTART];
  NetI2pUtilLog *log = [((NetI2pUtilLogManager *) nil_chk([_context_ logManager])) getLogWithIOSClass:NetI2pRouterRouter_class_()];
  [((NetI2pUtilLog *) nil_chk(log)) errorWithNSString:@"Stopping the router for a restart..."];
  [log logAlwaysWithInt:NetI2pUtilLog_WARN withNSString:@"Stopping the client manager"];
  @try {
    [((NetI2pRouterClientManagerFacade *) nil_chk([_context_ clientManager])) shutdownWithNSString:@"Router restart"];
  }
  @catch (JavaLangThrowable *t) {
    [log logWithInt:NetI2pUtilLog_CRIT withNSString:@"Error stopping the client manager" withJavaLangThrowable:t];
  }
  [log logAlwaysWithInt:NetI2pUtilLog_WARN withNSString:@"Stopping the comm system"];
  [((NetI2pRouterTransportFIFOBandwidthLimiter *) nil_chk([_context_ bandwidthLimiter])) reinitialize];
  @try {
    [((NetI2pRouterTransportOutboundMessageRegistry *) nil_chk([_context_ messageRegistry])) restart];
  }
  @catch (JavaLangThrowable *t) {
    [log logWithInt:NetI2pUtilLog_CRIT withNSString:@"Error restarting the message registry" withJavaLangThrowable:t];
  }
  @try {
    [((NetI2pRouterCommSystemFacade *) nil_chk([_context_ commSystem])) restart];
  }
  @catch (JavaLangThrowable *t) {
    [log logWithInt:NetI2pUtilLog_CRIT withNSString:@"Error restarting the comm system" withJavaLangThrowable:t];
  }
  [log logAlwaysWithInt:NetI2pUtilLog_WARN withNSString:@"Stopping the tunnel manager"];
  @try {
    [((id<NetI2pRouterTunnelManagerFacade>) nil_chk([_context_ tunnelManager])) restart];
  }
  @catch (JavaLangThrowable *t) {
    [log logWithInt:NetI2pUtilLog_CRIT withNSString:@"Error restarting the tunnel manager" withJavaLangThrowable:t];
  }
  [log logAlwaysWithInt:NetI2pUtilLog_WARN withNSString:@"Router teardown complete, restarting the router..."];
  @try {
    JavaLangThread_sleepWithLong_(10 * 1000);
  }
  @catch (JavaLangInterruptedException *ie) {
  }
  [log logAlwaysWithInt:NetI2pUtilLog_WARN withNSString:@"Restarting the comm system"];
  [log logAlwaysWithInt:NetI2pUtilLog_WARN withNSString:@"Restarting the tunnel manager"];
  [log logAlwaysWithInt:NetI2pUtilLog_WARN withNSString:@"Restarting the client manager"];
  @try {
    [((NetI2pRouterClientMessagePool *) nil_chk([_context_ clientMessagePool])) restart];
  }
  @catch (JavaLangThrowable *t) {
    [log logWithInt:NetI2pUtilLog_CRIT withNSString:@"Error restarting the CMP" withJavaLangThrowable:t];
  }
  @try {
    [((NetI2pRouterClientManagerFacade *) nil_chk([_context_ clientManager])) startup];
  }
  @catch (JavaLangThrowable *t) {
    [log logWithInt:NetI2pUtilLog_CRIT withNSString:@"Error starting the client manager" withJavaLangThrowable:t];
  }
  [((NetI2pRouterRouter *) nil_chk([_context_ router])) setIsAlive];
  [((NetI2pRouterRouter *) nil_chk([_context_ router])) rebuildRouterInfo];
  [log logAlwaysWithInt:NetI2pUtilLog_WARN withNSString:@"Restart complete"];
  [((NetI2pRouterRouterClock *) nil_chk(((NetI2pRouterRouterClock *) cast_chk([_context_ clock], [NetI2pRouterRouterClock class])))) addShiftListenerWithNetI2pRouterRouterClock_ClockShiftListener:[_context_ router]];
}

- (void)dealloc {
  RELEASE_(_context_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_context_", "LNetI2pRouterRouterContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;" };
  static const J2ObjcClassInfo _NetI2pRouterTasksRestarter = { "Restarter", "net.i2p.router.tasks", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterTasksRestarter;
}

@end

void NetI2pRouterTasksRestarter_initWithNetI2pRouterRouterContext_(NetI2pRouterTasksRestarter *self, NetI2pRouterRouterContext *ctx) {
  NSObject_init(self);
  JreStrongAssign(&self->_context_, ctx);
}

NetI2pRouterTasksRestarter *new_NetI2pRouterTasksRestarter_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) {
  J2OBJC_NEW_IMPL(NetI2pRouterTasksRestarter, initWithNetI2pRouterRouterContext_, ctx)
}

NetI2pRouterTasksRestarter *create_NetI2pRouterTasksRestarter_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) {
  J2OBJC_CREATE_IMPL(NetI2pRouterTasksRestarter, initWithNetI2pRouterRouterContext_, ctx)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTasksRestarter)
