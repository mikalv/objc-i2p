//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tasks/MarkLiveliness.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/FileOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/Long.h"
#include "java/lang/System.h"
#include "net/i2p/data/DataHelper.h"
#include "net/i2p/router/Router.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/tasks/MarkLiveliness.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"
#include "net/i2p/util/SecureFileOutputStream.h"

@interface NetI2pRouterTasksMarkLiveliness () {
 @public
  NetI2pRouterRouter *_router_;
  JavaIoFile *_pingFile_;
  volatile_jboolean _errorLogged_;
}

- (void)ping;

@end

J2OBJC_FIELD_SETTER(NetI2pRouterTasksMarkLiveliness, _router_, NetI2pRouterRouter *)
J2OBJC_FIELD_SETTER(NetI2pRouterTasksMarkLiveliness, _pingFile_, JavaIoFile *)

__attribute__((unused)) static void NetI2pRouterTasksMarkLiveliness_ping(NetI2pRouterTasksMarkLiveliness *self);

@implementation NetI2pRouterTasksMarkLiveliness

- (instancetype)initWithNetI2pRouterRouter:(NetI2pRouterRouter *)router
                            withJavaIoFile:(JavaIoFile *)pingFile {
  NetI2pRouterTasksMarkLiveliness_initWithNetI2pRouterRouter_withJavaIoFile_(self, router, pingFile);
  return self;
}

- (void)timeReached {
  if ([((NetI2pRouterRouter *) nil_chk(_router_)) isAlive]) NetI2pRouterTasksMarkLiveliness_ping(self);
  else [((JavaIoFile *) nil_chk(_pingFile_)) delete__];
}

- (void)ping {
  NetI2pRouterTasksMarkLiveliness_ping(self);
}

- (void)dealloc {
  RELEASE_(_router_);
  RELEASE_(_pingFile_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouter:withJavaIoFile:);
  methods[1].selector = @selector(timeReached);
  methods[2].selector = @selector(ping);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_router_", "LNetI2pRouterRouter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_pingFile_", "LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_errorLogged_", "Z", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouter;LJavaIoFile;" };
  static const J2ObjcClassInfo _NetI2pRouterTasksMarkLiveliness = { "MarkLiveliness", "net.i2p.router.tasks", ptrTable, methods, fields, 7, 0x1, 3, 3, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterTasksMarkLiveliness;
}

@end

void NetI2pRouterTasksMarkLiveliness_initWithNetI2pRouterRouter_withJavaIoFile_(NetI2pRouterTasksMarkLiveliness *self, NetI2pRouterRouter *router, JavaIoFile *pingFile) {
  NSObject_init(self);
  JreStrongAssign(&self->_router_, router);
  JreStrongAssign(&self->_pingFile_, pingFile);
  [((JavaIoFile *) nil_chk(self->_pingFile_)) deleteOnExit];
}

NetI2pRouterTasksMarkLiveliness *new_NetI2pRouterTasksMarkLiveliness_initWithNetI2pRouterRouter_withJavaIoFile_(NetI2pRouterRouter *router, JavaIoFile *pingFile) {
  J2OBJC_NEW_IMPL(NetI2pRouterTasksMarkLiveliness, initWithNetI2pRouterRouter_withJavaIoFile_, router, pingFile)
}

NetI2pRouterTasksMarkLiveliness *create_NetI2pRouterTasksMarkLiveliness_initWithNetI2pRouterRouter_withJavaIoFile_(NetI2pRouterRouter *router, JavaIoFile *pingFile) {
  J2OBJC_CREATE_IMPL(NetI2pRouterTasksMarkLiveliness, initWithNetI2pRouterRouter_withJavaIoFile_, router, pingFile)
}

void NetI2pRouterTasksMarkLiveliness_ping(NetI2pRouterTasksMarkLiveliness *self) {
  JavaIoFileOutputStream *fos = nil;
  @try {
    fos = create_NetI2pUtilSecureFileOutputStream_initWithJavaIoFile_(self->_pingFile_);
    [fos writeWithByteArray:NetI2pDataDataHelper_getASCIIWithNSString_(JavaLangLong_toStringWithLong_(JavaLangSystem_currentTimeMillis()))];
  }
  @catch (JavaIoIOException *ioe) {
    if (!JreLoadVolatileBoolean(&self->_errorLogged_)) {
      NetI2pUtilLog *log = [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([((NetI2pRouterRouter *) nil_chk(self->_router_)) getContext])) logManager])) getLogWithIOSClass:NetI2pRouterTasksMarkLiveliness_class_()];
      [((NetI2pUtilLog *) nil_chk(log)) logAlwaysWithInt:NetI2pUtilLog_WARN withNSString:JreStrcat("$@$@", @"Error writing to ping file ", self->_pingFile_, @": ", ioe)];
      JreAssignVolatileBoolean(&self->_errorLogged_, true);
    }
  }
  @finally {
    if (fos != nil) @try {
      [fos close];
    }
    @catch (JavaIoIOException *ioe) {
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTasksMarkLiveliness)
