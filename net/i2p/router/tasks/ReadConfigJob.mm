//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tasks/ReadConfigJob.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/Router.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/tasks/ReadConfigJob.h"
#include "net/i2p/util/Clock.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterTasksReadConfigJob () {
 @public
  volatile_jlong _lastRead_;
}

- (jboolean)shouldRereadWithJavaIoFile:(JavaIoFile *)configFile;

@end

inline jlong NetI2pRouterTasksReadConfigJob_get_DELAY(void);
#define NetI2pRouterTasksReadConfigJob_DELAY 30000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pRouterTasksReadConfigJob, DELAY, jlong)

__attribute__((unused)) static jboolean NetI2pRouterTasksReadConfigJob_shouldRereadWithJavaIoFile_(NetI2pRouterTasksReadConfigJob *self, JavaIoFile *configFile);

@implementation NetI2pRouterTasksReadConfigJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx {
  NetI2pRouterTasksReadConfigJob_initWithNetI2pRouterRouterContext_(self, ctx);
  return self;
}

- (NSString *)getName {
  return @"Read Router Configuration";
}

- (void)runJob {
  JavaIoFile *configFile = create_JavaIoFile_initWithNSString_([((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) router])) getConfigFilename]);
  if (NetI2pRouterTasksReadConfigJob_shouldRereadWithJavaIoFile_(self, configFile)) {
    [((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) router])) readConfig];
    JreAssignVolatileLong(&_lastRead_, [((NetI2pUtilClock *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) clock])) now]);
    NetI2pUtilLog *log = [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) logManager])) getLogWithIOSClass:NetI2pRouterTasksReadConfigJob_class_()];
    if ([((NetI2pUtilLog *) nil_chk(log)) shouldDebug]) [log debugWithNSString:JreStrcat("$@", @"Reloaded ", configFile)];
  }
  [self requeueWithLong:NetI2pRouterTasksReadConfigJob_DELAY];
}

- (jboolean)shouldRereadWithJavaIoFile:(JavaIoFile *)configFile {
  return NetI2pRouterTasksReadConfigJob_shouldRereadWithJavaIoFile_(self, configFile);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(runJob);
  methods[3].selector = @selector(shouldRereadWithJavaIoFile:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DELAY", "J", .constantValue.asLong = NetI2pRouterTasksReadConfigJob_DELAY, 0x1a, -1, -1, -1, -1 },
    { "_lastRead_", "J", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;", "shouldReread", "LJavaIoFile;" };
  static const J2ObjcClassInfo _NetI2pRouterTasksReadConfigJob = { "ReadConfigJob", "net.i2p.router.tasks", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterTasksReadConfigJob;
}

@end

void NetI2pRouterTasksReadConfigJob_initWithNetI2pRouterRouterContext_(NetI2pRouterTasksReadConfigJob *self, NetI2pRouterRouterContext *ctx) {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, ctx);
  JreAssignVolatileLong(&self->_lastRead_, [((NetI2pUtilClock *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(ctx)) clock])) now]);
}

NetI2pRouterTasksReadConfigJob *new_NetI2pRouterTasksReadConfigJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) {
  J2OBJC_NEW_IMPL(NetI2pRouterTasksReadConfigJob, initWithNetI2pRouterRouterContext_, ctx)
}

NetI2pRouterTasksReadConfigJob *create_NetI2pRouterTasksReadConfigJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) {
  J2OBJC_CREATE_IMPL(NetI2pRouterTasksReadConfigJob, initWithNetI2pRouterRouterContext_, ctx)
}

jboolean NetI2pRouterTasksReadConfigJob_shouldRereadWithJavaIoFile_(NetI2pRouterTasksReadConfigJob *self, JavaIoFile *configFile) {
  return [((JavaIoFile *) nil_chk(configFile)) lastModified] > JreLoadVolatileLong(&self->_lastRead_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTasksReadConfigJob)
