//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tasks/PersistRouterInfoJob.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/FileOutputStream.h"
#include "java/io/IOException.h"
#include "net/i2p/data/DataFormatException.h"
#include "net/i2p/data/router/RouterInfo.h"
#include "net/i2p/router/JobImpl.h"
#include "net/i2p/router/Router.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/startup/CreateRouterInfoJob.h"
#include "net/i2p/router/tasks/PersistRouterInfoJob.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"
#include "net/i2p/util/SecureFileOutputStream.h"

@implementation NetI2pRouterTasksPersistRouterInfoJob

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx {
  NetI2pRouterTasksPersistRouterInfoJob_initWithNetI2pRouterRouterContext_(self, ctx);
  return self;
}

- (NSString *)getName {
  return @"Persist Updated Router Information";
}

- (void)runJob {
  NetI2pUtilLog *_log = [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) logManager])) getLogWithIOSClass:NetI2pRouterTasksPersistRouterInfoJob_class_()];
  if ([((NetI2pUtilLog *) nil_chk(_log)) shouldLogWithInt:NetI2pUtilLog_DEBUG]) [_log debugWithNSString:@"Persisting updated router info"];
  JavaIoFile *infoFile = create_JavaIoFile_initWithJavaIoFile_withNSString_([((NetI2pRouterRouterContext *) nil_chk([self getContext])) getRouterDir], NetI2pRouterStartupCreateRouterInfoJob_INFO_FILENAME);
  NetI2pDataRouterRouterInfo *info = [((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) router])) getRouterInfo];
  JavaIoFileOutputStream *fos = nil;
  @synchronized(((NetI2pRouterRouter *) nil_chk([((NetI2pRouterRouterContext *) nil_chk([self getContext])) router]))->routerInfoFileLock_) {
    @try {
      fos = JreRetainedLocalValue(create_NetI2pUtilSecureFileOutputStream_initWithJavaIoFile_(infoFile));
      [((NetI2pDataRouterRouterInfo *) nil_chk(info)) writeBytesWithJavaIoOutputStream:fos];
    }
    @catch (NetI2pDataDataFormatException *dfe) {
      [_log errorWithNSString:@"Error rebuilding the router information" withJavaLangThrowable:dfe];
    }
    @catch (JavaIoIOException *ioe) {
      [_log errorWithNSString:@"Error writing out the rebuilt router information" withJavaLangThrowable:ioe];
    }
    @finally {
      if (fos != nil) @try {
        [fos close];
      }
      @catch (JavaIoIOException *ioe) {
      }
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(runJob);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;" };
  static const J2ObjcClassInfo _NetI2pRouterTasksPersistRouterInfoJob = { "PersistRouterInfoJob", "net.i2p.router.tasks", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterTasksPersistRouterInfoJob;
}

@end

void NetI2pRouterTasksPersistRouterInfoJob_initWithNetI2pRouterRouterContext_(NetI2pRouterTasksPersistRouterInfoJob *self, NetI2pRouterRouterContext *ctx) {
  NetI2pRouterJobImpl_initWithNetI2pRouterRouterContext_(self, ctx);
}

NetI2pRouterTasksPersistRouterInfoJob *new_NetI2pRouterTasksPersistRouterInfoJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) {
  J2OBJC_NEW_IMPL(NetI2pRouterTasksPersistRouterInfoJob, initWithNetI2pRouterRouterContext_, ctx)
}

NetI2pRouterTasksPersistRouterInfoJob *create_NetI2pRouterTasksPersistRouterInfoJob_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) {
  J2OBJC_CREATE_IMPL(NetI2pRouterTasksPersistRouterInfoJob, initWithNetI2pRouterRouterContext_, ctx)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTasksPersistRouterInfoJob)
