//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tasks/ShutdownHook.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Thread.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "net/i2p/router/Router.h"
#include "net/i2p/router/RouterContext.h"
#include "net/i2p/router/RouterVersion.h"
#include "net/i2p/router/tasks/ShutdownHook.h"
#include "net/i2p/router/util/EventLog.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"

@interface NetI2pRouterTasksShutdownHook () {
 @public
  NetI2pRouterRouterContext *_context_;
  jint _id_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pRouterTasksShutdownHook, _context_, NetI2pRouterRouterContext *)

inline JavaUtilConcurrentAtomicAtomicInteger *NetI2pRouterTasksShutdownHook_get___id(void);
static JavaUtilConcurrentAtomicAtomicInteger *NetI2pRouterTasksShutdownHook___id;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pRouterTasksShutdownHook, __id, JavaUtilConcurrentAtomicAtomicInteger *)

J2OBJC_INITIALIZED_DEFN(NetI2pRouterTasksShutdownHook)

@implementation NetI2pRouterTasksShutdownHook

- (instancetype)initWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx {
  NetI2pRouterTasksShutdownHook_initWithNetI2pRouterRouterContext_(self, ctx);
  return self;
}

- (void)run {
  [self setNameWithNSString:JreStrcat("$I$", @"Router ", _id_, @" shutdown")];
  NetI2pUtilLog *l = [((NetI2pUtilLogManager *) nil_chk([((NetI2pRouterRouterContext *) nil_chk(_context_)) logManager])) getLogWithIOSClass:NetI2pRouterRouter_class_()];
  [((NetI2pUtilLog *) nil_chk(l)) logWithInt:NetI2pUtilLog_CRIT withNSString:@"Shutting down the router..."];
  [((NetI2pRouterUtilEventLog *) nil_chk([((NetI2pRouterRouter *) nil_chk([_context_ router])) eventLog])) addEventWithNSString:NetI2pRouterUtilEventLog_CRASHED withNSString:NetI2pRouterRouterVersion_FULL_VERSION];
  [((NetI2pRouterRouter *) nil_chk([_context_ router])) setKillVMOnEndWithBoolean:false];
  [((NetI2pRouterRouter *) nil_chk([_context_ router])) shutdown2WithInt:NetI2pRouterRouter_EXIT_HARD];
}

- (void)dealloc {
  RELEASE_(_context_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pRouterRouterContext:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_context_", "LNetI2pRouterRouterContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "__id", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1a, -1, 1, -1, -1 },
    { "_id_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pRouterRouterContext;", &NetI2pRouterTasksShutdownHook___id };
  static const J2ObjcClassInfo _NetI2pRouterTasksShutdownHook = { "ShutdownHook", "net.i2p.router.tasks", ptrTable, methods, fields, 7, 0x1, 2, 3, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterTasksShutdownHook;
}

+ (void)initialize {
  if (self == [NetI2pRouterTasksShutdownHook class]) {
    JreStrongAssignAndConsume(&NetI2pRouterTasksShutdownHook___id, new_JavaUtilConcurrentAtomicAtomicInteger_init());
    J2OBJC_SET_INITIALIZED(NetI2pRouterTasksShutdownHook)
  }
}

@end

void NetI2pRouterTasksShutdownHook_initWithNetI2pRouterRouterContext_(NetI2pRouterTasksShutdownHook *self, NetI2pRouterRouterContext *ctx) {
  JavaLangThread_init(self);
  JreStrongAssign(&self->_context_, ctx);
  self->_id_ = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(NetI2pRouterTasksShutdownHook___id)) incrementAndGet];
}

NetI2pRouterTasksShutdownHook *new_NetI2pRouterTasksShutdownHook_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) {
  J2OBJC_NEW_IMPL(NetI2pRouterTasksShutdownHook, initWithNetI2pRouterRouterContext_, ctx)
}

NetI2pRouterTasksShutdownHook *create_NetI2pRouterTasksShutdownHook_initWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx) {
  J2OBJC_CREATE_IMPL(NetI2pRouterTasksShutdownHook, initWithNetI2pRouterRouterContext_, ctx)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTasksShutdownHook)
