//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tasks/CryptoChecker.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pRouterTasksCryptoChecker")
#ifdef RESTRICT_NetI2pRouterTasksCryptoChecker
#define INCLUDE_ALL_NetI2pRouterTasksCryptoChecker 0
#else
#define INCLUDE_ALL_NetI2pRouterTasksCryptoChecker 1
#endif
#undef RESTRICT_NetI2pRouterTasksCryptoChecker

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pRouterTasksCryptoChecker_) && (INCLUDE_ALL_NetI2pRouterTasksCryptoChecker || defined(INCLUDE_NetI2pRouterTasksCryptoChecker))
#define NetI2pRouterTasksCryptoChecker_

@class IOSObjectArray;
@class NetI2pRouterRouterContext;

@interface NetI2pRouterTasksCryptoChecker : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

+ (void)warnUnavailableCryptoWithNetI2pRouterRouterContext:(NetI2pRouterRouterContext *)ctx;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pRouterTasksCryptoChecker)

FOUNDATION_EXPORT void NetI2pRouterTasksCryptoChecker_init(NetI2pRouterTasksCryptoChecker *self);

FOUNDATION_EXPORT NetI2pRouterTasksCryptoChecker *new_NetI2pRouterTasksCryptoChecker_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pRouterTasksCryptoChecker *create_NetI2pRouterTasksCryptoChecker_init(void);

FOUNDATION_EXPORT void NetI2pRouterTasksCryptoChecker_warnUnavailableCryptoWithNetI2pRouterRouterContext_(NetI2pRouterRouterContext *ctx);

FOUNDATION_EXPORT void NetI2pRouterTasksCryptoChecker_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pRouterTasksCryptoChecker)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pRouterTasksCryptoChecker")
