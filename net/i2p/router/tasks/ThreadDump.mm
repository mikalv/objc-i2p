//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/router/tasks/ThreadDump.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "net/i2p/I2PAppContext.h"
#include "net/i2p/router/tasks/ThreadDump.h"
#include "net/i2p/util/Log.h"
#include "net/i2p/util/LogManager.h"
#include "net/i2p/util/ShellCommand.h"
#include "net/i2p/util/SystemVersion.h"

@implementation NetI2pRouterTasksThreadDump

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pRouterTasksThreadDump_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)dumpWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context
                                withInt:(jint)secondsToWait {
  return NetI2pRouterTasksThreadDump_dumpWithNetI2pI2PAppContext_withInt_(context, secondsToWait);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(dumpWithNetI2pI2PAppContext:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "dump", "LNetI2pI2PAppContext;I" };
  static const J2ObjcClassInfo _NetI2pRouterTasksThreadDump = { "ThreadDump", "net.i2p.router.tasks", ptrTable, methods, NULL, 7, 0x400, 2, 0, -1, -1, -1, -1, -1 };
  return &_NetI2pRouterTasksThreadDump;
}

@end

void NetI2pRouterTasksThreadDump_init(NetI2pRouterTasksThreadDump *self) {
  NSObject_init(self);
}

jboolean NetI2pRouterTasksThreadDump_dumpWithNetI2pI2PAppContext_withInt_(NetI2pI2PAppContext *context, jint secondsToWait) {
  NetI2pRouterTasksThreadDump_initialize();
  if (NetI2pUtilSystemVersion_isWindows() || ![((NetI2pI2PAppContext *) nil_chk(context)) hasWrapper]) return false;
  NetI2pUtilShellCommand *sc = create_NetI2pUtilShellCommand_init();
  JavaIoFile *i2pr = create_JavaIoFile_initWithJavaIoFile_withNSString_([((NetI2pI2PAppContext *) nil_chk(context)) getBaseDir], @"i2prouter");
  IOSObjectArray *args = [IOSObjectArray arrayWithLength:2 type:NSString_class_()];
  IOSObjectArray_Set(args, 0, [i2pr getAbsolutePath]);
  IOSObjectArray_Set(args, 1, @"dump");
  jboolean success = [sc executeSilentAndWaitTimedWithNSStringArray:args withInt:secondsToWait];
  if (secondsToWait <= 0) success = true;
  if (success) {
    NetI2pUtilLog *log = [((NetI2pUtilLogManager *) nil_chk([context logManager])) getLogWithIOSClass:NetI2pRouterTasksThreadDump_class_()];
    JavaIoFile *f = create_JavaIoFile_initWithJavaIoFile_withNSString_([context getConfigDir], @"wrapper.log");
    NSString *loc = [f exists] ? [f getAbsolutePath] : @"wrapper.log";
    [((NetI2pUtilLog *) nil_chk(log)) logWithInt:NetI2pUtilLog_CRIT withNSString:JreStrcat("$$", @"Threads dumped to ", loc)];
  }
  return success;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pRouterTasksThreadDump)
