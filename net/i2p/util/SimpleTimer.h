//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/SimpleTimer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilSimpleTimer")
#ifdef RESTRICT_NetI2pUtilSimpleTimer
#define INCLUDE_ALL_NetI2pUtilSimpleTimer 0
#else
#define INCLUDE_ALL_NetI2pUtilSimpleTimer 1
#endif
#undef RESTRICT_NetI2pUtilSimpleTimer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilSimpleTimer_) && (INCLUDE_ALL_NetI2pUtilSimpleTimer || defined(INCLUDE_NetI2pUtilSimpleTimer))
#define NetI2pUtilSimpleTimer_

@class NetI2pI2PAppContext;
@protocol NetI2pUtilSimpleTimer_TimedEvent;

@interface NetI2pUtilSimpleTimer : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (void)addEventWithNetI2pUtilSimpleTimer_TimedEvent:(id<NetI2pUtilSimpleTimer_TimedEvent>)event
                                            withLong:(jlong)timeoutMs;

- (void)addEventWithNetI2pUtilSimpleTimer_TimedEvent:(id<NetI2pUtilSimpleTimer_TimedEvent>)event
                                            withLong:(jlong)timeoutMs
                                         withBoolean:(jboolean)useEarliestTime;

+ (NetI2pUtilSimpleTimer *)getInstance;

- (jboolean)removeEventWithNetI2pUtilSimpleTimer_TimedEvent:(id<NetI2pUtilSimpleTimer_TimedEvent>)evt;

- (void)removeSimpleTimer;

- (void)rescheduleWithNetI2pUtilSimpleTimer_TimedEvent:(id<NetI2pUtilSimpleTimer_TimedEvent>)event
                                              withLong:(jlong)timeoutMs;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilSimpleTimer)

FOUNDATION_EXPORT NetI2pUtilSimpleTimer *NetI2pUtilSimpleTimer_getInstance(void);

FOUNDATION_EXPORT void NetI2pUtilSimpleTimer_initWithNetI2pI2PAppContext_(NetI2pUtilSimpleTimer *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pUtilSimpleTimer *new_NetI2pUtilSimpleTimer_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSimpleTimer *create_NetI2pUtilSimpleTimer_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilSimpleTimer)

#endif

#if !defined (NetI2pUtilSimpleTimer_TimedEvent_) && (INCLUDE_ALL_NetI2pUtilSimpleTimer || defined(INCLUDE_NetI2pUtilSimpleTimer_TimedEvent))
#define NetI2pUtilSimpleTimer_TimedEvent_

@protocol NetI2pUtilSimpleTimer_TimedEvent < JavaObject >

- (void)timeReached;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilSimpleTimer_TimedEvent)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilSimpleTimer_TimedEvent)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilSimpleTimer")
