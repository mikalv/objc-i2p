//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/FileUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilFileUtil")
#ifdef RESTRICT_NetI2pUtilFileUtil
#define INCLUDE_ALL_NetI2pUtilFileUtil 0
#else
#define INCLUDE_ALL_NetI2pUtilFileUtil 1
#endif
#undef RESTRICT_NetI2pUtilFileUtil

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilFileUtil_) && (INCLUDE_ALL_NetI2pUtilFileUtil || defined(INCLUDE_NetI2pUtilFileUtil))
#define NetI2pUtilFileUtil_

@class IOSObjectArray;
@class JavaIoFile;
@class JavaIoOutputStream;

@interface NetI2pUtilFileUtil : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (jboolean)copy__WithJavaIoFile:(JavaIoFile *)src
                  withJavaIoFile:(JavaIoFile *)dst
                     withBoolean:(jboolean)overwriteExisting
                     withBoolean:(jboolean)quiet OBJC_METHOD_FAMILY_NONE;

+ (jboolean)copy__WithNSString:(NSString *)source
                  withNSString:(NSString *)dest
                   withBoolean:(jboolean)overwriteExisting OBJC_METHOD_FAMILY_NONE;

+ (jboolean)copy__WithNSString:(NSString *)source
                  withNSString:(NSString *)dest
                   withBoolean:(jboolean)overwriteExisting
                   withBoolean:(jboolean)quiet OBJC_METHOD_FAMILY_NONE;

+ (jboolean)extractZipWithJavaIoFile:(JavaIoFile *)zipfile
                      withJavaIoFile:(JavaIoFile *)targetDir;

+ (jboolean)extractZipWithJavaIoFile:(JavaIoFile *)zipfile
                      withJavaIoFile:(JavaIoFile *)targetDir
                             withInt:(jint)logLevel;

+ (jboolean)isPack200Supported;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

+ (void)readFileWithNSString:(NSString *)path
                withNSString:(NSString *)root
      withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

+ (NSString *)readTextFileWithNSString:(NSString *)filename
                               withInt:(jint)maxNumLines
                           withBoolean:(jboolean)startAtBeginning;

+ (jboolean)renameWithJavaIoFile:(JavaIoFile *)from
                  withJavaIoFile:(JavaIoFile *)to;

+ (jboolean)rmdirWithJavaIoFile:(JavaIoFile *)target
                    withBoolean:(jboolean)failIfNotEmpty;

+ (jboolean)rmdirWithNSString:(NSString *)path
                  withBoolean:(jboolean)failIfNotEmpty;

+ (jboolean)verifyZipWithJavaIoFile:(JavaIoFile *)zipfile;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilFileUtil)

FOUNDATION_EXPORT void NetI2pUtilFileUtil_init(NetI2pUtilFileUtil *self);

FOUNDATION_EXPORT NetI2pUtilFileUtil *new_NetI2pUtilFileUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilFileUtil *create_NetI2pUtilFileUtil_init(void);

FOUNDATION_EXPORT jboolean NetI2pUtilFileUtil_rmdirWithNSString_withBoolean_(NSString *path, jboolean failIfNotEmpty);

FOUNDATION_EXPORT jboolean NetI2pUtilFileUtil_rmdirWithJavaIoFile_withBoolean_(JavaIoFile *target, jboolean failIfNotEmpty);

FOUNDATION_EXPORT jboolean NetI2pUtilFileUtil_extractZipWithJavaIoFile_withJavaIoFile_(JavaIoFile *zipfile, JavaIoFile *targetDir);

FOUNDATION_EXPORT jboolean NetI2pUtilFileUtil_extractZipWithJavaIoFile_withJavaIoFile_withInt_(JavaIoFile *zipfile, JavaIoFile *targetDir, jint logLevel);

FOUNDATION_EXPORT jboolean NetI2pUtilFileUtil_verifyZipWithJavaIoFile_(JavaIoFile *zipfile);

FOUNDATION_EXPORT jboolean NetI2pUtilFileUtil_isPack200Supported(void);

FOUNDATION_EXPORT NSString *NetI2pUtilFileUtil_readTextFileWithNSString_withInt_withBoolean_(NSString *filename, jint maxNumLines, jboolean startAtBeginning);

FOUNDATION_EXPORT void NetI2pUtilFileUtil_readFileWithNSString_withNSString_withJavaIoOutputStream_(NSString *path, NSString *root, JavaIoOutputStream *outArg);

FOUNDATION_EXPORT jboolean NetI2pUtilFileUtil_copy__WithNSString_withNSString_withBoolean_(NSString *source, NSString *dest, jboolean overwriteExisting);

FOUNDATION_EXPORT jboolean NetI2pUtilFileUtil_copy__WithNSString_withNSString_withBoolean_withBoolean_(NSString *source, NSString *dest, jboolean overwriteExisting, jboolean quiet);

FOUNDATION_EXPORT jboolean NetI2pUtilFileUtil_copy__WithJavaIoFile_withJavaIoFile_withBoolean_withBoolean_(JavaIoFile *src, JavaIoFile *dst, jboolean overwriteExisting, jboolean quiet);

FOUNDATION_EXPORT jboolean NetI2pUtilFileUtil_renameWithJavaIoFile_withJavaIoFile_(JavaIoFile *from, JavaIoFile *to);

FOUNDATION_EXPORT void NetI2pUtilFileUtil_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilFileUtil)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilFileUtil")
