//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/KeyRing.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilKeyRing")
#ifdef RESTRICT_NetI2pUtilKeyRing
#define INCLUDE_ALL_NetI2pUtilKeyRing 0
#else
#define INCLUDE_ALL_NetI2pUtilKeyRing 1
#endif
#undef RESTRICT_NetI2pUtilKeyRing

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilKeyRing_) && (INCLUDE_ALL_NetI2pUtilKeyRing || defined(INCLUDE_NetI2pUtilKeyRing))
#define NetI2pUtilKeyRing_

#define RESTRICT_JavaUtilConcurrentConcurrentHashMap 1
#define INCLUDE_JavaUtilConcurrentConcurrentHashMap 1
#include "java/util/concurrent/ConcurrentHashMap.h"

@class JavaIoWriter;
@class NetI2pDataHash;
@class NetI2pDataSessionKey;
@protocol JavaUtilFunctionBiFunction;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilMap;

@interface NetI2pUtilKeyRing : JavaUtilConcurrentConcurrentHashMap

#pragma mark Public

- (instancetype __nonnull)init;

- (NetI2pDataSessionKey *)computeIfAbsentWithId:(NetI2pDataHash *)arg0
                   withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg1;

- (NetI2pDataSessionKey *)computeIfPresentWithId:(NetI2pDataHash *)arg0
                  withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (NetI2pDataSessionKey *)computeWithId:(NetI2pDataHash *)arg0
         withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (NetI2pDataSessionKey *)getOrDefaultWithId:(id)arg0
                                      withId:(NetI2pDataSessionKey *)arg1;

- (NetI2pDataSessionKey *)getWithId:(id)arg0;

- (NetI2pDataSessionKey *)mergeWithId:(NetI2pDataHash *)arg0
                               withId:(NetI2pDataSessionKey *)arg1
       withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg2;

- (NetI2pDataSessionKey *)putIfAbsentWithId:(NetI2pDataHash *)arg0
                                     withId:(NetI2pDataSessionKey *)arg1;

- (NetI2pDataSessionKey *)putWithId:(NetI2pDataHash *)arg0
                             withId:(NetI2pDataSessionKey *)arg1;

- (NetI2pDataHash *)reduceKeysWithLong:(jlong)arg0
        withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (NetI2pDataSessionKey *)reduceValuesWithLong:(jlong)arg0
                withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (NetI2pDataSessionKey *)removeWithId:(id)arg0;

- (void)renderStatusHTMLWithJavaIoWriter:(JavaIoWriter *)outArg;

- (NetI2pDataSessionKey *)replaceWithId:(NetI2pDataHash *)arg0
                                 withId:(NetI2pDataSessionKey *)arg1;

#pragma mark Package-Private

- (NetI2pDataSessionKey *)putValWithId:(NetI2pDataHash *)arg0
                                withId:(NetI2pDataSessionKey *)arg1
                           withBoolean:(jboolean)arg2;

- (NetI2pDataSessionKey *)replaceNodeWithId:(id)arg0
                                     withId:(NetI2pDataSessionKey *)arg1
                                     withId:(id)arg2;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0
                            withFloat:(jfloat)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0
                            withFloat:(jfloat)arg1
                              withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilKeyRing)

FOUNDATION_EXPORT void NetI2pUtilKeyRing_init(NetI2pUtilKeyRing *self);

FOUNDATION_EXPORT NetI2pUtilKeyRing *new_NetI2pUtilKeyRing_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilKeyRing *create_NetI2pUtilKeyRing_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilKeyRing)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilKeyRing")
