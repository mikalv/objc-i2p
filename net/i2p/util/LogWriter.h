//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/LogWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilLogWriter")
#ifdef RESTRICT_NetI2pUtilLogWriter
#define INCLUDE_ALL_NetI2pUtilLogWriter 0
#else
#define INCLUDE_ALL_NetI2pUtilLogWriter 1
#endif
#undef RESTRICT_NetI2pUtilLogWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilLogWriter_) && (INCLUDE_ALL_NetI2pUtilLogWriter || defined(INCLUDE_NetI2pUtilLogWriter))
#define NetI2pUtilLogWriter_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class NetI2pUtilLogManager;
@class NetI2pUtilLogRecord;

@interface NetI2pUtilLogWriter : NSObject < JavaLangRunnable > {
 @public
  NetI2pUtilLogManager *_manager_;
  volatile_jboolean _write_;
}
@property (readonly, class) jlong FLUSH_INTERVAL NS_SWIFT_NAME(FLUSH_INTERVAL);

+ (jlong)FLUSH_INTERVAL;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pUtilLogManager:(NetI2pUtilLogManager *)manager;

- (NSString *)currentFile;

- (void)flushRecords;

- (void)flushRecordsWithBoolean:(jboolean)shouldWait;

- (void)run;

- (void)setFlushIntervalWithLong:(jlong)interval;

- (void)stopWriting;

#pragma mark Protected

- (void)closeWriter;

- (void)flushWriter;

- (void)writeRecordWithInt:(jint)priority
              withNSString:(NSString *)line;

- (void)writeRecordWithNetI2pUtilLogRecord:(NetI2pUtilLogRecord *)rec
                              withNSString:(NSString *)formatted;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilLogWriter)

J2OBJC_FIELD_SETTER(NetI2pUtilLogWriter, _manager_, NetI2pUtilLogManager *)

inline jlong NetI2pUtilLogWriter_get_FLUSH_INTERVAL(void);
#define NetI2pUtilLogWriter_FLUSH_INTERVAL 29000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pUtilLogWriter, FLUSH_INTERVAL, jlong)

FOUNDATION_EXPORT void NetI2pUtilLogWriter_initWithNetI2pUtilLogManager_(NetI2pUtilLogWriter *self, NetI2pUtilLogManager *manager);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilLogWriter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilLogWriter")
