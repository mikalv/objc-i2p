//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/TryCache.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilTryCache")
#ifdef RESTRICT_NetI2pUtilTryCache
#define INCLUDE_ALL_NetI2pUtilTryCache 0
#else
#define INCLUDE_ALL_NetI2pUtilTryCache 1
#endif
#undef RESTRICT_NetI2pUtilTryCache

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilTryCache_) && (INCLUDE_ALL_NetI2pUtilTryCache || defined(INCLUDE_NetI2pUtilTryCache))
#define NetI2pUtilTryCache_

@protocol JavaUtilConcurrentLocksLock;
@protocol JavaUtilList;
@protocol NetI2pUtilTryCache_ObjectFactory;

@interface NetI2pUtilTryCache : NSObject {
 @public
  jint capacity_;
  id<JavaUtilList> items_;
  id<JavaUtilConcurrentLocksLock> lock_;
  jlong _lastUnderflow_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pUtilTryCache_ObjectFactory:(id<NetI2pUtilTryCache_ObjectFactory>)factory
                                                           withInt:(jint)capacity;

- (id)acquire;

- (void)clear;

- (void)release__WithId:(id)item;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilTryCache)

J2OBJC_FIELD_SETTER(NetI2pUtilTryCache, items_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(NetI2pUtilTryCache, lock_, id<JavaUtilConcurrentLocksLock>)

FOUNDATION_EXPORT void NetI2pUtilTryCache_initWithNetI2pUtilTryCache_ObjectFactory_withInt_(NetI2pUtilTryCache *self, id<NetI2pUtilTryCache_ObjectFactory> factory, jint capacity);

FOUNDATION_EXPORT NetI2pUtilTryCache *new_NetI2pUtilTryCache_initWithNetI2pUtilTryCache_ObjectFactory_withInt_(id<NetI2pUtilTryCache_ObjectFactory> factory, jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilTryCache *create_NetI2pUtilTryCache_initWithNetI2pUtilTryCache_ObjectFactory_withInt_(id<NetI2pUtilTryCache_ObjectFactory> factory, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilTryCache)

#endif

#if !defined (NetI2pUtilTryCache_ObjectFactory_) && (INCLUDE_ALL_NetI2pUtilTryCache || defined(INCLUDE_NetI2pUtilTryCache_ObjectFactory))
#define NetI2pUtilTryCache_ObjectFactory_

@protocol NetI2pUtilTryCache_ObjectFactory < JavaObject >

- (id)newInstance OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilTryCache_ObjectFactory)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilTryCache_ObjectFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilTryCache")
