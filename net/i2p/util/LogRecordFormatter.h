//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/LogRecordFormatter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilLogRecordFormatter")
#ifdef RESTRICT_NetI2pUtilLogRecordFormatter
#define INCLUDE_ALL_NetI2pUtilLogRecordFormatter 0
#else
#define INCLUDE_ALL_NetI2pUtilLogRecordFormatter 1
#endif
#undef RESTRICT_NetI2pUtilLogRecordFormatter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilLogRecordFormatter_) && (INCLUDE_ALL_NetI2pUtilLogRecordFormatter || defined(INCLUDE_NetI2pUtilLogRecordFormatter))
#define NetI2pUtilLogRecordFormatter_

@class NetI2pUtilLogManager;
@class NetI2pUtilLogRecord;

@interface NetI2pUtilLogRecordFormatter : NSObject
@property (readonly, copy, class) NSString *NL NS_SWIFT_NAME(NL);

+ (NSString *)NL;

#pragma mark Public

+ (NSString *)formatRecordWithNetI2pUtilLogManager:(NetI2pUtilLogManager *)manager
                           withNetI2pUtilLogRecord:(NetI2pUtilLogRecord *)rec;

+ (NSString *)getWhenWithNetI2pUtilLogManager:(NetI2pUtilLogManager *)manager
                      withNetI2pUtilLogRecord:(NetI2pUtilLogRecord *)logRecord;

#pragma mark Package-Private

- (instancetype __nonnull)init;

+ (NSString *)formatRecordWithNetI2pUtilLogManager:(NetI2pUtilLogManager *)manager
                           withNetI2pUtilLogRecord:(NetI2pUtilLogRecord *)rec
                                       withBoolean:(jboolean)showDate;

@end

J2OBJC_STATIC_INIT(NetI2pUtilLogRecordFormatter)

inline NSString *NetI2pUtilLogRecordFormatter_get_NL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogRecordFormatter_NL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogRecordFormatter, NL, NSString *)

FOUNDATION_EXPORT void NetI2pUtilLogRecordFormatter_init(NetI2pUtilLogRecordFormatter *self);

FOUNDATION_EXPORT NetI2pUtilLogRecordFormatter *new_NetI2pUtilLogRecordFormatter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilLogRecordFormatter *create_NetI2pUtilLogRecordFormatter_init(void);

FOUNDATION_EXPORT NSString *NetI2pUtilLogRecordFormatter_formatRecordWithNetI2pUtilLogManager_withNetI2pUtilLogRecord_(NetI2pUtilLogManager *manager, NetI2pUtilLogRecord *rec);

FOUNDATION_EXPORT NSString *NetI2pUtilLogRecordFormatter_formatRecordWithNetI2pUtilLogManager_withNetI2pUtilLogRecord_withBoolean_(NetI2pUtilLogManager *manager, NetI2pUtilLogRecord *rec, jboolean showDate);

FOUNDATION_EXPORT NSString *NetI2pUtilLogRecordFormatter_getWhenWithNetI2pUtilLogManager_withNetI2pUtilLogRecord_(NetI2pUtilLogManager *manager, NetI2pUtilLogRecord *logRecord);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilLogRecordFormatter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilLogRecordFormatter")
