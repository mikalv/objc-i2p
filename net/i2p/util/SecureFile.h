//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/SecureFile.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilSecureFile")
#ifdef RESTRICT_NetI2pUtilSecureFile
#define INCLUDE_ALL_NetI2pUtilSecureFile 0
#else
#define INCLUDE_ALL_NetI2pUtilSecureFile 1
#endif
#undef RESTRICT_NetI2pUtilSecureFile

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilSecureFile_) && (INCLUDE_ALL_NetI2pUtilSecureFile || defined(INCLUDE_NetI2pUtilSecureFile))
#define NetI2pUtilSecureFile_

#define RESTRICT_NetI2pUtilSecureDirectory 1
#define INCLUDE_NetI2pUtilSecureDirectory 1
#include "net/i2p/util/SecureDirectory.h"

@class JavaIoFile;

@interface NetI2pUtilSecureFile : NetI2pUtilSecureDirectory

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)parent
                                withNSString:(NSString *)child;

- (instancetype __nonnull)initWithNSString:(NSString *)pathname;

- (instancetype __nonnull)initWithNSString:(NSString *)parent
                              withNSString:(NSString *)child;

- (jboolean)createNewFile;

+ (JavaIoFile *)createTempFileWithNSString:(NSString *)prefix
                              withNSString:(NSString *)suffix;

+ (JavaIoFile *)createTempFileWithNSString:(NSString *)prefix
                              withNSString:(NSString *)suffix
                            withJavaIoFile:(JavaIoFile *)directory;

#pragma mark Protected

- (void)setPerms;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilSecureFile)

FOUNDATION_EXPORT void NetI2pUtilSecureFile_initWithNSString_(NetI2pUtilSecureFile *self, NSString *pathname);

FOUNDATION_EXPORT NetI2pUtilSecureFile *new_NetI2pUtilSecureFile_initWithNSString_(NSString *pathname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSecureFile *create_NetI2pUtilSecureFile_initWithNSString_(NSString *pathname);

FOUNDATION_EXPORT void NetI2pUtilSecureFile_initWithNSString_withNSString_(NetI2pUtilSecureFile *self, NSString *parent, NSString *child);

FOUNDATION_EXPORT NetI2pUtilSecureFile *new_NetI2pUtilSecureFile_initWithNSString_withNSString_(NSString *parent, NSString *child) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSecureFile *create_NetI2pUtilSecureFile_initWithNSString_withNSString_(NSString *parent, NSString *child);

FOUNDATION_EXPORT void NetI2pUtilSecureFile_initWithJavaIoFile_withNSString_(NetI2pUtilSecureFile *self, JavaIoFile *parent, NSString *child);

FOUNDATION_EXPORT NetI2pUtilSecureFile *new_NetI2pUtilSecureFile_initWithJavaIoFile_withNSString_(JavaIoFile *parent, NSString *child) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSecureFile *create_NetI2pUtilSecureFile_initWithJavaIoFile_withNSString_(JavaIoFile *parent, NSString *child);

FOUNDATION_EXPORT JavaIoFile *NetI2pUtilSecureFile_createTempFileWithNSString_withNSString_(NSString *prefix, NSString *suffix);

FOUNDATION_EXPORT JavaIoFile *NetI2pUtilSecureFile_createTempFileWithNSString_withNSString_withJavaIoFile_(NSString *prefix, NSString *suffix, JavaIoFile *directory);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilSecureFile)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilSecureFile")
