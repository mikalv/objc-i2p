//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/CommandLine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilCommandLine")
#ifdef RESTRICT_NetI2pUtilCommandLine
#define INCLUDE_ALL_NetI2pUtilCommandLine 0
#else
#define INCLUDE_ALL_NetI2pUtilCommandLine 1
#endif
#undef RESTRICT_NetI2pUtilCommandLine

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilCommandLine_) && (INCLUDE_ALL_NetI2pUtilCommandLine || defined(INCLUDE_NetI2pUtilCommandLine))
#define NetI2pUtilCommandLine_

@class IOSObjectArray;
@protocol JavaUtilList;

@interface NetI2pUtilCommandLine : NSObject
@property (readonly, class, strong) id<JavaUtilList> CLASSES NS_SWIFT_NAME(CLASSES);

+ (id<JavaUtilList>)CLASSES;

#pragma mark Public

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

#pragma mark Protected

- (instancetype __nonnull)init;

+ (void)execWithNSStringArray:(IOSObjectArray *)args
             withJavaUtilList:(id<JavaUtilList>)classes;

+ (void)printCommandsWithJavaUtilList:(id<JavaUtilList>)classes;

@end

J2OBJC_STATIC_INIT(NetI2pUtilCommandLine)

inline id<JavaUtilList> NetI2pUtilCommandLine_get_CLASSES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilList> NetI2pUtilCommandLine_CLASSES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilCommandLine, CLASSES, id<JavaUtilList>)

FOUNDATION_EXPORT void NetI2pUtilCommandLine_init(NetI2pUtilCommandLine *self);

FOUNDATION_EXPORT NetI2pUtilCommandLine *new_NetI2pUtilCommandLine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilCommandLine *create_NetI2pUtilCommandLine_init(void);

FOUNDATION_EXPORT void NetI2pUtilCommandLine_mainWithNSStringArray_(IOSObjectArray *args);

FOUNDATION_EXPORT void NetI2pUtilCommandLine_execWithNSStringArray_withJavaUtilList_(IOSObjectArray *args, id<JavaUtilList> classes);

FOUNDATION_EXPORT void NetI2pUtilCommandLine_printCommandsWithJavaUtilList_(id<JavaUtilList> classes);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilCommandLine)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilCommandLine")
