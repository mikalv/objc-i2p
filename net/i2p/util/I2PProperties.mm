//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/I2PProperties.java
//

#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "java/util/Properties.h"
#include "java/util/concurrent/CopyOnWriteArrayList.h"
#include "net/i2p/util/I2PProperties.h"

@interface NetI2pUtilI2PProperties () {
 @public
  id<JavaUtilList> _callbacks_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pUtilI2PProperties, _callbacks_, id<JavaUtilList>)

@interface NetI2pUtilI2PProperties_I2PPropertyCallback : NSObject

@end

@implementation NetI2pUtilI2PProperties

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pUtilI2PProperties_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaUtilProperties:(JavaUtilProperties *)defaults {
  NetI2pUtilI2PProperties_initWithJavaUtilProperties_(self, defaults);
  return self;
}

- (void)addCallBackWithNetI2pUtilI2PProperties_I2PPropertyCallback:(id<NetI2pUtilI2PProperties_I2PPropertyCallback>)callback {
  [((id<JavaUtilList>) nil_chk(_callbacks_)) addWithId:callback];
}

- (void)removeCallBackWithNetI2pUtilI2PProperties_I2PPropertyCallback:(id<NetI2pUtilI2PProperties_I2PPropertyCallback>)callback {
  [((id<JavaUtilList>) nil_chk(_callbacks_)) removeWithId:callback];
}

- (id)setPropertyWithNSString:(NSString *)key
                 withNSString:(NSString *)value {
  id returnValue = [super setPropertyWithNSString:key withNSString:value];
  for (id<NetI2pUtilI2PProperties_I2PPropertyCallback> __strong callback in nil_chk(_callbacks_)) {
    [((id<NetI2pUtilI2PProperties_I2PPropertyCallback>) nil_chk(callback)) propertyChangedWithNSString:key withNSString:value];
  }
  return returnValue;
}

- (void)dealloc {
  RELEASE_(_callbacks_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaUtilProperties:);
  methods[2].selector = @selector(addCallBackWithNetI2pUtilI2PProperties_I2PPropertyCallback:);
  methods[3].selector = @selector(removeCallBackWithNetI2pUtilI2PProperties_I2PPropertyCallback:);
  methods[4].selector = @selector(setPropertyWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_callbacks_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilProperties;", "addCallBack", "LNetI2pUtilI2PProperties_I2PPropertyCallback;", "removeCallBack", "setProperty", "LNSString;LNSString;", "Ljava/util/List<Lnet/i2p/util/I2PProperties$I2PPropertyCallback;>;" };
  static const J2ObjcClassInfo _NetI2pUtilI2PProperties = { "I2PProperties", "net.i2p.util", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, 2, -1, -1, -1 };
  return &_NetI2pUtilI2PProperties;
}

@end

void NetI2pUtilI2PProperties_init(NetI2pUtilI2PProperties *self) {
  JavaUtilProperties_init(self);
  JreStrongAssignAndConsume(&self->_callbacks_, new_JavaUtilConcurrentCopyOnWriteArrayList_init());
}

NetI2pUtilI2PProperties *new_NetI2pUtilI2PProperties_init() {
  J2OBJC_NEW_IMPL(NetI2pUtilI2PProperties, init)
}

NetI2pUtilI2PProperties *create_NetI2pUtilI2PProperties_init() {
  J2OBJC_CREATE_IMPL(NetI2pUtilI2PProperties, init)
}

void NetI2pUtilI2PProperties_initWithJavaUtilProperties_(NetI2pUtilI2PProperties *self, JavaUtilProperties *defaults) {
  JavaUtilProperties_initWithJavaUtilProperties_(self, defaults);
  JreStrongAssignAndConsume(&self->_callbacks_, new_JavaUtilConcurrentCopyOnWriteArrayList_init());
}

NetI2pUtilI2PProperties *new_NetI2pUtilI2PProperties_initWithJavaUtilProperties_(JavaUtilProperties *defaults) {
  J2OBJC_NEW_IMPL(NetI2pUtilI2PProperties, initWithJavaUtilProperties_, defaults)
}

NetI2pUtilI2PProperties *create_NetI2pUtilI2PProperties_initWithJavaUtilProperties_(JavaUtilProperties *defaults) {
  J2OBJC_CREATE_IMPL(NetI2pUtilI2PProperties, initWithJavaUtilProperties_, defaults)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pUtilI2PProperties)

@implementation NetI2pUtilI2PProperties_I2PPropertyCallback

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(propertyChangedWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "propertyChanged", "LNSString;LNSString;", "LNetI2pUtilI2PProperties;" };
  static const J2ObjcClassInfo _NetI2pUtilI2PProperties_I2PPropertyCallback = { "I2PPropertyCallback", "net.i2p.util", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
  return &_NetI2pUtilI2PProperties_I2PPropertyCallback;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(NetI2pUtilI2PProperties_I2PPropertyCallback)
