//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/SecureDirectory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilSecureDirectory")
#ifdef RESTRICT_NetI2pUtilSecureDirectory
#define INCLUDE_ALL_NetI2pUtilSecureDirectory 0
#else
#define INCLUDE_ALL_NetI2pUtilSecureDirectory 1
#endif
#undef RESTRICT_NetI2pUtilSecureDirectory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilSecureDirectory_) && (INCLUDE_ALL_NetI2pUtilSecureDirectory || defined(INCLUDE_NetI2pUtilSecureDirectory))
#define NetI2pUtilSecureDirectory_

#define RESTRICT_JavaIoFile 1
#define INCLUDE_JavaIoFile 1
#include "java/io/File.h"

@class JavaNetURI;

@interface NetI2pUtilSecureDirectory : JavaIoFile
@property (readonly, class) jboolean isNotWindows NS_SWIFT_NAME(isNotWindows);

+ (jboolean)isNotWindows;

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)parent
                                withNSString:(NSString *)child;

- (instancetype __nonnull)initWithNSString:(NSString *)pathname;

- (instancetype __nonnull)initWithNSString:(NSString *)parent
                              withNSString:(NSString *)child;

- (jboolean)mkdir;

- (jboolean)mkdirs;

#pragma mark Protected

- (void)setPerms;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaNetURI:(JavaNetURI *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pUtilSecureDirectory)

inline jboolean NetI2pUtilSecureDirectory_get_isNotWindows(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean NetI2pUtilSecureDirectory_isNotWindows;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(NetI2pUtilSecureDirectory, isNotWindows, jboolean)

FOUNDATION_EXPORT void NetI2pUtilSecureDirectory_initWithNSString_(NetI2pUtilSecureDirectory *self, NSString *pathname);

FOUNDATION_EXPORT NetI2pUtilSecureDirectory *new_NetI2pUtilSecureDirectory_initWithNSString_(NSString *pathname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSecureDirectory *create_NetI2pUtilSecureDirectory_initWithNSString_(NSString *pathname);

FOUNDATION_EXPORT void NetI2pUtilSecureDirectory_initWithNSString_withNSString_(NetI2pUtilSecureDirectory *self, NSString *parent, NSString *child);

FOUNDATION_EXPORT NetI2pUtilSecureDirectory *new_NetI2pUtilSecureDirectory_initWithNSString_withNSString_(NSString *parent, NSString *child) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSecureDirectory *create_NetI2pUtilSecureDirectory_initWithNSString_withNSString_(NSString *parent, NSString *child);

FOUNDATION_EXPORT void NetI2pUtilSecureDirectory_initWithJavaIoFile_withNSString_(NetI2pUtilSecureDirectory *self, JavaIoFile *parent, NSString *child);

FOUNDATION_EXPORT NetI2pUtilSecureDirectory *new_NetI2pUtilSecureDirectory_initWithJavaIoFile_withNSString_(JavaIoFile *parent, NSString *child) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSecureDirectory *create_NetI2pUtilSecureDirectory_initWithJavaIoFile_withNSString_(JavaIoFile *parent, NSString *child);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilSecureDirectory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilSecureDirectory")
