//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/LogManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilLogManager")
#ifdef RESTRICT_NetI2pUtilLogManager
#define INCLUDE_ALL_NetI2pUtilLogManager 0
#else
#define INCLUDE_ALL_NetI2pUtilLogManager 1
#endif
#undef RESTRICT_NetI2pUtilLogManager

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilLogManager_) && (INCLUDE_ALL_NetI2pUtilLogManager || defined(INCLUDE_NetI2pUtilLogManager))
#define NetI2pUtilLogManager_

#define RESTRICT_JavaIoFlushable 1
#define INCLUDE_JavaIoFlushable 1
#include "java/io/Flushable.h"

@class IOSCharArray;
@class IOSClass;
@class JavaTextSimpleDateFormat;
@class JavaUtilProperties;
@class NetI2pI2PAppContext;
@class NetI2pUtilLog;
@class NetI2pUtilLogConsoleBuffer;
@class NetI2pUtilLogRecord;
@protocol JavaUtilList;
@protocol JavaUtilQueue;

@interface NetI2pUtilLogManager : NSObject < JavaIoFlushable >
@property (readonly, copy, class) NSString *CONFIG_LOCATION_PROP NS_SWIFT_NAME(CONFIG_LOCATION_PROP);
@property (readonly, copy, class) NSString *FILENAME_OVERRIDE_PROP NS_SWIFT_NAME(FILENAME_OVERRIDE_PROP);
@property (readonly, copy, class) NSString *CONFIG_LOCATION_DEFAULT NS_SWIFT_NAME(CONFIG_LOCATION_DEFAULT);
@property (readonly, class) jchar DATE NS_SWIFT_NAME(DATE);
@property (readonly, class) jchar CLASS NS_SWIFT_NAME(CLASS);
@property (readonly, class) jchar THREAD NS_SWIFT_NAME(THREAD);
@property (readonly, class) jchar PRIORITY NS_SWIFT_NAME(PRIORITY);
@property (readonly, class) jchar MESSAGE NS_SWIFT_NAME(MESSAGE);
@property (readonly, copy, class) NSString *PROP_FORMAT NS_SWIFT_NAME(PROP_FORMAT);
@property (readonly, copy, class) NSString *PROP_DATEFORMAT NS_SWIFT_NAME(PROP_DATEFORMAT);
@property (readonly, copy, class) NSString *PROP_FILENAME NS_SWIFT_NAME(PROP_FILENAME);
@property (readonly, copy, class) NSString *PROP_FILESIZE NS_SWIFT_NAME(PROP_FILESIZE);
@property (readonly, copy, class) NSString *PROP_ROTATIONLIMIT NS_SWIFT_NAME(PROP_ROTATIONLIMIT);
@property (readonly, copy, class) NSString *PROP_DISPLAYONSCREEN NS_SWIFT_NAME(PROP_DISPLAYONSCREEN);
@property (readonly, copy, class) NSString *PROP_CONSOLEBUFFERSIZE NS_SWIFT_NAME(PROP_CONSOLEBUFFERSIZE);
@property (readonly, copy, class) NSString *PROP_DISPLAYONSCREENLEVEL NS_SWIFT_NAME(PROP_DISPLAYONSCREENLEVEL);
@property (readonly, copy, class) NSString *PROP_DEFAULTLEVEL NS_SWIFT_NAME(PROP_DEFAULTLEVEL);
@property (readonly, copy, class) NSString *PROP_RECORD_PREFIX NS_SWIFT_NAME(PROP_RECORD_PREFIX);
@property (readonly, copy, class) NSString *DEFAULT_FORMAT NS_SWIFT_NAME(DEFAULT_FORMAT);
@property (readonly, copy, class) NSString *DEFAULT_DATEFORMAT NS_SWIFT_NAME(DEFAULT_DATEFORMAT);
@property (readonly, copy, class) NSString *DEFAULT_FILENAME NS_SWIFT_NAME(DEFAULT_FILENAME);
@property (readonly, copy, class) NSString *DEFAULT_FILESIZE NS_SWIFT_NAME(DEFAULT_FILESIZE);
@property (readonly, class) jboolean DEFAULT_DISPLAYONSCREEN NS_SWIFT_NAME(DEFAULT_DISPLAYONSCREEN);
@property (readonly, class) jint DEFAULT_CONSOLEBUFFERSIZE NS_SWIFT_NAME(DEFAULT_CONSOLEBUFFERSIZE);
@property (readonly, copy, class) NSString *DEFAULT_ROTATIONLIMIT NS_SWIFT_NAME(DEFAULT_ROTATIONLIMIT);
@property (readonly, copy, class) NSString *DEFAULT_DEFAULTLEVEL NS_SWIFT_NAME(DEFAULT_DEFAULTLEVEL);
@property (readonly, copy, class) NSString *DEFAULT_ONSCREENLEVEL NS_SWIFT_NAME(DEFAULT_ONSCREENLEVEL);

+ (NSString *)CONFIG_LOCATION_PROP;

+ (NSString *)FILENAME_OVERRIDE_PROP;

+ (NSString *)CONFIG_LOCATION_DEFAULT;

+ (jchar)DATE;

+ (jchar)CLASS;

+ (jchar)THREAD;

+ (jchar)PRIORITY;

+ (jchar)MESSAGE;

+ (NSString *)PROP_FORMAT;

+ (NSString *)PROP_DATEFORMAT;

+ (NSString *)PROP_FILENAME;

+ (NSString *)PROP_FILESIZE;

+ (NSString *)PROP_ROTATIONLIMIT;

+ (NSString *)PROP_DISPLAYONSCREEN;

+ (NSString *)PROP_CONSOLEBUFFERSIZE;

+ (NSString *)PROP_DISPLAYONSCREENLEVEL;

+ (NSString *)PROP_DEFAULTLEVEL;

+ (NSString *)PROP_RECORD_PREFIX;

+ (NSString *)DEFAULT_FORMAT;

+ (NSString *)DEFAULT_DATEFORMAT;

+ (NSString *)DEFAULT_FILENAME;

+ (NSString *)DEFAULT_FILESIZE;

+ (jboolean)DEFAULT_DISPLAYONSCREEN;

+ (jint)DEFAULT_CONSOLEBUFFERSIZE;

+ (NSString *)DEFAULT_ROTATIONLIMIT;

+ (NSString *)DEFAULT_DEFAULTLEVEL;

+ (NSString *)DEFAULT_ONSCREENLEVEL;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (NSString *)currentFile;

- (jboolean)displayOnScreen;

- (void)flush;

- (NSString *)getBaseLogfilename;

- (NetI2pUtilLogConsoleBuffer *)getBuffer;

- (jint)getConsoleBufferSize;

- (JavaTextSimpleDateFormat *)getDateFormat;

- (NSString *)getDateFormatPattern;

- (NSString *)getDefaultLimit;

- (jint)getDisplayOnScreenLevel;

- (jint)getFileSize;

+ (jint)getFileSizeWithNSString:(NSString *)size;

- (IOSCharArray *)getFormat;

- (JavaUtilProperties *)getLimits;

- (NetI2pUtilLog *)getLogWithIOSClass:(IOSClass *)cls;

- (NetI2pUtilLog *)getLogWithIOSClass:(IOSClass *)cls
                         withNSString:(NSString *)name;

- (NetI2pUtilLog *)getLogWithNSString:(NSString *)name;

- (id<JavaUtilList>)getLogs;

- (jint)getRotationLimit;

- (jboolean)saveConfig;

- (void)setBaseLogfilenameWithNSString:(NSString *)filenamePattern;

- (void)setConfigWithNSString:(NSString *)filename;

- (void)setConsoleBufferSizeWithInt:(jint)numRecords;

- (jboolean)setDateFormatWithNSString:(NSString *)format;

- (void)setDefaultLimitWithNSString:(NSString *)lim;

- (void)setDisplayOnScreenWithBoolean:(jboolean)yes;

- (void)setDisplayOnScreenLevelWithInt:(jint)level;

- (void)setFileSizeWithInt:(jint)numBytes;

- (void)setFormatWithCharArray:(IOSCharArray *)fmt;

- (void)setLimitsWithJavaUtilProperties:(JavaUtilProperties *)limits;

- (void)shutdown;

#pragma mark Package-Private

- (void)addLogWithNetI2pUtilLog:(NetI2pUtilLog *)log;

- (void)addRecordWithNetI2pUtilLogRecord:(NetI2pUtilLogRecord *)record;

- (NetI2pI2PAppContext *)getContext;

- (id<JavaUtilQueue>)getQueue;

- (void)rereadConfig;

- (jboolean)shouldDropDuplicates;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pUtilLogManager)

inline NSString *NetI2pUtilLogManager_get_CONFIG_LOCATION_PROP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_CONFIG_LOCATION_PROP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, CONFIG_LOCATION_PROP, NSString *)

inline NSString *NetI2pUtilLogManager_get_FILENAME_OVERRIDE_PROP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_FILENAME_OVERRIDE_PROP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, FILENAME_OVERRIDE_PROP, NSString *)

inline NSString *NetI2pUtilLogManager_get_CONFIG_LOCATION_DEFAULT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_CONFIG_LOCATION_DEFAULT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, CONFIG_LOCATION_DEFAULT, NSString *)

inline jchar NetI2pUtilLogManager_get_DATE(void);
#define NetI2pUtilLogManager_DATE 'd'
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pUtilLogManager, DATE, jchar)

inline jchar NetI2pUtilLogManager_get_CLASS(void);
#define NetI2pUtilLogManager_CLASS 'c'
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pUtilLogManager, CLASS, jchar)

inline jchar NetI2pUtilLogManager_get_THREAD(void);
#define NetI2pUtilLogManager_THREAD 't'
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pUtilLogManager, THREAD, jchar)

inline jchar NetI2pUtilLogManager_get_PRIORITY(void);
#define NetI2pUtilLogManager_PRIORITY 'p'
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pUtilLogManager, PRIORITY, jchar)

inline jchar NetI2pUtilLogManager_get_MESSAGE(void);
#define NetI2pUtilLogManager_MESSAGE 'm'
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pUtilLogManager, MESSAGE, jchar)

inline NSString *NetI2pUtilLogManager_get_PROP_FORMAT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_PROP_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, PROP_FORMAT, NSString *)

inline NSString *NetI2pUtilLogManager_get_PROP_DATEFORMAT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_PROP_DATEFORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, PROP_DATEFORMAT, NSString *)

inline NSString *NetI2pUtilLogManager_get_PROP_FILENAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_PROP_FILENAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, PROP_FILENAME, NSString *)

inline NSString *NetI2pUtilLogManager_get_PROP_FILESIZE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_PROP_FILESIZE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, PROP_FILESIZE, NSString *)

inline NSString *NetI2pUtilLogManager_get_PROP_ROTATIONLIMIT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_PROP_ROTATIONLIMIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, PROP_ROTATIONLIMIT, NSString *)

inline NSString *NetI2pUtilLogManager_get_PROP_DISPLAYONSCREEN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_PROP_DISPLAYONSCREEN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, PROP_DISPLAYONSCREEN, NSString *)

inline NSString *NetI2pUtilLogManager_get_PROP_CONSOLEBUFFERSIZE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_PROP_CONSOLEBUFFERSIZE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, PROP_CONSOLEBUFFERSIZE, NSString *)

inline NSString *NetI2pUtilLogManager_get_PROP_DISPLAYONSCREENLEVEL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_PROP_DISPLAYONSCREENLEVEL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, PROP_DISPLAYONSCREENLEVEL, NSString *)

inline NSString *NetI2pUtilLogManager_get_PROP_DEFAULTLEVEL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_PROP_DEFAULTLEVEL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, PROP_DEFAULTLEVEL, NSString *)

inline NSString *NetI2pUtilLogManager_get_PROP_RECORD_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_PROP_RECORD_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, PROP_RECORD_PREFIX, NSString *)

inline NSString *NetI2pUtilLogManager_get_DEFAULT_FORMAT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_DEFAULT_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, DEFAULT_FORMAT, NSString *)

inline NSString *NetI2pUtilLogManager_get_DEFAULT_DATEFORMAT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_DEFAULT_DATEFORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, DEFAULT_DATEFORMAT, NSString *)

inline NSString *NetI2pUtilLogManager_get_DEFAULT_FILENAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_DEFAULT_FILENAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, DEFAULT_FILENAME, NSString *)

inline NSString *NetI2pUtilLogManager_get_DEFAULT_FILESIZE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_DEFAULT_FILESIZE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, DEFAULT_FILESIZE, NSString *)

inline jboolean NetI2pUtilLogManager_get_DEFAULT_DISPLAYONSCREEN(void);
#define NetI2pUtilLogManager_DEFAULT_DISPLAYONSCREEN true
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pUtilLogManager, DEFAULT_DISPLAYONSCREEN, jboolean)

inline jint NetI2pUtilLogManager_get_DEFAULT_CONSOLEBUFFERSIZE(void);
#define NetI2pUtilLogManager_DEFAULT_CONSOLEBUFFERSIZE 20
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pUtilLogManager, DEFAULT_CONSOLEBUFFERSIZE, jint)

inline NSString *NetI2pUtilLogManager_get_DEFAULT_ROTATIONLIMIT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_DEFAULT_ROTATIONLIMIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, DEFAULT_ROTATIONLIMIT, NSString *)

inline NSString *NetI2pUtilLogManager_get_DEFAULT_DEFAULTLEVEL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_DEFAULT_DEFAULTLEVEL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, DEFAULT_DEFAULTLEVEL, NSString *)

inline NSString *NetI2pUtilLogManager_get_DEFAULT_ONSCREENLEVEL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilLogManager_DEFAULT_ONSCREENLEVEL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilLogManager, DEFAULT_ONSCREENLEVEL, NSString *)

FOUNDATION_EXPORT void NetI2pUtilLogManager_initWithNetI2pI2PAppContext_(NetI2pUtilLogManager *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pUtilLogManager *new_NetI2pUtilLogManager_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilLogManager *create_NetI2pUtilLogManager_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

FOUNDATION_EXPORT jint NetI2pUtilLogManager_getFileSizeWithNSString_(NSString *size);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilLogManager)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilLogManager")
