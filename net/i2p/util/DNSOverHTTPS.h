//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/DNSOverHTTPS.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilDNSOverHTTPS")
#ifdef RESTRICT_NetI2pUtilDNSOverHTTPS
#define INCLUDE_ALL_NetI2pUtilDNSOverHTTPS 0
#else
#define INCLUDE_ALL_NetI2pUtilDNSOverHTTPS 1
#endif
#undef RESTRICT_NetI2pUtilDNSOverHTTPS

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilDNSOverHTTPS_) && (INCLUDE_ALL_NetI2pUtilDNSOverHTTPS || defined(INCLUDE_NetI2pUtilDNSOverHTTPS))
#define NetI2pUtilDNSOverHTTPS_

#define RESTRICT_NetI2pUtilEepGet 1
#define INCLUDE_NetI2pUtilEepGet_StatusListener 1
#include "net/i2p/util/EepGet.h"

@class IOSObjectArray;
@class JavaLangException;
@class NetI2pI2PAppContext;
@class NetI2pUtilDNSOverHTTPS_Type;
@class NetI2pUtilSSLEepGet_SSLState;

@interface NetI2pUtilDNSOverHTTPS : NSObject < NetI2pUtilEepGet_StatusListener >

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context
                     withNetI2pUtilSSLEepGet_SSLState:(NetI2pUtilSSLEepGet_SSLState *)sslState;

- (void)attemptFailedWithNSString:(NSString *)url
                         withLong:(jlong)bytesTransferred
                         withLong:(jlong)bytesRemaining
                          withInt:(jint)currentAttempt
                          withInt:(jint)numRetries
            withJavaLangException:(JavaLangException *)cause;

- (void)attemptingWithNSString:(NSString *)url;

- (void)bytesTransferredWithLong:(jlong)alreadyTransferred
                         withInt:(jint)currentWrite
                        withLong:(jlong)bytesTransferred
                        withLong:(jlong)bytesRemaining
                    withNSString:(NSString *)url;

+ (void)clearCaches;

- (void)headerReceivedWithNSString:(NSString *)url
                           withInt:(jint)attemptNum
                      withNSString:(NSString *)key
                      withNSString:(NSString *)val;

- (NSString *)lookupWithNSString:(NSString *)host;

- (NSString *)lookupWithNSString:(NSString *)host
 withNetI2pUtilDNSOverHTTPS_Type:(NetI2pUtilDNSOverHTTPS_Type *)type;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (void)transferCompleteWithLong:(jlong)alreadyTransferred
                        withLong:(jlong)bytesTransferred
                        withLong:(jlong)bytesRemaining
                    withNSString:(NSString *)url
                    withNSString:(NSString *)outputFile
                     withBoolean:(jboolean)notModified;

- (void)transferFailedWithNSString:(NSString *)url
                          withLong:(jlong)bytesTransferred
                          withLong:(jlong)bytesRemaining
                           withInt:(jint)currentAttempt;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pUtilDNSOverHTTPS)

FOUNDATION_EXPORT void NetI2pUtilDNSOverHTTPS_initWithNetI2pI2PAppContext_(NetI2pUtilDNSOverHTTPS *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pUtilDNSOverHTTPS *new_NetI2pUtilDNSOverHTTPS_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilDNSOverHTTPS *create_NetI2pUtilDNSOverHTTPS_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

FOUNDATION_EXPORT void NetI2pUtilDNSOverHTTPS_initWithNetI2pI2PAppContext_withNetI2pUtilSSLEepGet_SSLState_(NetI2pUtilDNSOverHTTPS *self, NetI2pI2PAppContext *context, NetI2pUtilSSLEepGet_SSLState *sslState);

FOUNDATION_EXPORT NetI2pUtilDNSOverHTTPS *new_NetI2pUtilDNSOverHTTPS_initWithNetI2pI2PAppContext_withNetI2pUtilSSLEepGet_SSLState_(NetI2pI2PAppContext *context, NetI2pUtilSSLEepGet_SSLState *sslState) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilDNSOverHTTPS *create_NetI2pUtilDNSOverHTTPS_initWithNetI2pI2PAppContext_withNetI2pUtilSSLEepGet_SSLState_(NetI2pI2PAppContext *context, NetI2pUtilSSLEepGet_SSLState *sslState);

FOUNDATION_EXPORT void NetI2pUtilDNSOverHTTPS_clearCaches(void);

FOUNDATION_EXPORT void NetI2pUtilDNSOverHTTPS_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilDNSOverHTTPS)

#endif

#if !defined (NetI2pUtilDNSOverHTTPS_Type_) && (INCLUDE_ALL_NetI2pUtilDNSOverHTTPS || defined(INCLUDE_NetI2pUtilDNSOverHTTPS_Type))
#define NetI2pUtilDNSOverHTTPS_Type_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pUtilDNSOverHTTPS_Type_Enum) {
  NetI2pUtilDNSOverHTTPS_Type_Enum_V4_ONLY = 0,
  NetI2pUtilDNSOverHTTPS_Type_Enum_V6_ONLY = 1,
  NetI2pUtilDNSOverHTTPS_Type_Enum_V4_PREFERRED = 2,
  NetI2pUtilDNSOverHTTPS_Type_Enum_V6_PREFERRED = 3,
};

@interface NetI2pUtilDNSOverHTTPS_Type : JavaLangEnum

@property (readonly, class, nonnull) NetI2pUtilDNSOverHTTPS_Type *V4_ONLY NS_SWIFT_NAME(V4_ONLY);
@property (readonly, class, nonnull) NetI2pUtilDNSOverHTTPS_Type *V6_ONLY NS_SWIFT_NAME(V6_ONLY);
@property (readonly, class, nonnull) NetI2pUtilDNSOverHTTPS_Type *V4_PREFERRED NS_SWIFT_NAME(V4_PREFERRED);
@property (readonly, class, nonnull) NetI2pUtilDNSOverHTTPS_Type *V6_PREFERRED NS_SWIFT_NAME(V6_PREFERRED);
+ (NetI2pUtilDNSOverHTTPS_Type * __nonnull)V4_ONLY;

+ (NetI2pUtilDNSOverHTTPS_Type * __nonnull)V6_ONLY;

+ (NetI2pUtilDNSOverHTTPS_Type * __nonnull)V4_PREFERRED;

+ (NetI2pUtilDNSOverHTTPS_Type * __nonnull)V6_PREFERRED;

#pragma mark Public

+ (NetI2pUtilDNSOverHTTPS_Type *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pUtilDNSOverHTTPS_Type_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pUtilDNSOverHTTPS_Type)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pUtilDNSOverHTTPS_Type *NetI2pUtilDNSOverHTTPS_Type_values_[];

inline NetI2pUtilDNSOverHTTPS_Type *NetI2pUtilDNSOverHTTPS_Type_get_V4_ONLY(void);
J2OBJC_ENUM_CONSTANT(NetI2pUtilDNSOverHTTPS_Type, V4_ONLY)

inline NetI2pUtilDNSOverHTTPS_Type *NetI2pUtilDNSOverHTTPS_Type_get_V6_ONLY(void);
J2OBJC_ENUM_CONSTANT(NetI2pUtilDNSOverHTTPS_Type, V6_ONLY)

inline NetI2pUtilDNSOverHTTPS_Type *NetI2pUtilDNSOverHTTPS_Type_get_V4_PREFERRED(void);
J2OBJC_ENUM_CONSTANT(NetI2pUtilDNSOverHTTPS_Type, V4_PREFERRED)

inline NetI2pUtilDNSOverHTTPS_Type *NetI2pUtilDNSOverHTTPS_Type_get_V6_PREFERRED(void);
J2OBJC_ENUM_CONSTANT(NetI2pUtilDNSOverHTTPS_Type, V6_PREFERRED)

FOUNDATION_EXPORT IOSObjectArray *NetI2pUtilDNSOverHTTPS_Type_values(void);

FOUNDATION_EXPORT NetI2pUtilDNSOverHTTPS_Type *NetI2pUtilDNSOverHTTPS_Type_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pUtilDNSOverHTTPS_Type *NetI2pUtilDNSOverHTTPS_Type_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilDNSOverHTTPS_Type)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilDNSOverHTTPS")
