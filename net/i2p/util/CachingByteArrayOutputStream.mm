//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/CachingByteArrayOutputStream.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "net/i2p/data/ByteArray.h"
#include "net/i2p/util/ByteCache.h"
#include "net/i2p/util/CachingByteArrayOutputStream.h"

@interface NetI2pUtilCachingByteArrayOutputStream () {
 @public
  NetI2pUtilByteCache *_cache_;
  NetI2pDataByteArray *_buf_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pUtilCachingByteArrayOutputStream, _cache_, NetI2pUtilByteCache *)
J2OBJC_FIELD_SETTER(NetI2pUtilCachingByteArrayOutputStream, _buf_, NetI2pDataByteArray *)

__attribute__((unused)) static IOSObjectArray *NetI2pUtilCachingByteArrayOutputStream__Annotations$0(void);

@implementation NetI2pUtilCachingByteArrayOutputStream

- (instancetype)initWithInt:(jint)cacheQuantity
                    withInt:(jint)arraySize {
  NetI2pUtilCachingByteArrayOutputStream_initWithInt_withInt_(self, cacheQuantity, arraySize);
  return self;
}

- (void)releaseBuffer {
  [((NetI2pUtilByteCache *) nil_chk(_cache_)) release__WithId:_buf_];
}

- (void)dealloc {
  RELEASE_(_cache_);
  RELEASE_(_buf_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:);
  methods[1].selector = @selector(releaseBuffer);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_cache_", "LNetI2pUtilByteCache;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_buf_", "LNetI2pDataByteArray;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II", (void *)&NetI2pUtilCachingByteArrayOutputStream__Annotations$0 };
  static const J2ObjcClassInfo _NetI2pUtilCachingByteArrayOutputStream = { "CachingByteArrayOutputStream", "net.i2p.util", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, -1, -1, -1, 1 };
  return &_NetI2pUtilCachingByteArrayOutputStream;
}

@end

void NetI2pUtilCachingByteArrayOutputStream_initWithInt_withInt_(NetI2pUtilCachingByteArrayOutputStream *self, jint cacheQuantity, jint arraySize) {
  JavaIoByteArrayOutputStream_initWithInt_(self, 0);
  JreStrongAssign(&self->_cache_, NetI2pUtilByteCache_getInstanceWithInt_withInt_(cacheQuantity, arraySize));
  JreStrongAssign(&self->_buf_, [((NetI2pUtilByteCache *) nil_chk(self->_cache_)) acquire]);
  JreStrongAssign(&self->buf_, [((NetI2pDataByteArray *) nil_chk(self->_buf_)) getData]);
}

NetI2pUtilCachingByteArrayOutputStream *new_NetI2pUtilCachingByteArrayOutputStream_initWithInt_withInt_(jint cacheQuantity, jint arraySize) {
  J2OBJC_NEW_IMPL(NetI2pUtilCachingByteArrayOutputStream, initWithInt_withInt_, cacheQuantity, arraySize)
}

NetI2pUtilCachingByteArrayOutputStream *create_NetI2pUtilCachingByteArrayOutputStream_initWithInt_withInt_(jint cacheQuantity, jint arraySize) {
  J2OBJC_CREATE_IMPL(NetI2pUtilCachingByteArrayOutputStream, initWithInt_withInt_, cacheQuantity, arraySize)
}

IOSObjectArray *NetI2pUtilCachingByteArrayOutputStream__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pUtilCachingByteArrayOutputStream)
