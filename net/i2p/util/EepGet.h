//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/EepGet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilEepGet")
#ifdef RESTRICT_NetI2pUtilEepGet
#define INCLUDE_ALL_NetI2pUtilEepGet 0
#else
#define INCLUDE_ALL_NetI2pUtilEepGet 1
#endif
#undef RESTRICT_NetI2pUtilEepGet
#ifdef INCLUDE_NetI2pUtilEepGet_CLIStatusListener
#define INCLUDE_NetI2pUtilEepGet_StatusListener 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilEepGet_) && (INCLUDE_ALL_NetI2pUtilEepGet || defined(INCLUDE_NetI2pUtilEepGet))
#define NetI2pUtilEepGet_

@class IOSObjectArray;
@class JavaIoIOException;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaNetSocket;
@class NetI2pI2PAppContext;
@class NetI2pUtilEepGet_AuthState;
@class NetI2pUtilLog;
@class NetI2pUtilSocketTimeout;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol NetI2pUtilEepGet_StatusListener;

@interface NetI2pUtilEepGet : NSObject {
 @public
  NetI2pI2PAppContext *_context_;
  NetI2pUtilLog *_log_;
  jboolean _shouldProxy_;
  NSString *_proxyHost_;
  jint _proxyPort_;
  jint _numRetries_;
  NSString *_outputFile_;
  JavaIoOutputStream *_outputStream_;
  NSString *_url_;
  NSString *_actualURL_;
  id<JavaUtilList> _listeners_;
  id<JavaUtilList> _extraHeaders_;
  jboolean _keepFetching_;
  JavaNetSocket *_proxy_;
  JavaIoOutputStream *_proxyOut_;
  JavaIoInputStream *_proxyIn_;
  JavaIoOutputStream *_out_;
  jlong _alreadyTransferred_;
  jlong _bytesTransferred_;
  jlong _bytesRemaining_;
  jint _currentAttempt_;
  jint _responseCode_;
  NSString *_responseText_;
  jboolean _shouldWriteErrorToOutput_;
  NSString *_etag_;
  NSString *_lastModified_;
  NSString *_etagOrig_;
  NSString *_lastModifiedOrig_;
  jboolean _encodingChunked_;
  jboolean _notModified_;
  NSString *_contentType_;
  jboolean _transferFailed_;
  jboolean _aborted_;
  jint _fetchHeaderTimeout_;
  jint _fetchInactivityTimeout_;
  jint _redirects_;
  NSString *_redirectLocation_;
  jboolean _isGzippedResponse_;
  JavaIoIOException *_decompressException_;
  NetI2pUtilEepGet_AuthState *_authState_;
}
@property (readonly, copy, class) NSString *USER_AGENT NS_SWIFT_NAME(USER_AGENT);
@property (readonly, class) jint CONNECT_TIMEOUT NS_SWIFT_NAME(CONNECT_TIMEOUT);
@property (readonly, class) jint INACTIVITY_TIMEOUT NS_SWIFT_NAME(INACTIVITY_TIMEOUT);
@property (readonly, class) jint MAX_COMPLETE_FAILS NS_SWIFT_NAME(MAX_COMPLETE_FAILS);

+ (NSString *)USER_AGENT;

+ (jint)CONNECT_TIMEOUT;

+ (jint)INACTIVITY_TIMEOUT;

+ (jint)MAX_COMPLETE_FAILS;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                          withBoolean:(jboolean)shouldProxy
                                         withNSString:(NSString *)proxyHost
                                              withInt:(jint)proxyPort
                                              withInt:(jint)numRetries
                                             withLong:(jlong)minSize
                                             withLong:(jlong)maxSize
                                         withNSString:(NSString *)outputFile
                               withJavaIoOutputStream:(JavaIoOutputStream *)outputStream
                                         withNSString:(NSString *)url
                                          withBoolean:(jboolean)allowCaching
                                         withNSString:(NSString *)etag
                                         withNSString:(NSString *)postData;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                          withBoolean:(jboolean)shouldProxy
                                         withNSString:(NSString *)proxyHost
                                              withInt:(jint)proxyPort
                                              withInt:(jint)numRetries
                                             withLong:(jlong)minSize
                                             withLong:(jlong)maxSize
                                         withNSString:(NSString *)outputFile
                               withJavaIoOutputStream:(JavaIoOutputStream *)outputStream
                                         withNSString:(NSString *)url
                                          withBoolean:(jboolean)allowCaching
                                         withNSString:(NSString *)etag
                                         withNSString:(NSString *)lastModified
                                         withNSString:(NSString *)postData;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                          withBoolean:(jboolean)shouldProxy
                                         withNSString:(NSString *)proxyHost
                                              withInt:(jint)proxyPort
                                              withInt:(jint)numRetries
                                         withNSString:(NSString *)outputFile
                                         withNSString:(NSString *)url;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                          withBoolean:(jboolean)shouldProxy
                                         withNSString:(NSString *)proxyHost
                                              withInt:(jint)proxyPort
                                              withInt:(jint)numRetries
                                         withNSString:(NSString *)outputFile
                                         withNSString:(NSString *)url
                                          withBoolean:(jboolean)allowCaching
                                         withNSString:(NSString *)etag;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                          withBoolean:(jboolean)shouldProxy
                                         withNSString:(NSString *)proxyHost
                                              withInt:(jint)proxyPort
                                              withInt:(jint)numRetries
                                         withNSString:(NSString *)outputFile
                                         withNSString:(NSString *)url
                                          withBoolean:(jboolean)allowCaching
                                         withNSString:(NSString *)etag
                                         withNSString:(NSString *)lastModified;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                          withBoolean:(jboolean)shouldProxy
                                         withNSString:(NSString *)proxyHost
                                              withInt:(jint)proxyPort
                                              withInt:(jint)numRetries
                                         withNSString:(NSString *)outputFile
                                         withNSString:(NSString *)url
                                         withNSString:(NSString *)postData;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                              withInt:(jint)numRetries
                                         withNSString:(NSString *)outputFile
                                         withNSString:(NSString *)url;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                              withInt:(jint)numRetries
                                         withNSString:(NSString *)outputFile
                                         withNSString:(NSString *)url
                                          withBoolean:(jboolean)allowCaching;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                         withNSString:(NSString *)proxyHost
                                              withInt:(jint)proxyPort
                                              withInt:(jint)numRetries
                                         withNSString:(NSString *)outputFile
                                         withNSString:(NSString *)url;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                         withNSString:(NSString *)proxyHost
                                              withInt:(jint)proxyPort
                                              withInt:(jint)numRetries
                                         withNSString:(NSString *)outputFile
                                         withNSString:(NSString *)url
                                          withBoolean:(jboolean)allowCaching;

- (void)addAuthorizationWithNSString:(NSString *)userName
                        withNSString:(NSString *)password;

- (void)addHeaderWithNSString:(NSString *)name
                 withNSString:(NSString *)value;

- (void)addStatusListenerWithNetI2pUtilEepGet_StatusListener:(id<NetI2pUtilEepGet_StatusListener>)lsnr;

- (jboolean)fetch;

- (jboolean)fetchWithLong:(jlong)fetchHeaderTimeout;

- (jboolean)fetchWithLong:(jlong)fetchHeaderTimeout
                 withLong:(jlong)totalTimeout
                 withLong:(jlong)inactivityTimeout;

- (NSString *)getContentType;

- (NSString *)getETag;

- (NSString *)getLastModified;

- (jboolean)getNotModified;

- (jint)getStatusCode;

- (NSString *)getStatusText;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

+ (id<JavaUtilMap>)parseAuthArgsWithNSString:(NSString *)args;

- (void)setWriteErrorToOutput;

- (void)stopFetching;

+ (NSString *)suggestNameWithNSString:(NSString *)url;

#pragma mark Protected

- (void)doFetchWithNetI2pUtilSocketTimeout:(NetI2pUtilSocketTimeout *)timeout;

- (NSString *)getRequest;

- (jlong)readChunkLength;

- (void)readHeaders;

- (void)sendRequestWithNetI2pUtilSocketTimeout:(NetI2pUtilSocketTimeout *)timeout;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pUtilEepGet)

J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _context_, NetI2pI2PAppContext *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _proxyHost_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _outputFile_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _outputStream_, JavaIoOutputStream *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _url_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _actualURL_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _listeners_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _extraHeaders_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _proxy_, JavaNetSocket *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _proxyOut_, JavaIoOutputStream *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _proxyIn_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _out_, JavaIoOutputStream *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _responseText_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _etag_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _lastModified_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _etagOrig_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _lastModifiedOrig_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _contentType_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _redirectLocation_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _decompressException_, JavaIoIOException *)
J2OBJC_FIELD_SETTER(NetI2pUtilEepGet, _authState_, NetI2pUtilEepGet_AuthState *)

inline NSString *NetI2pUtilEepGet_get_USER_AGENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pUtilEepGet_USER_AGENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pUtilEepGet, USER_AGENT, NSString *)

inline jint NetI2pUtilEepGet_get_CONNECT_TIMEOUT(void);
#define NetI2pUtilEepGet_CONNECT_TIMEOUT 45000
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pUtilEepGet, CONNECT_TIMEOUT, jint)

inline jint NetI2pUtilEepGet_get_INACTIVITY_TIMEOUT(void);
#define NetI2pUtilEepGet_INACTIVITY_TIMEOUT 60000
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pUtilEepGet, INACTIVITY_TIMEOUT, jint)

inline jint NetI2pUtilEepGet_get_MAX_COMPLETE_FAILS(void);
#define NetI2pUtilEepGet_MAX_COMPLETE_FAILS 5
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pUtilEepGet, MAX_COMPLETE_FAILS, jint)

FOUNDATION_EXPORT void NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withNSString_withInt_withInt_withNSString_withNSString_(NetI2pUtilEepGet *self, NetI2pI2PAppContext *ctx, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url);

FOUNDATION_EXPORT NetI2pUtilEepGet *new_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withNSString_withInt_withInt_withNSString_withNSString_(NetI2pI2PAppContext *ctx, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet *create_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withNSString_withInt_withInt_withNSString_withNSString_(NetI2pI2PAppContext *ctx, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url);

FOUNDATION_EXPORT void NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withNSString_withInt_withInt_withNSString_withNSString_withBoolean_(NetI2pUtilEepGet *self, NetI2pI2PAppContext *ctx, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching);

FOUNDATION_EXPORT NetI2pUtilEepGet *new_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withNSString_withInt_withInt_withNSString_withNSString_withBoolean_(NetI2pI2PAppContext *ctx, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet *create_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withNSString_withInt_withInt_withNSString_withNSString_withBoolean_(NetI2pI2PAppContext *ctx, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching);

FOUNDATION_EXPORT void NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withInt_withNSString_withNSString_(NetI2pUtilEepGet *self, NetI2pI2PAppContext *ctx, jint numRetries, NSString *outputFile, NSString *url);

FOUNDATION_EXPORT NetI2pUtilEepGet *new_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withInt_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jint numRetries, NSString *outputFile, NSString *url) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet *create_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withInt_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jint numRetries, NSString *outputFile, NSString *url);

FOUNDATION_EXPORT void NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withInt_withNSString_withNSString_withBoolean_(NetI2pUtilEepGet *self, NetI2pI2PAppContext *ctx, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching);

FOUNDATION_EXPORT NetI2pUtilEepGet *new_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withInt_withNSString_withNSString_withBoolean_(NetI2pI2PAppContext *ctx, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet *create_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withInt_withNSString_withNSString_withBoolean_(NetI2pI2PAppContext *ctx, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching);

FOUNDATION_EXPORT void NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_(NetI2pUtilEepGet *self, NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url);

FOUNDATION_EXPORT NetI2pUtilEepGet *new_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet *create_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url);

FOUNDATION_EXPORT void NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_withNSString_(NetI2pUtilEepGet *self, NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, NSString *postData);

FOUNDATION_EXPORT NetI2pUtilEepGet *new_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, NSString *postData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet *create_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, NSString *postData);

FOUNDATION_EXPORT void NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_withBoolean_withNSString_(NetI2pUtilEepGet *self, NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching, NSString *etag);

FOUNDATION_EXPORT NetI2pUtilEepGet *new_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_withBoolean_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching, NSString *etag) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet *create_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_withBoolean_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching, NSString *etag);

FOUNDATION_EXPORT void NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_withBoolean_withNSString_withNSString_(NetI2pUtilEepGet *self, NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching, NSString *etag, NSString *lastModified);

FOUNDATION_EXPORT NetI2pUtilEepGet *new_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_withBoolean_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching, NSString *etag, NSString *lastModified) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet *create_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withNSString_withNSString_withBoolean_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, NSString *outputFile, NSString *url, jboolean allowCaching, NSString *etag, NSString *lastModified);

FOUNDATION_EXPORT void NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withLong_withLong_withNSString_withJavaIoOutputStream_withNSString_withBoolean_withNSString_withNSString_(NetI2pUtilEepGet *self, NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, jlong minSize, jlong maxSize, NSString *outputFile, JavaIoOutputStream *outputStream, NSString *url, jboolean allowCaching, NSString *etag, NSString *postData);

FOUNDATION_EXPORT NetI2pUtilEepGet *new_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withLong_withLong_withNSString_withJavaIoOutputStream_withNSString_withBoolean_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, jlong minSize, jlong maxSize, NSString *outputFile, JavaIoOutputStream *outputStream, NSString *url, jboolean allowCaching, NSString *etag, NSString *postData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet *create_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withLong_withLong_withNSString_withJavaIoOutputStream_withNSString_withBoolean_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, jlong minSize, jlong maxSize, NSString *outputFile, JavaIoOutputStream *outputStream, NSString *url, jboolean allowCaching, NSString *etag, NSString *postData);

FOUNDATION_EXPORT void NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withLong_withLong_withNSString_withJavaIoOutputStream_withNSString_withBoolean_withNSString_withNSString_withNSString_(NetI2pUtilEepGet *self, NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, jlong minSize, jlong maxSize, NSString *outputFile, JavaIoOutputStream *outputStream, NSString *url, jboolean allowCaching, NSString *etag, NSString *lastModified, NSString *postData);

FOUNDATION_EXPORT NetI2pUtilEepGet *new_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withLong_withLong_withNSString_withJavaIoOutputStream_withNSString_withBoolean_withNSString_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, jlong minSize, jlong maxSize, NSString *outputFile, JavaIoOutputStream *outputStream, NSString *url, jboolean allowCaching, NSString *etag, NSString *lastModified, NSString *postData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet *create_NetI2pUtilEepGet_initWithNetI2pI2PAppContext_withBoolean_withNSString_withInt_withInt_withLong_withLong_withNSString_withJavaIoOutputStream_withNSString_withBoolean_withNSString_withNSString_withNSString_(NetI2pI2PAppContext *ctx, jboolean shouldProxy, NSString *proxyHost, jint proxyPort, jint numRetries, jlong minSize, jlong maxSize, NSString *outputFile, JavaIoOutputStream *outputStream, NSString *url, jboolean allowCaching, NSString *etag, NSString *lastModified, NSString *postData);

FOUNDATION_EXPORT void NetI2pUtilEepGet_mainWithNSStringArray_(IOSObjectArray *args);

FOUNDATION_EXPORT NSString *NetI2pUtilEepGet_suggestNameWithNSString_(NSString *url);

FOUNDATION_EXPORT id<JavaUtilMap> NetI2pUtilEepGet_parseAuthArgsWithNSString_(NSString *args);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilEepGet)

#endif

#if !defined (NetI2pUtilEepGet_StatusListener_) && (INCLUDE_ALL_NetI2pUtilEepGet || defined(INCLUDE_NetI2pUtilEepGet_StatusListener))
#define NetI2pUtilEepGet_StatusListener_

@class JavaLangException;

@protocol NetI2pUtilEepGet_StatusListener < JavaObject >

- (void)bytesTransferredWithLong:(jlong)alreadyTransferred
                         withInt:(jint)currentWrite
                        withLong:(jlong)bytesTransferred
                        withLong:(jlong)bytesRemaining
                    withNSString:(NSString *)url;

- (void)transferCompleteWithLong:(jlong)alreadyTransferred
                        withLong:(jlong)bytesTransferred
                        withLong:(jlong)bytesRemaining
                    withNSString:(NSString *)url
                    withNSString:(NSString *)outputFile
                     withBoolean:(jboolean)notModified;

- (void)attemptFailedWithNSString:(NSString *)url
                         withLong:(jlong)bytesTransferred
                         withLong:(jlong)bytesRemaining
                          withInt:(jint)currentAttempt
                          withInt:(jint)numRetries
            withJavaLangException:(JavaLangException *)cause;

- (void)transferFailedWithNSString:(NSString *)url
                          withLong:(jlong)bytesTransferred
                          withLong:(jlong)bytesRemaining
                           withInt:(jint)currentAttempt;

- (void)headerReceivedWithNSString:(NSString *)url
                           withInt:(jint)currentAttempt
                      withNSString:(NSString *)key
                      withNSString:(NSString *)val;

- (void)attemptingWithNSString:(NSString *)url;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilEepGet_StatusListener)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilEepGet_StatusListener)

#endif

#if !defined (NetI2pUtilEepGet_CLIStatusListener_) && (INCLUDE_ALL_NetI2pUtilEepGet || defined(INCLUDE_NetI2pUtilEepGet_CLIStatusListener))
#define NetI2pUtilEepGet_CLIStatusListener_

@class JavaLangException;
@class NetI2pUtilEepGet;

@interface NetI2pUtilEepGet_CLIStatusListener : NSObject < NetI2pUtilEepGet_StatusListener >

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pUtilEepGet:(NetI2pUtilEepGet *)outer$;

- (instancetype __nonnull)initWithNetI2pUtilEepGet:(NetI2pUtilEepGet *)outer$
                                           withInt:(jint)markSize
                                           withInt:(jint)lineSize;

- (void)attemptFailedWithNSString:(NSString *)url
                         withLong:(jlong)bytesTransferred
                         withLong:(jlong)bytesRemaining
                          withInt:(jint)currentAttempt
                          withInt:(jint)numRetries
            withJavaLangException:(JavaLangException *)cause;

- (void)attemptingWithNSString:(NSString *)url;

- (void)bytesTransferredWithLong:(jlong)alreadyTransferred
                         withInt:(jint)currentWrite
                        withLong:(jlong)bytesTransferred
                        withLong:(jlong)bytesRemaining
                    withNSString:(NSString *)url;

- (void)headerReceivedWithNSString:(NSString *)url
                           withInt:(jint)currentAttempt
                      withNSString:(NSString *)key
                      withNSString:(NSString *)val;

- (void)transferCompleteWithLong:(jlong)alreadyTransferred
                        withLong:(jlong)bytesTransferred
                        withLong:(jlong)bytesRemaining
                    withNSString:(NSString *)url
                    withNSString:(NSString *)outputFile
                     withBoolean:(jboolean)notModified;

- (void)transferFailedWithNSString:(NSString *)url
                          withLong:(jlong)bytesTransferred
                          withLong:(jlong)bytesRemaining
                           withInt:(jint)currentAttempt;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilEepGet_CLIStatusListener)

FOUNDATION_EXPORT void NetI2pUtilEepGet_CLIStatusListener_initWithNetI2pUtilEepGet_(NetI2pUtilEepGet_CLIStatusListener *self, NetI2pUtilEepGet *outer$);

FOUNDATION_EXPORT NetI2pUtilEepGet_CLIStatusListener *new_NetI2pUtilEepGet_CLIStatusListener_initWithNetI2pUtilEepGet_(NetI2pUtilEepGet *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet_CLIStatusListener *create_NetI2pUtilEepGet_CLIStatusListener_initWithNetI2pUtilEepGet_(NetI2pUtilEepGet *outer$);

FOUNDATION_EXPORT void NetI2pUtilEepGet_CLIStatusListener_initWithNetI2pUtilEepGet_withInt_withInt_(NetI2pUtilEepGet_CLIStatusListener *self, NetI2pUtilEepGet *outer$, jint markSize, jint lineSize);

FOUNDATION_EXPORT NetI2pUtilEepGet_CLIStatusListener *new_NetI2pUtilEepGet_CLIStatusListener_initWithNetI2pUtilEepGet_withInt_withInt_(NetI2pUtilEepGet *outer$, jint markSize, jint lineSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet_CLIStatusListener *create_NetI2pUtilEepGet_CLIStatusListener_initWithNetI2pUtilEepGet_withInt_withInt_(NetI2pUtilEepGet *outer$, jint markSize, jint lineSize);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilEepGet_CLIStatusListener)

#endif

#if !defined (NetI2pUtilEepGet_AUTH_MODE_) && (INCLUDE_ALL_NetI2pUtilEepGet || defined(INCLUDE_NetI2pUtilEepGet_AUTH_MODE))
#define NetI2pUtilEepGet_AUTH_MODE_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pUtilEepGet_AUTH_MODE_Enum) {
  NetI2pUtilEepGet_AUTH_MODE_Enum_NONE = 0,
  NetI2pUtilEepGet_AUTH_MODE_Enum_BASIC = 1,
  NetI2pUtilEepGet_AUTH_MODE_Enum_DIGEST = 2,
  NetI2pUtilEepGet_AUTH_MODE_Enum_UNKNOWN = 3,
};

@interface NetI2pUtilEepGet_AUTH_MODE : JavaLangEnum

@property (readonly, class, nonnull) NetI2pUtilEepGet_AUTH_MODE *NONE NS_SWIFT_NAME(NONE);
@property (readonly, class, nonnull) NetI2pUtilEepGet_AUTH_MODE *BASIC NS_SWIFT_NAME(BASIC);
@property (readonly, class, nonnull) NetI2pUtilEepGet_AUTH_MODE *DIGEST NS_SWIFT_NAME(DIGEST);
@property (readonly, class, nonnull) NetI2pUtilEepGet_AUTH_MODE *UNKNOWN NS_SWIFT_NAME(UNKNOWN);
+ (NetI2pUtilEepGet_AUTH_MODE * __nonnull)NONE;

+ (NetI2pUtilEepGet_AUTH_MODE * __nonnull)BASIC;

+ (NetI2pUtilEepGet_AUTH_MODE * __nonnull)DIGEST;

+ (NetI2pUtilEepGet_AUTH_MODE * __nonnull)UNKNOWN;

#pragma mark Public

+ (NetI2pUtilEepGet_AUTH_MODE *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pUtilEepGet_AUTH_MODE_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pUtilEepGet_AUTH_MODE)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pUtilEepGet_AUTH_MODE *NetI2pUtilEepGet_AUTH_MODE_values_[];

inline NetI2pUtilEepGet_AUTH_MODE *NetI2pUtilEepGet_AUTH_MODE_get_NONE(void);
J2OBJC_ENUM_CONSTANT(NetI2pUtilEepGet_AUTH_MODE, NONE)

inline NetI2pUtilEepGet_AUTH_MODE *NetI2pUtilEepGet_AUTH_MODE_get_BASIC(void);
J2OBJC_ENUM_CONSTANT(NetI2pUtilEepGet_AUTH_MODE, BASIC)

inline NetI2pUtilEepGet_AUTH_MODE *NetI2pUtilEepGet_AUTH_MODE_get_DIGEST(void);
J2OBJC_ENUM_CONSTANT(NetI2pUtilEepGet_AUTH_MODE, DIGEST)

inline NetI2pUtilEepGet_AUTH_MODE *NetI2pUtilEepGet_AUTH_MODE_get_UNKNOWN(void);
J2OBJC_ENUM_CONSTANT(NetI2pUtilEepGet_AUTH_MODE, UNKNOWN)

FOUNDATION_EXPORT IOSObjectArray *NetI2pUtilEepGet_AUTH_MODE_values(void);

FOUNDATION_EXPORT NetI2pUtilEepGet_AUTH_MODE *NetI2pUtilEepGet_AUTH_MODE_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pUtilEepGet_AUTH_MODE *NetI2pUtilEepGet_AUTH_MODE_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilEepGet_AUTH_MODE)

#endif

#if !defined (NetI2pUtilEepGet_AuthState_) && (INCLUDE_ALL_NetI2pUtilEepGet || defined(INCLUDE_NetI2pUtilEepGet_AuthState))
#define NetI2pUtilEepGet_AuthState_

@class NetI2pUtilEepGet;
@class NetI2pUtilEepGet_AUTH_MODE;
@protocol JavaUtilMap;

@interface NetI2pUtilEepGet_AuthState : NSObject {
 @public
  NetI2pUtilEepGet_AUTH_MODE *authMode_;
  jboolean authSent_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pUtilEepGet:(NetI2pUtilEepGet *)outer$
                                      withNSString:(NSString *)user
                                      withNSString:(NSString *)pw;

- (id<JavaUtilMap>)generateAuthArgsWithNSString:(NSString *)method
                                   withNSString:(NSString *)uri;

- (NSString *)getAuthHeaderWithNSString:(NSString *)method
                           withNSString:(NSString *)uri;

- (NSString *)getPassword;

- (NSString *)getUsername;

- (void)setAuthChallengeWithNSString:(NSString *)auth;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilEepGet_AuthState)

J2OBJC_FIELD_SETTER(NetI2pUtilEepGet_AuthState, authMode_, NetI2pUtilEepGet_AUTH_MODE *)

FOUNDATION_EXPORT void NetI2pUtilEepGet_AuthState_initWithNetI2pUtilEepGet_withNSString_withNSString_(NetI2pUtilEepGet_AuthState *self, NetI2pUtilEepGet *outer$, NSString *user, NSString *pw);

FOUNDATION_EXPORT NetI2pUtilEepGet_AuthState *new_NetI2pUtilEepGet_AuthState_initWithNetI2pUtilEepGet_withNSString_withNSString_(NetI2pUtilEepGet *outer$, NSString *user, NSString *pw) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet_AuthState *create_NetI2pUtilEepGet_AuthState_initWithNetI2pUtilEepGet_withNSString_withNSString_(NetI2pUtilEepGet *outer$, NSString *user, NSString *pw);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilEepGet_AuthState)

#endif

#if !defined (NetI2pUtilEepGet_Gunzipper_) && (INCLUDE_ALL_NetI2pUtilEepGet || defined(INCLUDE_NetI2pUtilEepGet_Gunzipper))
#define NetI2pUtilEepGet_Gunzipper_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class JavaIoInputStream;
@class JavaIoOutputStream;
@class NetI2pUtilEepGet;

@interface NetI2pUtilEepGet_Gunzipper : NSObject < JavaLangRunnable >

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pUtilEepGet:(NetI2pUtilEepGet *)outer$
                             withJavaIoInputStream:(JavaIoInputStream *)inArg
                            withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

- (void)run;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilEepGet_Gunzipper)

FOUNDATION_EXPORT void NetI2pUtilEepGet_Gunzipper_initWithNetI2pUtilEepGet_withJavaIoInputStream_withJavaIoOutputStream_(NetI2pUtilEepGet_Gunzipper *self, NetI2pUtilEepGet *outer$, JavaIoInputStream *inArg, JavaIoOutputStream *outArg);

FOUNDATION_EXPORT NetI2pUtilEepGet_Gunzipper *new_NetI2pUtilEepGet_Gunzipper_initWithNetI2pUtilEepGet_withJavaIoInputStream_withJavaIoOutputStream_(NetI2pUtilEepGet *outer$, JavaIoInputStream *inArg, JavaIoOutputStream *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilEepGet_Gunzipper *create_NetI2pUtilEepGet_Gunzipper_initWithNetI2pUtilEepGet_withJavaIoInputStream_withJavaIoOutputStream_(NetI2pUtilEepGet *outer$, JavaIoInputStream *inArg, JavaIoOutputStream *outArg);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilEepGet_Gunzipper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilEepGet")
