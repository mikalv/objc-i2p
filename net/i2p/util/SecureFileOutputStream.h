//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/SecureFileOutputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilSecureFileOutputStream")
#ifdef RESTRICT_NetI2pUtilSecureFileOutputStream
#define INCLUDE_ALL_NetI2pUtilSecureFileOutputStream 0
#else
#define INCLUDE_ALL_NetI2pUtilSecureFileOutputStream 1
#endif
#undef RESTRICT_NetI2pUtilSecureFileOutputStream

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilSecureFileOutputStream_) && (INCLUDE_ALL_NetI2pUtilSecureFileOutputStream || defined(INCLUDE_NetI2pUtilSecureFileOutputStream))
#define NetI2pUtilSecureFileOutputStream_

#define RESTRICT_JavaIoFileOutputStream 1
#define INCLUDE_JavaIoFileOutputStream 1
#include "java/io/FileOutputStream.h"

@class JavaIoFile;
@class JavaIoFileDescriptor;

@interface NetI2pUtilSecureFileOutputStream : JavaIoFileOutputStream

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)file;

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)file
                                 withBoolean:(jboolean)append;

- (instancetype __nonnull)initWithNSString:(NSString *)file;

- (instancetype __nonnull)initWithNSString:(NSString *)file
                               withBoolean:(jboolean)append;

+ (void)setPermsWithJavaIoFile:(JavaIoFile *)f;

#pragma mark Package-Private

+ (jboolean)canSetPerms;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pUtilSecureFileOutputStream)

FOUNDATION_EXPORT void NetI2pUtilSecureFileOutputStream_initWithNSString_(NetI2pUtilSecureFileOutputStream *self, NSString *file);

FOUNDATION_EXPORT NetI2pUtilSecureFileOutputStream *new_NetI2pUtilSecureFileOutputStream_initWithNSString_(NSString *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSecureFileOutputStream *create_NetI2pUtilSecureFileOutputStream_initWithNSString_(NSString *file);

FOUNDATION_EXPORT void NetI2pUtilSecureFileOutputStream_initWithNSString_withBoolean_(NetI2pUtilSecureFileOutputStream *self, NSString *file, jboolean append);

FOUNDATION_EXPORT NetI2pUtilSecureFileOutputStream *new_NetI2pUtilSecureFileOutputStream_initWithNSString_withBoolean_(NSString *file, jboolean append) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSecureFileOutputStream *create_NetI2pUtilSecureFileOutputStream_initWithNSString_withBoolean_(NSString *file, jboolean append);

FOUNDATION_EXPORT void NetI2pUtilSecureFileOutputStream_initWithJavaIoFile_(NetI2pUtilSecureFileOutputStream *self, JavaIoFile *file);

FOUNDATION_EXPORT NetI2pUtilSecureFileOutputStream *new_NetI2pUtilSecureFileOutputStream_initWithJavaIoFile_(JavaIoFile *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSecureFileOutputStream *create_NetI2pUtilSecureFileOutputStream_initWithJavaIoFile_(JavaIoFile *file);

FOUNDATION_EXPORT void NetI2pUtilSecureFileOutputStream_initWithJavaIoFile_withBoolean_(NetI2pUtilSecureFileOutputStream *self, JavaIoFile *file, jboolean append);

FOUNDATION_EXPORT NetI2pUtilSecureFileOutputStream *new_NetI2pUtilSecureFileOutputStream_initWithJavaIoFile_withBoolean_(JavaIoFile *file, jboolean append) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSecureFileOutputStream *create_NetI2pUtilSecureFileOutputStream_initWithJavaIoFile_withBoolean_(JavaIoFile *file, jboolean append);

FOUNDATION_EXPORT jboolean NetI2pUtilSecureFileOutputStream_canSetPerms(void);

FOUNDATION_EXPORT void NetI2pUtilSecureFileOutputStream_setPermsWithJavaIoFile_(JavaIoFile *f);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilSecureFileOutputStream)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilSecureFileOutputStream")
