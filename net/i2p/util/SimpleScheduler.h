//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/SimpleScheduler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilSimpleScheduler")
#ifdef RESTRICT_NetI2pUtilSimpleScheduler
#define INCLUDE_ALL_NetI2pUtilSimpleScheduler 0
#else
#define INCLUDE_ALL_NetI2pUtilSimpleScheduler 1
#endif
#undef RESTRICT_NetI2pUtilSimpleScheduler

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilSimpleScheduler_) && (INCLUDE_ALL_NetI2pUtilSimpleScheduler || defined(INCLUDE_NetI2pUtilSimpleScheduler))
#define NetI2pUtilSimpleScheduler_

@class NetI2pI2PAppContext;
@protocol NetI2pUtilSimpleTimer_TimedEvent;

@interface NetI2pUtilSimpleScheduler : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (void)addEventWithNetI2pUtilSimpleTimer_TimedEvent:(id<NetI2pUtilSimpleTimer_TimedEvent>)event
                                            withLong:(jlong)timeoutMs;

- (void)addPeriodicEventWithNetI2pUtilSimpleTimer_TimedEvent:(id<NetI2pUtilSimpleTimer_TimedEvent>)event
                                                    withLong:(jlong)timeoutMs;

- (void)addPeriodicEventWithNetI2pUtilSimpleTimer_TimedEvent:(id<NetI2pUtilSimpleTimer_TimedEvent>)event
                                                    withLong:(jlong)initialDelay
                                                    withLong:(jlong)timeoutMs;

+ (NetI2pUtilSimpleScheduler *)getInstance;

- (void)stop;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pUtilSimpleScheduler)

FOUNDATION_EXPORT NetI2pUtilSimpleScheduler *NetI2pUtilSimpleScheduler_getInstance(void);

FOUNDATION_EXPORT void NetI2pUtilSimpleScheduler_initWithNetI2pI2PAppContext_(NetI2pUtilSimpleScheduler *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pUtilSimpleScheduler *new_NetI2pUtilSimpleScheduler_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilSimpleScheduler *create_NetI2pUtilSimpleScheduler_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilSimpleScheduler)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilSimpleScheduler")
