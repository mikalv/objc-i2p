//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/NativeBigInteger.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilNativeBigInteger")
#ifdef RESTRICT_NetI2pUtilNativeBigInteger
#define INCLUDE_ALL_NetI2pUtilNativeBigInteger 0
#else
#define INCLUDE_ALL_NetI2pUtilNativeBigInteger 1
#endif
#undef RESTRICT_NetI2pUtilNativeBigInteger

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilNativeBigInteger_) && (INCLUDE_ALL_NetI2pUtilNativeBigInteger || defined(INCLUDE_NetI2pUtilNativeBigInteger))
#define NetI2pUtilNativeBigInteger_

#define RESTRICT_JavaMathBigInteger 1
#define INCLUDE_JavaMathBigInteger 1
#include "java/math/BigInteger.h"

@class IOSByteArray;
@class IOSCharArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilRandom;

@interface NetI2pUtilNativeBigInteger : JavaMathBigInteger

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)integer;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)val;

- (instancetype __nonnull)initWithInt:(jint)signum
                        withByteArray:(IOSByteArray *)magnitude;

- (instancetype __nonnull)initWithInt:(jint)bitlen
                              withInt:(jint)certainty
                   withJavaUtilRandom:(JavaUtilRandom *)rnd;

- (instancetype __nonnull)initWithInt:(jint)numbits
                   withJavaUtilRandom:(JavaUtilRandom *)rnd;

- (instancetype __nonnull)initWithNSString:(NSString *)val;

- (instancetype __nonnull)initWithNSString:(NSString *)val
                                   withInt:(jint)radix;

+ (NSString *)cpuModel;

+ (NSString *)cpuType;

- (jboolean)isEqual:(id)o;

+ (jint)getJbigiVersion;

+ (NSString *)getLibGMPVersion;

+ (NSString *)getLoadedResourceName;

- (NSUInteger)hash;

+ (jboolean)isNative;

+ (NSString *)loadStatus;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (JavaMathBigInteger *)modInverseWithJavaMathBigInteger:(JavaMathBigInteger *)m;

- (JavaMathBigInteger *)modPowWithJavaMathBigInteger:(JavaMathBigInteger *)exponent
                              withJavaMathBigInteger:(JavaMathBigInteger *)m;

- (JavaMathBigInteger *)modPowCTWithJavaMathBigInteger:(JavaMathBigInteger *)exponent
                                withJavaMathBigInteger:(JavaMathBigInteger *)m;

- (IOSByteArray *)toByteArray;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)arg0
                                    withInt:(jint)arg1
                                    withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIntArray:(IOSIntArray *)arg0
                                   withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pUtilNativeBigInteger)

FOUNDATION_EXPORT jint NetI2pUtilNativeBigInteger_getJbigiVersion(void);

FOUNDATION_EXPORT NSString *NetI2pUtilNativeBigInteger_getLibGMPVersion(void);

FOUNDATION_EXPORT void NetI2pUtilNativeBigInteger_initWithByteArray_(NetI2pUtilNativeBigInteger *self, IOSByteArray *val);

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *new_NetI2pUtilNativeBigInteger_initWithByteArray_(IOSByteArray *val) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *create_NetI2pUtilNativeBigInteger_initWithByteArray_(IOSByteArray *val);

FOUNDATION_EXPORT void NetI2pUtilNativeBigInteger_initWithInt_withByteArray_(NetI2pUtilNativeBigInteger *self, jint signum, IOSByteArray *magnitude);

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *new_NetI2pUtilNativeBigInteger_initWithInt_withByteArray_(jint signum, IOSByteArray *magnitude) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *create_NetI2pUtilNativeBigInteger_initWithInt_withByteArray_(jint signum, IOSByteArray *magnitude);

FOUNDATION_EXPORT void NetI2pUtilNativeBigInteger_initWithInt_withInt_withJavaUtilRandom_(NetI2pUtilNativeBigInteger *self, jint bitlen, jint certainty, JavaUtilRandom *rnd);

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *new_NetI2pUtilNativeBigInteger_initWithInt_withInt_withJavaUtilRandom_(jint bitlen, jint certainty, JavaUtilRandom *rnd) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *create_NetI2pUtilNativeBigInteger_initWithInt_withInt_withJavaUtilRandom_(jint bitlen, jint certainty, JavaUtilRandom *rnd);

FOUNDATION_EXPORT void NetI2pUtilNativeBigInteger_initWithInt_withJavaUtilRandom_(NetI2pUtilNativeBigInteger *self, jint numbits, JavaUtilRandom *rnd);

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *new_NetI2pUtilNativeBigInteger_initWithInt_withJavaUtilRandom_(jint numbits, JavaUtilRandom *rnd) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *create_NetI2pUtilNativeBigInteger_initWithInt_withJavaUtilRandom_(jint numbits, JavaUtilRandom *rnd);

FOUNDATION_EXPORT void NetI2pUtilNativeBigInteger_initWithNSString_(NetI2pUtilNativeBigInteger *self, NSString *val);

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *new_NetI2pUtilNativeBigInteger_initWithNSString_(NSString *val) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *create_NetI2pUtilNativeBigInteger_initWithNSString_(NSString *val);

FOUNDATION_EXPORT void NetI2pUtilNativeBigInteger_initWithNSString_withInt_(NetI2pUtilNativeBigInteger *self, NSString *val, jint radix);

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *new_NetI2pUtilNativeBigInteger_initWithNSString_withInt_(NSString *val, jint radix) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *create_NetI2pUtilNativeBigInteger_initWithNSString_withInt_(NSString *val, jint radix);

FOUNDATION_EXPORT void NetI2pUtilNativeBigInteger_initWithJavaMathBigInteger_(NetI2pUtilNativeBigInteger *self, JavaMathBigInteger *integer);

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *new_NetI2pUtilNativeBigInteger_initWithJavaMathBigInteger_(JavaMathBigInteger *integer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pUtilNativeBigInteger *create_NetI2pUtilNativeBigInteger_initWithJavaMathBigInteger_(JavaMathBigInteger *integer);

FOUNDATION_EXPORT jboolean NetI2pUtilNativeBigInteger_isNative(void);

FOUNDATION_EXPORT NSString *NetI2pUtilNativeBigInteger_loadStatus(void);

FOUNDATION_EXPORT NSString *NetI2pUtilNativeBigInteger_getLoadedResourceName(void);

FOUNDATION_EXPORT NSString *NetI2pUtilNativeBigInteger_cpuType(void);

FOUNDATION_EXPORT NSString *NetI2pUtilNativeBigInteger_cpuModel(void);

FOUNDATION_EXPORT void NetI2pUtilNativeBigInteger_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilNativeBigInteger)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilNativeBigInteger")
