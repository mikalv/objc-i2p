//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/util/ByteCache.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pUtilByteCache")
#ifdef RESTRICT_NetI2pUtilByteCache
#define INCLUDE_ALL_NetI2pUtilByteCache 0
#else
#define INCLUDE_ALL_NetI2pUtilByteCache 1
#endif
#undef RESTRICT_NetI2pUtilByteCache

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pUtilByteCache_) && (INCLUDE_ALL_NetI2pUtilByteCache || defined(INCLUDE_NetI2pUtilByteCache))
#define NetI2pUtilByteCache_

#define RESTRICT_NetI2pUtilTryCache 1
#define INCLUDE_NetI2pUtilTryCache 1
#include "net/i2p/util/TryCache.h"

@class NetI2pDataByteArray;
@protocol NetI2pUtilTryCache_ObjectFactory;

@interface NetI2pUtilByteCache : NetI2pUtilTryCache

#pragma mark Public

- (NetI2pDataByteArray *)acquire;

+ (void)clearAll;

+ (NetI2pUtilByteCache *)getInstanceWithInt:(jint)cacheSize
                                    withInt:(jint)size;

- (void)release__WithId:(NetI2pDataByteArray *)entry_;

- (void)release__WithNetI2pDataByteArray:(NetI2pDataByteArray *)entry_
                             withBoolean:(jboolean)shouldZero;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pUtilTryCache_ObjectFactory:(id<NetI2pUtilTryCache_ObjectFactory>)arg0
                                                           withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pUtilByteCache)

FOUNDATION_EXPORT NetI2pUtilByteCache *NetI2pUtilByteCache_getInstanceWithInt_withInt_(jint cacheSize, jint size);

FOUNDATION_EXPORT void NetI2pUtilByteCache_clearAll(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pUtilByteCache)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pUtilByteCache")
