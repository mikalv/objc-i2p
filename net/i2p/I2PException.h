//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/I2PException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pI2PException")
#ifdef RESTRICT_NetI2pI2PException
#define INCLUDE_ALL_NetI2pI2PException 0
#else
#define INCLUDE_ALL_NetI2pI2PException 1
#endif
#undef RESTRICT_NetI2pI2PException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pI2PException_) && (INCLUDE_ALL_NetI2pI2PException || defined(INCLUDE_NetI2pI2PException))
#define NetI2pI2PException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class JavaLangThrowable;

@interface NetI2pI2PException : JavaLangException

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)msg;

- (instancetype __nonnull)initWithNSString:(NSString *)msg
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pI2PException)

FOUNDATION_EXPORT void NetI2pI2PException_init(NetI2pI2PException *self);

FOUNDATION_EXPORT NetI2pI2PException *new_NetI2pI2PException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pI2PException *create_NetI2pI2PException_init(void);

FOUNDATION_EXPORT void NetI2pI2PException_initWithNSString_(NetI2pI2PException *self, NSString *msg);

FOUNDATION_EXPORT NetI2pI2PException *new_NetI2pI2PException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pI2PException *create_NetI2pI2PException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void NetI2pI2PException_initWithNSString_withJavaLangThrowable_(NetI2pI2PException *self, NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT NetI2pI2PException *new_NetI2pI2PException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pI2PException *create_NetI2pI2PException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT void NetI2pI2PException_initWithJavaLangThrowable_(NetI2pI2PException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT NetI2pI2PException *new_NetI2pI2PException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pI2PException *create_NetI2pI2PException_initWithJavaLangThrowable_(JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pI2PException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pI2PException")
