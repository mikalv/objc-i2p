//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/time/BuildTime.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/net/URL.h"
#include "java/text/ParseException.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"
#include "java/util/jar/Attributes.h"
#include "java/util/jar/Manifest.h"
#include "net/i2p/I2PAppContext.h"
#include "net/i2p/time/BuildTime.h"
#include "net/i2p/util/Clock.h"
#include "net/i2p/util/SystemVersion.h"

@interface NetI2pTimeBuildTime ()

- (instancetype)init;

+ (jlong)getBuildTimeWithJavaTextSimpleDateFormat:(JavaTextSimpleDateFormat *)fmt
                                     withNSString:(NSString *)jar;

+ (JavaUtilJarAttributes *)attributesWithJavaIoFile:(JavaIoFile *)f;

@end

inline jlong NetI2pTimeBuildTime_get__buildTime(void);
static jlong NetI2pTimeBuildTime__buildTime;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(NetI2pTimeBuildTime, _buildTime, jlong)

inline jlong NetI2pTimeBuildTime_get__earliestTime(void);
static jlong NetI2pTimeBuildTime__earliestTime;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(NetI2pTimeBuildTime, _earliestTime, jlong)

inline jlong NetI2pTimeBuildTime_get__latestTime(void);
static jlong NetI2pTimeBuildTime__latestTime;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(NetI2pTimeBuildTime, _latestTime, jlong)

inline jlong NetI2pTimeBuildTime_get_YEARS_25(void);
#define NetI2pTimeBuildTime_YEARS_25 788400000000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pTimeBuildTime, YEARS_25, jlong)

inline NSString *NetI2pTimeBuildTime_get_EARLIEST(void);
static NSString *NetI2pTimeBuildTime_EARLIEST = @"2018-09-28 12:00:00 UTC";
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pTimeBuildTime, EARLIEST, NSString *)

inline jlong NetI2pTimeBuildTime_get_EARLIEST_LONG(void);
#define NetI2pTimeBuildTime_EARLIEST_LONG 1538107200000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pTimeBuildTime, EARLIEST_LONG, jlong)

__attribute__((unused)) static void NetI2pTimeBuildTime_init(NetI2pTimeBuildTime *self);

__attribute__((unused)) static NetI2pTimeBuildTime *new_NetI2pTimeBuildTime_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetI2pTimeBuildTime *create_NetI2pTimeBuildTime_init(void);

__attribute__((unused)) static jlong NetI2pTimeBuildTime_getBuildTimeWithJavaTextSimpleDateFormat_withNSString_(JavaTextSimpleDateFormat *fmt, NSString *jar);

__attribute__((unused)) static JavaUtilJarAttributes *NetI2pTimeBuildTime_attributesWithJavaIoFile_(JavaIoFile *f);

J2OBJC_INITIALIZED_DEFN(NetI2pTimeBuildTime)

@implementation NetI2pTimeBuildTime

+ (jlong)getBuildTime {
  return NetI2pTimeBuildTime_getBuildTime();
}

+ (jlong)getEarliestTime {
  return NetI2pTimeBuildTime_getEarliestTime();
}

+ (jlong)getLatestTime {
  return NetI2pTimeBuildTime_getLatestTime();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pTimeBuildTime_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jlong)getBuildTimeWithJavaTextSimpleDateFormat:(JavaTextSimpleDateFormat *)fmt
                                     withNSString:(NSString *)jar {
  return NetI2pTimeBuildTime_getBuildTimeWithJavaTextSimpleDateFormat_withNSString_(fmt, jar);
}

+ (JavaUtilJarAttributes *)attributesWithJavaIoFile:(JavaIoFile *)f {
  return NetI2pTimeBuildTime_attributesWithJavaIoFile_(f);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  NetI2pTimeBuildTime_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "J", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilJarAttributes;", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getBuildTime);
  methods[1].selector = @selector(getEarliestTime);
  methods[2].selector = @selector(getLatestTime);
  methods[3].selector = @selector(init);
  methods[4].selector = @selector(getBuildTimeWithJavaTextSimpleDateFormat:withNSString:);
  methods[5].selector = @selector(attributesWithJavaIoFile:);
  methods[6].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_buildTime", "J", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "_earliestTime", "J", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "_latestTime", "J", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "YEARS_25", "J", .constantValue.asLong = NetI2pTimeBuildTime_YEARS_25, 0x1a, -1, -1, -1, -1 },
    { "EARLIEST", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "EARLIEST_LONG", "J", .constantValue.asLong = NetI2pTimeBuildTime_EARLIEST_LONG, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getBuildTime", "LJavaTextSimpleDateFormat;LNSString;", "attributes", "LJavaIoFile;", "main", "[LNSString;", &NetI2pTimeBuildTime__buildTime, &NetI2pTimeBuildTime__earliestTime, &NetI2pTimeBuildTime__latestTime, &NetI2pTimeBuildTime_EARLIEST };
  static const J2ObjcClassInfo _NetI2pTimeBuildTime = { "BuildTime", "net.i2p.time", ptrTable, methods, fields, 7, 0x1, 7, 6, -1, -1, -1, -1, -1 };
  return &_NetI2pTimeBuildTime;
}

+ (void)initialize {
  if (self == [NetI2pTimeBuildTime class]) {
    {
      JavaTextSimpleDateFormat *fmt = create_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(@"yyyy-MM-dd HH:mm:ss z", JreLoadStatic(JavaUtilLocale, US));
      JavaUtilTimeZone *utc = JavaUtilTimeZone_getTimeZoneWithNSString_(@"GMT");
      [fmt setTimeZoneWithJavaUtilTimeZone:utc];
      jlong min;
      @try {
        JavaUtilDate *date = [fmt parseWithNSString:NetI2pTimeBuildTime_EARLIEST];
        if (date == nil) min = NetI2pTimeBuildTime_EARLIEST_LONG;
        else min = [date getTime];
      }
      @catch (JavaTextParseException *pe) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"BuildTime FAIL"];
        min = NetI2pTimeBuildTime_EARLIEST_LONG;
      }
      jlong max = min + NetI2pTimeBuildTime_YEARS_25;
      jlong build = NetI2pTimeBuildTime_getBuildTimeWithJavaTextSimpleDateFormat_withNSString_(fmt, @"i2p.jar");
      if (build > max) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Warning: Strange build time, contact packager: ", create_JavaUtilDate_initWithLong_(build))];
        build = max;
      }
      else if (build < min) {
        if (build > 0) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Warning: Strange build time, contact packager: ", create_JavaUtilDate_initWithLong_(build))];
        build = min;
      }
      else {
        min = build - 24 * 60 * 60 * 1000LL;
      }
      NetI2pTimeBuildTime__earliestTime = min;
      NetI2pTimeBuildTime__latestTime = max;
      NetI2pTimeBuildTime__buildTime = build;
    }
    J2OBJC_SET_INITIALIZED(NetI2pTimeBuildTime)
  }
}

@end

jlong NetI2pTimeBuildTime_getBuildTime() {
  NetI2pTimeBuildTime_initialize();
  return NetI2pTimeBuildTime__buildTime;
}

jlong NetI2pTimeBuildTime_getEarliestTime() {
  NetI2pTimeBuildTime_initialize();
  return NetI2pTimeBuildTime__earliestTime;
}

jlong NetI2pTimeBuildTime_getLatestTime() {
  NetI2pTimeBuildTime_initialize();
  return NetI2pTimeBuildTime__latestTime;
}

void NetI2pTimeBuildTime_init(NetI2pTimeBuildTime *self) {
  NSObject_init(self);
}

NetI2pTimeBuildTime *new_NetI2pTimeBuildTime_init() {
  J2OBJC_NEW_IMPL(NetI2pTimeBuildTime, init)
}

NetI2pTimeBuildTime *create_NetI2pTimeBuildTime_init() {
  J2OBJC_CREATE_IMPL(NetI2pTimeBuildTime, init)
}

jlong NetI2pTimeBuildTime_getBuildTimeWithJavaTextSimpleDateFormat_withNSString_(JavaTextSimpleDateFormat *fmt, NSString *jar) {
  NetI2pTimeBuildTime_initialize();
  if (NetI2pUtilSystemVersion_isAndroid()) return 0;
  JavaIoFile *f = create_JavaIoFile_initWithJavaIoFile_withNSString_([((NetI2pI2PAppContext *) nil_chk(NetI2pI2PAppContext_getGlobalContext())) getBaseDir], @"lib");
  f = create_JavaIoFile_initWithJavaIoFile_withNSString_(f, jar);
  JavaUtilJarAttributes *atts = NetI2pTimeBuildTime_attributesWithJavaIoFile_(f);
  if (atts == nil) return 0;
  NSString *s = [atts getValueWithNSString:@"Build-Date"];
  if (s == nil) return 0;
  @try {
    JavaUtilDate *date = [((JavaTextSimpleDateFormat *) nil_chk(fmt)) parseWithNSString:s];
    if (date != nil) {
      return [date getTime];
    }
  }
  @catch (JavaTextParseException *pe) {
  }
  return 0;
}

JavaUtilJarAttributes *NetI2pTimeBuildTime_attributesWithJavaIoFile_(JavaIoFile *f) {
  NetI2pTimeBuildTime_initialize();
  JavaIoInputStream *in = nil;
  @try {
    in = [(create_JavaNetURL_initWithNSString_(JreStrcat("$$$", @"jar:file:", [((JavaIoFile *) nil_chk(f)) getAbsolutePath], @"!/META-INF/MANIFEST.MF"))) openStream];
    JavaUtilJarManifest *man = create_JavaUtilJarManifest_initWithJavaIoInputStream_(in);
    return [man getMainAttributes];
  }
  @catch (JavaIoIOException *ioe) {
    return nil;
  }
  @finally {
    if (in != nil) @try {
      [in close];
    }
    @catch (JavaIoIOException *e) {
    }
  }
}

void NetI2pTimeBuildTime_mainWithNSStringArray_(IOSObjectArray *args) {
  NetI2pTimeBuildTime_initialize();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Hard earliest: ", create_JavaUtilDate_initWithLong_(NetI2pTimeBuildTime_EARLIEST_LONG))];
  jlong date = NetI2pTimeBuildTime_getEarliestTime();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Earliest date: ", create_JavaUtilDate_initWithLong_(date))];
  date = NetI2pTimeBuildTime_getBuildTime();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Build date:    ", create_JavaUtilDate_initWithLong_(date))];
  date = JavaLangSystem_currentTimeMillis();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"System time:   ", create_JavaUtilDate_initWithLong_(date))];
  date = [((NetI2pUtilClock *) nil_chk([((NetI2pI2PAppContext *) nil_chk(NetI2pI2PAppContext_getGlobalContext())) clock])) now];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"I2P time:      ", create_JavaUtilDate_initWithLong_(date))];
  date = NetI2pTimeBuildTime_getLatestTime();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Latest date:   ", create_JavaUtilDate_initWithLong_(date))];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pTimeBuildTime)
