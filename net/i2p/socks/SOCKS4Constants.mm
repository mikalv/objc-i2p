//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/socks/SOCKS4Constants.java
//

#include "J2ObjC_source.h"
#include "net/i2p/socks/SOCKS4Constants.h"

@interface NetI2pSocksSOCKS4Constants ()

- (instancetype)init;

@end

__attribute__((unused)) static void NetI2pSocksSOCKS4Constants_init(NetI2pSocksSOCKS4Constants *self);

__attribute__((unused)) static NetI2pSocksSOCKS4Constants *new_NetI2pSocksSOCKS4Constants_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetI2pSocksSOCKS4Constants *create_NetI2pSocksSOCKS4Constants_init(void);

@implementation NetI2pSocksSOCKS4Constants

+ (jint)SOCKS_VERSION_4 {
  return NetI2pSocksSOCKS4Constants_SOCKS_VERSION_4;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pSocksSOCKS4Constants_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SOCKS_VERSION_4", "I", .constantValue.asInt = NetI2pSocksSOCKS4Constants_SOCKS_VERSION_4, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pSocksSOCKS4Constants_Command;LNetI2pSocksSOCKS4Constants_Reply;" };
  static const J2ObjcClassInfo _NetI2pSocksSOCKS4Constants = { "SOCKS4Constants", "net.i2p.socks", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, 0, -1, -1, -1 };
  return &_NetI2pSocksSOCKS4Constants;
}

@end

void NetI2pSocksSOCKS4Constants_init(NetI2pSocksSOCKS4Constants *self) {
  NSObject_init(self);
}

NetI2pSocksSOCKS4Constants *new_NetI2pSocksSOCKS4Constants_init() {
  J2OBJC_NEW_IMPL(NetI2pSocksSOCKS4Constants, init)
}

NetI2pSocksSOCKS4Constants *create_NetI2pSocksSOCKS4Constants_init() {
  J2OBJC_CREATE_IMPL(NetI2pSocksSOCKS4Constants, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pSocksSOCKS4Constants)

@implementation NetI2pSocksSOCKS4Constants_Command

+ (jint)CONNECT {
  return NetI2pSocksSOCKS4Constants_Command_CONNECT;
}

+ (jint)BIND {
  return NetI2pSocksSOCKS4Constants_Command_BIND;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pSocksSOCKS4Constants_Command_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CONNECT", "I", .constantValue.asInt = NetI2pSocksSOCKS4Constants_Command_CONNECT, 0x19, -1, -1, -1, -1 },
    { "BIND", "I", .constantValue.asInt = NetI2pSocksSOCKS4Constants_Command_BIND, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pSocksSOCKS4Constants;" };
  static const J2ObjcClassInfo _NetI2pSocksSOCKS4Constants_Command = { "Command", "net.i2p.socks", ptrTable, methods, fields, 7, 0x9, 1, 2, 0, -1, -1, -1, -1 };
  return &_NetI2pSocksSOCKS4Constants_Command;
}

@end

void NetI2pSocksSOCKS4Constants_Command_init(NetI2pSocksSOCKS4Constants_Command *self) {
  NSObject_init(self);
}

NetI2pSocksSOCKS4Constants_Command *new_NetI2pSocksSOCKS4Constants_Command_init() {
  J2OBJC_NEW_IMPL(NetI2pSocksSOCKS4Constants_Command, init)
}

NetI2pSocksSOCKS4Constants_Command *create_NetI2pSocksSOCKS4Constants_Command_init() {
  J2OBJC_CREATE_IMPL(NetI2pSocksSOCKS4Constants_Command, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pSocksSOCKS4Constants_Command)

@implementation NetI2pSocksSOCKS4Constants_Reply

+ (jint)SUCCEEDED {
  return NetI2pSocksSOCKS4Constants_Reply_SUCCEEDED;
}

+ (jint)CONNECTION_REFUSED {
  return NetI2pSocksSOCKS4Constants_Reply_CONNECTION_REFUSED;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pSocksSOCKS4Constants_Reply_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SUCCEEDED", "I", .constantValue.asInt = NetI2pSocksSOCKS4Constants_Reply_SUCCEEDED, 0x19, -1, -1, -1, -1 },
    { "CONNECTION_REFUSED", "I", .constantValue.asInt = NetI2pSocksSOCKS4Constants_Reply_CONNECTION_REFUSED, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pSocksSOCKS4Constants;" };
  static const J2ObjcClassInfo _NetI2pSocksSOCKS4Constants_Reply = { "Reply", "net.i2p.socks", ptrTable, methods, fields, 7, 0x9, 1, 2, 0, -1, -1, -1, -1 };
  return &_NetI2pSocksSOCKS4Constants_Reply;
}

@end

void NetI2pSocksSOCKS4Constants_Reply_init(NetI2pSocksSOCKS4Constants_Reply *self) {
  NSObject_init(self);
}

NetI2pSocksSOCKS4Constants_Reply *new_NetI2pSocksSOCKS4Constants_Reply_init() {
  J2OBJC_NEW_IMPL(NetI2pSocksSOCKS4Constants_Reply, init)
}

NetI2pSocksSOCKS4Constants_Reply *create_NetI2pSocksSOCKS4Constants_Reply_init() {
  J2OBJC_CREATE_IMPL(NetI2pSocksSOCKS4Constants_Reply, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pSocksSOCKS4Constants_Reply)
