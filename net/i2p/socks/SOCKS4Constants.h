//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/socks/SOCKS4Constants.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pSocksSOCKS4Constants")
#ifdef RESTRICT_NetI2pSocksSOCKS4Constants
#define INCLUDE_ALL_NetI2pSocksSOCKS4Constants 0
#else
#define INCLUDE_ALL_NetI2pSocksSOCKS4Constants 1
#endif
#undef RESTRICT_NetI2pSocksSOCKS4Constants

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pSocksSOCKS4Constants_) && (INCLUDE_ALL_NetI2pSocksSOCKS4Constants || defined(INCLUDE_NetI2pSocksSOCKS4Constants))
#define NetI2pSocksSOCKS4Constants_

@interface NetI2pSocksSOCKS4Constants : NSObject
@property (readonly, class) jint SOCKS_VERSION_4 NS_SWIFT_NAME(SOCKS_VERSION_4);

+ (jint)SOCKS_VERSION_4;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pSocksSOCKS4Constants)

inline jint NetI2pSocksSOCKS4Constants_get_SOCKS_VERSION_4(void);
#define NetI2pSocksSOCKS4Constants_SOCKS_VERSION_4 4
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS4Constants, SOCKS_VERSION_4, jint)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pSocksSOCKS4Constants)

#endif

#if !defined (NetI2pSocksSOCKS4Constants_Command_) && (INCLUDE_ALL_NetI2pSocksSOCKS4Constants || defined(INCLUDE_NetI2pSocksSOCKS4Constants_Command))
#define NetI2pSocksSOCKS4Constants_Command_

@interface NetI2pSocksSOCKS4Constants_Command : NSObject
@property (readonly, class) jint CONNECT NS_SWIFT_NAME(CONNECT);
@property (readonly, class) jint BIND NS_SWIFT_NAME(BIND);

+ (jint)CONNECT;

+ (jint)BIND;

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pSocksSOCKS4Constants_Command)

inline jint NetI2pSocksSOCKS4Constants_Command_get_CONNECT(void);
#define NetI2pSocksSOCKS4Constants_Command_CONNECT 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS4Constants_Command, CONNECT, jint)

inline jint NetI2pSocksSOCKS4Constants_Command_get_BIND(void);
#define NetI2pSocksSOCKS4Constants_Command_BIND 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS4Constants_Command, BIND, jint)

FOUNDATION_EXPORT void NetI2pSocksSOCKS4Constants_Command_init(NetI2pSocksSOCKS4Constants_Command *self);

FOUNDATION_EXPORT NetI2pSocksSOCKS4Constants_Command *new_NetI2pSocksSOCKS4Constants_Command_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pSocksSOCKS4Constants_Command *create_NetI2pSocksSOCKS4Constants_Command_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pSocksSOCKS4Constants_Command)

#endif

#if !defined (NetI2pSocksSOCKS4Constants_Reply_) && (INCLUDE_ALL_NetI2pSocksSOCKS4Constants || defined(INCLUDE_NetI2pSocksSOCKS4Constants_Reply))
#define NetI2pSocksSOCKS4Constants_Reply_

@interface NetI2pSocksSOCKS4Constants_Reply : NSObject
@property (readonly, class) jint SUCCEEDED NS_SWIFT_NAME(SUCCEEDED);
@property (readonly, class) jint CONNECTION_REFUSED NS_SWIFT_NAME(CONNECTION_REFUSED);

+ (jint)SUCCEEDED;

+ (jint)CONNECTION_REFUSED;

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pSocksSOCKS4Constants_Reply)

inline jint NetI2pSocksSOCKS4Constants_Reply_get_SUCCEEDED(void);
#define NetI2pSocksSOCKS4Constants_Reply_SUCCEEDED 90
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS4Constants_Reply, SUCCEEDED, jint)

inline jint NetI2pSocksSOCKS4Constants_Reply_get_CONNECTION_REFUSED(void);
#define NetI2pSocksSOCKS4Constants_Reply_CONNECTION_REFUSED 91
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS4Constants_Reply, CONNECTION_REFUSED, jint)

FOUNDATION_EXPORT void NetI2pSocksSOCKS4Constants_Reply_init(NetI2pSocksSOCKS4Constants_Reply *self);

FOUNDATION_EXPORT NetI2pSocksSOCKS4Constants_Reply *new_NetI2pSocksSOCKS4Constants_Reply_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pSocksSOCKS4Constants_Reply *create_NetI2pSocksSOCKS4Constants_Reply_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pSocksSOCKS4Constants_Reply)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pSocksSOCKS4Constants")
