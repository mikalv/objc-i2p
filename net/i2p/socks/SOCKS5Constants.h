//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/socks/SOCKS5Constants.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pSocksSOCKS5Constants")
#ifdef RESTRICT_NetI2pSocksSOCKS5Constants
#define INCLUDE_ALL_NetI2pSocksSOCKS5Constants 0
#else
#define INCLUDE_ALL_NetI2pSocksSOCKS5Constants 1
#endif
#undef RESTRICT_NetI2pSocksSOCKS5Constants

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pSocksSOCKS5Constants_) && (INCLUDE_ALL_NetI2pSocksSOCKS5Constants || defined(INCLUDE_NetI2pSocksSOCKS5Constants))
#define NetI2pSocksSOCKS5Constants_

@interface NetI2pSocksSOCKS5Constants : NSObject
@property (readonly, class) jint SOCKS_VERSION_5 NS_SWIFT_NAME(SOCKS_VERSION_5);
@property (readonly, class) jint AUTH_VERSION NS_SWIFT_NAME(AUTH_VERSION);
@property (readonly, class) jint AUTH_SUCCESS NS_SWIFT_NAME(AUTH_SUCCESS);
@property (readonly, class) jint AUTH_FAILURE NS_SWIFT_NAME(AUTH_FAILURE);

+ (jint)SOCKS_VERSION_5;

+ (jint)AUTH_VERSION;

+ (jint)AUTH_SUCCESS;

+ (jint)AUTH_FAILURE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pSocksSOCKS5Constants)

inline jint NetI2pSocksSOCKS5Constants_get_SOCKS_VERSION_5(void);
#define NetI2pSocksSOCKS5Constants_SOCKS_VERSION_5 5
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants, SOCKS_VERSION_5, jint)

inline jint NetI2pSocksSOCKS5Constants_get_AUTH_VERSION(void);
#define NetI2pSocksSOCKS5Constants_AUTH_VERSION 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants, AUTH_VERSION, jint)

inline jint NetI2pSocksSOCKS5Constants_get_AUTH_SUCCESS(void);
#define NetI2pSocksSOCKS5Constants_AUTH_SUCCESS 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants, AUTH_SUCCESS, jint)

inline jint NetI2pSocksSOCKS5Constants_get_AUTH_FAILURE(void);
#define NetI2pSocksSOCKS5Constants_AUTH_FAILURE 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants, AUTH_FAILURE, jint)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pSocksSOCKS5Constants)

#endif

#if !defined (NetI2pSocksSOCKS5Constants_Method_) && (INCLUDE_ALL_NetI2pSocksSOCKS5Constants || defined(INCLUDE_NetI2pSocksSOCKS5Constants_Method))
#define NetI2pSocksSOCKS5Constants_Method_

@interface NetI2pSocksSOCKS5Constants_Method : NSObject
@property (readonly, class) jint NO_AUTH_REQUIRED NS_SWIFT_NAME(NO_AUTH_REQUIRED);
@property (readonly, class) jint USERNAME_PASSWORD NS_SWIFT_NAME(USERNAME_PASSWORD);
@property (readonly, class) jint NO_ACCEPTABLE_METHODS NS_SWIFT_NAME(NO_ACCEPTABLE_METHODS);

+ (jint)NO_AUTH_REQUIRED;

+ (jint)USERNAME_PASSWORD;

+ (jint)NO_ACCEPTABLE_METHODS;

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pSocksSOCKS5Constants_Method)

inline jint NetI2pSocksSOCKS5Constants_Method_get_NO_AUTH_REQUIRED(void);
#define NetI2pSocksSOCKS5Constants_Method_NO_AUTH_REQUIRED 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Method, NO_AUTH_REQUIRED, jint)

inline jint NetI2pSocksSOCKS5Constants_Method_get_USERNAME_PASSWORD(void);
#define NetI2pSocksSOCKS5Constants_Method_USERNAME_PASSWORD 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Method, USERNAME_PASSWORD, jint)

inline jint NetI2pSocksSOCKS5Constants_Method_get_NO_ACCEPTABLE_METHODS(void);
#define NetI2pSocksSOCKS5Constants_Method_NO_ACCEPTABLE_METHODS 255
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Method, NO_ACCEPTABLE_METHODS, jint)

FOUNDATION_EXPORT void NetI2pSocksSOCKS5Constants_Method_init(NetI2pSocksSOCKS5Constants_Method *self);

FOUNDATION_EXPORT NetI2pSocksSOCKS5Constants_Method *new_NetI2pSocksSOCKS5Constants_Method_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pSocksSOCKS5Constants_Method *create_NetI2pSocksSOCKS5Constants_Method_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pSocksSOCKS5Constants_Method)

#endif

#if !defined (NetI2pSocksSOCKS5Constants_AddressType_) && (INCLUDE_ALL_NetI2pSocksSOCKS5Constants || defined(INCLUDE_NetI2pSocksSOCKS5Constants_AddressType))
#define NetI2pSocksSOCKS5Constants_AddressType_

@interface NetI2pSocksSOCKS5Constants_AddressType : NSObject
@property (readonly, class) jint IPV4 NS_SWIFT_NAME(IPV4);
@property (readonly, class) jint DOMAINNAME NS_SWIFT_NAME(DOMAINNAME);
@property (readonly, class) jint IPV6 NS_SWIFT_NAME(IPV6);

+ (jint)IPV4;

+ (jint)DOMAINNAME;

+ (jint)IPV6;

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pSocksSOCKS5Constants_AddressType)

inline jint NetI2pSocksSOCKS5Constants_AddressType_get_IPV4(void);
#define NetI2pSocksSOCKS5Constants_AddressType_IPV4 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_AddressType, IPV4, jint)

inline jint NetI2pSocksSOCKS5Constants_AddressType_get_DOMAINNAME(void);
#define NetI2pSocksSOCKS5Constants_AddressType_DOMAINNAME 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_AddressType, DOMAINNAME, jint)

inline jint NetI2pSocksSOCKS5Constants_AddressType_get_IPV6(void);
#define NetI2pSocksSOCKS5Constants_AddressType_IPV6 4
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_AddressType, IPV6, jint)

FOUNDATION_EXPORT void NetI2pSocksSOCKS5Constants_AddressType_init(NetI2pSocksSOCKS5Constants_AddressType *self);

FOUNDATION_EXPORT NetI2pSocksSOCKS5Constants_AddressType *new_NetI2pSocksSOCKS5Constants_AddressType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pSocksSOCKS5Constants_AddressType *create_NetI2pSocksSOCKS5Constants_AddressType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pSocksSOCKS5Constants_AddressType)

#endif

#if !defined (NetI2pSocksSOCKS5Constants_Command_) && (INCLUDE_ALL_NetI2pSocksSOCKS5Constants || defined(INCLUDE_NetI2pSocksSOCKS5Constants_Command))
#define NetI2pSocksSOCKS5Constants_Command_

@interface NetI2pSocksSOCKS5Constants_Command : NSObject
@property (readonly, class) jint CONNECT NS_SWIFT_NAME(CONNECT);
@property (readonly, class) jint BIND NS_SWIFT_NAME(BIND);
@property (readonly, class) jint UDP_ASSOCIATE NS_SWIFT_NAME(UDP_ASSOCIATE);

+ (jint)CONNECT;

+ (jint)BIND;

+ (jint)UDP_ASSOCIATE;

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pSocksSOCKS5Constants_Command)

inline jint NetI2pSocksSOCKS5Constants_Command_get_CONNECT(void);
#define NetI2pSocksSOCKS5Constants_Command_CONNECT 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Command, CONNECT, jint)

inline jint NetI2pSocksSOCKS5Constants_Command_get_BIND(void);
#define NetI2pSocksSOCKS5Constants_Command_BIND 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Command, BIND, jint)

inline jint NetI2pSocksSOCKS5Constants_Command_get_UDP_ASSOCIATE(void);
#define NetI2pSocksSOCKS5Constants_Command_UDP_ASSOCIATE 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Command, UDP_ASSOCIATE, jint)

FOUNDATION_EXPORT void NetI2pSocksSOCKS5Constants_Command_init(NetI2pSocksSOCKS5Constants_Command *self);

FOUNDATION_EXPORT NetI2pSocksSOCKS5Constants_Command *new_NetI2pSocksSOCKS5Constants_Command_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pSocksSOCKS5Constants_Command *create_NetI2pSocksSOCKS5Constants_Command_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pSocksSOCKS5Constants_Command)

#endif

#if !defined (NetI2pSocksSOCKS5Constants_Reply_) && (INCLUDE_ALL_NetI2pSocksSOCKS5Constants || defined(INCLUDE_NetI2pSocksSOCKS5Constants_Reply))
#define NetI2pSocksSOCKS5Constants_Reply_

@interface NetI2pSocksSOCKS5Constants_Reply : NSObject
@property (readonly, class) jint SUCCEEDED NS_SWIFT_NAME(SUCCEEDED);
@property (readonly, class) jint GENERAL_SOCKS_SERVER_FAILURE NS_SWIFT_NAME(GENERAL_SOCKS_SERVER_FAILURE);
@property (readonly, class) jint CONNECTION_NOT_ALLOWED_BY_RULESET NS_SWIFT_NAME(CONNECTION_NOT_ALLOWED_BY_RULESET);
@property (readonly, class) jint NETWORK_UNREACHABLE NS_SWIFT_NAME(NETWORK_UNREACHABLE);
@property (readonly, class) jint HOST_UNREACHABLE NS_SWIFT_NAME(HOST_UNREACHABLE);
@property (readonly, class) jint CONNECTION_REFUSED NS_SWIFT_NAME(CONNECTION_REFUSED);
@property (readonly, class) jint TTL_EXPIRED NS_SWIFT_NAME(TTL_EXPIRED);
@property (readonly, class) jint COMMAND_NOT_SUPPORTED NS_SWIFT_NAME(COMMAND_NOT_SUPPORTED);
@property (readonly, class) jint ADDRESS_TYPE_NOT_SUPPORTED NS_SWIFT_NAME(ADDRESS_TYPE_NOT_SUPPORTED);

+ (jint)SUCCEEDED;

+ (jint)GENERAL_SOCKS_SERVER_FAILURE;

+ (jint)CONNECTION_NOT_ALLOWED_BY_RULESET;

+ (jint)NETWORK_UNREACHABLE;

+ (jint)HOST_UNREACHABLE;

+ (jint)CONNECTION_REFUSED;

+ (jint)TTL_EXPIRED;

+ (jint)COMMAND_NOT_SUPPORTED;

+ (jint)ADDRESS_TYPE_NOT_SUPPORTED;

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pSocksSOCKS5Constants_Reply)

inline jint NetI2pSocksSOCKS5Constants_Reply_get_SUCCEEDED(void);
#define NetI2pSocksSOCKS5Constants_Reply_SUCCEEDED 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Reply, SUCCEEDED, jint)

inline jint NetI2pSocksSOCKS5Constants_Reply_get_GENERAL_SOCKS_SERVER_FAILURE(void);
#define NetI2pSocksSOCKS5Constants_Reply_GENERAL_SOCKS_SERVER_FAILURE 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Reply, GENERAL_SOCKS_SERVER_FAILURE, jint)

inline jint NetI2pSocksSOCKS5Constants_Reply_get_CONNECTION_NOT_ALLOWED_BY_RULESET(void);
#define NetI2pSocksSOCKS5Constants_Reply_CONNECTION_NOT_ALLOWED_BY_RULESET 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Reply, CONNECTION_NOT_ALLOWED_BY_RULESET, jint)

inline jint NetI2pSocksSOCKS5Constants_Reply_get_NETWORK_UNREACHABLE(void);
#define NetI2pSocksSOCKS5Constants_Reply_NETWORK_UNREACHABLE 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Reply, NETWORK_UNREACHABLE, jint)

inline jint NetI2pSocksSOCKS5Constants_Reply_get_HOST_UNREACHABLE(void);
#define NetI2pSocksSOCKS5Constants_Reply_HOST_UNREACHABLE 4
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Reply, HOST_UNREACHABLE, jint)

inline jint NetI2pSocksSOCKS5Constants_Reply_get_CONNECTION_REFUSED(void);
#define NetI2pSocksSOCKS5Constants_Reply_CONNECTION_REFUSED 5
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Reply, CONNECTION_REFUSED, jint)

inline jint NetI2pSocksSOCKS5Constants_Reply_get_TTL_EXPIRED(void);
#define NetI2pSocksSOCKS5Constants_Reply_TTL_EXPIRED 6
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Reply, TTL_EXPIRED, jint)

inline jint NetI2pSocksSOCKS5Constants_Reply_get_COMMAND_NOT_SUPPORTED(void);
#define NetI2pSocksSOCKS5Constants_Reply_COMMAND_NOT_SUPPORTED 7
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Reply, COMMAND_NOT_SUPPORTED, jint)

inline jint NetI2pSocksSOCKS5Constants_Reply_get_ADDRESS_TYPE_NOT_SUPPORTED(void);
#define NetI2pSocksSOCKS5Constants_Reply_ADDRESS_TYPE_NOT_SUPPORTED 8
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pSocksSOCKS5Constants_Reply, ADDRESS_TYPE_NOT_SUPPORTED, jint)

FOUNDATION_EXPORT void NetI2pSocksSOCKS5Constants_Reply_init(NetI2pSocksSOCKS5Constants_Reply *self);

FOUNDATION_EXPORT NetI2pSocksSOCKS5Constants_Reply *new_NetI2pSocksSOCKS5Constants_Reply_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pSocksSOCKS5Constants_Reply *create_NetI2pSocksSOCKS5Constants_Reply_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pSocksSOCKS5Constants_Reply)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pSocksSOCKS5Constants")
