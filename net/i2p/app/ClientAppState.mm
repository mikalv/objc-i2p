//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/app/ClientAppState.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "net/i2p/app/ClientAppState.h"

__attribute__((unused)) static void NetI2pAppClientAppState_initWithNSString_withInt_(NetI2pAppClientAppState *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(NetI2pAppClientAppState)

NetI2pAppClientAppState *NetI2pAppClientAppState_values_[9];

@implementation NetI2pAppClientAppState

+ (NetI2pAppClientAppState *)UNINITIALIZED {
  return JreEnum(NetI2pAppClientAppState, UNINITIALIZED);
}

+ (NetI2pAppClientAppState *)INITIALIZED {
  return JreEnum(NetI2pAppClientAppState, INITIALIZED);
}

+ (NetI2pAppClientAppState *)STARTING {
  return JreEnum(NetI2pAppClientAppState, STARTING);
}

+ (NetI2pAppClientAppState *)START_FAILED {
  return JreEnum(NetI2pAppClientAppState, START_FAILED);
}

+ (NetI2pAppClientAppState *)RUNNING {
  return JreEnum(NetI2pAppClientAppState, RUNNING);
}

+ (NetI2pAppClientAppState *)STOPPING {
  return JreEnum(NetI2pAppClientAppState, STOPPING);
}

+ (NetI2pAppClientAppState *)STOPPED {
  return JreEnum(NetI2pAppClientAppState, STOPPED);
}

+ (NetI2pAppClientAppState *)CRASHED {
  return JreEnum(NetI2pAppClientAppState, CRASHED);
}

+ (NetI2pAppClientAppState *)FORKED {
  return JreEnum(NetI2pAppClientAppState, FORKED);
}

+ (IOSObjectArray *)values {
  return NetI2pAppClientAppState_values();
}

+ (NetI2pAppClientAppState *)valueOfWithNSString:(NSString *)name {
  return NetI2pAppClientAppState_valueOfWithNSString_(name);
}

- (NetI2pAppClientAppState_Enum)toNSEnum {
  return (NetI2pAppClientAppState_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LNetI2pAppClientAppState;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pAppClientAppState;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "UNINITIALIZED", "LNetI2pAppClientAppState;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "INITIALIZED", "LNetI2pAppClientAppState;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "STARTING", "LNetI2pAppClientAppState;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "START_FAILED", "LNetI2pAppClientAppState;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "RUNNING", "LNetI2pAppClientAppState;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "STOPPING", "LNetI2pAppClientAppState;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "STOPPED", "LNetI2pAppClientAppState;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "CRASHED", "LNetI2pAppClientAppState;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "FORKED", "LNetI2pAppClientAppState;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(NetI2pAppClientAppState, UNINITIALIZED), &JreEnum(NetI2pAppClientAppState, INITIALIZED), &JreEnum(NetI2pAppClientAppState, STARTING), &JreEnum(NetI2pAppClientAppState, START_FAILED), &JreEnum(NetI2pAppClientAppState, RUNNING), &JreEnum(NetI2pAppClientAppState, STOPPING), &JreEnum(NetI2pAppClientAppState, STOPPED), &JreEnum(NetI2pAppClientAppState, CRASHED), &JreEnum(NetI2pAppClientAppState, FORKED), "Ljava/lang/Enum<Lnet/i2p/app/ClientAppState;>;" };
  static const J2ObjcClassInfo _NetI2pAppClientAppState = { "ClientAppState", "net.i2p.app", ptrTable, methods, fields, 7, 0x4011, 2, 9, -1, -1, -1, 11, -1 };
  return &_NetI2pAppClientAppState;
}

+ (void)initialize {
  if (self == [NetI2pAppClientAppState class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 9 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 9; i++) {
      ((void)(NetI2pAppClientAppState_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      NetI2pAppClientAppState_initWithNSString_withInt_(e, JreEnumConstantName(NetI2pAppClientAppState_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(NetI2pAppClientAppState)
  }
}

@end

void NetI2pAppClientAppState_initWithNSString_withInt_(NetI2pAppClientAppState *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *NetI2pAppClientAppState_values() {
  NetI2pAppClientAppState_initialize();
  return [IOSObjectArray arrayWithObjects:NetI2pAppClientAppState_values_ count:9 type:NetI2pAppClientAppState_class_()];
}

NetI2pAppClientAppState *NetI2pAppClientAppState_valueOfWithNSString_(NSString *name) {
  NetI2pAppClientAppState_initialize();
  for (int i = 0; i < 9; i++) {
    NetI2pAppClientAppState *e = NetI2pAppClientAppState_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

NetI2pAppClientAppState *NetI2pAppClientAppState_fromOrdinal(NSUInteger ordinal) {
  NetI2pAppClientAppState_initialize();
  if (ordinal >= 9) {
    return nil;
  }
  return NetI2pAppClientAppState_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pAppClientAppState)
