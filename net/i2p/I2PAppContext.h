//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/I2PAppContext.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pI2PAppContext")
#ifdef RESTRICT_NetI2pI2PAppContext
#define INCLUDE_ALL_NetI2pI2PAppContext 0
#else
#define INCLUDE_ALL_NetI2pI2PAppContext 1
#endif
#undef RESTRICT_NetI2pI2PAppContext

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pI2PAppContext_) && (INCLUDE_ALL_NetI2pI2PAppContext || defined(INCLUDE_NetI2pI2PAppContext))
#define NetI2pI2PAppContext_

@class JavaIoFile;
@class JavaUtilProperties;
@class NetI2pClientNamingNamingService;
@class NetI2pCryptoAESEngine;
@class NetI2pCryptoDSAEngine;
@class NetI2pCryptoElGamalAESEngine;
@class NetI2pCryptoElGamalEngine;
@class NetI2pCryptoHMAC256Generator;
@class NetI2pCryptoHMACGenerator;
@class NetI2pCryptoKeyGenerator;
@class NetI2pCryptoSHA256Generator;
@class NetI2pCryptoSessionKeyManager;
@class NetI2pDataRoutingKeyGenerator;
@class NetI2pStatStatManager;
@class NetI2pUtilClock;
@class NetI2pUtilI2PProperties;
@class NetI2pUtilKeyRing;
@class NetI2pUtilLogManager;
@class NetI2pUtilPortMapper;
@class NetI2pUtilRandomSource;
@class NetI2pUtilSimpleScheduler;
@class NetI2pUtilSimpleTimer2;
@class NetI2pUtilSimpleTimer;
@protocol JavaLangRunnable;
@protocol JavaUtilSet;
@protocol NetI2pAppClientAppManager;
@protocol NetI2pInternalInternalClientManager;
@protocol NetI2pUtilI2PProperties_I2PPropertyCallback;

@interface NetI2pI2PAppContext : NSObject {
 @public
  NetI2pUtilI2PProperties *_overrideProps_;
  NetI2pCryptoSessionKeyManager *_sessionKeyManager_;
  NetI2pUtilClock *_clock_;
  NetI2pUtilKeyRing *_keyRing_;
  volatile_jboolean _sessionKeyManagerInitialized_;
  volatile_jboolean _clockInitialized_;
  volatile_jboolean _keyRingInitialized_;
  id<JavaUtilSet> _shutdownTasks_;
}
@property (class, strong) NetI2pI2PAppContext *_globalAppContext NS_SWIFT_NAME(_globalAppContext);

+ (NetI2pI2PAppContext *)_globalAppContext;

+ (void)set_globalAppContext:(NetI2pI2PAppContext *)value;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithJavaUtilProperties:(JavaUtilProperties *)envProps;

- (void)addPropertyCallbackWithNetI2pUtilI2PProperties_I2PPropertyCallback:(id<NetI2pUtilI2PProperties_I2PPropertyCallback>)callback;

- (void)addShutdownTaskWithJavaLangRunnable:(id<JavaLangRunnable>)task;

- (NetI2pCryptoAESEngine *)aes;

- (id<NetI2pAppClientAppManager>)clientAppManager;

- (NetI2pUtilClock *)clock;

- (void)deleteTempDir;

- (NetI2pCryptoDSAEngine *)dsa;

- (NetI2pCryptoElGamalAESEngine *)elGamalAESEngine;

- (NetI2pCryptoElGamalEngine *)elGamalEngine;

- (JavaIoFile *)getAppDir;

- (JavaIoFile *)getBaseDir;

- (jboolean)getBooleanPropertyWithNSString:(NSString *)propName;

- (jboolean)getBooleanPropertyDefaultTrueWithNSString:(NSString *)propName;

- (JavaIoFile *)getConfigDir;

+ (NetI2pI2PAppContext *)getCurrentContext;

+ (NetI2pI2PAppContext *)getGlobalContext;

- (JavaIoFile *)getLogDir;

- (JavaIoFile *)getPIDDir;

- (JavaUtilProperties *)getProperties;

- (NSString *)getPropertyWithNSString:(NSString *)propName;

- (jboolean)getPropertyWithNSString:(NSString *)propName
                        withBoolean:(jboolean)defaultVal;

- (jint)getPropertyWithNSString:(NSString *)propName
                        withInt:(jint)defaultVal;

- (jlong)getPropertyWithNSString:(NSString *)propName
                        withLong:(jlong)defaultVal;

- (NSString *)getPropertyWithNSString:(NSString *)propName
                         withNSString:(NSString *)defaultValue;

- (id<JavaUtilSet>)getPropertyNames;

- (JavaIoFile *)getRouterDir;

- (id<JavaUtilSet>)getShutdownTasks;

- (JavaIoFile *)getTempDir;

- (jboolean)hasWrapper;

- (NetI2pCryptoHMACGenerator *)hmac;

- (NetI2pCryptoHMAC256Generator *)hmac256;

- (id<NetI2pInternalInternalClientManager>)internalClientManager;

- (jboolean)isRouterContext;

- (NetI2pCryptoKeyGenerator *)keyGenerator;

- (NetI2pUtilKeyRing *)keyRing;

- (NetI2pUtilLogManager *)logManager;

- (NetI2pClientNamingNamingService *)namingService;

- (NetI2pUtilPortMapper *)portMapper;

- (NetI2pUtilRandomSource *)random;

- (NetI2pDataRoutingKeyGenerator *)routingKeyGenerator;

- (NetI2pCryptoSessionKeyManager *)sessionKeyManager;

- (NetI2pCryptoSHA256Generator *)sha;

- (NetI2pUtilSimpleScheduler *)simpleScheduler;

- (NetI2pUtilSimpleTimer *)simpleTimer;

- (NetI2pUtilSimpleTimer2 *)simpleTimer2;

- (NetI2pStatStatManager *)statManager;

#pragma mark Protected

- (instancetype __nonnull)initWithBoolean:(jboolean)doInit
                   withJavaUtilProperties:(JavaUtilProperties *)envProps;

- (void)initializeClock OBJC_METHOD_FAMILY_NONE;

- (void)initializeKeyRing OBJC_METHOD_FAMILY_NONE;

- (void)initializeSessionKeyManager OBJC_METHOD_FAMILY_NONE;

+ (jboolean)setGlobalContextWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pI2PAppContext)

J2OBJC_FIELD_SETTER(NetI2pI2PAppContext, _overrideProps_, NetI2pUtilI2PProperties *)
J2OBJC_FIELD_SETTER(NetI2pI2PAppContext, _sessionKeyManager_, NetI2pCryptoSessionKeyManager *)
J2OBJC_FIELD_SETTER(NetI2pI2PAppContext, _clock_, NetI2pUtilClock *)
J2OBJC_FIELD_SETTER(NetI2pI2PAppContext, _keyRing_, NetI2pUtilKeyRing *)
J2OBJC_FIELD_SETTER(NetI2pI2PAppContext, _shutdownTasks_, id<JavaUtilSet>)

inline NetI2pI2PAppContext *NetI2pI2PAppContext_get__globalAppContext(void);
inline NetI2pI2PAppContext *NetI2pI2PAppContext_set__globalAppContext(NetI2pI2PAppContext *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT volatile_id NetI2pI2PAppContext__globalAppContext;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(NetI2pI2PAppContext, _globalAppContext, NetI2pI2PAppContext *)

FOUNDATION_EXPORT NetI2pI2PAppContext *NetI2pI2PAppContext_getGlobalContext(void);

FOUNDATION_EXPORT jboolean NetI2pI2PAppContext_setGlobalContextWithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx);

FOUNDATION_EXPORT NetI2pI2PAppContext *NetI2pI2PAppContext_getCurrentContext(void);

FOUNDATION_EXPORT void NetI2pI2PAppContext_init(NetI2pI2PAppContext *self);

FOUNDATION_EXPORT NetI2pI2PAppContext *new_NetI2pI2PAppContext_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pI2PAppContext *create_NetI2pI2PAppContext_init(void);

FOUNDATION_EXPORT void NetI2pI2PAppContext_initWithJavaUtilProperties_(NetI2pI2PAppContext *self, JavaUtilProperties *envProps);

FOUNDATION_EXPORT NetI2pI2PAppContext *new_NetI2pI2PAppContext_initWithJavaUtilProperties_(JavaUtilProperties *envProps) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pI2PAppContext *create_NetI2pI2PAppContext_initWithJavaUtilProperties_(JavaUtilProperties *envProps);

FOUNDATION_EXPORT void NetI2pI2PAppContext_initWithBoolean_withJavaUtilProperties_(NetI2pI2PAppContext *self, jboolean doInit, JavaUtilProperties *envProps);

FOUNDATION_EXPORT NetI2pI2PAppContext *new_NetI2pI2PAppContext_initWithBoolean_withJavaUtilProperties_(jboolean doInit, JavaUtilProperties *envProps) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pI2PAppContext *create_NetI2pI2PAppContext_initWithBoolean_withJavaUtilProperties_(jboolean doInit, JavaUtilProperties *envProps);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pI2PAppContext)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pI2PAppContext")
