//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/kademlia/RandomIfOldTrimmer.java
//

#include "J2ObjC_source.h"
#include "net/i2p/I2PAppContext.h"
#include "net/i2p/data/SimpleDataStructure.h"
#include "net/i2p/kademlia/KBucket.h"
#include "net/i2p/kademlia/RandomIfOldTrimmer.h"
#include "net/i2p/kademlia/RandomTrimmer.h"
#include "net/i2p/util/Clock.h"

@implementation NetI2pKademliaRandomIfOldTrimmer

- (instancetype)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                    withInt:(jint)max {
  NetI2pKademliaRandomIfOldTrimmer_initWithNetI2pI2PAppContext_withInt_(self, ctx, max);
  return self;
}

- (jboolean)trimWithNetI2pKademliaKBucket:(id<NetI2pKademliaKBucket>)kbucket
        withNetI2pDataSimpleDataStructure:(NetI2pDataSimpleDataStructure *)toAdd {
  if ([((id<NetI2pKademliaKBucket>) nil_chk(kbucket)) getLastChanged] > [((NetI2pUtilClock *) nil_chk([((NetI2pI2PAppContext *) nil_chk(_ctx_)) clock])) now] - 5 * 60 * 1000) return false;
  return [super trimWithNetI2pKademliaKBucket:kbucket withNetI2pDataSimpleDataStructure:toAdd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pI2PAppContext:withInt:);
  methods[1].selector = @selector(trimWithNetI2pKademliaKBucket:withNetI2pDataSimpleDataStructure:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNetI2pI2PAppContext;I", "trim", "LNetI2pKademliaKBucket;LNetI2pDataSimpleDataStructure;", "(Lnet/i2p/kademlia/KBucket<TT;>;TT;)Z", "<T:Lnet/i2p/data/SimpleDataStructure;>Lnet/i2p/kademlia/RandomTrimmer<TT;>;" };
  static const J2ObjcClassInfo _NetI2pKademliaRandomIfOldTrimmer = { "RandomIfOldTrimmer", "net.i2p.kademlia", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, 4, -1 };
  return &_NetI2pKademliaRandomIfOldTrimmer;
}

@end

void NetI2pKademliaRandomIfOldTrimmer_initWithNetI2pI2PAppContext_withInt_(NetI2pKademliaRandomIfOldTrimmer *self, NetI2pI2PAppContext *ctx, jint max) {
  NetI2pKademliaRandomTrimmer_initWithNetI2pI2PAppContext_withInt_(self, ctx, max);
}

NetI2pKademliaRandomIfOldTrimmer *new_NetI2pKademliaRandomIfOldTrimmer_initWithNetI2pI2PAppContext_withInt_(NetI2pI2PAppContext *ctx, jint max) {
  J2OBJC_NEW_IMPL(NetI2pKademliaRandomIfOldTrimmer, initWithNetI2pI2PAppContext_withInt_, ctx, max)
}

NetI2pKademliaRandomIfOldTrimmer *create_NetI2pKademliaRandomIfOldTrimmer_initWithNetI2pI2PAppContext_withInt_(NetI2pI2PAppContext *ctx, jint max) {
  J2OBJC_CREATE_IMPL(NetI2pKademliaRandomIfOldTrimmer, initWithNetI2pI2PAppContext_withInt_, ctx, max)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pKademliaRandomIfOldTrimmer)
