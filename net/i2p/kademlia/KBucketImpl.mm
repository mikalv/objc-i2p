//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/kademlia/KBucketImpl.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Collections.h"
#include "java/util/Set.h"
#include "net/i2p/I2PAppContext.h"
#include "net/i2p/data/SimpleDataStructure.h"
#include "net/i2p/kademlia/KBucketImpl.h"
#include "net/i2p/kademlia/KBucketTrimmer.h"
#include "net/i2p/kademlia/SelectionCollector.h"
#include "net/i2p/util/Clock.h"
#include "net/i2p/util/ConcurrentHashSet.h"

@interface NetI2pKademliaKBucketImpl () {
 @public
  id<JavaUtilSet> _entries_;
  jint _begin_;
  jint _end_;
  jint _max_;
  id<NetI2pKademliaKBucketTrimmer> _trimmer_;
  jlong _lastChanged_;
  NetI2pI2PAppContext *_context_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pKademliaKBucketImpl, _entries_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(NetI2pKademliaKBucketImpl, _trimmer_, id<NetI2pKademliaKBucketTrimmer>)
J2OBJC_FIELD_SETTER(NetI2pKademliaKBucketImpl, _context_, NetI2pI2PAppContext *)

@implementation NetI2pKademliaKBucketImpl

- (instancetype)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context
                                    withInt:(jint)begin
                                    withInt:(jint)end
                                    withInt:(jint)max
           withNetI2pKademliaKBucketTrimmer:(id<NetI2pKademliaKBucketTrimmer>)trimmer {
  NetI2pKademliaKBucketImpl_initWithNetI2pI2PAppContext_withInt_withInt_withInt_withNetI2pKademliaKBucketTrimmer_(self, context, begin, end, max, trimmer);
  return self;
}

- (jint)getRangeBegin {
  return _begin_;
}

- (jint)getRangeEnd {
  return _end_;
}

- (jint)getKeyCount {
  return [((id<JavaUtilSet>) nil_chk(_entries_)) size];
}

- (id<JavaUtilSet>)getEntries {
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(_entries_);
}

- (void)getEntriesWithNetI2pKademliaSelectionCollector:(id<NetI2pKademliaSelectionCollector>)collector {
  for (NetI2pDataSimpleDataStructure * __strong h in nil_chk(_entries_)) {
    [((id<NetI2pKademliaSelectionCollector>) nil_chk(collector)) addWithNetI2pDataSimpleDataStructure:h];
  }
}

- (void)clear {
  [((id<JavaUtilSet>) nil_chk(_entries_)) clear];
}

- (jboolean)addWithNetI2pDataSimpleDataStructure:(NetI2pDataSimpleDataStructure *)peer {
  if (_begin_ != _end_ || [((id<JavaUtilSet>) nil_chk(_entries_)) size] < _max_ || [_entries_ containsWithId:peer] || [((id<NetI2pKademliaKBucketTrimmer>) nil_chk(_trimmer_)) trimWithNetI2pKademliaKBucket:self withNetI2pDataSimpleDataStructure:peer]) {
    jboolean rv = [((id<JavaUtilSet>) nil_chk(_entries_)) addWithId:peer];
    [self setLastChanged];
    return rv;
  }
  return false;
}

- (jboolean)removeWithNetI2pDataSimpleDataStructure:(NetI2pDataSimpleDataStructure *)peer {
  jboolean rv = [((id<JavaUtilSet>) nil_chk(_entries_)) removeWithId:peer];
  return rv;
}

- (void)setLastChanged {
  _lastChanged_ = [((NetI2pUtilClock *) nil_chk([((NetI2pI2PAppContext *) nil_chk(_context_)) clock])) now];
}

- (jlong)getLastChanged {
  return _lastChanged_;
}

- (NSString *)description {
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(1024);
  [buf appendWithInt:[((id<JavaUtilSet>) nil_chk(_entries_)) size]];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@" entries in ("])) appendWithInt:_begin_])) appendWithChar:','])) appendWithInt:_end_];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@") : "])) appendWithNSString:[_entries_ description]];
  return [buf description];
}

- (void)dealloc {
  RELEASE_(_entries_);
  RELEASE_(_trimmer_);
  RELEASE_(_context_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, 8, -1, -1 },
    { NULL, "Z", 0x1, 9, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pI2PAppContext:withInt:withInt:withInt:withNetI2pKademliaKBucketTrimmer:);
  methods[1].selector = @selector(getRangeBegin);
  methods[2].selector = @selector(getRangeEnd);
  methods[3].selector = @selector(getKeyCount);
  methods[4].selector = @selector(getEntries);
  methods[5].selector = @selector(getEntriesWithNetI2pKademliaSelectionCollector:);
  methods[6].selector = @selector(clear);
  methods[7].selector = @selector(addWithNetI2pDataSimpleDataStructure:);
  methods[8].selector = @selector(removeWithNetI2pDataSimpleDataStructure:);
  methods[9].selector = @selector(setLastChanged);
  methods[10].selector = @selector(getLastChanged);
  methods[11].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_entries_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
    { "_begin_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_end_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_max_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_trimmer_", "LNetI2pKademliaKBucketTrimmer;", .constantValue.asLong = 0, 0x12, -1, -1, 12, -1 },
    { "_lastChanged_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_context_", "LNetI2pI2PAppContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pI2PAppContext;IIILNetI2pKademliaKBucketTrimmer;", "(Lnet/i2p/I2PAppContext;IIILnet/i2p/kademlia/KBucketTrimmer<TT;>;)V", "()Ljava/util/Set<TT;>;", "getEntries", "LNetI2pKademliaSelectionCollector;", "(Lnet/i2p/kademlia/SelectionCollector<TT;>;)V", "add", "LNetI2pDataSimpleDataStructure;", "(TT;)Z", "remove", "toString", "Ljava/util/Set<TT;>;", "Lnet/i2p/kademlia/KBucketTrimmer<TT;>;", "<T:Lnet/i2p/data/SimpleDataStructure;>Ljava/lang/Object;Lnet/i2p/kademlia/KBucket<TT;>;" };
  static const J2ObjcClassInfo _NetI2pKademliaKBucketImpl = { "KBucketImpl", "net.i2p.kademlia", ptrTable, methods, fields, 7, 0x0, 12, 7, -1, -1, -1, 13, -1 };
  return &_NetI2pKademliaKBucketImpl;
}

@end

void NetI2pKademliaKBucketImpl_initWithNetI2pI2PAppContext_withInt_withInt_withInt_withNetI2pKademliaKBucketTrimmer_(NetI2pKademliaKBucketImpl *self, NetI2pI2PAppContext *context, jint begin, jint end, jint max, id<NetI2pKademliaKBucketTrimmer> trimmer) {
  NSObject_init(self);
  if (begin > end) @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("I$I", begin, @" > ", end));
  JreStrongAssign(&self->_context_, context);
  JreStrongAssignAndConsume(&self->_entries_, new_NetI2pUtilConcurrentHashSet_initWithInt_(max + 4));
  self->_begin_ = begin;
  self->_end_ = end;
  self->_max_ = max;
  JreStrongAssign(&self->_trimmer_, trimmer);
}

NetI2pKademliaKBucketImpl *new_NetI2pKademliaKBucketImpl_initWithNetI2pI2PAppContext_withInt_withInt_withInt_withNetI2pKademliaKBucketTrimmer_(NetI2pI2PAppContext *context, jint begin, jint end, jint max, id<NetI2pKademliaKBucketTrimmer> trimmer) {
  J2OBJC_NEW_IMPL(NetI2pKademliaKBucketImpl, initWithNetI2pI2PAppContext_withInt_withInt_withInt_withNetI2pKademliaKBucketTrimmer_, context, begin, end, max, trimmer)
}

NetI2pKademliaKBucketImpl *create_NetI2pKademliaKBucketImpl_initWithNetI2pI2PAppContext_withInt_withInt_withInt_withNetI2pKademliaKBucketTrimmer_(NetI2pI2PAppContext *context, jint begin, jint end, jint max, id<NetI2pKademliaKBucketTrimmer> trimmer) {
  J2OBJC_CREATE_IMPL(NetI2pKademliaKBucketImpl, initWithNetI2pI2PAppContext_withInt_withInt_withInt_withNetI2pKademliaKBucketTrimmer_, context, begin, end, max, trimmer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pKademliaKBucketImpl)
