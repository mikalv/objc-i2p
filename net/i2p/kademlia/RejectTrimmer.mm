//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/kademlia/RejectTrimmer.java
//

#include "J2ObjC_source.h"
#include "net/i2p/data/SimpleDataStructure.h"
#include "net/i2p/kademlia/KBucket.h"
#include "net/i2p/kademlia/RejectTrimmer.h"

@implementation NetI2pKademliaRejectTrimmer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pKademliaRejectTrimmer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)trimWithNetI2pKademliaKBucket:(id<NetI2pKademliaKBucket>)kbucket
        withNetI2pDataSimpleDataStructure:(NetI2pDataSimpleDataStructure *)toAdd {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(trimWithNetI2pKademliaKBucket:withNetI2pDataSimpleDataStructure:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "trim", "LNetI2pKademliaKBucket;LNetI2pDataSimpleDataStructure;", "(Lnet/i2p/kademlia/KBucket<TT;>;TT;)Z", "<T:Lnet/i2p/data/SimpleDataStructure;>Ljava/lang/Object;Lnet/i2p/kademlia/KBucketTrimmer<TT;>;" };
  static const J2ObjcClassInfo _NetI2pKademliaRejectTrimmer = { "RejectTrimmer", "net.i2p.kademlia", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, 3, -1 };
  return &_NetI2pKademliaRejectTrimmer;
}

@end

void NetI2pKademliaRejectTrimmer_init(NetI2pKademliaRejectTrimmer *self) {
  NSObject_init(self);
}

NetI2pKademliaRejectTrimmer *new_NetI2pKademliaRejectTrimmer_init() {
  J2OBJC_NEW_IMPL(NetI2pKademliaRejectTrimmer, init)
}

NetI2pKademliaRejectTrimmer *create_NetI2pKademliaRejectTrimmer_init() {
  J2OBJC_CREATE_IMPL(NetI2pKademliaRejectTrimmer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pKademliaRejectTrimmer)
