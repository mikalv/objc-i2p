//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/update/UpdateType.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "net/i2p/update/UpdateType.h"

__attribute__((unused)) static void NetI2pUpdateUpdateType_initWithNSString_withInt_(NetI2pUpdateUpdateType *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(NetI2pUpdateUpdateType)

NetI2pUpdateUpdateType *NetI2pUpdateUpdateType_values_[13];

@implementation NetI2pUpdateUpdateType

+ (NetI2pUpdateUpdateType *)TYPE_DUMMY {
  return JreEnum(NetI2pUpdateUpdateType, TYPE_DUMMY);
}

+ (NetI2pUpdateUpdateType *)NEWS {
  return JreEnum(NetI2pUpdateUpdateType, NEWS);
}

+ (NetI2pUpdateUpdateType *)ROUTER_SIGNED {
  return JreEnum(NetI2pUpdateUpdateType, ROUTER_SIGNED);
}

+ (NetI2pUpdateUpdateType *)ROUTER_UNSIGNED {
  return JreEnum(NetI2pUpdateUpdateType, ROUTER_UNSIGNED);
}

+ (NetI2pUpdateUpdateType *)PLUGIN {
  return JreEnum(NetI2pUpdateUpdateType, PLUGIN);
}

+ (NetI2pUpdateUpdateType *)GEOIP {
  return JreEnum(NetI2pUpdateUpdateType, GEOIP);
}

+ (NetI2pUpdateUpdateType *)BLOCKLIST {
  return JreEnum(NetI2pUpdateUpdateType, BLOCKLIST);
}

+ (NetI2pUpdateUpdateType *)RESEED {
  return JreEnum(NetI2pUpdateUpdateType, RESEED);
}

+ (NetI2pUpdateUpdateType *)HOMEPAGE {
  return JreEnum(NetI2pUpdateUpdateType, HOMEPAGE);
}

+ (NetI2pUpdateUpdateType *)ADDRESSBOOK {
  return JreEnum(NetI2pUpdateUpdateType, ADDRESSBOOK);
}

+ (NetI2pUpdateUpdateType *)ROUTER_SIGNED_SU3 {
  return JreEnum(NetI2pUpdateUpdateType, ROUTER_SIGNED_SU3);
}

+ (NetI2pUpdateUpdateType *)NEWS_SU3 {
  return JreEnum(NetI2pUpdateUpdateType, NEWS_SU3);
}

+ (NetI2pUpdateUpdateType *)ROUTER_DEV_SU3 {
  return JreEnum(NetI2pUpdateUpdateType, ROUTER_DEV_SU3);
}

+ (IOSObjectArray *)values {
  return NetI2pUpdateUpdateType_values();
}

+ (NetI2pUpdateUpdateType *)valueOfWithNSString:(NSString *)name {
  return NetI2pUpdateUpdateType_valueOfWithNSString_(name);
}

- (NetI2pUpdateUpdateType_Enum)toNSEnum {
  return (NetI2pUpdateUpdateType_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LNetI2pUpdateUpdateType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pUpdateUpdateType;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE_DUMMY", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "NEWS", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "ROUTER_SIGNED", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "ROUTER_UNSIGNED", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "PLUGIN", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "GEOIP", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "BLOCKLIST", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "RESEED", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "HOMEPAGE", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "ADDRESSBOOK", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "ROUTER_SIGNED_SU3", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 12, -1, -1 },
    { "NEWS_SU3", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 13, -1, -1 },
    { "ROUTER_DEV_SU3", "LNetI2pUpdateUpdateType;", .constantValue.asLong = 0, 0x4019, -1, 14, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(NetI2pUpdateUpdateType, TYPE_DUMMY), &JreEnum(NetI2pUpdateUpdateType, NEWS), &JreEnum(NetI2pUpdateUpdateType, ROUTER_SIGNED), &JreEnum(NetI2pUpdateUpdateType, ROUTER_UNSIGNED), &JreEnum(NetI2pUpdateUpdateType, PLUGIN), &JreEnum(NetI2pUpdateUpdateType, GEOIP), &JreEnum(NetI2pUpdateUpdateType, BLOCKLIST), &JreEnum(NetI2pUpdateUpdateType, RESEED), &JreEnum(NetI2pUpdateUpdateType, HOMEPAGE), &JreEnum(NetI2pUpdateUpdateType, ADDRESSBOOK), &JreEnum(NetI2pUpdateUpdateType, ROUTER_SIGNED_SU3), &JreEnum(NetI2pUpdateUpdateType, NEWS_SU3), &JreEnum(NetI2pUpdateUpdateType, ROUTER_DEV_SU3), "Ljava/lang/Enum<Lnet/i2p/update/UpdateType;>;" };
  static const J2ObjcClassInfo _NetI2pUpdateUpdateType = { "UpdateType", "net.i2p.update", ptrTable, methods, fields, 7, 0x4011, 2, 13, -1, -1, -1, 15, -1 };
  return &_NetI2pUpdateUpdateType;
}

+ (void)initialize {
  if (self == [NetI2pUpdateUpdateType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 13 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 13; i++) {
      ((void)(NetI2pUpdateUpdateType_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      NetI2pUpdateUpdateType_initWithNSString_withInt_(e, JreEnumConstantName(NetI2pUpdateUpdateType_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(NetI2pUpdateUpdateType)
  }
}

@end

void NetI2pUpdateUpdateType_initWithNSString_withInt_(NetI2pUpdateUpdateType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *NetI2pUpdateUpdateType_values() {
  NetI2pUpdateUpdateType_initialize();
  return [IOSObjectArray arrayWithObjects:NetI2pUpdateUpdateType_values_ count:13 type:NetI2pUpdateUpdateType_class_()];
}

NetI2pUpdateUpdateType *NetI2pUpdateUpdateType_valueOfWithNSString_(NSString *name) {
  NetI2pUpdateUpdateType_initialize();
  for (int i = 0; i < 13; i++) {
    NetI2pUpdateUpdateType *e = NetI2pUpdateUpdateType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

NetI2pUpdateUpdateType *NetI2pUpdateUpdateType_fromOrdinal(NSUInteger ordinal) {
  NetI2pUpdateUpdateType_initialize();
  if (ordinal >= 13) {
    return nil;
  }
  return NetI2pUpdateUpdateType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pUpdateUpdateType)
