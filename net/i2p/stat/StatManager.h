//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/stat/StatManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pStatStatManager")
#ifdef RESTRICT_NetI2pStatStatManager
#define INCLUDE_ALL_NetI2pStatStatManager 0
#else
#define INCLUDE_ALL_NetI2pStatStatManager 1
#endif
#undef RESTRICT_NetI2pStatStatManager

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pStatStatManager_) && (INCLUDE_ALL_NetI2pStatStatManager || defined(INCLUDE_NetI2pStatStatManager))
#define NetI2pStatStatManager_

@class IOSLongArray;
@class JavaIoOutputStream;
@class NetI2pI2PAppContext;
@class NetI2pStatFrequencyStat;
@class NetI2pStatRateStat;
@protocol JavaUtilMap;
@protocol JavaUtilSet;
@protocol NetI2pStatStatLog;

@interface NetI2pStatStatManager : NSObject
@property (readonly, copy, class) NSString *PROP_STAT_FILTER NS_SWIFT_NAME(PROP_STAT_FILTER);
@property (readonly, copy, class) NSString *PROP_STAT_FILE NS_SWIFT_NAME(PROP_STAT_FILE);
@property (readonly, copy, class) NSString *DEFAULT_STAT_FILE NS_SWIFT_NAME(DEFAULT_STAT_FILE);
@property (readonly, copy, class) NSString *PROP_STAT_FULL NS_SWIFT_NAME(PROP_STAT_FULL);

+ (NSString *)PROP_STAT_FILTER;

+ (NSString *)PROP_STAT_FILE;

+ (NSString *)DEFAULT_STAT_FILE;

+ (NSString *)PROP_STAT_FULL;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (void)addRateDataWithNSString:(NSString *)name
                       withLong:(jlong)data;

- (void)addRateDataWithNSString:(NSString *)name
                       withLong:(jlong)data
                       withLong:(jlong)eventDuration;

- (void)coalesceStats;

- (void)createFrequencyStatWithNSString:(NSString *)name
                           withNSString:(NSString *)description_
                           withNSString:(NSString *)group
                          withLongArray:(IOSLongArray *)periods;

- (void)createRateStatWithNSString:(NSString *)name
                      withNSString:(NSString *)description_
                      withNSString:(NSString *)group
                     withLongArray:(IOSLongArray *)periods;

- (void)createRequiredFrequencyStatWithNSString:(NSString *)name
                                   withNSString:(NSString *)description_
                                   withNSString:(NSString *)group
                                  withLongArray:(IOSLongArray *)periods;

- (void)createRequiredRateStatWithNSString:(NSString *)name
                              withNSString:(NSString *)description_
                              withNSString:(NSString *)group
                             withLongArray:(IOSLongArray *)periods;

- (NetI2pStatFrequencyStat *)getFrequencyWithNSString:(NSString *)name;

- (id<JavaUtilSet>)getFrequencyNames;

- (NetI2pStatRateStat *)getRateWithNSString:(NSString *)name;

- (id<JavaUtilSet>)getRateNames;

- (NSString *)getStatFile;

- (NSString *)getStatFilter;

- (id<NetI2pStatStatLog>)getStatLog;

- (id<JavaUtilMap>)getStatsByGroup;

- (jboolean)ignoreStatWithNSString:(NSString *)statName;

- (jboolean)isFrequencyWithNSString:(NSString *)statName;

- (jboolean)isRateWithNSString:(NSString *)statName;

- (void)removeRateStatWithNSString:(NSString *)name;

- (void)setStatLogWithNetI2pStatStatLog:(id<NetI2pStatStatLog>)log;

- (void)shutdown;

- (void)storeWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                       withNSString:(NSString *)prefix;

- (void)updateFrequencyWithNSString:(NSString *)name;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pStatStatManager)

inline NSString *NetI2pStatStatManager_get_PROP_STAT_FILTER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pStatStatManager_PROP_STAT_FILTER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pStatStatManager, PROP_STAT_FILTER, NSString *)

inline NSString *NetI2pStatStatManager_get_PROP_STAT_FILE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pStatStatManager_PROP_STAT_FILE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pStatStatManager, PROP_STAT_FILE, NSString *)

inline NSString *NetI2pStatStatManager_get_DEFAULT_STAT_FILE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pStatStatManager_DEFAULT_STAT_FILE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pStatStatManager, DEFAULT_STAT_FILE, NSString *)

inline NSString *NetI2pStatStatManager_get_PROP_STAT_FULL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pStatStatManager_PROP_STAT_FULL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pStatStatManager, PROP_STAT_FULL, NSString *)

FOUNDATION_EXPORT void NetI2pStatStatManager_initWithNetI2pI2PAppContext_(NetI2pStatStatManager *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pStatStatManager *new_NetI2pStatStatManager_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pStatStatManager *create_NetI2pStatStatManager_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pStatStatManager)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pStatStatManager")
