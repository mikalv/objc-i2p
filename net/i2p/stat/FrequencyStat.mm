//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/stat/FrequencyStat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/OutputStream.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "net/i2p/data/DataHelper.h"
#include "net/i2p/stat/Frequency.h"
#include "net/i2p/stat/FrequencyStat.h"

@interface NetI2pStatFrequencyStat () {
 @public
  NSString *_statName_;
  NSString *_groupName_;
  NSString *_description_;
  IOSObjectArray *_frequencies_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pStatFrequencyStat, _statName_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pStatFrequencyStat, _groupName_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pStatFrequencyStat, _description_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pStatFrequencyStat, _frequencies_, IOSObjectArray *)

inline NSString *NetI2pStatFrequencyStat_get_NL(void);
static NSString *NetI2pStatFrequencyStat_NL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pStatFrequencyStat, NL, NSString *)

J2OBJC_INITIALIZED_DEFN(NetI2pStatFrequencyStat)

@implementation NetI2pStatFrequencyStat

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)description_
                    withNSString:(NSString *)group
                   withLongArray:(IOSLongArray *)periods {
  NetI2pStatFrequencyStat_initWithNSString_withNSString_withNSString_withLongArray_(self, name, description_, group, periods);
  return self;
}

- (void)eventOccurred {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(_frequencies_))->size_; i++) [((NetI2pStatFrequency *) nil_chk(IOSObjectArray_Get(_frequencies_, i))) eventOccurred];
}

- (void)coalesceStats {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(_frequencies_))->size_; i++) [((NetI2pStatFrequency *) nil_chk(IOSObjectArray_Get(_frequencies_, i))) recalculate];
}

- (NSString *)getName {
  return _statName_;
}

- (NSString *)getGroupName {
  return _groupName_;
}

- (NSString *)getDescription {
  return _description_;
}

- (IOSLongArray *)getPeriods {
  IOSLongArray *rv = [IOSLongArray arrayWithLength:((IOSObjectArray *) nil_chk(_frequencies_))->size_];
  for (jint i = 0; i < _frequencies_->size_; i++) *IOSLongArray_GetRef(rv, i) = [((NetI2pStatFrequency *) nil_chk(IOSObjectArray_Get(_frequencies_, i))) getPeriod];
  return rv;
}

- (NetI2pStatFrequency *)getFrequencyWithLong:(jlong)period {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(_frequencies_))->size_; i++) {
    if ([((NetI2pStatFrequency *) nil_chk(IOSObjectArray_Get(_frequencies_, i))) getPeriod] == period) return IOSObjectArray_Get(_frequencies_, i);
  }
  return nil;
}

- (jlong)getEventCount {
  if ((_frequencies_ == nil) || (((IOSObjectArray *) nil_chk(_frequencies_))->size_ <= 0)) return 0;
  return [((NetI2pStatFrequency *) nil_chk(IOSObjectArray_Get(nil_chk(_frequencies_), 0))) getEventCount];
}

- (jlong)getFrequency {
  if ((_frequencies_ == nil) || (((IOSObjectArray *) nil_chk(_frequencies_))->size_ <= 0)) return JavaLangLong_MAX_VALUE;
  jdouble d = [((NetI2pStatFrequency *) nil_chk(IOSObjectArray_Get(nil_chk(_frequencies_), 0))) getStrictAverageInterval];
  if (d > [((NetI2pStatFrequency *) nil_chk(IOSObjectArray_Get(_frequencies_, 0))) getPeriod]) return JavaLangLong_MAX_VALUE;
  return JavaLangMath_roundWithDouble_(d);
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(_statName_)) hash]);
}

- (jboolean)isEqual:(id)obj {
  if ((obj == nil) || !([obj isKindOfClass:[NetI2pStatFrequencyStat class]])) return false;
  return [((NSString *) nil_chk(_statName_)) isEqual:((NetI2pStatFrequencyStat *) nil_chk(((NetI2pStatFrequencyStat *) cast_chk(obj, [NetI2pStatFrequencyStat class]))))->_statName_];
}

- (void)storeWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                       withNSString:(NSString *)prefix {
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(1024);
  [buf appendWithNSString:NetI2pStatFrequencyStat_NL];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"################################################################################"])) appendWithNSString:NetI2pStatFrequencyStat_NL];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"# Frequency: "])) appendWithNSString:_groupName_])) appendWithNSString:@": "])) appendWithNSString:_statName_])) appendWithNSString:NetI2pStatFrequencyStat_NL];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"# "])) appendWithNSString:_description_])) appendWithNSString:NetI2pStatFrequencyStat_NL];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"# "])) appendWithNSString:NetI2pStatFrequencyStat_NL])) appendWithNSString:NetI2pStatFrequencyStat_NL];
  [((JavaIoOutputStream *) nil_chk(outArg)) writeWithByteArray:[((NSString *) nil_chk([buf description])) java_getBytesWithCharsetName:@"UTF-8"]];
  [buf setLengthWithInt:0];
  {
    IOSObjectArray *a__ = _frequencies_;
    NetI2pStatFrequency * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NetI2pStatFrequency * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NetI2pStatFrequency *r = *b__++;
      [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"#######"])) appendWithNSString:NetI2pStatFrequencyStat_NL];
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"# Period : "])) appendWithNSString:NetI2pDataDataHelper_formatDurationWithLong_([((NetI2pStatFrequency *) nil_chk(r)) getPeriod])])) appendWithNSString:@" for rate "])) appendWithNSString:_groupName_])) appendWithNSString:@" - "])) appendWithNSString:_statName_])) appendWithNSString:NetI2pStatFrequencyStat_NL];
      [buf appendWithNSString:NetI2pStatFrequencyStat_NL];
      [r storeWithJavaLangStringBuilder:buf];
      [outArg writeWithByteArray:[((NSString *) nil_chk([buf description])) java_getBytesWithCharsetName:@"UTF-8"]];
      [buf setLengthWithInt:0];
    }
  }
}

- (void)dealloc {
  RELEASE_(_statName_);
  RELEASE_(_groupName_);
  RELEASE_(_description_);
  RELEASE_(_frequencies_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pStatFrequency;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:withLongArray:);
  methods[1].selector = @selector(eventOccurred);
  methods[2].selector = @selector(coalesceStats);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(getGroupName);
  methods[5].selector = @selector(getDescription);
  methods[6].selector = @selector(getPeriods);
  methods[7].selector = @selector(getFrequencyWithLong:);
  methods[8].selector = @selector(getEventCount);
  methods[9].selector = @selector(getFrequency);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(isEqual:);
  methods[12].selector = @selector(storeWithJavaIoOutputStream:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_statName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_groupName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_description_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_frequencies_", "[LNetI2pStatFrequency;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "NL", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;[J", "getFrequency", "J", "hashCode", "equals", "LNSObject;", "store", "LJavaIoOutputStream;LNSString;", "LJavaIoIOException;", &NetI2pStatFrequencyStat_NL };
  static const J2ObjcClassInfo _NetI2pStatFrequencyStat = { "FrequencyStat", "net.i2p.stat", ptrTable, methods, fields, 7, 0x1, 13, 5, -1, -1, -1, -1, -1 };
  return &_NetI2pStatFrequencyStat;
}

+ (void)initialize {
  if (self == [NetI2pStatFrequencyStat class]) {
    JreStrongAssign(&NetI2pStatFrequencyStat_NL, JavaLangSystem_getPropertyWithNSString_(@"line.separator"));
    J2OBJC_SET_INITIALIZED(NetI2pStatFrequencyStat)
  }
}

@end

void NetI2pStatFrequencyStat_initWithNSString_withNSString_withNSString_withLongArray_(NetI2pStatFrequencyStat *self, NSString *name, NSString *description_, NSString *group, IOSLongArray *periods) {
  NSObject_init(self);
  JreStrongAssign(&self->_statName_, name);
  JreStrongAssign(&self->_description_, description_);
  JreStrongAssign(&self->_groupName_, group);
  JreStrongAssignAndConsume(&self->_frequencies_, [IOSObjectArray newArrayWithLength:((IOSLongArray *) nil_chk(periods))->size_ type:NetI2pStatFrequency_class_()]);
  for (jint i = 0; i < periods->size_; i++) IOSObjectArray_SetAndConsume(self->_frequencies_, i, new_NetI2pStatFrequency_initWithLong_(IOSLongArray_Get(periods, i)));
}

NetI2pStatFrequencyStat *new_NetI2pStatFrequencyStat_initWithNSString_withNSString_withNSString_withLongArray_(NSString *name, NSString *description_, NSString *group, IOSLongArray *periods) {
  J2OBJC_NEW_IMPL(NetI2pStatFrequencyStat, initWithNSString_withNSString_withNSString_withLongArray_, name, description_, group, periods)
}

NetI2pStatFrequencyStat *create_NetI2pStatFrequencyStat_initWithNSString_withNSString_withNSString_withLongArray_(NSString *name, NSString *description_, NSString *group, IOSLongArray *periods) {
  J2OBJC_CREATE_IMPL(NetI2pStatFrequencyStat, initWithNSString_withNSString_withNSString_withLongArray_, name, description_, group, periods)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pStatFrequencyStat)
