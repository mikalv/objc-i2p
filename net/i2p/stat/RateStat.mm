//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/stat/RateStat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/OutputStream.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/Properties.h"
#include "net/i2p/data/DataHelper.h"
#include "net/i2p/stat/Rate.h"
#include "net/i2p/stat/RateStat.h"
#include "net/i2p/stat/StatLog.h"

@interface NetI2pStatRateStat () {
 @public
  NSString *_statName_;
  NSString *_groupName_;
  NSString *_description_;
  id<NetI2pStatStatLog> _statLog_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pStatRateStat, _statName_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pStatRateStat, _groupName_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pStatRateStat, _description_, NSString *)
J2OBJC_FIELD_SETTER(NetI2pStatRateStat, _statLog_, id<NetI2pStatStatLog>)

inline NSString *NetI2pStatRateStat_get_NL(void);
static NSString *NetI2pStatRateStat_NL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pStatRateStat, NL, NSString *)

__attribute__((unused)) static IOSObjectArray *NetI2pStatRateStat__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *NetI2pStatRateStat__Annotations$1(void);

J2OBJC_INITIALIZED_DEFN(NetI2pStatRateStat)

@implementation NetI2pStatRateStat

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)description_
                    withNSString:(NSString *)group
                   withLongArray:(IOSLongArray *)periods {
  NetI2pStatRateStat_initWithNSString_withNSString_withNSString_withLongArray_(self, name, description_, group, periods);
  return self;
}

- (void)setStatLogWithNetI2pStatStatLog:(id<NetI2pStatStatLog>)sl {
  JreStrongAssign(&_statLog_, sl);
}

- (void)addDataWithLong:(jlong)value
               withLong:(jlong)eventDuration {
  if (_statLog_ != nil) [_statLog_ addDataWithNSString:_groupName_ withNSString:_statName_ withLong:value withLong:eventDuration];
  {
    IOSObjectArray *a__ = _rates_;
    NetI2pStatRate * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NetI2pStatRate * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NetI2pStatRate *r = *b__++;
      [((NetI2pStatRate *) nil_chk(r)) addDataWithLong:value withLong:eventDuration];
    }
  }
}

- (void)addDataWithLong:(jlong)value {
  if (_statLog_ != nil) [_statLog_ addDataWithNSString:_groupName_ withNSString:_statName_ withLong:value withLong:0];
  {
    IOSObjectArray *a__ = _rates_;
    NetI2pStatRate * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NetI2pStatRate * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NetI2pStatRate *r = *b__++;
      [((NetI2pStatRate *) nil_chk(r)) addDataWithLong:value];
    }
  }
}

- (void)coalesceStats {
  {
    IOSObjectArray *a__ = _rates_;
    NetI2pStatRate * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NetI2pStatRate * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NetI2pStatRate *r = *b__++;
      [((NetI2pStatRate *) nil_chk(r)) coalesce];
    }
  }
}

- (NSString *)getName {
  return _statName_;
}

- (NSString *)getGroupName {
  return _groupName_;
}

- (NSString *)getDescription {
  return _description_;
}

- (IOSLongArray *)getPeriods {
  IOSLongArray *rv = [IOSLongArray arrayWithLength:((IOSObjectArray *) nil_chk(_rates_))->size_];
  for (jint i = 0; i < _rates_->size_; i++) *IOSLongArray_GetRef(rv, i) = [((NetI2pStatRate *) nil_chk(IOSObjectArray_Get(_rates_, i))) getPeriod];
  return rv;
}

- (jdouble)getLifetimeAverageValue {
  return [((NetI2pStatRate *) nil_chk(IOSObjectArray_Get(nil_chk(_rates_), 0))) getLifetimeAverageValue];
}

- (jlong)getLifetimeEventCount {
  return [((NetI2pStatRate *) nil_chk(IOSObjectArray_Get(nil_chk(_rates_), 0))) getLifetimeEventCount];
}

- (NetI2pStatRate *)getRateWithLong:(jlong)period {
  {
    IOSObjectArray *a__ = _rates_;
    NetI2pStatRate * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NetI2pStatRate * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NetI2pStatRate *r = *b__++;
      if ([((NetI2pStatRate *) nil_chk(r)) getPeriod] == period) return r;
    }
  }
  return nil;
}

- (void)addRateWithLong:(jlong)period {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)removeRateWithLong:(jlong)period {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jboolean)containsRateWithLong:(jlong)period {
  return [self getRateWithLong:period] != nil;
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(_statName_)) hash]);
}

- (NSString *)description {
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(4096);
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:[self getGroupName]])) appendWithChar:'.'])) appendWithNSString:[self getName]])) appendWithNSString:@": "])) appendWithNSString:[self getDescription]])) appendWithChar:0x000a];
  IOSLongArray *periods = [self getPeriods];
  JavaUtilArrays_sortWithLongArray_(periods);
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(periods))->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithChar:0x0009])) appendWithLong:IOSLongArray_Get(periods, i)])) appendWithChar:':'];
    NetI2pStatRate *curRate = [self getRateWithLong:IOSLongArray_Get(periods, i)];
    [buf appendWithNSString:[((NetI2pStatRate *) nil_chk(curRate)) description]];
    [buf appendWithNSString:NetI2pStatRateStat_NL];
  }
  return [buf description];
}

- (jboolean)isEqual:(id)obj {
  if ((obj == nil) || !([obj isKindOfClass:[NetI2pStatRateStat class]])) return false;
  if (obj == self) return true;
  NetI2pStatRateStat *rs = (NetI2pStatRateStat *) cast_chk(obj, [NetI2pStatRateStat class]);
  if ([self nameGroupDescEqualsWithNetI2pStatRateStat:rs]) return JavaUtilArrays_deepEqualsWithNSObjectArray_withNSObjectArray_(self->_rates_, ((NetI2pStatRateStat *) nil_chk(rs))->_rates_);
  return false;
}

- (jboolean)nameGroupDescEqualsWithNetI2pStatRateStat:(NetI2pStatRateStat *)rs {
  return NetI2pDataDataHelper_eqWithId_withId_([self getGroupName], [((NetI2pStatRateStat *) nil_chk(rs)) getGroupName]) && NetI2pDataDataHelper_eqWithId_withId_([self getDescription], [rs getDescription]) && NetI2pDataDataHelper_eqWithId_withId_([self getName], [rs getName]);
}

- (void)storeWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                       withNSString:(NSString *)prefix {
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(1024);
  [buf appendWithNSString:NetI2pStatRateStat_NL];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"################################################################################"])) appendWithNSString:NetI2pStatRateStat_NL];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"# Rate: "])) appendWithNSString:_groupName_])) appendWithNSString:@": "])) appendWithNSString:_statName_])) appendWithNSString:NetI2pStatRateStat_NL];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"# "])) appendWithNSString:_description_])) appendWithNSString:NetI2pStatRateStat_NL];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"# "])) appendWithNSString:NetI2pStatRateStat_NL])) appendWithNSString:NetI2pStatRateStat_NL];
  [((JavaIoOutputStream *) nil_chk(outArg)) writeWithByteArray:[((NSString *) nil_chk([buf description])) java_getBytesWithCharsetName:@"UTF-8"]];
  [buf setLengthWithInt:0];
  {
    IOSObjectArray *a__ = _rates_;
    NetI2pStatRate * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NetI2pStatRate * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NetI2pStatRate *r = *b__++;
      [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"#######"])) appendWithNSString:NetI2pStatRateStat_NL];
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"# Period : "])) appendWithNSString:NetI2pDataDataHelper_formatDurationWithLong_([((NetI2pStatRate *) nil_chk(r)) getPeriod])])) appendWithNSString:@" for rate "])) appendWithNSString:_groupName_])) appendWithNSString:@" - "])) appendWithNSString:_statName_])) appendWithNSString:NetI2pStatRateStat_NL];
      [buf appendWithNSString:NetI2pStatRateStat_NL];
      NSString *curPrefix = JreStrcat("$C$", prefix, '.', NetI2pDataDataHelper_formatDurationWithLong_([r getPeriod]));
      [r storeWithNSString:curPrefix withJavaLangStringBuilder:buf];
      [outArg writeWithByteArray:[((NSString *) nil_chk([buf description])) java_getBytesWithCharsetName:@"UTF-8"]];
      [buf setLengthWithInt:0];
    }
  }
}

- (void)load__WithJavaUtilProperties:(JavaUtilProperties *)props
                        withNSString:(NSString *)prefix
                         withBoolean:(jboolean)treatAsCurrent {
  {
    IOSObjectArray *a__ = _rates_;
    NetI2pStatRate * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NetI2pStatRate * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NetI2pStatRate *r = *b__++;
      jlong period = [((NetI2pStatRate *) nil_chk(r)) getPeriod];
      NSString *curPrefix = JreStrcat("$C$", prefix, '.', NetI2pDataDataHelper_formatDurationWithLong_(period));
      [r load__WithJavaUtilProperties:props withNSString:curPrefix withBoolean:treatAsCurrent];
    }
  }
}

- (void)dealloc {
  RELEASE_(_statName_);
  RELEASE_(_groupName_);
  RELEASE_(_description_);
  RELEASE_(_rates_);
  RELEASE_(_statLog_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pStatRate;", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 5, -1, -1, 8, -1 },
    { NULL, "V", 0x1, 9, 5, -1, -1, 10, -1 },
    { NULL, "Z", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 12, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, 20, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, 23, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:withLongArray:);
  methods[1].selector = @selector(setStatLogWithNetI2pStatStatLog:);
  methods[2].selector = @selector(addDataWithLong:withLong:);
  methods[3].selector = @selector(addDataWithLong:);
  methods[4].selector = @selector(coalesceStats);
  methods[5].selector = @selector(getName);
  methods[6].selector = @selector(getGroupName);
  methods[7].selector = @selector(getDescription);
  methods[8].selector = @selector(getPeriods);
  methods[9].selector = @selector(getLifetimeAverageValue);
  methods[10].selector = @selector(getLifetimeEventCount);
  methods[11].selector = @selector(getRateWithLong:);
  methods[12].selector = @selector(addRateWithLong:);
  methods[13].selector = @selector(removeRateWithLong:);
  methods[14].selector = @selector(containsRateWithLong:);
  methods[15].selector = @selector(hash);
  methods[16].selector = @selector(description);
  methods[17].selector = @selector(isEqual:);
  methods[18].selector = @selector(nameGroupDescEqualsWithNetI2pStatRateStat:);
  methods[19].selector = @selector(storeWithJavaIoOutputStream:withNSString:);
  methods[20].selector = @selector(load__WithJavaUtilProperties:withNSString:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_statName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_groupName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_description_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_rates_", "[LNetI2pStatRate;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_statLog_", "LNetI2pStatStatLog;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "NL", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 24, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;[J", "setStatLog", "LNetI2pStatStatLog;", "addData", "JJ", "J", "getRate", "addRate", (void *)&NetI2pStatRateStat__Annotations$0, "removeRate", (void *)&NetI2pStatRateStat__Annotations$1, "containsRate", "hashCode", "toString", "equals", "LNSObject;", "nameGroupDescEquals", "LNetI2pStatRateStat;", "store", "LJavaIoOutputStream;LNSString;", "LJavaIoIOException;", "load", "LJavaUtilProperties;LNSString;Z", "LJavaLangIllegalArgumentException;", &NetI2pStatRateStat_NL };
  static const J2ObjcClassInfo _NetI2pStatRateStat = { "RateStat", "net.i2p.stat", ptrTable, methods, fields, 7, 0x1, 21, 6, -1, -1, -1, -1, -1 };
  return &_NetI2pStatRateStat;
}

+ (void)initialize {
  if (self == [NetI2pStatRateStat class]) {
    JreStrongAssign(&NetI2pStatRateStat_NL, JavaLangSystem_getPropertyWithNSString_(@"line.separator"));
    J2OBJC_SET_INITIALIZED(NetI2pStatRateStat)
  }
}

@end

void NetI2pStatRateStat_initWithNSString_withNSString_withNSString_withLongArray_(NetI2pStatRateStat *self, NSString *name, NSString *description_, NSString *group, IOSLongArray *periods) {
  NSObject_init(self);
  JreStrongAssign(&self->_statName_, name);
  JreStrongAssign(&self->_description_, description_);
  JreStrongAssign(&self->_groupName_, group);
  if (((IOSLongArray *) nil_chk(periods))->size_ == 0) @throw create_JavaLangIllegalArgumentException_init();
  IOSLongArray *periodsCopy = [IOSLongArray arrayWithLength:periods->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(periods, 0, periodsCopy, 0, periods->size_);
  JavaUtilArrays_sortWithLongArray_(periodsCopy);
  JreStrongAssignAndConsume(&self->_rates_, [IOSObjectArray newArrayWithLength:periodsCopy->size_ type:NetI2pStatRate_class_()]);
  for (jint i = 0; i < periodsCopy->size_; i++) {
    NetI2pStatRate *rate = create_NetI2pStatRate_initWithLong_(IOSLongArray_Get(periodsCopy, i));
    [rate setRateStatWithNetI2pStatRateStat:self];
    IOSObjectArray_Set(self->_rates_, i, rate);
  }
}

NetI2pStatRateStat *new_NetI2pStatRateStat_initWithNSString_withNSString_withNSString_withLongArray_(NSString *name, NSString *description_, NSString *group, IOSLongArray *periods) {
  J2OBJC_NEW_IMPL(NetI2pStatRateStat, initWithNSString_withNSString_withNSString_withLongArray_, name, description_, group, periods)
}

NetI2pStatRateStat *create_NetI2pStatRateStat_initWithNSString_withNSString_withNSString_withLongArray_(NSString *name, NSString *description_, NSString *group, IOSLongArray *periods) {
  J2OBJC_CREATE_IMPL(NetI2pStatRateStat, initWithNSString_withNSString_withNSString_withLongArray_, name, description_, group, periods)
}

IOSObjectArray *NetI2pStatRateStat__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pStatRateStat__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pStatRateStat)
