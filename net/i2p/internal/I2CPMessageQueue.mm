//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/internal/I2CPMessageQueue.java
//

#include "J2ObjC_source.h"
#include "net/i2p/data/i2cp/I2CPMessage.h"
#include "net/i2p/internal/I2CPMessageQueue.h"
#include "net/i2p/internal/PoisonI2CPMessage.h"

@implementation NetI2pInternalI2CPMessageQueue

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pInternalI2CPMessageQueue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)offerWithNetI2pDataI2cpI2CPMessage:(id<NetI2pDataI2cpI2CPMessage>)msg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)offerWithNetI2pDataI2cpI2CPMessage:(id<NetI2pDataI2cpI2CPMessage>)msg
                                      withLong:(jlong)timeout {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<NetI2pDataI2cpI2CPMessage>)poll {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)putWithNetI2pDataI2cpI2CPMessage:(id<NetI2pDataI2cpI2CPMessage>)msg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<NetI2pDataI2cpI2CPMessage>)take {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)close {
  [self offerWithNetI2pDataI2cpI2CPMessage:create_NetI2pInternalPoisonI2CPMessage_init()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 0, 2, 3, -1, -1, -1 },
    { NULL, "LNetI2pDataI2cpI2CPMessage;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 1, 3, -1, -1, -1 },
    { NULL, "LNetI2pDataI2cpI2CPMessage;", 0x401, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(offerWithNetI2pDataI2cpI2CPMessage:);
  methods[2].selector = @selector(offerWithNetI2pDataI2cpI2CPMessage:withLong:);
  methods[3].selector = @selector(poll);
  methods[4].selector = @selector(putWithNetI2pDataI2cpI2CPMessage:);
  methods[5].selector = @selector(take);
  methods[6].selector = @selector(close);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "offer", "LNetI2pDataI2cpI2CPMessage;", "LNetI2pDataI2cpI2CPMessage;J", "LJavaLangInterruptedException;", "put" };
  static const J2ObjcClassInfo _NetI2pInternalI2CPMessageQueue = { "I2CPMessageQueue", "net.i2p.internal", ptrTable, methods, NULL, 7, 0x401, 7, 0, -1, -1, -1, -1, -1 };
  return &_NetI2pInternalI2CPMessageQueue;
}

@end

void NetI2pInternalI2CPMessageQueue_init(NetI2pInternalI2CPMessageQueue *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pInternalI2CPMessageQueue)
