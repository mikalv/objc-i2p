//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/SU3File.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoSU3File")
#ifdef RESTRICT_NetI2pCryptoSU3File
#define INCLUDE_ALL_NetI2pCryptoSU3File 0
#else
#define INCLUDE_ALL_NetI2pCryptoSU3File 1
#endif
#undef RESTRICT_NetI2pCryptoSU3File

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoSU3File_) && (INCLUDE_ALL_NetI2pCryptoSU3File || defined(INCLUDE_NetI2pCryptoSU3File))
#define NetI2pCryptoSU3File_

@class IOSObjectArray;
@class JavaIoFile;
@class NetI2pCryptoSigType;
@class NetI2pI2PAppContext;
@protocol JavaSecurityPrivateKey;

@interface NetI2pCryptoSU3File : NSObject
@property (readonly, copy, class) NSString *MAGIC NS_SWIFT_NAME(MAGIC);
@property (readonly, class) jint TYPE_ZIP NS_SWIFT_NAME(TYPE_ZIP);
@property (readonly, class) jint TYPE_XML NS_SWIFT_NAME(TYPE_XML);
@property (readonly, class) jint TYPE_HTML NS_SWIFT_NAME(TYPE_HTML);
@property (readonly, class) jint TYPE_XML_GZ NS_SWIFT_NAME(TYPE_XML_GZ);
@property (readonly, class) jint TYPE_TXT_GZ NS_SWIFT_NAME(TYPE_TXT_GZ);
@property (readonly, class) jint CONTENT_UNKNOWN NS_SWIFT_NAME(CONTENT_UNKNOWN);
@property (readonly, class) jint CONTENT_ROUTER NS_SWIFT_NAME(CONTENT_ROUTER);
@property (readonly, class) jint CONTENT_PLUGIN NS_SWIFT_NAME(CONTENT_PLUGIN);
@property (readonly, class) jint CONTENT_RESEED NS_SWIFT_NAME(CONTENT_RESEED);
@property (readonly, class) jint CONTENT_NEWS NS_SWIFT_NAME(CONTENT_NEWS);
@property (readonly, class) jint CONTENT_BLOCKLIST NS_SWIFT_NAME(CONTENT_BLOCKLIST);

+ (NSString *)MAGIC;

+ (jint)TYPE_ZIP;

+ (jint)TYPE_XML;

+ (jint)TYPE_HTML;

+ (jint)TYPE_XML_GZ;

+ (jint)TYPE_TXT_GZ;

+ (jint)CONTENT_UNKNOWN;

+ (jint)CONTENT_ROUTER;

+ (jint)CONTENT_PLUGIN;

+ (jint)CONTENT_RESEED;

+ (jint)CONTENT_NEWS;

+ (jint)CONTENT_BLOCKLIST;

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)file;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context
                                       withJavaIoFile:(JavaIoFile *)file;

- (instancetype __nonnull)initWithNSString:(NSString *)file;

- (jint)getContentType;

- (jint)getFileType;

- (NSString *)getSignerString;

- (NetI2pCryptoSigType *)getSigType;

- (NSString *)getVersionString;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (void)setVerifySignatureWithBoolean:(jboolean)shouldVerify;

- (jboolean)verify;

- (jboolean)verifyAndMigrateWithJavaIoFile:(JavaIoFile *)migrateTo;

- (void)verifyHeader;

- (void)writeWithJavaIoFile:(JavaIoFile *)content
                    withInt:(jint)fileType
                    withInt:(jint)contentType
               withNSString:(NSString *)version_
               withNSString:(NSString *)signer
 withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privkey
    withNetI2pCryptoSigType:(NetI2pCryptoSigType *)sigType;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pCryptoSU3File)

inline NSString *NetI2pCryptoSU3File_get_MAGIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pCryptoSU3File_MAGIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pCryptoSU3File, MAGIC, NSString *)

inline jint NetI2pCryptoSU3File_get_TYPE_ZIP(void);
#define NetI2pCryptoSU3File_TYPE_ZIP 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoSU3File, TYPE_ZIP, jint)

inline jint NetI2pCryptoSU3File_get_TYPE_XML(void);
#define NetI2pCryptoSU3File_TYPE_XML 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoSU3File, TYPE_XML, jint)

inline jint NetI2pCryptoSU3File_get_TYPE_HTML(void);
#define NetI2pCryptoSU3File_TYPE_HTML 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoSU3File, TYPE_HTML, jint)

inline jint NetI2pCryptoSU3File_get_TYPE_XML_GZ(void);
#define NetI2pCryptoSU3File_TYPE_XML_GZ 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoSU3File, TYPE_XML_GZ, jint)

inline jint NetI2pCryptoSU3File_get_TYPE_TXT_GZ(void);
#define NetI2pCryptoSU3File_TYPE_TXT_GZ 4
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoSU3File, TYPE_TXT_GZ, jint)

inline jint NetI2pCryptoSU3File_get_CONTENT_UNKNOWN(void);
#define NetI2pCryptoSU3File_CONTENT_UNKNOWN 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoSU3File, CONTENT_UNKNOWN, jint)

inline jint NetI2pCryptoSU3File_get_CONTENT_ROUTER(void);
#define NetI2pCryptoSU3File_CONTENT_ROUTER 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoSU3File, CONTENT_ROUTER, jint)

inline jint NetI2pCryptoSU3File_get_CONTENT_PLUGIN(void);
#define NetI2pCryptoSU3File_CONTENT_PLUGIN 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoSU3File, CONTENT_PLUGIN, jint)

inline jint NetI2pCryptoSU3File_get_CONTENT_RESEED(void);
#define NetI2pCryptoSU3File_CONTENT_RESEED 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoSU3File, CONTENT_RESEED, jint)

inline jint NetI2pCryptoSU3File_get_CONTENT_NEWS(void);
#define NetI2pCryptoSU3File_CONTENT_NEWS 4
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoSU3File, CONTENT_NEWS, jint)

inline jint NetI2pCryptoSU3File_get_CONTENT_BLOCKLIST(void);
#define NetI2pCryptoSU3File_CONTENT_BLOCKLIST 5
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoSU3File, CONTENT_BLOCKLIST, jint)

FOUNDATION_EXPORT void NetI2pCryptoSU3File_initWithNSString_(NetI2pCryptoSU3File *self, NSString *file);

FOUNDATION_EXPORT NetI2pCryptoSU3File *new_NetI2pCryptoSU3File_initWithNSString_(NSString *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoSU3File *create_NetI2pCryptoSU3File_initWithNSString_(NSString *file);

FOUNDATION_EXPORT void NetI2pCryptoSU3File_initWithJavaIoFile_(NetI2pCryptoSU3File *self, JavaIoFile *file);

FOUNDATION_EXPORT NetI2pCryptoSU3File *new_NetI2pCryptoSU3File_initWithJavaIoFile_(JavaIoFile *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoSU3File *create_NetI2pCryptoSU3File_initWithJavaIoFile_(JavaIoFile *file);

FOUNDATION_EXPORT void NetI2pCryptoSU3File_initWithNetI2pI2PAppContext_withJavaIoFile_(NetI2pCryptoSU3File *self, NetI2pI2PAppContext *context, JavaIoFile *file);

FOUNDATION_EXPORT NetI2pCryptoSU3File *new_NetI2pCryptoSU3File_initWithNetI2pI2PAppContext_withJavaIoFile_(NetI2pI2PAppContext *context, JavaIoFile *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoSU3File *create_NetI2pCryptoSU3File_initWithNetI2pI2PAppContext_withJavaIoFile_(NetI2pI2PAppContext *context, JavaIoFile *file);

FOUNDATION_EXPORT void NetI2pCryptoSU3File_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoSU3File)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoSU3File")
