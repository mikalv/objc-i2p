//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/CryptoConstants.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/reflect/Constructor.h"
#include "java/math/BigInteger.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "java/security/spec/DSAParameterSpec.h"
#include "net/i2p/crypto/CryptoConstants.h"
#include "net/i2p/crypto/ECConstants.h"
#include "net/i2p/crypto/elgamal/spec/ElGamalParameterSpec.h"
#include "net/i2p/util/NativeBigInteger.h"

J2OBJC_INITIALIZED_DEFN(NetI2pCryptoCryptoConstants)

NetI2pUtilNativeBigInteger *NetI2pCryptoCryptoConstants_dsap;
NetI2pUtilNativeBigInteger *NetI2pCryptoCryptoConstants_dsaq;
NetI2pUtilNativeBigInteger *NetI2pCryptoCryptoConstants_dsag;
NetI2pUtilNativeBigInteger *NetI2pCryptoCryptoConstants_elgp;
NetI2pUtilNativeBigInteger *NetI2pCryptoCryptoConstants_elgg;
JavaSecuritySpecDSAParameterSpec *NetI2pCryptoCryptoConstants_DSA_SHA1_SPEC;
NetI2pCryptoElgamalSpecElGamalParameterSpec *NetI2pCryptoCryptoConstants_I2P_ELGAMAL_2048_SPEC;
id<JavaSecuritySpecAlgorithmParameterSpec> NetI2pCryptoCryptoConstants_ELGAMAL_2048_SPEC;

@implementation NetI2pCryptoCryptoConstants

+ (NetI2pUtilNativeBigInteger *)dsap {
  return NetI2pCryptoCryptoConstants_dsap;
}

+ (NetI2pUtilNativeBigInteger *)dsaq {
  return NetI2pCryptoCryptoConstants_dsaq;
}

+ (NetI2pUtilNativeBigInteger *)dsag {
  return NetI2pCryptoCryptoConstants_dsag;
}

+ (NetI2pUtilNativeBigInteger *)elgp {
  return NetI2pCryptoCryptoConstants_elgp;
}

+ (NetI2pUtilNativeBigInteger *)elgg {
  return NetI2pCryptoCryptoConstants_elgg;
}

+ (JavaSecuritySpecDSAParameterSpec *)DSA_SHA1_SPEC {
  return NetI2pCryptoCryptoConstants_DSA_SHA1_SPEC;
}

+ (NetI2pCryptoElgamalSpecElGamalParameterSpec *)I2P_ELGAMAL_2048_SPEC {
  return NetI2pCryptoCryptoConstants_I2P_ELGAMAL_2048_SPEC;
}

+ (id<JavaSecuritySpecAlgorithmParameterSpec>)ELGAMAL_2048_SPEC {
  return NetI2pCryptoCryptoConstants_ELGAMAL_2048_SPEC;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pCryptoCryptoConstants_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dsap", "LNetI2pUtilNativeBigInteger;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
    { "dsaq", "LNetI2pUtilNativeBigInteger;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "dsag", "LNetI2pUtilNativeBigInteger;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "elgp", "LNetI2pUtilNativeBigInteger;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "elgg", "LNetI2pUtilNativeBigInteger;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "DSA_SHA1_SPEC", "LJavaSecuritySpecDSAParameterSpec;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "I2P_ELGAMAL_2048_SPEC", "LNetI2pCryptoElgamalSpecElGamalParameterSpec;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "ELGAMAL_2048_SPEC", "LJavaSecuritySpecAlgorithmParameterSpec;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { &NetI2pCryptoCryptoConstants_dsap, &NetI2pCryptoCryptoConstants_dsaq, &NetI2pCryptoCryptoConstants_dsag, &NetI2pCryptoCryptoConstants_elgp, &NetI2pCryptoCryptoConstants_elgg, &NetI2pCryptoCryptoConstants_DSA_SHA1_SPEC, &NetI2pCryptoCryptoConstants_I2P_ELGAMAL_2048_SPEC, &NetI2pCryptoCryptoConstants_ELGAMAL_2048_SPEC };
  static const J2ObjcClassInfo _NetI2pCryptoCryptoConstants = { "CryptoConstants", "net.i2p.crypto", ptrTable, methods, fields, 7, 0x11, 1, 8, -1, -1, -1, -1, -1 };
  return &_NetI2pCryptoCryptoConstants;
}

+ (void)initialize {
  if (self == [NetI2pCryptoCryptoConstants class]) {
    JreStrongAssignAndConsume(&NetI2pCryptoCryptoConstants_dsap, new_NetI2pUtilNativeBigInteger_initWithNSString_withInt_(@"9c05b2aa960d9b97b8931963c9cc9e8c3026e9b8ed92fad0a69cc886d5bf8015fcadae31a0ad18fab3f01b00a358de237655c4964afaa2b337e96ad316b9fb1cc564b5aec5b69a9ff6c3e4548707fef8503d91dd8602e867e6d35d2235c1869ce2479c3b9d5401de04e0727fb33d6511285d4cf29538d9e3b6051f5b22cc1c93", 16));
    JreStrongAssignAndConsume(&NetI2pCryptoCryptoConstants_dsaq, new_NetI2pUtilNativeBigInteger_initWithNSString_withInt_(@"a5dfc28fef4ca1e286744cd8eed9d29d684046b7", 16));
    JreStrongAssignAndConsume(&NetI2pCryptoCryptoConstants_dsag, new_NetI2pUtilNativeBigInteger_initWithNSString_withInt_(@"c1f4d27d40093b429e962d7223824e0bbc47e7c832a39236fc683af84889581075ff9082ed32353d4374d7301cda1d23c431f4698599dda02451824ff369752593647cc3ddc197de985e43d136cdcfc6bd5409cd2f450821142a5e6f8eb1c3ab5d0484b8129fcf17bce4f7f33321c3cb3dbb14a905e7b2b3e93be4708cbcc82", 16));
    JreStrongAssignAndConsume(&NetI2pCryptoCryptoConstants_elgp, new_NetI2pUtilNativeBigInteger_initWithNSString_withInt_(@"FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF", 16));
    JreStrongAssignAndConsume(&NetI2pCryptoCryptoConstants_elgg, new_NetI2pUtilNativeBigInteger_initWithNSString_(@"2"));
    JreStrongAssignAndConsume(&NetI2pCryptoCryptoConstants_DSA_SHA1_SPEC, new_JavaSecuritySpecDSAParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(NetI2pCryptoCryptoConstants_dsap, NetI2pCryptoCryptoConstants_dsaq, NetI2pCryptoCryptoConstants_dsag));
    JreStrongAssignAndConsume(&NetI2pCryptoCryptoConstants_I2P_ELGAMAL_2048_SPEC, new_NetI2pCryptoElgamalSpecElGamalParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_(NetI2pCryptoCryptoConstants_elgp, NetI2pCryptoCryptoConstants_elgg));
    {
      id<JavaSecuritySpecAlgorithmParameterSpec> spec;
      if (NetI2pCryptoECConstants_isBCAvailable()) {
        @try {
          IOSClass *cls = IOSClass_forName_(@"org.bouncycastle.jce.spec.ElGamalParameterSpec");
          JavaLangReflectConstructor *con = [((IOSClass *) nil_chk(cls)) getConstructor:[IOSObjectArray arrayWithObjects:(id[]){ JavaMathBigInteger_class_(), JavaMathBigInteger_class_() } count:2 type:IOSClass_class_()]];
          spec = (id<JavaSecuritySpecAlgorithmParameterSpec>) cast_check([((JavaLangReflectConstructor *) nil_chk(con)) newInstanceWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ NetI2pCryptoCryptoConstants_elgp, NetI2pCryptoCryptoConstants_elgg } count:2 type:NSObject_class_()]], JavaSecuritySpecAlgorithmParameterSpec_class_());
        }
        @catch (JavaLangException *e) {
          spec = NetI2pCryptoCryptoConstants_I2P_ELGAMAL_2048_SPEC;
        }
      }
      else {
        spec = NetI2pCryptoCryptoConstants_I2P_ELGAMAL_2048_SPEC;
      }
      JreStrongAssign(&NetI2pCryptoCryptoConstants_ELGAMAL_2048_SPEC, spec);
    }
    J2OBJC_SET_INITIALIZED(NetI2pCryptoCryptoConstants)
  }
}

@end

void NetI2pCryptoCryptoConstants_init(NetI2pCryptoCryptoConstants *self) {
  NSObject_init(self);
}

NetI2pCryptoCryptoConstants *new_NetI2pCryptoCryptoConstants_init() {
  J2OBJC_NEW_IMPL(NetI2pCryptoCryptoConstants, init)
}

NetI2pCryptoCryptoConstants *create_NetI2pCryptoCryptoConstants_init() {
  J2OBJC_CREATE_IMPL(NetI2pCryptoCryptoConstants, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoCryptoConstants)
