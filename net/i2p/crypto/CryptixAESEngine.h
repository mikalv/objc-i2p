//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/CryptixAESEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoCryptixAESEngine")
#ifdef RESTRICT_NetI2pCryptoCryptixAESEngine
#define INCLUDE_ALL_NetI2pCryptoCryptixAESEngine 0
#else
#define INCLUDE_ALL_NetI2pCryptoCryptixAESEngine 1
#endif
#undef RESTRICT_NetI2pCryptoCryptixAESEngine

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoCryptixAESEngine_) && (INCLUDE_ALL_NetI2pCryptoCryptixAESEngine || defined(INCLUDE_NetI2pCryptoCryptixAESEngine))
#define NetI2pCryptoCryptixAESEngine_

#define RESTRICT_NetI2pCryptoAESEngine 1
#define INCLUDE_NetI2pCryptoAESEngine 1
#include "net/i2p/crypto/AESEngine.h"

@class IOSByteArray;
@class NetI2pDataSessionKey;
@class NetI2pI2PAppContext;

@interface NetI2pCryptoCryptixAESEngine : NetI2pCryptoAESEngine

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (void)decryptWithByteArray:(IOSByteArray *)payload
                     withInt:(jint)payloadIndex
               withByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outIndex
    withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
               withByteArray:(IOSByteArray *)iv
                     withInt:(jint)length;

- (void)decryptWithByteArray:(IOSByteArray *)payload
                     withInt:(jint)payloadIndex
               withByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outIndex
    withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
               withByteArray:(IOSByteArray *)iv
                     withInt:(jint)ivOffset
                     withInt:(jint)length;

- (void)decryptBlockWithByteArray:(IOSByteArray *)payload
                          withInt:(jint)inIndex
         withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
                    withByteArray:(IOSByteArray *)rv
                          withInt:(jint)outIndex;

- (void)encryptWithByteArray:(IOSByteArray *)payload
                     withInt:(jint)payloadIndex
               withByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outIndex
    withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
               withByteArray:(IOSByteArray *)iv
                     withInt:(jint)length;

- (void)encryptWithByteArray:(IOSByteArray *)payload
                     withInt:(jint)payloadIndex
               withByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outIndex
    withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
               withByteArray:(IOSByteArray *)iv
                     withInt:(jint)ivOffset
                     withInt:(jint)length;

- (void)encryptBlockWithByteArray:(IOSByteArray *)payload
                          withInt:(jint)inIndex
         withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outIndex;

@end

J2OBJC_STATIC_INIT(NetI2pCryptoCryptixAESEngine)

FOUNDATION_EXPORT void NetI2pCryptoCryptixAESEngine_initWithNetI2pI2PAppContext_(NetI2pCryptoCryptixAESEngine *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pCryptoCryptixAESEngine *new_NetI2pCryptoCryptixAESEngine_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoCryptixAESEngine *create_NetI2pCryptoCryptixAESEngine_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoCryptixAESEngine)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoCryptixAESEngine")
