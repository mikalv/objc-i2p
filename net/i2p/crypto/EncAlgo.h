//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/EncAlgo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoEncAlgo")
#ifdef RESTRICT_NetI2pCryptoEncAlgo
#define INCLUDE_ALL_NetI2pCryptoEncAlgo 0
#else
#define INCLUDE_ALL_NetI2pCryptoEncAlgo 1
#endif
#undef RESTRICT_NetI2pCryptoEncAlgo

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoEncAlgo_) && (INCLUDE_ALL_NetI2pCryptoEncAlgo || defined(INCLUDE_NetI2pCryptoEncAlgo))
#define NetI2pCryptoEncAlgo_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pCryptoEncAlgo_Enum) {
  NetI2pCryptoEncAlgo_Enum_ELGAMAL = 0,
  NetI2pCryptoEncAlgo_Enum_EC = 1,
};

@interface NetI2pCryptoEncAlgo : JavaLangEnum

@property (readonly, class, nonnull) NetI2pCryptoEncAlgo *ELGAMAL NS_SWIFT_NAME(ELGAMAL);
@property (readonly, class, nonnull) NetI2pCryptoEncAlgo *EC NS_SWIFT_NAME(EC);
+ (NetI2pCryptoEncAlgo * __nonnull)ELGAMAL;

+ (NetI2pCryptoEncAlgo * __nonnull)EC;

#pragma mark Public

- (NSString *)getName;

+ (NetI2pCryptoEncAlgo *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pCryptoEncAlgo_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pCryptoEncAlgo)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pCryptoEncAlgo *NetI2pCryptoEncAlgo_values_[];

inline NetI2pCryptoEncAlgo *NetI2pCryptoEncAlgo_get_ELGAMAL(void);
J2OBJC_ENUM_CONSTANT(NetI2pCryptoEncAlgo, ELGAMAL)

inline NetI2pCryptoEncAlgo *NetI2pCryptoEncAlgo_get_EC(void);
J2OBJC_ENUM_CONSTANT(NetI2pCryptoEncAlgo, EC)

FOUNDATION_EXPORT IOSObjectArray *NetI2pCryptoEncAlgo_values(void);

FOUNDATION_EXPORT NetI2pCryptoEncAlgo *NetI2pCryptoEncAlgo_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pCryptoEncAlgo *NetI2pCryptoEncAlgo_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoEncAlgo)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoEncAlgo")
