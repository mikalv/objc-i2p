//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/TrustedUpdate.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoTrustedUpdate")
#ifdef RESTRICT_NetI2pCryptoTrustedUpdate
#define INCLUDE_ALL_NetI2pCryptoTrustedUpdate 0
#else
#define INCLUDE_ALL_NetI2pCryptoTrustedUpdate 1
#endif
#undef RESTRICT_NetI2pCryptoTrustedUpdate

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoTrustedUpdate_) && (INCLUDE_ALL_NetI2pCryptoTrustedUpdate || defined(INCLUDE_NetI2pCryptoTrustedUpdate))
#define NetI2pCryptoTrustedUpdate_

@class IOSObjectArray;
@class JavaIoFile;
@class JavaIoInputStream;
@class NetI2pDataSignature;
@class NetI2pDataSigningPrivateKey;
@class NetI2pDataSigningPublicKey;
@class NetI2pI2PAppContext;
@protocol JavaUtilMap;

@interface NetI2pCryptoTrustedUpdate : NSObject
@property (readonly, class) jint HEADER_BYTES NS_SWIFT_NAME(HEADER_BYTES);

+ (jint)HEADER_BYTES;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (jboolean)addKeyWithNSString:(NSString *)key
                  withNSString:(NSString *)name;

- (id<JavaUtilMap>)getKeys;

- (NSString *)getTrustedKeysString;

+ (NSString *)getVersionStringWithJavaIoFile:(JavaIoFile *)signedFile;

+ (NSString *)getVersionStringWithJavaIoInputStream:(JavaIoInputStream *)inputStream;

- (jboolean)haveKeyWithNSString:(NSString *)key;

- (jboolean)isUpdatedVersionWithNSString:(NSString *)currentVersion
                          withJavaIoFile:(JavaIoFile *)signedFile;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (NSString *)migrateFileWithJavaIoFile:(JavaIoFile *)signedFile
                         withJavaIoFile:(JavaIoFile *)outputFile;

- (NSString *)migrateVerifiedWithNSString:(NSString *)currentVersion
                           withJavaIoFile:(JavaIoFile *)signedFile
                           withJavaIoFile:(JavaIoFile *)outputFile;

+ (jboolean)needsUpdateWithNSString:(NSString *)currentVersion
                       withNSString:(NSString *)newVersion;

- (NSString *)newVersion OBJC_METHOD_FAMILY_NONE;

- (NetI2pDataSignature *)signWithNSString:(NSString *)inputFile
                             withNSString:(NSString *)signedFile
          withNetI2pDataSigningPrivateKey:(NetI2pDataSigningPrivateKey *)signingPrivateKey
                             withNSString:(NSString *)version_;

- (NetI2pDataSignature *)signWithNSString:(NSString *)inputFile
                             withNSString:(NSString *)signedFile
                             withNSString:(NSString *)privateKeyFile
                             withNSString:(NSString *)version_;

- (jboolean)verifyWithJavaIoFile:(JavaIoFile *)signedFile;

- (jboolean)verifyWithJavaIoFile:(JavaIoFile *)signedFile
  withNetI2pDataSigningPublicKey:(NetI2pDataSigningPublicKey *)signingPublicKey;

- (jboolean)verifyWithNSString:(NSString *)signedFile
                  withNSString:(NSString *)publicKeyFile;

- (NSString *)verifyAndGetSignerWithJavaIoFile:(JavaIoFile *)signedFile;

@end

J2OBJC_STATIC_INIT(NetI2pCryptoTrustedUpdate)

inline jint NetI2pCryptoTrustedUpdate_get_HEADER_BYTES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint NetI2pCryptoTrustedUpdate_HEADER_BYTES;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(NetI2pCryptoTrustedUpdate, HEADER_BYTES, jint)

FOUNDATION_EXPORT void NetI2pCryptoTrustedUpdate_init(NetI2pCryptoTrustedUpdate *self);

FOUNDATION_EXPORT NetI2pCryptoTrustedUpdate *new_NetI2pCryptoTrustedUpdate_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoTrustedUpdate *create_NetI2pCryptoTrustedUpdate_init(void);

FOUNDATION_EXPORT void NetI2pCryptoTrustedUpdate_initWithNetI2pI2PAppContext_(NetI2pCryptoTrustedUpdate *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pCryptoTrustedUpdate *new_NetI2pCryptoTrustedUpdate_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoTrustedUpdate *create_NetI2pCryptoTrustedUpdate_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

FOUNDATION_EXPORT void NetI2pCryptoTrustedUpdate_mainWithNSStringArray_(IOSObjectArray *args);

FOUNDATION_EXPORT jboolean NetI2pCryptoTrustedUpdate_needsUpdateWithNSString_withNSString_(NSString *currentVersion, NSString *newVersion);

FOUNDATION_EXPORT NSString *NetI2pCryptoTrustedUpdate_getVersionStringWithJavaIoFile_(JavaIoFile *signedFile);

FOUNDATION_EXPORT NSString *NetI2pCryptoTrustedUpdate_getVersionStringWithJavaIoInputStream_(JavaIoInputStream *inputStream);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoTrustedUpdate)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoTrustedUpdate")
