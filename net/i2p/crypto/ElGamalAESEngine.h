//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/ElGamalAESEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoElGamalAESEngine")
#ifdef RESTRICT_NetI2pCryptoElGamalAESEngine
#define INCLUDE_ALL_NetI2pCryptoElGamalAESEngine 0
#else
#define INCLUDE_ALL_NetI2pCryptoElGamalAESEngine 1
#endif
#undef RESTRICT_NetI2pCryptoElGamalAESEngine

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoElGamalAESEngine_) && (INCLUDE_ALL_NetI2pCryptoElGamalAESEngine || defined(INCLUDE_NetI2pCryptoElGamalAESEngine))
#define NetI2pCryptoElGamalAESEngine_

@class IOSByteArray;
@class NetI2pCryptoSessionKeyManager;
@class NetI2pDataPrivateKey;
@class NetI2pDataPublicKey;
@class NetI2pDataSessionKey;
@class NetI2pDataSessionTag;
@class NetI2pI2PAppContext;
@protocol JavaUtilSet;

@interface NetI2pCryptoElGamalAESEngine : NSObject
@property (readonly, class) jint MAX_TAGS_RECEIVED NS_SWIFT_NAME(MAX_TAGS_RECEIVED);

+ (jint)MAX_TAGS_RECEIVED;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx;

- (IOSByteArray *)decryptWithByteArray:(IOSByteArray *)data
              withNetI2pDataPrivateKey:(NetI2pDataPrivateKey *)targetPrivateKey;

- (IOSByteArray *)decryptWithByteArray:(IOSByteArray *)data
              withNetI2pDataPrivateKey:(NetI2pDataPrivateKey *)targetPrivateKey
     withNetI2pCryptoSessionKeyManager:(NetI2pCryptoSessionKeyManager *)keyManager;

- (IOSByteArray *)encryptWithByteArray:(IOSByteArray *)data
               withNetI2pDataPublicKey:(NetI2pDataPublicKey *)target
              withNetI2pDataSessionKey:(NetI2pDataSessionKey *)key
                              withLong:(jlong)paddedSize;

- (IOSByteArray *)encryptWithByteArray:(IOSByteArray *)data
               withNetI2pDataPublicKey:(NetI2pDataPublicKey *)target
              withNetI2pDataSessionKey:(NetI2pDataSessionKey *)key
                       withJavaUtilSet:(id<JavaUtilSet>)tagsForDelivery
                              withLong:(jlong)paddedSize;

- (IOSByteArray *)encryptWithByteArray:(IOSByteArray *)data
               withNetI2pDataPublicKey:(NetI2pDataPublicKey *)target
              withNetI2pDataSessionKey:(NetI2pDataSessionKey *)key
                       withJavaUtilSet:(id<JavaUtilSet>)tagsForDelivery
              withNetI2pDataSessionTag:(NetI2pDataSessionTag *)currentTag
                              withLong:(jlong)paddedSize;

- (IOSByteArray *)encryptWithByteArray:(IOSByteArray *)data
               withNetI2pDataPublicKey:(NetI2pDataPublicKey *)target
              withNetI2pDataSessionKey:(NetI2pDataSessionKey *)key
                       withJavaUtilSet:(id<JavaUtilSet>)tagsForDelivery
              withNetI2pDataSessionTag:(NetI2pDataSessionTag *)currentTag
              withNetI2pDataSessionKey:(NetI2pDataSessionKey *)newKey
                              withLong:(jlong)paddedSize;

#pragma mark Package-Private

- (IOSByteArray *)decryptAESBlockWithByteArray:(IOSByteArray *)encrypted
                                       withInt:(jint)offset
                                       withInt:(jint)encryptedLen
                      withNetI2pDataSessionKey:(NetI2pDataSessionKey *)key
                                 withByteArray:(IOSByteArray *)iv
                                 withByteArray:(IOSByteArray *)sentTag
                               withJavaUtilSet:(id<JavaUtilSet>)foundTags
                      withNetI2pDataSessionKey:(NetI2pDataSessionKey *)foundKey;

- (IOSByteArray *)encryptAESBlockWithByteArray:(IOSByteArray *)data
                      withNetI2pDataSessionKey:(NetI2pDataSessionKey *)key
                                 withByteArray:(IOSByteArray *)iv
                               withJavaUtilSet:(id<JavaUtilSet>)tagsForDelivery
                      withNetI2pDataSessionKey:(NetI2pDataSessionKey *)newKey
                                      withLong:(jlong)paddedSize;

+ (IOSByteArray *)getPaddingWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context
                                            withInt:(jint)curSize
                                           withLong:(jlong)minPaddedSize;

+ (jint)getPaddingSizeWithInt:(jint)curSize
                     withLong:(jlong)minPaddedSize;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoElGamalAESEngine)

inline jint NetI2pCryptoElGamalAESEngine_get_MAX_TAGS_RECEIVED(void);
#define NetI2pCryptoElGamalAESEngine_MAX_TAGS_RECEIVED 200
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoElGamalAESEngine, MAX_TAGS_RECEIVED, jint)

FOUNDATION_EXPORT void NetI2pCryptoElGamalAESEngine_initWithNetI2pI2PAppContext_(NetI2pCryptoElGamalAESEngine *self, NetI2pI2PAppContext *ctx);

FOUNDATION_EXPORT NetI2pCryptoElGamalAESEngine *new_NetI2pCryptoElGamalAESEngine_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElGamalAESEngine *create_NetI2pCryptoElGamalAESEngine_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx);

FOUNDATION_EXPORT IOSByteArray *NetI2pCryptoElGamalAESEngine_getPaddingWithNetI2pI2PAppContext_withInt_withLong_(NetI2pI2PAppContext *context, jint curSize, jlong minPaddedSize);

FOUNDATION_EXPORT jint NetI2pCryptoElGamalAESEngine_getPaddingSizeWithInt_withLong_(jint curSize, jlong minPaddedSize);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoElGamalAESEngine)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoElGamalAESEngine")
