//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/RSASigningPrivateCrtKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoRSASigningPrivateCrtKey")
#ifdef RESTRICT_NetI2pCryptoRSASigningPrivateCrtKey
#define INCLUDE_ALL_NetI2pCryptoRSASigningPrivateCrtKey 0
#else
#define INCLUDE_ALL_NetI2pCryptoRSASigningPrivateCrtKey 1
#endif
#undef RESTRICT_NetI2pCryptoRSASigningPrivateCrtKey

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoRSASigningPrivateCrtKey_) && (INCLUDE_ALL_NetI2pCryptoRSASigningPrivateCrtKey || defined(INCLUDE_NetI2pCryptoRSASigningPrivateCrtKey))
#define NetI2pCryptoRSASigningPrivateCrtKey_

#define RESTRICT_NetI2pDataSigningPrivateKey 1
#define INCLUDE_NetI2pDataSigningPrivateKey 1
#include "net/i2p/data/SigningPrivateKey.h"

@class IOSByteArray;
@class NetI2pCryptoSigType;
@protocol JavaSecurityInterfacesRSAPrivateCrtKey;

@interface NetI2pCryptoRSASigningPrivateCrtKey : NetI2pDataSigningPrivateKey

#pragma mark Public

+ (NetI2pCryptoRSASigningPrivateCrtKey *)fromJavaKeyWithJavaSecurityInterfacesRSAPrivateCrtKey:(id<JavaSecurityInterfacesRSAPrivateCrtKey>)pk;

- (id<JavaSecurityInterfacesRSAPrivateCrtKey>)toJavaKey;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNetI2pCryptoSigType:(NetI2pCryptoSigType *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNetI2pCryptoSigType:(NetI2pCryptoSigType *)arg0
                                        withByteArray:(IOSByteArray *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoRSASigningPrivateCrtKey)

FOUNDATION_EXPORT NetI2pCryptoRSASigningPrivateCrtKey *NetI2pCryptoRSASigningPrivateCrtKey_fromJavaKeyWithJavaSecurityInterfacesRSAPrivateCrtKey_(id<JavaSecurityInterfacesRSAPrivateCrtKey> pk);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoRSASigningPrivateCrtKey)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoRSASigningPrivateCrtKey")
