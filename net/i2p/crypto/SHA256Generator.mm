//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/SHA256Generator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/RuntimeException.h"
#include "java/security/DigestException.h"
#include "java/security/MessageDigest.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "java/util/concurrent/LinkedBlockingQueue.h"
#include "net/i2p/I2PAppContext.h"
#include "net/i2p/crypto/SHA256Generator.h"
#include "net/i2p/data/Hash.h"

@interface NetI2pCryptoSHA256Generator () {
 @public
  JavaUtilConcurrentLinkedBlockingQueue *_digests_;
}

- (JavaSecurityMessageDigest *)acquire;

- (void)release__WithJavaSecurityMessageDigest:(JavaSecurityMessageDigest *)digest;

@end

J2OBJC_FIELD_SETTER(NetI2pCryptoSHA256Generator, _digests_, JavaUtilConcurrentLinkedBlockingQueue *)

__attribute__((unused)) static NetI2pDataHash *NetI2pCryptoSHA256Generator_calculateHashWithByteArray_withInt_withInt_(NetI2pCryptoSHA256Generator *self, IOSByteArray *source, jint start, jint len);

__attribute__((unused)) static JavaSecurityMessageDigest *NetI2pCryptoSHA256Generator_acquire(NetI2pCryptoSHA256Generator *self);

__attribute__((unused)) static void NetI2pCryptoSHA256Generator_release__WithJavaSecurityMessageDigest_(NetI2pCryptoSHA256Generator *self, JavaSecurityMessageDigest *digest);

@implementation NetI2pCryptoSHA256Generator

- (instancetype)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context {
  NetI2pCryptoSHA256Generator_initWithNetI2pI2PAppContext_(self, context);
  return self;
}

+ (NetI2pCryptoSHA256Generator *)getInstance {
  return NetI2pCryptoSHA256Generator_getInstance();
}

- (NetI2pDataHash *)calculateHashWithByteArray:(IOSByteArray *)source {
  return NetI2pCryptoSHA256Generator_calculateHashWithByteArray_withInt_withInt_(self, source, 0, ((IOSByteArray *) nil_chk(source))->size_);
}

- (NetI2pDataHash *)calculateHashWithByteArray:(IOSByteArray *)source
                                       withInt:(jint)start
                                       withInt:(jint)len {
  return NetI2pCryptoSHA256Generator_calculateHashWithByteArray_withInt_withInt_(self, source, start, len);
}

- (void)calculateHashWithByteArray:(IOSByteArray *)source
                           withInt:(jint)start
                           withInt:(jint)len
                     withByteArray:(IOSByteArray *)outArg
                           withInt:(jint)outOffset {
  JavaSecurityMessageDigest *digest = NetI2pCryptoSHA256Generator_acquire(self);
  [((JavaSecurityMessageDigest *) nil_chk(digest)) updateWithByteArray:source withInt:start withInt:len];
  @try {
    [digest digestWithByteArray:outArg withInt:outOffset withInt:NetI2pDataHash_HASH_LENGTH];
  }
  @catch (JavaSecurityDigestException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
  @finally {
    NetI2pCryptoSHA256Generator_release__WithJavaSecurityMessageDigest_(self, digest);
  }
}

- (JavaSecurityMessageDigest *)acquire {
  return NetI2pCryptoSHA256Generator_acquire(self);
}

- (void)release__WithJavaSecurityMessageDigest:(JavaSecurityMessageDigest *)digest {
  NetI2pCryptoSHA256Generator_release__WithJavaSecurityMessageDigest_(self, digest);
}

+ (JavaSecurityMessageDigest *)getDigestInstance {
  return NetI2pCryptoSHA256Generator_getDigestInstance();
}

- (void)dealloc {
  RELEASE_(_digests_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoSHA256Generator;", 0x19, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataHash;", 0x11, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataHash;", 0x11, 1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 1, 4, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityMessageDigest;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityMessageDigest;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pI2PAppContext:);
  methods[1].selector = @selector(getInstance);
  methods[2].selector = @selector(calculateHashWithByteArray:);
  methods[3].selector = @selector(calculateHashWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(calculateHashWithByteArray:withInt:withInt:withByteArray:withInt:);
  methods[5].selector = @selector(acquire);
  methods[6].selector = @selector(release__WithJavaSecurityMessageDigest:);
  methods[7].selector = @selector(getDigestInstance);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_digests_", "LJavaUtilConcurrentLinkedBlockingQueue;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pI2PAppContext;", "calculateHash", "[B", "[BII", "[BII[BI", "release", "LJavaSecurityMessageDigest;", "Ljava/util/concurrent/LinkedBlockingQueue<Ljava/security/MessageDigest;>;" };
  static const J2ObjcClassInfo _NetI2pCryptoSHA256Generator = { "SHA256Generator", "net.i2p.crypto", ptrTable, methods, fields, 7, 0x11, 8, 1, -1, -1, -1, -1, -1 };
  return &_NetI2pCryptoSHA256Generator;
}

@end

void NetI2pCryptoSHA256Generator_initWithNetI2pI2PAppContext_(NetI2pCryptoSHA256Generator *self, NetI2pI2PAppContext *context) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->_digests_, new_JavaUtilConcurrentLinkedBlockingQueue_initWithInt_(32));
}

NetI2pCryptoSHA256Generator *new_NetI2pCryptoSHA256Generator_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) {
  J2OBJC_NEW_IMPL(NetI2pCryptoSHA256Generator, initWithNetI2pI2PAppContext_, context)
}

NetI2pCryptoSHA256Generator *create_NetI2pCryptoSHA256Generator_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) {
  J2OBJC_CREATE_IMPL(NetI2pCryptoSHA256Generator, initWithNetI2pI2PAppContext_, context)
}

NetI2pCryptoSHA256Generator *NetI2pCryptoSHA256Generator_getInstance() {
  NetI2pCryptoSHA256Generator_initialize();
  return [((NetI2pI2PAppContext *) nil_chk(NetI2pI2PAppContext_getGlobalContext())) sha];
}

NetI2pDataHash *NetI2pCryptoSHA256Generator_calculateHashWithByteArray_withInt_withInt_(NetI2pCryptoSHA256Generator *self, IOSByteArray *source, jint start, jint len) {
  JavaSecurityMessageDigest *digest = NetI2pCryptoSHA256Generator_acquire(self);
  [((JavaSecurityMessageDigest *) nil_chk(digest)) updateWithByteArray:source withInt:start withInt:len];
  IOSByteArray *rv = [digest digest];
  NetI2pCryptoSHA256Generator_release__WithJavaSecurityMessageDigest_(self, digest);
  return NetI2pDataHash_createWithByteArray_(rv);
}

JavaSecurityMessageDigest *NetI2pCryptoSHA256Generator_acquire(NetI2pCryptoSHA256Generator *self) {
  JavaSecurityMessageDigest *rv = [((JavaUtilConcurrentLinkedBlockingQueue *) nil_chk(self->_digests_)) poll];
  if (rv != nil) [rv reset];
  else rv = NetI2pCryptoSHA256Generator_getDigestInstance();
  return rv;
}

void NetI2pCryptoSHA256Generator_release__WithJavaSecurityMessageDigest_(NetI2pCryptoSHA256Generator *self, JavaSecurityMessageDigest *digest) {
  [((JavaUtilConcurrentLinkedBlockingQueue *) nil_chk(self->_digests_)) offerWithId:digest];
}

JavaSecurityMessageDigest *NetI2pCryptoSHA256Generator_getDigestInstance() {
  NetI2pCryptoSHA256Generator_initialize();
  @try {
    return JavaSecurityMessageDigest_getInstanceWithNSString_(@"SHA-256");
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoSHA256Generator)
