//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/EncAlgo.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "net/i2p/crypto/EncAlgo.h"

@interface NetI2pCryptoEncAlgo () {
 @public
  NSString *name_EncAlgo_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pCryptoEncAlgo, name_EncAlgo_, NSString *)

__attribute__((unused)) static void NetI2pCryptoEncAlgo_initWithNSString_withNSString_withInt_(NetI2pCryptoEncAlgo *self, NSString *name, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(NetI2pCryptoEncAlgo)

NetI2pCryptoEncAlgo *NetI2pCryptoEncAlgo_values_[2];

@implementation NetI2pCryptoEncAlgo

+ (NetI2pCryptoEncAlgo *)ELGAMAL {
  return JreEnum(NetI2pCryptoEncAlgo, ELGAMAL);
}

+ (NetI2pCryptoEncAlgo *)EC {
  return JreEnum(NetI2pCryptoEncAlgo, EC);
}

- (NSString *)getName {
  return name_EncAlgo_;
}

+ (IOSObjectArray *)values {
  return NetI2pCryptoEncAlgo_values();
}

+ (NetI2pCryptoEncAlgo *)valueOfWithNSString:(NSString *)name {
  return NetI2pCryptoEncAlgo_valueOfWithNSString_(name);
}

- (NetI2pCryptoEncAlgo_Enum)toNSEnum {
  return (NetI2pCryptoEncAlgo_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNetI2pCryptoEncAlgo;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEncAlgo;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getName);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ELGAMAL", "LNetI2pCryptoEncAlgo;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EC", "LNetI2pCryptoEncAlgo;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "name_EncAlgo_", "LNSString;", .constantValue.asLong = 0, 0x12, 4, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(NetI2pCryptoEncAlgo, ELGAMAL), &JreEnum(NetI2pCryptoEncAlgo, EC), "name", "Ljava/lang/Enum<Lnet/i2p/crypto/EncAlgo;>;" };
  static const J2ObjcClassInfo _NetI2pCryptoEncAlgo = { "EncAlgo", "net.i2p.crypto", ptrTable, methods, fields, 7, 0x4011, 3, 3, -1, -1, -1, 5, -1 };
  return &_NetI2pCryptoEncAlgo;
}

+ (void)initialize {
  if (self == [NetI2pCryptoEncAlgo class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 2 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(NetI2pCryptoEncAlgo, ELGAMAL) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    NetI2pCryptoEncAlgo_initWithNSString_withNSString_withInt_(e, @"ElGamal", @"ELGAMAL", 0);
    ((void) (JreEnum(NetI2pCryptoEncAlgo, EC) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    NetI2pCryptoEncAlgo_initWithNSString_withNSString_withInt_(e, @"EC", @"EC", 1);
    J2OBJC_SET_INITIALIZED(NetI2pCryptoEncAlgo)
  }
}

@end

void NetI2pCryptoEncAlgo_initWithNSString_withNSString_withInt_(NetI2pCryptoEncAlgo *self, NSString *name, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->name_EncAlgo_, name);
}

IOSObjectArray *NetI2pCryptoEncAlgo_values() {
  NetI2pCryptoEncAlgo_initialize();
  return [IOSObjectArray arrayWithObjects:NetI2pCryptoEncAlgo_values_ count:2 type:NetI2pCryptoEncAlgo_class_()];
}

NetI2pCryptoEncAlgo *NetI2pCryptoEncAlgo_valueOfWithNSString_(NSString *name) {
  NetI2pCryptoEncAlgo_initialize();
  for (int i = 0; i < 2; i++) {
    NetI2pCryptoEncAlgo *e = NetI2pCryptoEncAlgo_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

NetI2pCryptoEncAlgo *NetI2pCryptoEncAlgo_fromOrdinal(NSUInteger ordinal) {
  NetI2pCryptoEncAlgo_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return NetI2pCryptoEncAlgo_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoEncAlgo)
