//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/spec/EdDSAGenParameterSpec.java
//

#include "J2ObjC_source.h"
#include "net/i2p/crypto/eddsa/spec/EdDSAGenParameterSpec.h"

@interface NetI2pCryptoEddsaSpecEdDSAGenParameterSpec () {
 @public
  NSString *name_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaSpecEdDSAGenParameterSpec, name_, NSString *)

@implementation NetI2pCryptoEddsaSpecEdDSAGenParameterSpec

- (instancetype)initWithNSString:(NSString *)stdName {
  NetI2pCryptoEddsaSpecEdDSAGenParameterSpec_initWithNSString_(self, stdName);
  return self;
}

- (NSString *)getName {
  return name_;
}

- (void)dealloc {
  RELEASE_(name_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _NetI2pCryptoEddsaSpecEdDSAGenParameterSpec = { "EdDSAGenParameterSpec", "net.i2p.crypto.eddsa.spec", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_NetI2pCryptoEddsaSpecEdDSAGenParameterSpec;
}

@end

void NetI2pCryptoEddsaSpecEdDSAGenParameterSpec_initWithNSString_(NetI2pCryptoEddsaSpecEdDSAGenParameterSpec *self, NSString *stdName) {
  NSObject_init(self);
  JreStrongAssign(&self->name_, stdName);
}

NetI2pCryptoEddsaSpecEdDSAGenParameterSpec *new_NetI2pCryptoEddsaSpecEdDSAGenParameterSpec_initWithNSString_(NSString *stdName) {
  J2OBJC_NEW_IMPL(NetI2pCryptoEddsaSpecEdDSAGenParameterSpec, initWithNSString_, stdName)
}

NetI2pCryptoEddsaSpecEdDSAGenParameterSpec *create_NetI2pCryptoEddsaSpecEdDSAGenParameterSpec_initWithNSString_(NSString *stdName) {
  J2OBJC_CREATE_IMPL(NetI2pCryptoEddsaSpecEdDSAGenParameterSpec, initWithNSString_, stdName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoEddsaSpecEdDSAGenParameterSpec)
