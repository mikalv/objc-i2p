//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/spec/EdDSANamedCurveTable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoEddsaSpecEdDSANamedCurveTable")
#ifdef RESTRICT_NetI2pCryptoEddsaSpecEdDSANamedCurveTable
#define INCLUDE_ALL_NetI2pCryptoEddsaSpecEdDSANamedCurveTable 0
#else
#define INCLUDE_ALL_NetI2pCryptoEddsaSpecEdDSANamedCurveTable 1
#endif
#undef RESTRICT_NetI2pCryptoEddsaSpecEdDSANamedCurveTable

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoEddsaSpecEdDSANamedCurveTable_) && (INCLUDE_ALL_NetI2pCryptoEddsaSpecEdDSANamedCurveTable || defined(INCLUDE_NetI2pCryptoEddsaSpecEdDSANamedCurveTable))
#define NetI2pCryptoEddsaSpecEdDSANamedCurveTable_

@class NetI2pCryptoEddsaSpecEdDSANamedCurveSpec;

@interface NetI2pCryptoEddsaSpecEdDSANamedCurveTable : NSObject
@property (readonly, copy, class) NSString *ED_25519 NS_SWIFT_NAME(ED_25519);
@property (readonly, copy, class) NSString *CURVE_ED25519_SHA512 NS_SWIFT_NAME(CURVE_ED25519_SHA512);
@property (readonly, class, strong) NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *ED_25519_CURVE_SPEC NS_SWIFT_NAME(ED_25519_CURVE_SPEC);

+ (NSString *)ED_25519;

+ (NSString *)CURVE_ED25519_SHA512;

+ (NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *)ED_25519_CURVE_SPEC;

#pragma mark Public

- (instancetype __nonnull)init;

+ (void)defineCurveWithNetI2pCryptoEddsaSpecEdDSANamedCurveSpec:(NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *)curve;

+ (NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *)getByNameWithNSString:(NSString *)name;

#pragma mark Package-Private

+ (void)defineCurveAliasWithNSString:(NSString *)name
                        withNSString:(NSString *)alias;

@end

J2OBJC_STATIC_INIT(NetI2pCryptoEddsaSpecEdDSANamedCurveTable)

inline NSString *NetI2pCryptoEddsaSpecEdDSANamedCurveTable_get_ED_25519(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pCryptoEddsaSpecEdDSANamedCurveTable_ED_25519;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pCryptoEddsaSpecEdDSANamedCurveTable, ED_25519, NSString *)

inline NSString *NetI2pCryptoEddsaSpecEdDSANamedCurveTable_get_CURVE_ED25519_SHA512(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pCryptoEddsaSpecEdDSANamedCurveTable_CURVE_ED25519_SHA512;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pCryptoEddsaSpecEdDSANamedCurveTable, CURVE_ED25519_SHA512, NSString *)

inline NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *NetI2pCryptoEddsaSpecEdDSANamedCurveTable_get_ED_25519_CURVE_SPEC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *NetI2pCryptoEddsaSpecEdDSANamedCurveTable_ED_25519_CURVE_SPEC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pCryptoEddsaSpecEdDSANamedCurveTable, ED_25519_CURVE_SPEC, NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *)

FOUNDATION_EXPORT void NetI2pCryptoEddsaSpecEdDSANamedCurveTable_init(NetI2pCryptoEddsaSpecEdDSANamedCurveTable *self);

FOUNDATION_EXPORT NetI2pCryptoEddsaSpecEdDSANamedCurveTable *new_NetI2pCryptoEddsaSpecEdDSANamedCurveTable_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoEddsaSpecEdDSANamedCurveTable *create_NetI2pCryptoEddsaSpecEdDSANamedCurveTable_init(void);

FOUNDATION_EXPORT void NetI2pCryptoEddsaSpecEdDSANamedCurveTable_defineCurveWithNetI2pCryptoEddsaSpecEdDSANamedCurveSpec_(NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *curve);

FOUNDATION_EXPORT void NetI2pCryptoEddsaSpecEdDSANamedCurveTable_defineCurveAliasWithNSString_withNSString_(NSString *name, NSString *alias);

FOUNDATION_EXPORT NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *NetI2pCryptoEddsaSpecEdDSANamedCurveTable_getByNameWithNSString_(NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoEddsaSpecEdDSANamedCurveTable)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoEddsaSpecEdDSANamedCurveTable")
