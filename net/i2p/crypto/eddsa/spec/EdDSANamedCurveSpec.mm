//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/spec/EdDSANamedCurveSpec.java
//

#include "J2ObjC_source.h"
#include "net/i2p/crypto/eddsa/math/Curve.h"
#include "net/i2p/crypto/eddsa/math/GroupElement.h"
#include "net/i2p/crypto/eddsa/math/ScalarOps.h"
#include "net/i2p/crypto/eddsa/spec/EdDSANamedCurveSpec.h"
#include "net/i2p/crypto/eddsa/spec/EdDSAParameterSpec.h"

@interface NetI2pCryptoEddsaSpecEdDSANamedCurveSpec () {
 @public
  NSString *name_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaSpecEdDSANamedCurveSpec, name_, NSString *)

@implementation NetI2pCryptoEddsaSpecEdDSANamedCurveSpec

- (instancetype)initWithNSString:(NSString *)name
  withNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                    withNSString:(NSString *)hashAlgo
withNetI2pCryptoEddsaMathScalarOps:(id<NetI2pCryptoEddsaMathScalarOps>)sc
withNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)B {
  NetI2pCryptoEddsaSpecEdDSANamedCurveSpec_initWithNSString_withNetI2pCryptoEddsaMathCurve_withNSString_withNetI2pCryptoEddsaMathScalarOps_withNetI2pCryptoEddsaMathGroupElement_(self, name, curve, hashAlgo, sc, B);
  return self;
}

- (NSString *)getName {
  return name_;
}

- (void)dealloc {
  RELEASE_(name_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNetI2pCryptoEddsaMathCurve:withNSString:withNetI2pCryptoEddsaMathScalarOps:withNetI2pCryptoEddsaMathGroupElement:);
  methods[1].selector = @selector(getName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNetI2pCryptoEddsaMathCurve;LNSString;LNetI2pCryptoEddsaMathScalarOps;LNetI2pCryptoEddsaMathGroupElement;" };
  static const J2ObjcClassInfo _NetI2pCryptoEddsaSpecEdDSANamedCurveSpec = { "EdDSANamedCurveSpec", "net.i2p.crypto.eddsa.spec", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_NetI2pCryptoEddsaSpecEdDSANamedCurveSpec;
}

@end

void NetI2pCryptoEddsaSpecEdDSANamedCurveSpec_initWithNSString_withNetI2pCryptoEddsaMathCurve_withNSString_withNetI2pCryptoEddsaMathScalarOps_withNetI2pCryptoEddsaMathGroupElement_(NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *self, NSString *name, NetI2pCryptoEddsaMathCurve *curve, NSString *hashAlgo, id<NetI2pCryptoEddsaMathScalarOps> sc, NetI2pCryptoEddsaMathGroupElement *B) {
  NetI2pCryptoEddsaSpecEdDSAParameterSpec_initWithNetI2pCryptoEddsaMathCurve_withNSString_withNetI2pCryptoEddsaMathScalarOps_withNetI2pCryptoEddsaMathGroupElement_(self, curve, hashAlgo, sc, B);
  JreStrongAssign(&self->name_, name);
}

NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *new_NetI2pCryptoEddsaSpecEdDSANamedCurveSpec_initWithNSString_withNetI2pCryptoEddsaMathCurve_withNSString_withNetI2pCryptoEddsaMathScalarOps_withNetI2pCryptoEddsaMathGroupElement_(NSString *name, NetI2pCryptoEddsaMathCurve *curve, NSString *hashAlgo, id<NetI2pCryptoEddsaMathScalarOps> sc, NetI2pCryptoEddsaMathGroupElement *B) {
  J2OBJC_NEW_IMPL(NetI2pCryptoEddsaSpecEdDSANamedCurveSpec, initWithNSString_withNetI2pCryptoEddsaMathCurve_withNSString_withNetI2pCryptoEddsaMathScalarOps_withNetI2pCryptoEddsaMathGroupElement_, name, curve, hashAlgo, sc, B)
}

NetI2pCryptoEddsaSpecEdDSANamedCurveSpec *create_NetI2pCryptoEddsaSpecEdDSANamedCurveSpec_initWithNSString_withNetI2pCryptoEddsaMathCurve_withNSString_withNetI2pCryptoEddsaMathScalarOps_withNetI2pCryptoEddsaMathGroupElement_(NSString *name, NetI2pCryptoEddsaMathCurve *curve, NSString *hashAlgo, id<NetI2pCryptoEddsaMathScalarOps> sc, NetI2pCryptoEddsaMathGroupElement *B) {
  J2OBJC_CREATE_IMPL(NetI2pCryptoEddsaSpecEdDSANamedCurveSpec, initWithNSString_withNetI2pCryptoEddsaMathCurve_withNSString_withNetI2pCryptoEddsaMathScalarOps_withNetI2pCryptoEddsaMathGroupElement_, name, curve, hashAlgo, sc, B)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoEddsaSpecEdDSANamedCurveSpec)
