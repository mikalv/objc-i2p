//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/EdDSAKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoEddsaEdDSAKey")
#ifdef RESTRICT_NetI2pCryptoEddsaEdDSAKey
#define INCLUDE_ALL_NetI2pCryptoEddsaEdDSAKey 0
#else
#define INCLUDE_ALL_NetI2pCryptoEddsaEdDSAKey 1
#endif
#undef RESTRICT_NetI2pCryptoEddsaEdDSAKey

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoEddsaEdDSAKey_) && (INCLUDE_ALL_NetI2pCryptoEddsaEdDSAKey || defined(INCLUDE_NetI2pCryptoEddsaEdDSAKey))
#define NetI2pCryptoEddsaEdDSAKey_

@class NetI2pCryptoEddsaSpecEdDSAParameterSpec;

@protocol NetI2pCryptoEddsaEdDSAKey < JavaObject >

- (NetI2pCryptoEddsaSpecEdDSAParameterSpec *)getParams;

@end

@interface NetI2pCryptoEddsaEdDSAKey : NSObject
@property (readonly, copy, class) NSString *KEY_ALGORITHM NS_SWIFT_NAME(KEY_ALGORITHM);

+ (NSString *)KEY_ALGORITHM;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoEddsaEdDSAKey)

inline NSString *NetI2pCryptoEddsaEdDSAKey_get_KEY_ALGORITHM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pCryptoEddsaEdDSAKey_KEY_ALGORITHM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pCryptoEddsaEdDSAKey, KEY_ALGORITHM, NSString *)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoEddsaEdDSAKey)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoEddsaEdDSAKey")
