//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/Utils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoEddsaUtils")
#ifdef RESTRICT_NetI2pCryptoEddsaUtils
#define INCLUDE_ALL_NetI2pCryptoEddsaUtils 0
#else
#define INCLUDE_ALL_NetI2pCryptoEddsaUtils 1
#endif
#undef RESTRICT_NetI2pCryptoEddsaUtils

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoEddsaUtils_) && (INCLUDE_ALL_NetI2pCryptoEddsaUtils || defined(INCLUDE_NetI2pCryptoEddsaUtils))
#define NetI2pCryptoEddsaUtils_

@class IOSByteArray;

@interface NetI2pCryptoEddsaUtils : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (jint)bitWithByteArray:(IOSByteArray *)h
                 withInt:(jint)i;

+ (NSString *)bytesToHexWithByteArray:(IOSByteArray *)raw;

+ (jint)equalWithByteArray:(IOSByteArray *)b
             withByteArray:(IOSByteArray *)c;

+ (jint)equalWithInt:(jint)b
             withInt:(jint)c;

+ (IOSByteArray *)hexToBytesWithNSString:(NSString *)s;

+ (jint)negativeWithInt:(jint)b;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoEddsaUtils)

FOUNDATION_EXPORT void NetI2pCryptoEddsaUtils_init(NetI2pCryptoEddsaUtils *self);

FOUNDATION_EXPORT NetI2pCryptoEddsaUtils *new_NetI2pCryptoEddsaUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoEddsaUtils *create_NetI2pCryptoEddsaUtils_init(void);

FOUNDATION_EXPORT jint NetI2pCryptoEddsaUtils_equalWithInt_withInt_(jint b, jint c);

FOUNDATION_EXPORT jint NetI2pCryptoEddsaUtils_equalWithByteArray_withByteArray_(IOSByteArray *b, IOSByteArray *c);

FOUNDATION_EXPORT jint NetI2pCryptoEddsaUtils_negativeWithInt_(jint b);

FOUNDATION_EXPORT jint NetI2pCryptoEddsaUtils_bitWithByteArray_withInt_(IOSByteArray *h, jint i);

FOUNDATION_EXPORT IOSByteArray *NetI2pCryptoEddsaUtils_hexToBytesWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *NetI2pCryptoEddsaUtils_bytesToHexWithByteArray_(IOSByteArray *raw);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoEddsaUtils)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoEddsaUtils")
