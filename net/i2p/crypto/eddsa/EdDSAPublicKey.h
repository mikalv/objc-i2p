//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/EdDSAPublicKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoEddsaEdDSAPublicKey")
#ifdef RESTRICT_NetI2pCryptoEddsaEdDSAPublicKey
#define INCLUDE_ALL_NetI2pCryptoEddsaEdDSAPublicKey 0
#else
#define INCLUDE_ALL_NetI2pCryptoEddsaEdDSAPublicKey 1
#endif
#undef RESTRICT_NetI2pCryptoEddsaEdDSAPublicKey

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoEddsaEdDSAPublicKey_) && (INCLUDE_ALL_NetI2pCryptoEddsaEdDSAPublicKey || defined(INCLUDE_NetI2pCryptoEddsaEdDSAPublicKey))
#define NetI2pCryptoEddsaEdDSAPublicKey_

#define RESTRICT_NetI2pCryptoEddsaEdDSAKey 1
#define INCLUDE_NetI2pCryptoEddsaEdDSAKey 1
#include "net/i2p/crypto/eddsa/EdDSAKey.h"

#define RESTRICT_JavaSecurityPublicKey 1
#define INCLUDE_JavaSecurityPublicKey 1
#include "java/security/PublicKey.h"

@class IOSByteArray;
@class JavaSecuritySpecX509EncodedKeySpec;
@class NetI2pCryptoEddsaMathGroupElement;
@class NetI2pCryptoEddsaSpecEdDSAParameterSpec;
@class NetI2pCryptoEddsaSpecEdDSAPublicKeySpec;

@interface NetI2pCryptoEddsaEdDSAPublicKey : NSObject < NetI2pCryptoEddsaEdDSAKey, JavaSecurityPublicKey >

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pCryptoEddsaSpecEdDSAPublicKeySpec:(NetI2pCryptoEddsaSpecEdDSAPublicKeySpec *)spec;

- (instancetype __nonnull)initWithJavaSecuritySpecX509EncodedKeySpec:(JavaSecuritySpecX509EncodedKeySpec *)spec;

- (jboolean)isEqual:(id)o;

- (NetI2pCryptoEddsaMathGroupElement *)getA;

- (IOSByteArray *)getAbyte;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (NetI2pCryptoEddsaMathGroupElement *)getNegativeA;

- (NetI2pCryptoEddsaSpecEdDSAParameterSpec *)getParams;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoEddsaEdDSAPublicKey)

FOUNDATION_EXPORT void NetI2pCryptoEddsaEdDSAPublicKey_initWithNetI2pCryptoEddsaSpecEdDSAPublicKeySpec_(NetI2pCryptoEddsaEdDSAPublicKey *self, NetI2pCryptoEddsaSpecEdDSAPublicKeySpec *spec);

FOUNDATION_EXPORT NetI2pCryptoEddsaEdDSAPublicKey *new_NetI2pCryptoEddsaEdDSAPublicKey_initWithNetI2pCryptoEddsaSpecEdDSAPublicKeySpec_(NetI2pCryptoEddsaSpecEdDSAPublicKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoEddsaEdDSAPublicKey *create_NetI2pCryptoEddsaEdDSAPublicKey_initWithNetI2pCryptoEddsaSpecEdDSAPublicKeySpec_(NetI2pCryptoEddsaSpecEdDSAPublicKeySpec *spec);

FOUNDATION_EXPORT void NetI2pCryptoEddsaEdDSAPublicKey_initWithJavaSecuritySpecX509EncodedKeySpec_(NetI2pCryptoEddsaEdDSAPublicKey *self, JavaSecuritySpecX509EncodedKeySpec *spec);

FOUNDATION_EXPORT NetI2pCryptoEddsaEdDSAPublicKey *new_NetI2pCryptoEddsaEdDSAPublicKey_initWithJavaSecuritySpecX509EncodedKeySpec_(JavaSecuritySpecX509EncodedKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoEddsaEdDSAPublicKey *create_NetI2pCryptoEddsaEdDSAPublicKey_initWithJavaSecuritySpecX509EncodedKeySpec_(JavaSecuritySpecX509EncodedKeySpec *spec);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoEddsaEdDSAPublicKey)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoEddsaEdDSAPublicKey")
