//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/math/Curve.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "net/i2p/crypto/eddsa/math/Curve.h"
#include "net/i2p/crypto/eddsa/math/Field.h"
#include "net/i2p/crypto/eddsa/math/FieldElement.h"
#include "net/i2p/crypto/eddsa/math/GroupElement.h"

@interface NetI2pCryptoEddsaMathCurve () {
 @public
  NetI2pCryptoEddsaMathField *f_;
  NetI2pCryptoEddsaMathFieldElement *d_;
  NetI2pCryptoEddsaMathFieldElement *d2_;
  NetI2pCryptoEddsaMathFieldElement *I_;
  NetI2pCryptoEddsaMathGroupElement *zeroP2_;
  NetI2pCryptoEddsaMathGroupElement *zeroP3_;
  NetI2pCryptoEddsaMathGroupElement *zeroP3PrecomputedDouble_;
  NetI2pCryptoEddsaMathGroupElement *zeroPrecomp_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathCurve, f_, NetI2pCryptoEddsaMathField *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathCurve, d_, NetI2pCryptoEddsaMathFieldElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathCurve, d2_, NetI2pCryptoEddsaMathFieldElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathCurve, I_, NetI2pCryptoEddsaMathFieldElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathCurve, zeroP2_, NetI2pCryptoEddsaMathGroupElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathCurve, zeroP3_, NetI2pCryptoEddsaMathGroupElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathCurve, zeroP3PrecomputedDouble_, NetI2pCryptoEddsaMathGroupElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathCurve, zeroPrecomp_, NetI2pCryptoEddsaMathGroupElement *)

inline jlong NetI2pCryptoEddsaMathCurve_get_serialVersionUID(void);
#define NetI2pCryptoEddsaMathCurve_serialVersionUID 4578920872509827LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoEddsaMathCurve, serialVersionUID, jlong)

@implementation NetI2pCryptoEddsaMathCurve

- (instancetype)initWithNetI2pCryptoEddsaMathField:(NetI2pCryptoEddsaMathField *)f
                                     withByteArray:(IOSByteArray *)d
             withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)I {
  NetI2pCryptoEddsaMathCurve_initWithNetI2pCryptoEddsaMathField_withByteArray_withNetI2pCryptoEddsaMathFieldElement_(self, f, d, I);
  return self;
}

- (NetI2pCryptoEddsaMathField *)getField {
  return f_;
}

- (NetI2pCryptoEddsaMathFieldElement *)getD {
  return d_;
}

- (NetI2pCryptoEddsaMathFieldElement *)get2D {
  return d2_;
}

- (NetI2pCryptoEddsaMathFieldElement *)getI {
  return I_;
}

- (NetI2pCryptoEddsaMathGroupElement *)getZeroWithNetI2pCryptoEddsaMathGroupElement_Representation:(NetI2pCryptoEddsaMathGroupElement_Representation *)repr {
  switch ([repr ordinal]) {
    case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P2:
    return zeroP2_;
    case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3:
    return zeroP3_;
    case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3PrecomputedDouble:
    return zeroP3PrecomputedDouble_;
    case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_PRECOMP:
    return zeroPrecomp_;
    default:
    return nil;
  }
}

- (NetI2pCryptoEddsaMathGroupElement *)createPointWithByteArray:(IOSByteArray *)P
                                                    withBoolean:(jboolean)precompute {
  NetI2pCryptoEddsaMathGroupElement *ge = create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_withBoolean_(self, P, precompute);
  return ge;
}

- (NSUInteger)hash {
  return ((jint) [((NetI2pCryptoEddsaMathField *) nil_chk(f_)) hash]) ^ ((jint) [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(d_)) hash]) ^ ((jint) [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(I_)) hash]);
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (!([o isKindOfClass:[NetI2pCryptoEddsaMathCurve class]])) return false;
  NetI2pCryptoEddsaMathCurve *c = (NetI2pCryptoEddsaMathCurve *) cast_chk(o, [NetI2pCryptoEddsaMathCurve class]);
  return [((NetI2pCryptoEddsaMathField *) nil_chk(f_)) isEqual:[((NetI2pCryptoEddsaMathCurve *) nil_chk(c)) getField]] && [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(d_)) isEqual:[c getD]] && [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(I_)) isEqual:[c getI]];
}

- (void)dealloc {
  RELEASE_(f_);
  RELEASE_(d_);
  RELEASE_(d2_);
  RELEASE_(I_);
  RELEASE_(zeroP2_);
  RELEASE_(zeroP3_);
  RELEASE_(zeroP3PrecomputedDouble_);
  RELEASE_(zeroPrecomp_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pCryptoEddsaMathField:withByteArray:withNetI2pCryptoEddsaMathFieldElement:);
  methods[1].selector = @selector(getField);
  methods[2].selector = @selector(getD);
  methods[3].selector = @selector(get2D);
  methods[4].selector = @selector(getI);
  methods[5].selector = @selector(getZeroWithNetI2pCryptoEddsaMathGroupElement_Representation:);
  methods[6].selector = @selector(createPointWithByteArray:withBoolean:);
  methods[7].selector = @selector(hash);
  methods[8].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = NetI2pCryptoEddsaMathCurve_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "f_", "LNetI2pCryptoEddsaMathField;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "d_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "d2_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "I_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "zeroP2_", "LNetI2pCryptoEddsaMathGroupElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "zeroP3_", "LNetI2pCryptoEddsaMathGroupElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "zeroP3PrecomputedDouble_", "LNetI2pCryptoEddsaMathGroupElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "zeroPrecomp_", "LNetI2pCryptoEddsaMathGroupElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pCryptoEddsaMathField;[BLNetI2pCryptoEddsaMathFieldElement;", "getZero", "LNetI2pCryptoEddsaMathGroupElement_Representation;", "createPoint", "[BZ", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _NetI2pCryptoEddsaMathCurve = { "Curve", "net.i2p.crypto.eddsa.math", ptrTable, methods, fields, 7, 0x1, 9, 9, -1, -1, -1, -1, -1 };
  return &_NetI2pCryptoEddsaMathCurve;
}

@end

void NetI2pCryptoEddsaMathCurve_initWithNetI2pCryptoEddsaMathField_withByteArray_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *self, NetI2pCryptoEddsaMathField *f, IOSByteArray *d, NetI2pCryptoEddsaMathFieldElement *I) {
  NSObject_init(self);
  JreStrongAssign(&self->f_, f);
  JreStrongAssign(&self->d_, [((NetI2pCryptoEddsaMathField *) nil_chk(f)) fromByteArrayWithByteArray:d]);
  JreStrongAssign(&self->d2_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->d_)) addWithNetI2pCryptoEddsaMathFieldElement:self->d_]);
  JreStrongAssign(&self->I_, I);
  NetI2pCryptoEddsaMathFieldElement *zero = f->ZERO_;
  NetI2pCryptoEddsaMathFieldElement *one = f->ONE_;
  JreStrongAssign(&self->zeroP2_, NetI2pCryptoEddsaMathGroupElement_p2WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self, zero, one, one));
  JreStrongAssign(&self->zeroP3_, NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(self, zero, one, one, zero, false));
  JreStrongAssign(&self->zeroP3PrecomputedDouble_, NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(self, zero, one, one, zero, true));
  JreStrongAssign(&self->zeroPrecomp_, NetI2pCryptoEddsaMathGroupElement_precompWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self, one, one, zero));
}

NetI2pCryptoEddsaMathCurve *new_NetI2pCryptoEddsaMathCurve_initWithNetI2pCryptoEddsaMathField_withByteArray_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathField *f, IOSByteArray *d, NetI2pCryptoEddsaMathFieldElement *I) {
  J2OBJC_NEW_IMPL(NetI2pCryptoEddsaMathCurve, initWithNetI2pCryptoEddsaMathField_withByteArray_withNetI2pCryptoEddsaMathFieldElement_, f, d, I)
}

NetI2pCryptoEddsaMathCurve *create_NetI2pCryptoEddsaMathCurve_initWithNetI2pCryptoEddsaMathField_withByteArray_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathField *f, IOSByteArray *d, NetI2pCryptoEddsaMathFieldElement *I) {
  J2OBJC_CREATE_IMPL(NetI2pCryptoEddsaMathCurve, initWithNetI2pCryptoEddsaMathField_withByteArray_withNetI2pCryptoEddsaMathFieldElement_, f, d, I)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoEddsaMathCurve)
