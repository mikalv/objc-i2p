//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/math/Field.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "net/i2p/crypto/eddsa/math/Constants.h"
#include "net/i2p/crypto/eddsa/math/Encoding.h"
#include "net/i2p/crypto/eddsa/math/Field.h"
#include "net/i2p/crypto/eddsa/math/FieldElement.h"

@interface NetI2pCryptoEddsaMathField () {
 @public
  jint b_;
  NetI2pCryptoEddsaMathFieldElement *q_;
  NetI2pCryptoEddsaMathFieldElement *qm2_;
  NetI2pCryptoEddsaMathFieldElement *qm5d8_;
  NetI2pCryptoEddsaMathEncoding *enc_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathField, q_, NetI2pCryptoEddsaMathFieldElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathField, qm2_, NetI2pCryptoEddsaMathFieldElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathField, qm5d8_, NetI2pCryptoEddsaMathFieldElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathField, enc_, NetI2pCryptoEddsaMathEncoding *)

inline jlong NetI2pCryptoEddsaMathField_get_serialVersionUID(void);
#define NetI2pCryptoEddsaMathField_serialVersionUID 8746587465875676LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoEddsaMathField, serialVersionUID, jlong)

@implementation NetI2pCryptoEddsaMathField

- (instancetype)initWithInt:(jint)b
              withByteArray:(IOSByteArray *)q
withNetI2pCryptoEddsaMathEncoding:(NetI2pCryptoEddsaMathEncoding *)enc {
  NetI2pCryptoEddsaMathField_initWithInt_withByteArray_withNetI2pCryptoEddsaMathEncoding_(self, b, q, enc);
  return self;
}

- (NetI2pCryptoEddsaMathFieldElement *)fromByteArrayWithByteArray:(IOSByteArray *)x {
  return [((NetI2pCryptoEddsaMathEncoding *) nil_chk(enc_)) decodeWithByteArray:x];
}

- (jint)getb {
  return b_;
}

- (NetI2pCryptoEddsaMathFieldElement *)getQ {
  return q_;
}

- (NetI2pCryptoEddsaMathFieldElement *)getQm2 {
  return qm2_;
}

- (NetI2pCryptoEddsaMathFieldElement *)getQm5d8 {
  return qm5d8_;
}

- (NetI2pCryptoEddsaMathEncoding *)getEncoding {
  return enc_;
}

- (NSUInteger)hash {
  return ((jint) [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(q_)) hash]);
}

- (jboolean)isEqual:(id)obj {
  if (!([obj isKindOfClass:[NetI2pCryptoEddsaMathField class]])) return false;
  NetI2pCryptoEddsaMathField *f = (NetI2pCryptoEddsaMathField *) cast_chk(obj, [NetI2pCryptoEddsaMathField class]);
  return b_ == ((NetI2pCryptoEddsaMathField *) nil_chk(f))->b_ && [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(q_)) isEqual:f->q_];
}

- (void)dealloc {
  RELEASE_(ZERO_);
  RELEASE_(ONE_);
  RELEASE_(TWO_);
  RELEASE_(FOUR_);
  RELEASE_(FIVE_);
  RELEASE_(EIGHT_);
  RELEASE_(q_);
  RELEASE_(qm2_);
  RELEASE_(qm5d8_);
  RELEASE_(enc_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathEncoding;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withByteArray:withNetI2pCryptoEddsaMathEncoding:);
  methods[1].selector = @selector(fromByteArrayWithByteArray:);
  methods[2].selector = @selector(getb);
  methods[3].selector = @selector(getQ);
  methods[4].selector = @selector(getQm2);
  methods[5].selector = @selector(getQm5d8);
  methods[6].selector = @selector(getEncoding);
  methods[7].selector = @selector(hash);
  methods[8].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = NetI2pCryptoEddsaMathField_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "ZERO_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "ONE_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "TWO_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "FOUR_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "FIVE_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "EIGHT_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "b_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "q_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "qm2_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "qm5d8_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "enc_", "LNetI2pCryptoEddsaMathEncoding;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I[BLNetI2pCryptoEddsaMathEncoding;", "fromByteArray", "[B", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _NetI2pCryptoEddsaMathField = { "Field", "net.i2p.crypto.eddsa.math", ptrTable, methods, fields, 7, 0x1, 9, 12, -1, -1, -1, -1, -1 };
  return &_NetI2pCryptoEddsaMathField;
}

@end

void NetI2pCryptoEddsaMathField_initWithInt_withByteArray_withNetI2pCryptoEddsaMathEncoding_(NetI2pCryptoEddsaMathField *self, jint b, IOSByteArray *q, NetI2pCryptoEddsaMathEncoding *enc) {
  NSObject_init(self);
  self->b_ = b;
  JreStrongAssign(&self->enc_, enc);
  [((NetI2pCryptoEddsaMathEncoding *) nil_chk(self->enc_)) setFieldWithNetI2pCryptoEddsaMathField:self];
  JreStrongAssign(&self->q_, [self fromByteArrayWithByteArray:q]);
  JreStrongAssign(&self->ZERO_, [self fromByteArrayWithByteArray:JreLoadStatic(NetI2pCryptoEddsaMathConstants, ZERO)]);
  JreStrongAssign(&self->ONE_, [self fromByteArrayWithByteArray:JreLoadStatic(NetI2pCryptoEddsaMathConstants, ONE)]);
  JreStrongAssign(&self->TWO_, [self fromByteArrayWithByteArray:JreLoadStatic(NetI2pCryptoEddsaMathConstants, TWO)]);
  JreStrongAssign(&self->FOUR_, [self fromByteArrayWithByteArray:JreLoadStatic(NetI2pCryptoEddsaMathConstants, FOUR)]);
  JreStrongAssign(&self->FIVE_, [self fromByteArrayWithByteArray:JreLoadStatic(NetI2pCryptoEddsaMathConstants, FIVE)]);
  JreStrongAssign(&self->EIGHT_, [self fromByteArrayWithByteArray:JreLoadStatic(NetI2pCryptoEddsaMathConstants, EIGHT)]);
  JreStrongAssign(&self->qm2_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->q_)) subtractWithNetI2pCryptoEddsaMathFieldElement:self->TWO_]);
  JreStrongAssign(&self->qm5d8_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk([self->q_ subtractWithNetI2pCryptoEddsaMathFieldElement:self->FIVE_])) divideWithNetI2pCryptoEddsaMathFieldElement:self->EIGHT_]);
}

NetI2pCryptoEddsaMathField *new_NetI2pCryptoEddsaMathField_initWithInt_withByteArray_withNetI2pCryptoEddsaMathEncoding_(jint b, IOSByteArray *q, NetI2pCryptoEddsaMathEncoding *enc) {
  J2OBJC_NEW_IMPL(NetI2pCryptoEddsaMathField, initWithInt_withByteArray_withNetI2pCryptoEddsaMathEncoding_, b, q, enc)
}

NetI2pCryptoEddsaMathField *create_NetI2pCryptoEddsaMathField_initWithInt_withByteArray_withNetI2pCryptoEddsaMathEncoding_(jint b, IOSByteArray *q, NetI2pCryptoEddsaMathEncoding *enc) {
  J2OBJC_CREATE_IMPL(NetI2pCryptoEddsaMathField, initWithInt_withByteArray_withNetI2pCryptoEddsaMathEncoding_, b, q, enc)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoEddsaMathField)
