//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/math/Constants.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoEddsaMathConstants")
#ifdef RESTRICT_NetI2pCryptoEddsaMathConstants
#define INCLUDE_ALL_NetI2pCryptoEddsaMathConstants 0
#else
#define INCLUDE_ALL_NetI2pCryptoEddsaMathConstants 1
#endif
#undef RESTRICT_NetI2pCryptoEddsaMathConstants

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoEddsaMathConstants_) && (INCLUDE_ALL_NetI2pCryptoEddsaMathConstants || defined(INCLUDE_NetI2pCryptoEddsaMathConstants))
#define NetI2pCryptoEddsaMathConstants_

@class IOSByteArray;

@interface NetI2pCryptoEddsaMathConstants : NSObject
@property (readonly, class, strong) IOSByteArray *ZERO NS_SWIFT_NAME(ZERO);
@property (readonly, class, strong) IOSByteArray *ONE NS_SWIFT_NAME(ONE);
@property (readonly, class, strong) IOSByteArray *TWO NS_SWIFT_NAME(TWO);
@property (readonly, class, strong) IOSByteArray *FOUR NS_SWIFT_NAME(FOUR);
@property (readonly, class, strong) IOSByteArray *FIVE NS_SWIFT_NAME(FIVE);
@property (readonly, class, strong) IOSByteArray *EIGHT NS_SWIFT_NAME(EIGHT);

+ (IOSByteArray *)ZERO;

+ (IOSByteArray *)ONE;

+ (IOSByteArray *)TWO;

+ (IOSByteArray *)FOUR;

+ (IOSByteArray *)FIVE;

+ (IOSByteArray *)EIGHT;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_STATIC_INIT(NetI2pCryptoEddsaMathConstants)

inline IOSByteArray *NetI2pCryptoEddsaMathConstants_get_ZERO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *NetI2pCryptoEddsaMathConstants_ZERO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pCryptoEddsaMathConstants, ZERO, IOSByteArray *)

inline IOSByteArray *NetI2pCryptoEddsaMathConstants_get_ONE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *NetI2pCryptoEddsaMathConstants_ONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pCryptoEddsaMathConstants, ONE, IOSByteArray *)

inline IOSByteArray *NetI2pCryptoEddsaMathConstants_get_TWO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *NetI2pCryptoEddsaMathConstants_TWO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pCryptoEddsaMathConstants, TWO, IOSByteArray *)

inline IOSByteArray *NetI2pCryptoEddsaMathConstants_get_FOUR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *NetI2pCryptoEddsaMathConstants_FOUR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pCryptoEddsaMathConstants, FOUR, IOSByteArray *)

inline IOSByteArray *NetI2pCryptoEddsaMathConstants_get_FIVE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *NetI2pCryptoEddsaMathConstants_FIVE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pCryptoEddsaMathConstants, FIVE, IOSByteArray *)

inline IOSByteArray *NetI2pCryptoEddsaMathConstants_get_EIGHT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *NetI2pCryptoEddsaMathConstants_EIGHT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pCryptoEddsaMathConstants, EIGHT, IOSByteArray *)

FOUNDATION_EXPORT void NetI2pCryptoEddsaMathConstants_init(NetI2pCryptoEddsaMathConstants *self);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathConstants *new_NetI2pCryptoEddsaMathConstants_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoEddsaMathConstants *create_NetI2pCryptoEddsaMathConstants_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoEddsaMathConstants)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoEddsaMathConstants")
