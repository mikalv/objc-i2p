//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/math/ed25519/Ed25519ScalarOps.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps")
#ifdef RESTRICT_NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps
#define INCLUDE_ALL_NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps 0
#else
#define INCLUDE_ALL_NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps 1
#endif
#undef RESTRICT_NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps_) && (INCLUDE_ALL_NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps || defined(INCLUDE_NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps))
#define NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps_

#define RESTRICT_NetI2pCryptoEddsaMathScalarOps 1
#define INCLUDE_NetI2pCryptoEddsaMathScalarOps 1
#include "net/i2p/crypto/eddsa/math/ScalarOps.h"

@class IOSByteArray;

@interface NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps : NSObject < NetI2pCryptoEddsaMathScalarOps >

#pragma mark Public

- (instancetype __nonnull)init;

- (IOSByteArray *)multiplyAndAddWithByteArray:(IOSByteArray *)a
                                withByteArray:(IOSByteArray *)b
                                withByteArray:(IOSByteArray *)c;

- (IOSByteArray *)reduceWithByteArray:(IOSByteArray *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps)

FOUNDATION_EXPORT void NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps_init(NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps *self);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps *new_NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps *create_NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoEddsaMathEd25519Ed25519ScalarOps")
