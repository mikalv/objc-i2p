//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/math/GroupElement.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Arrays.h"
#include "net/i2p/crypto/eddsa/Utils.h"
#include "net/i2p/crypto/eddsa/math/Curve.h"
#include "net/i2p/crypto/eddsa/math/Field.h"
#include "net/i2p/crypto/eddsa/math/FieldElement.h"
#include "net/i2p/crypto/eddsa/math/GroupElement.h"

@interface NetI2pCryptoEddsaMathGroupElement ()

- (NetI2pCryptoEddsaMathGroupElement *)toRepWithNetI2pCryptoEddsaMathGroupElement_Representation:(NetI2pCryptoEddsaMathGroupElement_Representation *)repr;

- (IOSObjectArray *)precomputeSingle;

- (IOSObjectArray *)precomputeDouble;

- (NetI2pCryptoEddsaMathGroupElement *)maddWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)q;

- (NetI2pCryptoEddsaMathGroupElement *)msubWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)q;

@end

inline jlong NetI2pCryptoEddsaMathGroupElement_get_serialVersionUID(void);
#define NetI2pCryptoEddsaMathGroupElement_serialVersionUID 2395879087349587LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoEddsaMathGroupElement, serialVersionUID, jlong)

__attribute__((unused)) static NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_toRepWithNetI2pCryptoEddsaMathGroupElement_Representation_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathGroupElement_Representation *repr);

__attribute__((unused)) static IOSObjectArray *NetI2pCryptoEddsaMathGroupElement_precomputeSingle(NetI2pCryptoEddsaMathGroupElement *self);

__attribute__((unused)) static IOSObjectArray *NetI2pCryptoEddsaMathGroupElement_precomputeDouble(NetI2pCryptoEddsaMathGroupElement *self);

__attribute__((unused)) static NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_maddWithNetI2pCryptoEddsaMathGroupElement_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathGroupElement *q);

__attribute__((unused)) static NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_msubWithNetI2pCryptoEddsaMathGroupElement_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathGroupElement *q);

__attribute__((unused)) static void NetI2pCryptoEddsaMathGroupElement_Representation_initWithNSString_withInt_(NetI2pCryptoEddsaMathGroupElement_Representation *self, NSString *__name, jint __ordinal);

@implementation NetI2pCryptoEddsaMathGroupElement

+ (NetI2pCryptoEddsaMathGroupElement *)p2WithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z {
  return NetI2pCryptoEddsaMathGroupElement_p2WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve, X, Y, Z);
}

+ (NetI2pCryptoEddsaMathGroupElement *)p3WithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T {
  return NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve, X, Y, Z, T);
}

+ (NetI2pCryptoEddsaMathGroupElement *)p3WithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T
                                                            withBoolean:(jboolean)precomputeDoubleOnly {
  return NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(curve, X, Y, Z, T, precomputeDoubleOnly);
}

+ (NetI2pCryptoEddsaMathGroupElement *)p1p1WithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                    withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
                                    withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
                                    withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
                                    withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T {
  return NetI2pCryptoEddsaMathGroupElement_p1p1WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve, X, Y, Z, T);
}

+ (NetI2pCryptoEddsaMathGroupElement *)precompWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)ypx
                                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)ymx
                                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)xy2d {
  return NetI2pCryptoEddsaMathGroupElement_precompWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve, ypx, ymx, xy2d);
}

+ (NetI2pCryptoEddsaMathGroupElement *)cachedWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                      withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)YpX
                                      withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)YmX
                                      withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
                                      withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T2d {
  return NetI2pCryptoEddsaMathGroupElement_cachedWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve, YpX, YmX, Z, T2d);
}

- (instancetype)initWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
withNetI2pCryptoEddsaMathGroupElement_Representation:(NetI2pCryptoEddsaMathGroupElement_Representation *)repr
             withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
             withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
             withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
             withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T {
  NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self, curve, repr, X, Y, Z, T);
  return self;
}

- (instancetype)initWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
withNetI2pCryptoEddsaMathGroupElement_Representation:(NetI2pCryptoEddsaMathGroupElement_Representation *)repr
             withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
             withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
             withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
             withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T
                                       withBoolean:(jboolean)precomputeDouble {
  NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(self, curve, repr, X, Y, Z, T, precomputeDouble);
  return self;
}

- (instancetype)initWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                     withByteArray:(IOSByteArray *)s {
  NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_(self, curve, s);
  return self;
}

- (instancetype)initWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                     withByteArray:(IOSByteArray *)s
                                       withBoolean:(jboolean)precomputeSingleAndDouble {
  NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_withBoolean_(self, curve, s, precomputeSingleAndDouble);
  return self;
}

- (NetI2pCryptoEddsaMathCurve *)getCurve {
  return self->curve_;
}

- (NetI2pCryptoEddsaMathGroupElement_Representation *)getRepresentation {
  return self->repr_;
}

- (NetI2pCryptoEddsaMathFieldElement *)getX {
  return self->X_;
}

- (NetI2pCryptoEddsaMathFieldElement *)getY {
  return self->Y_;
}

- (NetI2pCryptoEddsaMathFieldElement *)getZ {
  return self->Z_;
}

- (NetI2pCryptoEddsaMathFieldElement *)getT {
  return self->T_;
}

- (IOSByteArray *)toByteArray {
  {
    NetI2pCryptoEddsaMathFieldElement *recip;
    NetI2pCryptoEddsaMathFieldElement *x;
    NetI2pCryptoEddsaMathFieldElement *y;
    IOSByteArray *s;
    switch ([self->repr_ ordinal]) {
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P2:
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3:
      recip = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Z_)) invert];
      x = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(X_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:recip];
      y = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Y_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:recip];
      s = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(y)) toByteArray];
      *IOSByteArray_GetRef(s, ((IOSByteArray *) nil_chk(s))->size_ - 1) |= ([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(x)) isNegative] ? (jbyte) (jint) 0x80 : 0);
      return s;
      default:
      return [((NetI2pCryptoEddsaMathGroupElement *) nil_chk([self toP2])) toByteArray];
    }
  }
}

- (NetI2pCryptoEddsaMathGroupElement *)toP2 {
  return NetI2pCryptoEddsaMathGroupElement_toRepWithNetI2pCryptoEddsaMathGroupElement_Representation_(self, JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P2));
}

- (NetI2pCryptoEddsaMathGroupElement *)toP3 {
  return NetI2pCryptoEddsaMathGroupElement_toRepWithNetI2pCryptoEddsaMathGroupElement_Representation_(self, JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3));
}

- (NetI2pCryptoEddsaMathGroupElement *)toP3PrecomputeDouble {
  return NetI2pCryptoEddsaMathGroupElement_toRepWithNetI2pCryptoEddsaMathGroupElement_Representation_(self, JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3PrecomputedDouble));
}

- (NetI2pCryptoEddsaMathGroupElement *)toCached {
  return NetI2pCryptoEddsaMathGroupElement_toRepWithNetI2pCryptoEddsaMathGroupElement_Representation_(self, JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, CACHED));
}

- (NetI2pCryptoEddsaMathGroupElement *)toRepWithNetI2pCryptoEddsaMathGroupElement_Representation:(NetI2pCryptoEddsaMathGroupElement_Representation *)repr {
  return NetI2pCryptoEddsaMathGroupElement_toRepWithNetI2pCryptoEddsaMathGroupElement_Representation_(self, repr);
}

- (IOSObjectArray *)precomputeSingle {
  return NetI2pCryptoEddsaMathGroupElement_precomputeSingle(self);
}

- (IOSObjectArray *)precomputeDouble {
  return NetI2pCryptoEddsaMathGroupElement_precomputeDouble(self);
}

- (NetI2pCryptoEddsaMathGroupElement *)dbl {
  {
    NetI2pCryptoEddsaMathFieldElement *XX;
    NetI2pCryptoEddsaMathFieldElement *YY;
    NetI2pCryptoEddsaMathFieldElement *B;
    NetI2pCryptoEddsaMathFieldElement *A;
    NetI2pCryptoEddsaMathFieldElement *AA;
    NetI2pCryptoEddsaMathFieldElement *Yn;
    NetI2pCryptoEddsaMathFieldElement *Zn;
    switch ([self->repr_ ordinal]) {
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P2:
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3:
      XX = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->X_)) square];
      YY = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) square];
      B = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Z_)) squareAndDouble];
      A = [self->X_ addWithNetI2pCryptoEddsaMathFieldElement:self->Y_];
      AA = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(A)) square];
      Yn = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(YY)) addWithNetI2pCryptoEddsaMathFieldElement:XX];
      Zn = [YY subtractWithNetI2pCryptoEddsaMathFieldElement:XX];
      return NetI2pCryptoEddsaMathGroupElement_p1p1WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(AA)) subtractWithNetI2pCryptoEddsaMathFieldElement:Yn], Yn, Zn, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(B)) subtractWithNetI2pCryptoEddsaMathFieldElement:Zn]);
      default:
      @throw create_JavaLangUnsupportedOperationException_init();
    }
  }
}

- (NetI2pCryptoEddsaMathGroupElement *)maddWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)q {
  return NetI2pCryptoEddsaMathGroupElement_maddWithNetI2pCryptoEddsaMathGroupElement_(self, q);
}

- (NetI2pCryptoEddsaMathGroupElement *)msubWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)q {
  return NetI2pCryptoEddsaMathGroupElement_msubWithNetI2pCryptoEddsaMathGroupElement_(self, q);
}

- (NetI2pCryptoEddsaMathGroupElement *)addWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)q {
  if (self->repr_ != JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3)) @throw create_JavaLangUnsupportedOperationException_init();
  if (((NetI2pCryptoEddsaMathGroupElement *) nil_chk(q))->repr_ != JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, CACHED)) @throw create_JavaLangIllegalArgumentException_init();
  NetI2pCryptoEddsaMathFieldElement *YpX;
  NetI2pCryptoEddsaMathFieldElement *YmX;
  NetI2pCryptoEddsaMathFieldElement *A;
  NetI2pCryptoEddsaMathFieldElement *B;
  NetI2pCryptoEddsaMathFieldElement *C;
  NetI2pCryptoEddsaMathFieldElement *ZZ;
  NetI2pCryptoEddsaMathFieldElement *D;
  YpX = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) addWithNetI2pCryptoEddsaMathFieldElement:self->X_];
  YmX = [self->Y_ subtractWithNetI2pCryptoEddsaMathFieldElement:self->X_];
  A = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(YpX)) multiplyWithNetI2pCryptoEddsaMathFieldElement:q->X_];
  B = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(YmX)) multiplyWithNetI2pCryptoEddsaMathFieldElement:q->Y_];
  C = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(q->T_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->T_];
  ZZ = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Z_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:q->Z_];
  D = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(ZZ)) addWithNetI2pCryptoEddsaMathFieldElement:ZZ];
  return NetI2pCryptoEddsaMathGroupElement_p1p1WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(A)) subtractWithNetI2pCryptoEddsaMathFieldElement:B], [A addWithNetI2pCryptoEddsaMathFieldElement:B], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(D)) addWithNetI2pCryptoEddsaMathFieldElement:C], [D subtractWithNetI2pCryptoEddsaMathFieldElement:C]);
}

- (NetI2pCryptoEddsaMathGroupElement *)subWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)q {
  if (self->repr_ != JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3)) @throw create_JavaLangUnsupportedOperationException_init();
  if (((NetI2pCryptoEddsaMathGroupElement *) nil_chk(q))->repr_ != JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, CACHED)) @throw create_JavaLangIllegalArgumentException_init();
  NetI2pCryptoEddsaMathFieldElement *YpX;
  NetI2pCryptoEddsaMathFieldElement *YmX;
  NetI2pCryptoEddsaMathFieldElement *A;
  NetI2pCryptoEddsaMathFieldElement *B;
  NetI2pCryptoEddsaMathFieldElement *C;
  NetI2pCryptoEddsaMathFieldElement *ZZ;
  NetI2pCryptoEddsaMathFieldElement *D;
  YpX = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Y_)) addWithNetI2pCryptoEddsaMathFieldElement:X_];
  YmX = [Y_ subtractWithNetI2pCryptoEddsaMathFieldElement:X_];
  A = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(YpX)) multiplyWithNetI2pCryptoEddsaMathFieldElement:q->Y_];
  B = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(YmX)) multiplyWithNetI2pCryptoEddsaMathFieldElement:q->X_];
  C = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(q->T_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:T_];
  ZZ = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Z_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:q->Z_];
  D = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(ZZ)) addWithNetI2pCryptoEddsaMathFieldElement:ZZ];
  return NetI2pCryptoEddsaMathGroupElement_p1p1WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(A)) subtractWithNetI2pCryptoEddsaMathFieldElement:B], [A addWithNetI2pCryptoEddsaMathFieldElement:B], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(D)) subtractWithNetI2pCryptoEddsaMathFieldElement:C], [D addWithNetI2pCryptoEddsaMathFieldElement:C]);
}

- (NetI2pCryptoEddsaMathGroupElement *)negate {
  if (self->repr_ != JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3)) @throw create_JavaLangUnsupportedOperationException_init();
  return [((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathCurve *) nil_chk(self->curve_)) getZeroWithNetI2pCryptoEddsaMathGroupElement_Representation:JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3)])) subWithNetI2pCryptoEddsaMathGroupElement:[self toCached]])) toP3PrecomputeDouble];
}

- (NSUInteger)hash {
  return JavaUtilArrays_hashCodeWithByteArray_([self toByteArray]);
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) return true;
  if (!([obj isKindOfClass:[NetI2pCryptoEddsaMathGroupElement class]])) return false;
  NetI2pCryptoEddsaMathGroupElement *ge = (NetI2pCryptoEddsaMathGroupElement *) cast_chk(obj, [NetI2pCryptoEddsaMathGroupElement class]);
  if (![((NetI2pCryptoEddsaMathGroupElement_Representation *) nil_chk(self->repr_)) isEqual:((NetI2pCryptoEddsaMathGroupElement *) nil_chk(ge))->repr_]) {
    @try {
      ge = NetI2pCryptoEddsaMathGroupElement_toRepWithNetI2pCryptoEddsaMathGroupElement_Representation_(ge, self->repr_);
    }
    @catch (JavaLangRuntimeException *e) {
      return false;
    }
  }
  {
    NetI2pCryptoEddsaMathFieldElement *x1;
    NetI2pCryptoEddsaMathFieldElement *y1;
    NetI2pCryptoEddsaMathFieldElement *x2;
    NetI2pCryptoEddsaMathFieldElement *y2;
    NetI2pCryptoEddsaMathFieldElement *x3;
    NetI2pCryptoEddsaMathFieldElement *y3;
    NetI2pCryptoEddsaMathFieldElement *t3;
    NetI2pCryptoEddsaMathFieldElement *x4;
    NetI2pCryptoEddsaMathFieldElement *y4;
    NetI2pCryptoEddsaMathFieldElement *t4;
    switch ([self->repr_ ordinal]) {
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P2:
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3:
      if ([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Z_)) isEqual:((NetI2pCryptoEddsaMathGroupElement *) nil_chk(ge))->Z_]) return [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->X_)) isEqual:ge->X_] && [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) isEqual:ge->Y_];
      x1 = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->X_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:ge->Z_];
      y1 = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:ge->Z_];
      x2 = [ge->X_ multiplyWithNetI2pCryptoEddsaMathFieldElement:self->Z_];
      y2 = [ge->Y_ multiplyWithNetI2pCryptoEddsaMathFieldElement:self->Z_];
      return [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(x1)) isEqual:x2] && [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(y1)) isEqual:y2];
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P1P1:
      return [((NetI2pCryptoEddsaMathGroupElement *) nil_chk([self toP2])) isEqual:ge];
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_PRECOMP:
      return [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->X_)) isEqual:((NetI2pCryptoEddsaMathGroupElement *) nil_chk(ge))->X_] && [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) isEqual:ge->Y_] && [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Z_)) isEqual:ge->Z_];
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_CACHED:
      if ([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Z_)) isEqual:((NetI2pCryptoEddsaMathGroupElement *) nil_chk(ge))->Z_]) return [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->X_)) isEqual:ge->X_] && [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) isEqual:ge->Y_] && [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->T_)) isEqual:ge->T_];
      x3 = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->X_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:ge->Z_];
      y3 = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:ge->Z_];
      t3 = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->T_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:ge->Z_];
      x4 = [ge->X_ multiplyWithNetI2pCryptoEddsaMathFieldElement:self->Z_];
      y4 = [ge->Y_ multiplyWithNetI2pCryptoEddsaMathFieldElement:self->Z_];
      t4 = [ge->T_ multiplyWithNetI2pCryptoEddsaMathFieldElement:self->Z_];
      return [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(x3)) isEqual:x4] && [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(y3)) isEqual:y4] && [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(t3)) isEqual:t4];
      default:
      return false;
    }
  }
}

+ (IOSByteArray *)toRadix16WithByteArray:(IOSByteArray *)a {
  return NetI2pCryptoEddsaMathGroupElement_toRadix16WithByteArray_(a);
}

- (NetI2pCryptoEddsaMathGroupElement *)cmovWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)u
                                                                         withInt:(jint)b {
  return NetI2pCryptoEddsaMathGroupElement_precompWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(X_)) cmovWithNetI2pCryptoEddsaMathFieldElement:((NetI2pCryptoEddsaMathGroupElement *) nil_chk(u))->X_ withInt:b], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Y_)) cmovWithNetI2pCryptoEddsaMathFieldElement:u->Y_ withInt:b], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Z_)) cmovWithNetI2pCryptoEddsaMathFieldElement:u->Z_ withInt:b]);
}

- (NetI2pCryptoEddsaMathGroupElement *)selectWithInt:(jint)pos
                                             withInt:(jint)b {
  jint bnegative = NetI2pCryptoEddsaUtils_negativeWithInt_(b);
  jint babs = b - (JreLShift32(((-bnegative) & b), 1));
  NetI2pCryptoEddsaMathGroupElement *t = [((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathCurve *) nil_chk(self->curve_)) getZeroWithNetI2pCryptoEddsaMathGroupElement_Representation:JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, PRECOMP)])) cmovWithNetI2pCryptoEddsaMathGroupElement:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->precmp_), pos)), 0) withInt:NetI2pCryptoEddsaUtils_equalWithInt_withInt_(babs, 1)])) cmovWithNetI2pCryptoEddsaMathGroupElement:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->precmp_, pos)), 1) withInt:NetI2pCryptoEddsaUtils_equalWithInt_withInt_(babs, 2)])) cmovWithNetI2pCryptoEddsaMathGroupElement:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->precmp_, pos)), 2) withInt:NetI2pCryptoEddsaUtils_equalWithInt_withInt_(babs, 3)])) cmovWithNetI2pCryptoEddsaMathGroupElement:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->precmp_, pos)), 3) withInt:NetI2pCryptoEddsaUtils_equalWithInt_withInt_(babs, 4)])) cmovWithNetI2pCryptoEddsaMathGroupElement:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->precmp_, pos)), 4) withInt:NetI2pCryptoEddsaUtils_equalWithInt_withInt_(babs, 5)])) cmovWithNetI2pCryptoEddsaMathGroupElement:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->precmp_, pos)), 5) withInt:NetI2pCryptoEddsaUtils_equalWithInt_withInt_(babs, 6)])) cmovWithNetI2pCryptoEddsaMathGroupElement:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->precmp_, pos)), 6) withInt:NetI2pCryptoEddsaUtils_equalWithInt_withInt_(babs, 7)])) cmovWithNetI2pCryptoEddsaMathGroupElement:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->precmp_, pos)), 7) withInt:NetI2pCryptoEddsaUtils_equalWithInt_withInt_(babs, 8)];
  NetI2pCryptoEddsaMathGroupElement *tminus = NetI2pCryptoEddsaMathGroupElement_precompWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve_, ((NetI2pCryptoEddsaMathGroupElement *) nil_chk(t))->Y_, t->X_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(t->Z_)) negate]);
  return [t cmovWithNetI2pCryptoEddsaMathGroupElement:tminus withInt:bnegative];
}

- (NetI2pCryptoEddsaMathGroupElement *)scalarMultiplyWithByteArray:(IOSByteArray *)a {
  NetI2pCryptoEddsaMathGroupElement *t;
  jint i;
  IOSByteArray *e = NetI2pCryptoEddsaMathGroupElement_toRadix16WithByteArray_(a);
  NetI2pCryptoEddsaMathGroupElement *h = [((NetI2pCryptoEddsaMathCurve *) nil_chk(self->curve_)) getZeroWithNetI2pCryptoEddsaMathGroupElement_Representation:JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3)];
  for (i = 1; i < 64; i += 2) {
    t = [self selectWithInt:i / 2 withInt:IOSByteArray_Get(nil_chk(e), i)];
    h = [((NetI2pCryptoEddsaMathGroupElement *) nil_chk(NetI2pCryptoEddsaMathGroupElement_maddWithNetI2pCryptoEddsaMathGroupElement_(nil_chk(h), t))) toP3];
  }
  h = [((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk(h)) dbl])) toP2])) dbl])) toP2])) dbl])) toP2])) dbl])) toP3];
  for (i = 0; i < 64; i += 2) {
    t = [self selectWithInt:i / 2 withInt:IOSByteArray_Get(nil_chk(e), i)];
    h = [((NetI2pCryptoEddsaMathGroupElement *) nil_chk(NetI2pCryptoEddsaMathGroupElement_maddWithNetI2pCryptoEddsaMathGroupElement_(nil_chk(h), t))) toP3];
  }
  return h;
}

+ (IOSByteArray *)slideWithByteArray:(IOSByteArray *)a {
  return NetI2pCryptoEddsaMathGroupElement_slideWithByteArray_(a);
}

- (NetI2pCryptoEddsaMathGroupElement *)doubleScalarMultiplyVariableTimeWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)A
                                                                                               withByteArray:(IOSByteArray *)a
                                                                                               withByteArray:(IOSByteArray *)b {
  IOSByteArray *aslide = NetI2pCryptoEddsaMathGroupElement_slideWithByteArray_(a);
  IOSByteArray *bslide = NetI2pCryptoEddsaMathGroupElement_slideWithByteArray_(b);
  NetI2pCryptoEddsaMathGroupElement *r = [((NetI2pCryptoEddsaMathCurve *) nil_chk(self->curve_)) getZeroWithNetI2pCryptoEddsaMathGroupElement_Representation:JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P2)];
  jint i;
  for (i = 255; i >= 0; --i) {
    if (IOSByteArray_Get(nil_chk(aslide), i) != 0 || IOSByteArray_Get(nil_chk(bslide), i) != 0) break;
  }
  for (; i >= 0; --i) {
    NetI2pCryptoEddsaMathGroupElement *t = [((NetI2pCryptoEddsaMathGroupElement *) nil_chk(r)) dbl];
    if (IOSByteArray_Get(nil_chk(aslide), i) > 0) {
      t = NetI2pCryptoEddsaMathGroupElement_maddWithNetI2pCryptoEddsaMathGroupElement_(nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk(t)) toP3]), IOSObjectArray_Get(nil_chk(((NetI2pCryptoEddsaMathGroupElement *) nil_chk(A))->dblPrecmp_), IOSByteArray_Get(aslide, i) / 2));
    }
    else if (IOSByteArray_Get(aslide, i) < 0) {
      t = NetI2pCryptoEddsaMathGroupElement_msubWithNetI2pCryptoEddsaMathGroupElement_(nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk(t)) toP3]), IOSObjectArray_Get(nil_chk(((NetI2pCryptoEddsaMathGroupElement *) nil_chk(A))->dblPrecmp_), (-IOSByteArray_Get(aslide, i)) / 2));
    }
    if (IOSByteArray_Get(nil_chk(bslide), i) > 0) {
      t = NetI2pCryptoEddsaMathGroupElement_maddWithNetI2pCryptoEddsaMathGroupElement_(nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk(t)) toP3]), IOSObjectArray_Get(nil_chk(self->dblPrecmp_), IOSByteArray_Get(bslide, i) / 2));
    }
    else if (IOSByteArray_Get(bslide, i) < 0) {
      t = NetI2pCryptoEddsaMathGroupElement_msubWithNetI2pCryptoEddsaMathGroupElement_(nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk(t)) toP3]), IOSObjectArray_Get(nil_chk(self->dblPrecmp_), (-IOSByteArray_Get(bslide, i)) / 2));
    }
    r = [((NetI2pCryptoEddsaMathGroupElement *) nil_chk(t)) toP2];
  }
  return r;
}

- (jboolean)isOnCurve {
  return [self isOnCurveWithNetI2pCryptoEddsaMathCurve:curve_];
}

- (jboolean)isOnCurveWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve {
  {
    NetI2pCryptoEddsaMathFieldElement *recip;
    NetI2pCryptoEddsaMathFieldElement *x;
    NetI2pCryptoEddsaMathFieldElement *y;
    NetI2pCryptoEddsaMathFieldElement *xx;
    NetI2pCryptoEddsaMathFieldElement *yy;
    NetI2pCryptoEddsaMathFieldElement *dxxyy;
    switch ([repr_ ordinal]) {
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P2:
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3:
      recip = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Z_)) invert];
      x = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(X_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:recip];
      y = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Y_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:recip];
      xx = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(x)) square];
      yy = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(y)) square];
      dxxyy = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk([((NetI2pCryptoEddsaMathFieldElement *) nil_chk([((NetI2pCryptoEddsaMathCurve *) nil_chk(curve)) getD])) multiplyWithNetI2pCryptoEddsaMathFieldElement:xx])) multiplyWithNetI2pCryptoEddsaMathFieldElement:yy];
      return [((NetI2pCryptoEddsaMathFieldElement *) nil_chk([((NetI2pCryptoEddsaMathFieldElement *) nil_chk([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(((NetI2pCryptoEddsaMathField *) nil_chk([curve getField]))->ONE_)) addWithNetI2pCryptoEddsaMathFieldElement:dxxyy])) addWithNetI2pCryptoEddsaMathFieldElement:xx])) isEqual:yy];
      default:
      return [((NetI2pCryptoEddsaMathGroupElement *) nil_chk([self toP2])) isOnCurveWithNetI2pCryptoEddsaMathCurve:curve];
    }
  }
}

- (NSString *)description {
  return JreStrcat("$@$@$@$@$", @"[GroupElement\nX=", X_, @"\nY=", Y_, @"\nZ=", Z_, @"\nT=", T_, @"\n]");
}

- (void)dealloc {
  RELEASE_(curve_);
  RELEASE_(repr_);
  RELEASE_(X_);
  RELEASE_(Y_);
  RELEASE_(Z_);
  RELEASE_(T_);
  RELEASE_(precmp_);
  RELEASE_(dblPrecmp_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x9, 5, 3, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x9, 6, 1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x9, 7, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 11, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathCurve;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement_Representation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "[[LNetI2pCryptoEddsaMathGroupElement;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNetI2pCryptoEddsaMathGroupElement;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x2, 14, 15, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x2, 16, 15, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, 17, 15, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, 18, 15, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "[B", 0x8, 22, 23, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x0, 24, 25, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x0, 26, 27, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, 28, 23, -1, -1, -1, -1 },
    { NULL, "[B", 0x8, 29, 23, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement;", 0x1, 30, 31, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 32, 33, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 34, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(p2WithNetI2pCryptoEddsaMathCurve:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:);
  methods[1].selector = @selector(p3WithNetI2pCryptoEddsaMathCurve:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:);
  methods[2].selector = @selector(p3WithNetI2pCryptoEddsaMathCurve:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withBoolean:);
  methods[3].selector = @selector(p1p1WithNetI2pCryptoEddsaMathCurve:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:);
  methods[4].selector = @selector(precompWithNetI2pCryptoEddsaMathCurve:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:);
  methods[5].selector = @selector(cachedWithNetI2pCryptoEddsaMathCurve:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:);
  methods[6].selector = @selector(initWithNetI2pCryptoEddsaMathCurve:withNetI2pCryptoEddsaMathGroupElement_Representation:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:);
  methods[7].selector = @selector(initWithNetI2pCryptoEddsaMathCurve:withNetI2pCryptoEddsaMathGroupElement_Representation:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withNetI2pCryptoEddsaMathFieldElement:withBoolean:);
  methods[8].selector = @selector(initWithNetI2pCryptoEddsaMathCurve:withByteArray:);
  methods[9].selector = @selector(initWithNetI2pCryptoEddsaMathCurve:withByteArray:withBoolean:);
  methods[10].selector = @selector(getCurve);
  methods[11].selector = @selector(getRepresentation);
  methods[12].selector = @selector(getX);
  methods[13].selector = @selector(getY);
  methods[14].selector = @selector(getZ);
  methods[15].selector = @selector(getT);
  methods[16].selector = @selector(toByteArray);
  methods[17].selector = @selector(toP2);
  methods[18].selector = @selector(toP3);
  methods[19].selector = @selector(toP3PrecomputeDouble);
  methods[20].selector = @selector(toCached);
  methods[21].selector = @selector(toRepWithNetI2pCryptoEddsaMathGroupElement_Representation:);
  methods[22].selector = @selector(precomputeSingle);
  methods[23].selector = @selector(precomputeDouble);
  methods[24].selector = @selector(dbl);
  methods[25].selector = @selector(maddWithNetI2pCryptoEddsaMathGroupElement:);
  methods[26].selector = @selector(msubWithNetI2pCryptoEddsaMathGroupElement:);
  methods[27].selector = @selector(addWithNetI2pCryptoEddsaMathGroupElement:);
  methods[28].selector = @selector(subWithNetI2pCryptoEddsaMathGroupElement:);
  methods[29].selector = @selector(negate);
  methods[30].selector = @selector(hash);
  methods[31].selector = @selector(isEqual:);
  methods[32].selector = @selector(toRadix16WithByteArray:);
  methods[33].selector = @selector(cmovWithNetI2pCryptoEddsaMathGroupElement:withInt:);
  methods[34].selector = @selector(selectWithInt:withInt:);
  methods[35].selector = @selector(scalarMultiplyWithByteArray:);
  methods[36].selector = @selector(slideWithByteArray:);
  methods[37].selector = @selector(doubleScalarMultiplyVariableTimeWithNetI2pCryptoEddsaMathGroupElement:withByteArray:withByteArray:);
  methods[38].selector = @selector(isOnCurve);
  methods[39].selector = @selector(isOnCurveWithNetI2pCryptoEddsaMathCurve:);
  methods[40].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = NetI2pCryptoEddsaMathGroupElement_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "curve_", "LNetI2pCryptoEddsaMathCurve;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "repr_", "LNetI2pCryptoEddsaMathGroupElement_Representation;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "X_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "Y_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "Z_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "T_", "LNetI2pCryptoEddsaMathFieldElement;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "precmp_", "[[LNetI2pCryptoEddsaMathGroupElement;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "dblPrecmp_", "[LNetI2pCryptoEddsaMathGroupElement;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "p2", "LNetI2pCryptoEddsaMathCurve;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;", "p3", "LNetI2pCryptoEddsaMathCurve;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;", "LNetI2pCryptoEddsaMathCurve;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;Z", "p1p1", "precomp", "cached", "LNetI2pCryptoEddsaMathCurve;LNetI2pCryptoEddsaMathGroupElement_Representation;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;", "LNetI2pCryptoEddsaMathCurve;LNetI2pCryptoEddsaMathGroupElement_Representation;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;LNetI2pCryptoEddsaMathFieldElement;Z", "LNetI2pCryptoEddsaMathCurve;[B", "LNetI2pCryptoEddsaMathCurve;[BZ", "toRep", "LNetI2pCryptoEddsaMathGroupElement_Representation;", "madd", "LNetI2pCryptoEddsaMathGroupElement;", "msub", "add", "sub", "hashCode", "equals", "LNSObject;", "toRadix16", "[B", "cmov", "LNetI2pCryptoEddsaMathGroupElement;I", "select", "II", "scalarMultiply", "slide", "doubleScalarMultiplyVariableTime", "LNetI2pCryptoEddsaMathGroupElement;[B[B", "isOnCurve", "LNetI2pCryptoEddsaMathCurve;", "toString" };
  static const J2ObjcClassInfo _NetI2pCryptoEddsaMathGroupElement = { "GroupElement", "net.i2p.crypto.eddsa.math", ptrTable, methods, fields, 7, 0x1, 41, 9, -1, 13, -1, -1, -1 };
  return &_NetI2pCryptoEddsaMathGroupElement;
}

@end

NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_p2WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z) {
  NetI2pCryptoEddsaMathGroupElement_initialize();
  return create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve, JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P2), X, Y, Z, nil);
}

NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T) {
  NetI2pCryptoEddsaMathGroupElement_initialize();
  return NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(curve, X, Y, Z, T, false);
}

NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T, jboolean precomputeDoubleOnly) {
  NetI2pCryptoEddsaMathGroupElement_initialize();
  return create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(curve, JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3), X, Y, Z, T, precomputeDoubleOnly);
}

NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_p1p1WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T) {
  NetI2pCryptoEddsaMathGroupElement_initialize();
  return create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve, JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P1P1), X, Y, Z, T);
}

NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_precompWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *ypx, NetI2pCryptoEddsaMathFieldElement *ymx, NetI2pCryptoEddsaMathFieldElement *xy2d) {
  NetI2pCryptoEddsaMathGroupElement_initialize();
  return create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve, JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, PRECOMP), ypx, ymx, xy2d, nil);
}

NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_cachedWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *YpX, NetI2pCryptoEddsaMathFieldElement *YmX, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T2d) {
  NetI2pCryptoEddsaMathGroupElement_initialize();
  return create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(curve, JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, CACHED), YpX, YmX, Z, T2d);
}

void NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T) {
  NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(self, curve, repr, X, Y, Z, T, false);
}

NetI2pCryptoEddsaMathGroupElement *new_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T) {
  J2OBJC_NEW_IMPL(NetI2pCryptoEddsaMathGroupElement, initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_, curve, repr, X, Y, Z, T)
}

NetI2pCryptoEddsaMathGroupElement *create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T) {
  J2OBJC_CREATE_IMPL(NetI2pCryptoEddsaMathGroupElement, initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_, curve, repr, X, Y, Z, T)
}

void NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T, jboolean precomputeDouble) {
  NSObject_init(self);
  JreStrongAssign(&self->curve_, curve);
  JreStrongAssign(&self->repr_, repr);
  JreStrongAssign(&self->X_, X);
  JreStrongAssign(&self->Y_, Y);
  JreStrongAssign(&self->Z_, Z);
  JreStrongAssign(&self->T_, T);
  JreStrongAssign(&self->precmp_, nil);
  JreStrongAssign(&self->dblPrecmp_, precomputeDouble ? NetI2pCryptoEddsaMathGroupElement_precomputeDouble(self) : nil);
}

NetI2pCryptoEddsaMathGroupElement *new_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T, jboolean precomputeDouble) {
  J2OBJC_NEW_IMPL(NetI2pCryptoEddsaMathGroupElement, initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_, curve, repr, X, Y, Z, T, precomputeDouble)
}

NetI2pCryptoEddsaMathGroupElement *create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T, jboolean precomputeDouble) {
  J2OBJC_CREATE_IMPL(NetI2pCryptoEddsaMathGroupElement, initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_, curve, repr, X, Y, Z, T, precomputeDouble)
}

void NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s) {
  NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_withBoolean_(self, curve, s, false);
}

NetI2pCryptoEddsaMathGroupElement *new_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_(NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s) {
  J2OBJC_NEW_IMPL(NetI2pCryptoEddsaMathGroupElement, initWithNetI2pCryptoEddsaMathCurve_withByteArray_, curve, s)
}

NetI2pCryptoEddsaMathGroupElement *create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_(NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s) {
  J2OBJC_CREATE_IMPL(NetI2pCryptoEddsaMathGroupElement, initWithNetI2pCryptoEddsaMathCurve_withByteArray_, curve, s)
}

void NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_withBoolean_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s, jboolean precomputeSingleAndDouble) {
  NSObject_init(self);
  NetI2pCryptoEddsaMathFieldElement *x;
  NetI2pCryptoEddsaMathFieldElement *y;
  NetI2pCryptoEddsaMathFieldElement *yy;
  NetI2pCryptoEddsaMathFieldElement *u;
  NetI2pCryptoEddsaMathFieldElement *v;
  NetI2pCryptoEddsaMathFieldElement *v3;
  NetI2pCryptoEddsaMathFieldElement *vxx;
  NetI2pCryptoEddsaMathFieldElement *check;
  y = [((NetI2pCryptoEddsaMathField *) nil_chk([((NetI2pCryptoEddsaMathCurve *) nil_chk(curve)) getField])) fromByteArrayWithByteArray:s];
  yy = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(y)) square];
  u = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(yy)) subtractOne];
  v = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk([yy multiplyWithNetI2pCryptoEddsaMathFieldElement:[curve getD]])) addOne];
  v3 = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(v)) square])) multiplyWithNetI2pCryptoEddsaMathFieldElement:v];
  x = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk([((NetI2pCryptoEddsaMathFieldElement *) nil_chk([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(v3)) square])) multiplyWithNetI2pCryptoEddsaMathFieldElement:v])) multiplyWithNetI2pCryptoEddsaMathFieldElement:u];
  x = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(x)) pow22523];
  x = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk([v3 multiplyWithNetI2pCryptoEddsaMathFieldElement:u])) multiplyWithNetI2pCryptoEddsaMathFieldElement:x];
  vxx = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(x)) square])) multiplyWithNetI2pCryptoEddsaMathFieldElement:v];
  check = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(vxx)) subtractWithNetI2pCryptoEddsaMathFieldElement:u];
  if ([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(check)) isNonZero]) {
    check = [vxx addWithNetI2pCryptoEddsaMathFieldElement:u];
    if ([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(check)) isNonZero]) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"not a valid GroupElement");
    x = [x multiplyWithNetI2pCryptoEddsaMathFieldElement:[curve getI]];
  }
  if (([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(x)) isNegative] ? 1 : 0) != NetI2pCryptoEddsaUtils_bitWithByteArray_withInt_(s, [((NetI2pCryptoEddsaMathField *) nil_chk([curve getField])) getb] - 1)) {
    x = [x negate];
  }
  JreStrongAssign(&self->curve_, curve);
  JreStrongAssign(&self->repr_, JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3));
  JreStrongAssign(&self->X_, x);
  JreStrongAssign(&self->Y_, y);
  JreStrongAssign(&self->Z_, ((NetI2pCryptoEddsaMathField *) nil_chk([curve getField]))->ONE_);
  JreStrongAssign(&self->T_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->X_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->Y_]);
  if (precomputeSingleAndDouble) {
    JreStrongAssign(&self->precmp_, NetI2pCryptoEddsaMathGroupElement_precomputeSingle(self));
    JreStrongAssign(&self->dblPrecmp_, NetI2pCryptoEddsaMathGroupElement_precomputeDouble(self));
  }
  else {
    JreStrongAssign(&self->precmp_, nil);
    JreStrongAssign(&self->dblPrecmp_, nil);
  }
}

NetI2pCryptoEddsaMathGroupElement *new_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_withBoolean_(NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s, jboolean precomputeSingleAndDouble) {
  J2OBJC_NEW_IMPL(NetI2pCryptoEddsaMathGroupElement, initWithNetI2pCryptoEddsaMathCurve_withByteArray_withBoolean_, curve, s, precomputeSingleAndDouble)
}

NetI2pCryptoEddsaMathGroupElement *create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_withBoolean_(NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s, jboolean precomputeSingleAndDouble) {
  J2OBJC_CREATE_IMPL(NetI2pCryptoEddsaMathGroupElement, initWithNetI2pCryptoEddsaMathCurve_withByteArray_withBoolean_, curve, s, precomputeSingleAndDouble)
}

NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_toRepWithNetI2pCryptoEddsaMathGroupElement_Representation_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathGroupElement_Representation *repr) {
  switch ([self->repr_ ordinal]) {
    case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P2:
    switch ([repr ordinal]) {
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P2:
      return NetI2pCryptoEddsaMathGroupElement_p2WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, self->X_, self->Y_, self->Z_);
      default:
      @throw create_JavaLangIllegalArgumentException_init();
    }
    case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3:
    switch ([repr ordinal]) {
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P2:
      return NetI2pCryptoEddsaMathGroupElement_p2WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, self->X_, self->Y_, self->Z_);
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3:
      return NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, self->X_, self->Y_, self->Z_, self->T_);
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_CACHED:
      return NetI2pCryptoEddsaMathGroupElement_cachedWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) addWithNetI2pCryptoEddsaMathFieldElement:self->X_], [self->Y_ subtractWithNetI2pCryptoEddsaMathFieldElement:self->X_], self->Z_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->T_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:[((NetI2pCryptoEddsaMathCurve *) nil_chk(self->curve_)) get2D]]);
      default:
      @throw create_JavaLangIllegalArgumentException_init();
    }
    case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P1P1:
    switch ([repr ordinal]) {
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P2:
      return NetI2pCryptoEddsaMathGroupElement_p2WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->X_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->T_], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->Z_], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Z_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->T_]);
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3:
      return NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(self->curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->X_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->T_], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->Z_], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Z_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->T_], [self->X_ multiplyWithNetI2pCryptoEddsaMathFieldElement:self->Y_], false);
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3PrecomputedDouble:
      return NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(self->curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->X_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->T_], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->Z_], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Z_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->T_], [self->X_ multiplyWithNetI2pCryptoEddsaMathFieldElement:self->Y_], true);
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P1P1:
      return NetI2pCryptoEddsaMathGroupElement_p1p1WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, self->X_, self->Y_, self->Z_, self->T_);
      default:
      @throw create_JavaLangIllegalArgumentException_init();
    }
    case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_PRECOMP:
    switch ([repr ordinal]) {
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_PRECOMP:
      return NetI2pCryptoEddsaMathGroupElement_precompWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, self->X_, self->Y_, self->Z_);
      default:
      @throw create_JavaLangIllegalArgumentException_init();
    }
    case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_CACHED:
    switch ([repr ordinal]) {
      case NetI2pCryptoEddsaMathGroupElement_Representation_Enum_CACHED:
      return NetI2pCryptoEddsaMathGroupElement_cachedWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, self->X_, self->Y_, self->Z_, self->T_);
      default:
      @throw create_JavaLangIllegalArgumentException_init();
    }
    default:
    @throw create_JavaLangUnsupportedOperationException_init();
  }
}

IOSObjectArray *NetI2pCryptoEddsaMathGroupElement_precomputeSingle(NetI2pCryptoEddsaMathGroupElement *self) {
  IOSObjectArray *precmp = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ 32, 8 } type:NetI2pCryptoEddsaMathGroupElement_class_()];
  NetI2pCryptoEddsaMathGroupElement *Bi = self;
  for (jint i = 0; i < 32; i++) {
    NetI2pCryptoEddsaMathGroupElement *Bij = Bi;
    for (jint j = 0; j < 8; j++) {
      NetI2pCryptoEddsaMathFieldElement *recip = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(((NetI2pCryptoEddsaMathGroupElement *) nil_chk(Bij))->Z_)) invert];
      NetI2pCryptoEddsaMathFieldElement *x = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Bij->X_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:recip];
      NetI2pCryptoEddsaMathFieldElement *y = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Bij->Y_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:recip];
      IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(precmp, i)), j, NetI2pCryptoEddsaMathGroupElement_precompWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(y)) addWithNetI2pCryptoEddsaMathFieldElement:x], [y subtractWithNetI2pCryptoEddsaMathFieldElement:x], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(x)) multiplyWithNetI2pCryptoEddsaMathFieldElement:y])) multiplyWithNetI2pCryptoEddsaMathFieldElement:[((NetI2pCryptoEddsaMathCurve *) nil_chk(self->curve_)) get2D]]));
      Bij = [((NetI2pCryptoEddsaMathGroupElement *) nil_chk([Bij addWithNetI2pCryptoEddsaMathGroupElement:[((NetI2pCryptoEddsaMathGroupElement *) nil_chk(Bi)) toCached]])) toP3];
    }
    for (jint k = 0; k < 8; k++) {
      Bi = [((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk(Bi)) addWithNetI2pCryptoEddsaMathGroupElement:[Bi toCached]])) toP3];
    }
  }
  return precmp;
}

IOSObjectArray *NetI2pCryptoEddsaMathGroupElement_precomputeDouble(NetI2pCryptoEddsaMathGroupElement *self) {
  IOSObjectArray *dblPrecmp = [IOSObjectArray arrayWithLength:8 type:NetI2pCryptoEddsaMathGroupElement_class_()];
  NetI2pCryptoEddsaMathGroupElement *Bi = self;
  for (jint i = 0; i < 8; i++) {
    NetI2pCryptoEddsaMathFieldElement *recip = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(((NetI2pCryptoEddsaMathGroupElement *) nil_chk(Bi))->Z_)) invert];
    NetI2pCryptoEddsaMathFieldElement *x = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Bi->X_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:recip];
    NetI2pCryptoEddsaMathFieldElement *y = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(Bi->Y_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:recip];
    IOSObjectArray_Set(dblPrecmp, i, NetI2pCryptoEddsaMathGroupElement_precompWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(y)) addWithNetI2pCryptoEddsaMathFieldElement:x], [y subtractWithNetI2pCryptoEddsaMathFieldElement:x], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk([((NetI2pCryptoEddsaMathFieldElement *) nil_chk(x)) multiplyWithNetI2pCryptoEddsaMathFieldElement:y])) multiplyWithNetI2pCryptoEddsaMathFieldElement:[((NetI2pCryptoEddsaMathCurve *) nil_chk(self->curve_)) get2D]]));
    Bi = [((NetI2pCryptoEddsaMathGroupElement *) nil_chk([self addWithNetI2pCryptoEddsaMathGroupElement:[((NetI2pCryptoEddsaMathGroupElement *) nil_chk([((NetI2pCryptoEddsaMathGroupElement *) nil_chk([self addWithNetI2pCryptoEddsaMathGroupElement:[Bi toCached]])) toP3])) toCached]])) toP3];
  }
  return dblPrecmp;
}

NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_maddWithNetI2pCryptoEddsaMathGroupElement_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathGroupElement *q) {
  if (self->repr_ != JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3)) @throw create_JavaLangUnsupportedOperationException_init();
  if (((NetI2pCryptoEddsaMathGroupElement *) nil_chk(q))->repr_ != JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, PRECOMP)) @throw create_JavaLangIllegalArgumentException_init();
  NetI2pCryptoEddsaMathFieldElement *YpX;
  NetI2pCryptoEddsaMathFieldElement *YmX;
  NetI2pCryptoEddsaMathFieldElement *A;
  NetI2pCryptoEddsaMathFieldElement *B;
  NetI2pCryptoEddsaMathFieldElement *C;
  NetI2pCryptoEddsaMathFieldElement *D;
  YpX = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) addWithNetI2pCryptoEddsaMathFieldElement:self->X_];
  YmX = [self->Y_ subtractWithNetI2pCryptoEddsaMathFieldElement:self->X_];
  A = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(YpX)) multiplyWithNetI2pCryptoEddsaMathFieldElement:q->X_];
  B = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(YmX)) multiplyWithNetI2pCryptoEddsaMathFieldElement:q->Y_];
  C = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(q->Z_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->T_];
  D = [self->Z_ addWithNetI2pCryptoEddsaMathFieldElement:self->Z_];
  return NetI2pCryptoEddsaMathGroupElement_p1p1WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(A)) subtractWithNetI2pCryptoEddsaMathFieldElement:B], [A addWithNetI2pCryptoEddsaMathFieldElement:B], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(D)) addWithNetI2pCryptoEddsaMathFieldElement:C], [D subtractWithNetI2pCryptoEddsaMathFieldElement:C]);
}

NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_msubWithNetI2pCryptoEddsaMathGroupElement_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathGroupElement *q) {
  if (self->repr_ != JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3)) @throw create_JavaLangUnsupportedOperationException_init();
  if (((NetI2pCryptoEddsaMathGroupElement *) nil_chk(q))->repr_ != JreLoadEnum(NetI2pCryptoEddsaMathGroupElement_Representation, PRECOMP)) @throw create_JavaLangIllegalArgumentException_init();
  NetI2pCryptoEddsaMathFieldElement *YpX;
  NetI2pCryptoEddsaMathFieldElement *YmX;
  NetI2pCryptoEddsaMathFieldElement *A;
  NetI2pCryptoEddsaMathFieldElement *B;
  NetI2pCryptoEddsaMathFieldElement *C;
  NetI2pCryptoEddsaMathFieldElement *D;
  YpX = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(self->Y_)) addWithNetI2pCryptoEddsaMathFieldElement:self->X_];
  YmX = [self->Y_ subtractWithNetI2pCryptoEddsaMathFieldElement:self->X_];
  A = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(YpX)) multiplyWithNetI2pCryptoEddsaMathFieldElement:q->Y_];
  B = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(YmX)) multiplyWithNetI2pCryptoEddsaMathFieldElement:q->X_];
  C = [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(q->Z_)) multiplyWithNetI2pCryptoEddsaMathFieldElement:self->T_];
  D = [self->Z_ addWithNetI2pCryptoEddsaMathFieldElement:self->Z_];
  return NetI2pCryptoEddsaMathGroupElement_p1p1WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(self->curve_, [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(A)) subtractWithNetI2pCryptoEddsaMathFieldElement:B], [A addWithNetI2pCryptoEddsaMathFieldElement:B], [((NetI2pCryptoEddsaMathFieldElement *) nil_chk(D)) subtractWithNetI2pCryptoEddsaMathFieldElement:C], [D addWithNetI2pCryptoEddsaMathFieldElement:C]);
}

IOSByteArray *NetI2pCryptoEddsaMathGroupElement_toRadix16WithByteArray_(IOSByteArray *a) {
  NetI2pCryptoEddsaMathGroupElement_initialize();
  IOSByteArray *e = [IOSByteArray arrayWithLength:64];
  jint i;
  for (i = 0; i < 32; i++) {
    *IOSByteArray_GetRef(e, 2 * i + 0) = (jbyte) (IOSByteArray_Get(nil_chk(a), i) & 15);
    *IOSByteArray_GetRef(e, 2 * i + 1) = (jbyte) ((JreRShift32(IOSByteArray_Get(a, i), 4)) & 15);
  }
  jint carry = 0;
  for (i = 0; i < 63; i++) {
    *IOSByteArray_GetRef(e, i) += carry;
    carry = IOSByteArray_Get(e, i) + 8;
    JreRShiftAssignInt(&carry, 4);
    *IOSByteArray_GetRef(e, i) -= JreLShift32(carry, 4);
  }
  *IOSByteArray_GetRef(e, 63) += carry;
  return e;
}

IOSByteArray *NetI2pCryptoEddsaMathGroupElement_slideWithByteArray_(IOSByteArray *a) {
  NetI2pCryptoEddsaMathGroupElement_initialize();
  IOSByteArray *r = [IOSByteArray arrayWithLength:256];
  for (jint i = 0; i < 256; ++i) {
    *IOSByteArray_GetRef(r, i) = (jbyte) (1 & (JreRShift32(IOSByteArray_Get(nil_chk(a), JreRShift32(i, 3)), (i & 7))));
  }
  for (jint i = 0; i < 256; ++i) {
    if (IOSByteArray_Get(r, i) != 0) {
      for (jint b = 1; b <= 6 && i + b < 256; ++b) {
        if (IOSByteArray_Get(r, i + b) != 0) {
          if (IOSByteArray_Get(r, i) + (JreLShift32(IOSByteArray_Get(r, i + b), b)) <= 15) {
            *IOSByteArray_GetRef(r, i) += JreLShift32(IOSByteArray_Get(r, i + b), b);
            *IOSByteArray_GetRef(r, i + b) = 0;
          }
          else if (IOSByteArray_Get(r, i) - (JreLShift32(IOSByteArray_Get(r, i + b), b)) >= -15) {
            *IOSByteArray_GetRef(r, i) -= JreLShift32(IOSByteArray_Get(r, i + b), b);
            for (jint k = i + b; k < 256; ++k) {
              if (IOSByteArray_Get(r, k) == 0) {
                *IOSByteArray_GetRef(r, k) = 1;
                break;
              }
              *IOSByteArray_GetRef(r, k) = 0;
            }
          }
          else break;
        }
      }
    }
  }
  return r;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoEddsaMathGroupElement)

J2OBJC_INITIALIZED_DEFN(NetI2pCryptoEddsaMathGroupElement_Representation)

NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_values_[6];

@implementation NetI2pCryptoEddsaMathGroupElement_Representation

+ (NetI2pCryptoEddsaMathGroupElement_Representation *)P2 {
  return JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P2);
}

+ (NetI2pCryptoEddsaMathGroupElement_Representation *)P3 {
  return JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3);
}

+ (NetI2pCryptoEddsaMathGroupElement_Representation *)P3PrecomputedDouble {
  return JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3PrecomputedDouble);
}

+ (NetI2pCryptoEddsaMathGroupElement_Representation *)P1P1 {
  return JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P1P1);
}

+ (NetI2pCryptoEddsaMathGroupElement_Representation *)PRECOMP {
  return JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, PRECOMP);
}

+ (NetI2pCryptoEddsaMathGroupElement_Representation *)CACHED {
  return JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, CACHED);
}

+ (IOSObjectArray *)values {
  return NetI2pCryptoEddsaMathGroupElement_Representation_values();
}

+ (NetI2pCryptoEddsaMathGroupElement_Representation *)valueOfWithNSString:(NSString *)name {
  return NetI2pCryptoEddsaMathGroupElement_Representation_valueOfWithNSString_(name);
}

- (NetI2pCryptoEddsaMathGroupElement_Representation_Enum)toNSEnum {
  return (NetI2pCryptoEddsaMathGroupElement_Representation_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LNetI2pCryptoEddsaMathGroupElement_Representation;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathGroupElement_Representation;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "P2", "LNetI2pCryptoEddsaMathGroupElement_Representation;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "P3", "LNetI2pCryptoEddsaMathGroupElement_Representation;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "P3PrecomputedDouble", "LNetI2pCryptoEddsaMathGroupElement_Representation;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "P1P1", "LNetI2pCryptoEddsaMathGroupElement_Representation;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "PRECOMP", "LNetI2pCryptoEddsaMathGroupElement_Representation;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "CACHED", "LNetI2pCryptoEddsaMathGroupElement_Representation;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P2), &JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3), &JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P3PrecomputedDouble), &JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, P1P1), &JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, PRECOMP), &JreEnum(NetI2pCryptoEddsaMathGroupElement_Representation, CACHED), "LNetI2pCryptoEddsaMathGroupElement;", "Ljava/lang/Enum<Lnet/i2p/crypto/eddsa/math/GroupElement$Representation;>;" };
  static const J2ObjcClassInfo _NetI2pCryptoEddsaMathGroupElement_Representation = { "Representation", "net.i2p.crypto.eddsa.math", ptrTable, methods, fields, 7, 0x4019, 2, 6, 8, -1, -1, 9, -1 };
  return &_NetI2pCryptoEddsaMathGroupElement_Representation;
}

+ (void)initialize {
  if (self == [NetI2pCryptoEddsaMathGroupElement_Representation class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 6 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 6; i++) {
      ((void)(NetI2pCryptoEddsaMathGroupElement_Representation_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      NetI2pCryptoEddsaMathGroupElement_Representation_initWithNSString_withInt_(e, JreEnumConstantName(NetI2pCryptoEddsaMathGroupElement_Representation_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(NetI2pCryptoEddsaMathGroupElement_Representation)
  }
}

@end

void NetI2pCryptoEddsaMathGroupElement_Representation_initWithNSString_withInt_(NetI2pCryptoEddsaMathGroupElement_Representation *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *NetI2pCryptoEddsaMathGroupElement_Representation_values() {
  NetI2pCryptoEddsaMathGroupElement_Representation_initialize();
  return [IOSObjectArray arrayWithObjects:NetI2pCryptoEddsaMathGroupElement_Representation_values_ count:6 type:NetI2pCryptoEddsaMathGroupElement_Representation_class_()];
}

NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_valueOfWithNSString_(NSString *name) {
  NetI2pCryptoEddsaMathGroupElement_Representation_initialize();
  for (int i = 0; i < 6; i++) {
    NetI2pCryptoEddsaMathGroupElement_Representation *e = NetI2pCryptoEddsaMathGroupElement_Representation_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_fromOrdinal(NSUInteger ordinal) {
  NetI2pCryptoEddsaMathGroupElement_Representation_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return NetI2pCryptoEddsaMathGroupElement_Representation_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoEddsaMathGroupElement_Representation)
