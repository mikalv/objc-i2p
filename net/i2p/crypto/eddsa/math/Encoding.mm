//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/math/Encoding.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "net/i2p/crypto/eddsa/math/Encoding.h"
#include "net/i2p/crypto/eddsa/math/Field.h"
#include "net/i2p/crypto/eddsa/math/FieldElement.h"

@implementation NetI2pCryptoEddsaMathEncoding

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pCryptoEddsaMathEncoding_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setFieldWithNetI2pCryptoEddsaMathField:(NetI2pCryptoEddsaMathField *)f {
  @synchronized(self) {
    if (self->f_ != nil) @throw create_JavaLangIllegalStateException_initWithNSString_(@"already set");
    JreStrongAssign(&self->f_, JreRetainedLocalValue(f));
  }
}

- (IOSByteArray *)encodeWithNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)x {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NetI2pCryptoEddsaMathFieldElement *)decodeWithByteArray:(IOSByteArray *)inArg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isNegativeWithNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)x {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(f_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNetI2pCryptoEddsaMathFieldElement;", 0x401, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 6, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setFieldWithNetI2pCryptoEddsaMathField:);
  methods[2].selector = @selector(encodeWithNetI2pCryptoEddsaMathFieldElement:);
  methods[3].selector = @selector(decodeWithByteArray:);
  methods[4].selector = @selector(isNegativeWithNetI2pCryptoEddsaMathFieldElement:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "f_", "LNetI2pCryptoEddsaMathField;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setField", "LNetI2pCryptoEddsaMathField;", "encode", "LNetI2pCryptoEddsaMathFieldElement;", "decode", "[B", "isNegative" };
  static const J2ObjcClassInfo _NetI2pCryptoEddsaMathEncoding = { "Encoding", "net.i2p.crypto.eddsa.math", ptrTable, methods, fields, 7, 0x401, 5, 1, -1, -1, -1, -1, -1 };
  return &_NetI2pCryptoEddsaMathEncoding;
}

@end

void NetI2pCryptoEddsaMathEncoding_init(NetI2pCryptoEddsaMathEncoding *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoEddsaMathEncoding)
