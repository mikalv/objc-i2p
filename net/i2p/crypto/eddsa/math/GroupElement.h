//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/math/GroupElement.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoEddsaMathGroupElement")
#ifdef RESTRICT_NetI2pCryptoEddsaMathGroupElement
#define INCLUDE_ALL_NetI2pCryptoEddsaMathGroupElement 0
#else
#define INCLUDE_ALL_NetI2pCryptoEddsaMathGroupElement 1
#endif
#undef RESTRICT_NetI2pCryptoEddsaMathGroupElement

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoEddsaMathGroupElement_) && (INCLUDE_ALL_NetI2pCryptoEddsaMathGroupElement || defined(INCLUDE_NetI2pCryptoEddsaMathGroupElement))
#define NetI2pCryptoEddsaMathGroupElement_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSByteArray;
@class IOSObjectArray;
@class NetI2pCryptoEddsaMathCurve;
@class NetI2pCryptoEddsaMathFieldElement;
@class NetI2pCryptoEddsaMathGroupElement_Representation;

@interface NetI2pCryptoEddsaMathGroupElement : NSObject < JavaIoSerializable > {
 @public
  NetI2pCryptoEddsaMathCurve *curve_;
  NetI2pCryptoEddsaMathGroupElement_Representation *repr_;
  NetI2pCryptoEddsaMathFieldElement *X_;
  NetI2pCryptoEddsaMathFieldElement *Y_;
  NetI2pCryptoEddsaMathFieldElement *Z_;
  NetI2pCryptoEddsaMathFieldElement *T_;
  IOSObjectArray *precmp_;
  IOSObjectArray *dblPrecmp_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                               withByteArray:(IOSByteArray *)s;

- (instancetype __nonnull)initWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                               withByteArray:(IOSByteArray *)s
                                                 withBoolean:(jboolean)precomputeSingleAndDouble;

- (instancetype __nonnull)initWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
        withNetI2pCryptoEddsaMathGroupElement_Representation:(NetI2pCryptoEddsaMathGroupElement_Representation *)repr
                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T;

- (instancetype __nonnull)initWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
        withNetI2pCryptoEddsaMathGroupElement_Representation:(NetI2pCryptoEddsaMathGroupElement_Representation *)repr
                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T
                                                 withBoolean:(jboolean)precomputeDouble;

- (NetI2pCryptoEddsaMathGroupElement *)addWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)q;

+ (NetI2pCryptoEddsaMathGroupElement *)cachedWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                      withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)YpX
                                      withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)YmX
                                      withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
                                      withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T2d;

- (NetI2pCryptoEddsaMathGroupElement *)dbl;

- (NetI2pCryptoEddsaMathGroupElement *)doubleScalarMultiplyVariableTimeWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)A
                                                                                               withByteArray:(IOSByteArray *)a
                                                                                               withByteArray:(IOSByteArray *)b;

- (jboolean)isEqual:(id)obj;

- (NetI2pCryptoEddsaMathCurve *)getCurve;

- (NetI2pCryptoEddsaMathGroupElement_Representation *)getRepresentation;

- (NetI2pCryptoEddsaMathFieldElement *)getT;

- (NetI2pCryptoEddsaMathFieldElement *)getX;

- (NetI2pCryptoEddsaMathFieldElement *)getY;

- (NetI2pCryptoEddsaMathFieldElement *)getZ;

- (NSUInteger)hash;

- (jboolean)isOnCurve;

- (jboolean)isOnCurveWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve;

- (NetI2pCryptoEddsaMathGroupElement *)negate;

+ (NetI2pCryptoEddsaMathGroupElement *)p1p1WithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                    withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
                                    withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
                                    withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
                                    withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T;

+ (NetI2pCryptoEddsaMathGroupElement *)p2WithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z;

+ (NetI2pCryptoEddsaMathGroupElement *)p3WithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T;

+ (NetI2pCryptoEddsaMathGroupElement *)p3WithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)X
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Y
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)Z
                                  withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)T
                                                            withBoolean:(jboolean)precomputeDoubleOnly;

+ (NetI2pCryptoEddsaMathGroupElement *)precompWithNetI2pCryptoEddsaMathCurve:(NetI2pCryptoEddsaMathCurve *)curve
                                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)ypx
                                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)ymx
                                       withNetI2pCryptoEddsaMathFieldElement:(NetI2pCryptoEddsaMathFieldElement *)xy2d;

- (NetI2pCryptoEddsaMathGroupElement *)scalarMultiplyWithByteArray:(IOSByteArray *)a;

- (NetI2pCryptoEddsaMathGroupElement *)subWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)q;

- (IOSByteArray *)toByteArray;

- (NetI2pCryptoEddsaMathGroupElement *)toCached;

- (NetI2pCryptoEddsaMathGroupElement *)toP2;

- (NetI2pCryptoEddsaMathGroupElement *)toP3;

- (NetI2pCryptoEddsaMathGroupElement *)toP3PrecomputeDouble;

- (NSString *)description;

#pragma mark Package-Private

- (NetI2pCryptoEddsaMathGroupElement *)cmovWithNetI2pCryptoEddsaMathGroupElement:(NetI2pCryptoEddsaMathGroupElement *)u
                                                                         withInt:(jint)b;

- (NetI2pCryptoEddsaMathGroupElement *)selectWithInt:(jint)pos
                                             withInt:(jint)b;

+ (IOSByteArray *)slideWithByteArray:(IOSByteArray *)a;

+ (IOSByteArray *)toRadix16WithByteArray:(IOSByteArray *)a;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoEddsaMathGroupElement)

J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathGroupElement, curve_, NetI2pCryptoEddsaMathCurve *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathGroupElement, repr_, NetI2pCryptoEddsaMathGroupElement_Representation *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathGroupElement, X_, NetI2pCryptoEddsaMathFieldElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathGroupElement, Y_, NetI2pCryptoEddsaMathFieldElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathGroupElement, Z_, NetI2pCryptoEddsaMathFieldElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathGroupElement, T_, NetI2pCryptoEddsaMathFieldElement *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathGroupElement, precmp_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathGroupElement, dblPrecmp_, IOSObjectArray *)

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_p2WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_p3WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T, jboolean precomputeDoubleOnly);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_p1p1WithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_precompWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *ypx, NetI2pCryptoEddsaMathFieldElement *ymx, NetI2pCryptoEddsaMathFieldElement *xy2d);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *NetI2pCryptoEddsaMathGroupElement_cachedWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathFieldElement *YpX, NetI2pCryptoEddsaMathFieldElement *YmX, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T2d);

FOUNDATION_EXPORT void NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *new_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T);

FOUNDATION_EXPORT void NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T, jboolean precomputeDouble);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *new_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T, jboolean precomputeDouble) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withNetI2pCryptoEddsaMathGroupElement_Representation_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withNetI2pCryptoEddsaMathFieldElement_withBoolean_(NetI2pCryptoEddsaMathCurve *curve, NetI2pCryptoEddsaMathGroupElement_Representation *repr, NetI2pCryptoEddsaMathFieldElement *X, NetI2pCryptoEddsaMathFieldElement *Y, NetI2pCryptoEddsaMathFieldElement *Z, NetI2pCryptoEddsaMathFieldElement *T, jboolean precomputeDouble);

FOUNDATION_EXPORT void NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *new_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_(NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_(NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s);

FOUNDATION_EXPORT void NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_withBoolean_(NetI2pCryptoEddsaMathGroupElement *self, NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s, jboolean precomputeSingleAndDouble);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *new_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_withBoolean_(NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s, jboolean precomputeSingleAndDouble) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement *create_NetI2pCryptoEddsaMathGroupElement_initWithNetI2pCryptoEddsaMathCurve_withByteArray_withBoolean_(NetI2pCryptoEddsaMathCurve *curve, IOSByteArray *s, jboolean precomputeSingleAndDouble);

FOUNDATION_EXPORT IOSByteArray *NetI2pCryptoEddsaMathGroupElement_toRadix16WithByteArray_(IOSByteArray *a);

FOUNDATION_EXPORT IOSByteArray *NetI2pCryptoEddsaMathGroupElement_slideWithByteArray_(IOSByteArray *a);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoEddsaMathGroupElement)

#endif

#if !defined (NetI2pCryptoEddsaMathGroupElement_Representation_) && (INCLUDE_ALL_NetI2pCryptoEddsaMathGroupElement || defined(INCLUDE_NetI2pCryptoEddsaMathGroupElement_Representation))
#define NetI2pCryptoEddsaMathGroupElement_Representation_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pCryptoEddsaMathGroupElement_Representation_Enum) {
  NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P2 = 0,
  NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3 = 1,
  NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P3PrecomputedDouble = 2,
  NetI2pCryptoEddsaMathGroupElement_Representation_Enum_P1P1 = 3,
  NetI2pCryptoEddsaMathGroupElement_Representation_Enum_PRECOMP = 4,
  NetI2pCryptoEddsaMathGroupElement_Representation_Enum_CACHED = 5,
};

@interface NetI2pCryptoEddsaMathGroupElement_Representation : JavaLangEnum

@property (readonly, class, nonnull) NetI2pCryptoEddsaMathGroupElement_Representation *P2 NS_SWIFT_NAME(P2);
@property (readonly, class, nonnull) NetI2pCryptoEddsaMathGroupElement_Representation *P3 NS_SWIFT_NAME(P3);
@property (readonly, class, nonnull) NetI2pCryptoEddsaMathGroupElement_Representation *P3PrecomputedDouble NS_SWIFT_NAME(P3PrecomputedDouble);
@property (readonly, class, nonnull) NetI2pCryptoEddsaMathGroupElement_Representation *P1P1 NS_SWIFT_NAME(P1P1);
@property (readonly, class, nonnull) NetI2pCryptoEddsaMathGroupElement_Representation *PRECOMP NS_SWIFT_NAME(PRECOMP);
@property (readonly, class, nonnull) NetI2pCryptoEddsaMathGroupElement_Representation *CACHED NS_SWIFT_NAME(CACHED);
+ (NetI2pCryptoEddsaMathGroupElement_Representation * __nonnull)P2;

+ (NetI2pCryptoEddsaMathGroupElement_Representation * __nonnull)P3;

+ (NetI2pCryptoEddsaMathGroupElement_Representation * __nonnull)P3PrecomputedDouble;

+ (NetI2pCryptoEddsaMathGroupElement_Representation * __nonnull)P1P1;

+ (NetI2pCryptoEddsaMathGroupElement_Representation * __nonnull)PRECOMP;

+ (NetI2pCryptoEddsaMathGroupElement_Representation * __nonnull)CACHED;

#pragma mark Public

+ (NetI2pCryptoEddsaMathGroupElement_Representation *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pCryptoEddsaMathGroupElement_Representation_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pCryptoEddsaMathGroupElement_Representation)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_values_[];

inline NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_get_P2(void);
J2OBJC_ENUM_CONSTANT(NetI2pCryptoEddsaMathGroupElement_Representation, P2)

inline NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_get_P3(void);
J2OBJC_ENUM_CONSTANT(NetI2pCryptoEddsaMathGroupElement_Representation, P3)

inline NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_get_P3PrecomputedDouble(void);
J2OBJC_ENUM_CONSTANT(NetI2pCryptoEddsaMathGroupElement_Representation, P3PrecomputedDouble)

inline NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_get_P1P1(void);
J2OBJC_ENUM_CONSTANT(NetI2pCryptoEddsaMathGroupElement_Representation, P1P1)

inline NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_get_PRECOMP(void);
J2OBJC_ENUM_CONSTANT(NetI2pCryptoEddsaMathGroupElement_Representation, PRECOMP)

inline NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_get_CACHED(void);
J2OBJC_ENUM_CONSTANT(NetI2pCryptoEddsaMathGroupElement_Representation, CACHED)

FOUNDATION_EXPORT IOSObjectArray *NetI2pCryptoEddsaMathGroupElement_Representation_values(void);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pCryptoEddsaMathGroupElement_Representation *NetI2pCryptoEddsaMathGroupElement_Representation_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoEddsaMathGroupElement_Representation)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoEddsaMathGroupElement")
