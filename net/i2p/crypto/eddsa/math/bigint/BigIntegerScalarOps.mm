//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/eddsa/math/bigint/BigIntegerScalarOps.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "net/i2p/crypto/eddsa/math/Field.h"
#include "net/i2p/crypto/eddsa/math/bigint/BigIntegerLittleEndianEncoding.h"
#include "net/i2p/crypto/eddsa/math/bigint/BigIntegerScalarOps.h"

@interface NetI2pCryptoEddsaMathBigintBigIntegerScalarOps () {
 @public
  JavaMathBigInteger *l_;
  NetI2pCryptoEddsaMathBigintBigIntegerLittleEndianEncoding *enc_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathBigintBigIntegerScalarOps, l_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(NetI2pCryptoEddsaMathBigintBigIntegerScalarOps, enc_, NetI2pCryptoEddsaMathBigintBigIntegerLittleEndianEncoding *)

@implementation NetI2pCryptoEddsaMathBigintBigIntegerScalarOps

- (instancetype)initWithNetI2pCryptoEddsaMathField:(NetI2pCryptoEddsaMathField *)f
                            withJavaMathBigInteger:(JavaMathBigInteger *)l {
  NetI2pCryptoEddsaMathBigintBigIntegerScalarOps_initWithNetI2pCryptoEddsaMathField_withJavaMathBigInteger_(self, f, l);
  return self;
}

- (IOSByteArray *)reduceWithByteArray:(IOSByteArray *)s {
  return [((NetI2pCryptoEddsaMathBigintBigIntegerLittleEndianEncoding *) nil_chk(enc_)) encodeWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk([enc_ toBigIntegerWithByteArray:s])) modWithJavaMathBigInteger:l_]];
}

- (IOSByteArray *)multiplyAndAddWithByteArray:(IOSByteArray *)a
                                withByteArray:(IOSByteArray *)b
                                withByteArray:(IOSByteArray *)c {
  return [((NetI2pCryptoEddsaMathBigintBigIntegerLittleEndianEncoding *) nil_chk(enc_)) encodeWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk([enc_ toBigIntegerWithByteArray:a])) multiplyWithJavaMathBigInteger:[enc_ toBigIntegerWithByteArray:b]])) addWithJavaMathBigInteger:[enc_ toBigIntegerWithByteArray:c]])) modWithJavaMathBigInteger:l_]];
}

- (void)dealloc {
  RELEASE_(l_);
  RELEASE_(enc_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pCryptoEddsaMathField:withJavaMathBigInteger:);
  methods[1].selector = @selector(reduceWithByteArray:);
  methods[2].selector = @selector(multiplyAndAddWithByteArray:withByteArray:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "l_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "enc_", "LNetI2pCryptoEddsaMathBigintBigIntegerLittleEndianEncoding;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pCryptoEddsaMathField;LJavaMathBigInteger;", "reduce", "[B", "multiplyAndAdd", "[B[B[B" };
  static const J2ObjcClassInfo _NetI2pCryptoEddsaMathBigintBigIntegerScalarOps = { "BigIntegerScalarOps", "net.i2p.crypto.eddsa.math.bigint", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_NetI2pCryptoEddsaMathBigintBigIntegerScalarOps;
}

@end

void NetI2pCryptoEddsaMathBigintBigIntegerScalarOps_initWithNetI2pCryptoEddsaMathField_withJavaMathBigInteger_(NetI2pCryptoEddsaMathBigintBigIntegerScalarOps *self, NetI2pCryptoEddsaMathField *f, JavaMathBigInteger *l) {
  NSObject_init(self);
  JreStrongAssign(&self->l_, l);
  JreStrongAssignAndConsume(&self->enc_, new_NetI2pCryptoEddsaMathBigintBigIntegerLittleEndianEncoding_init());
  [self->enc_ setFieldWithNetI2pCryptoEddsaMathField:f];
}

NetI2pCryptoEddsaMathBigintBigIntegerScalarOps *new_NetI2pCryptoEddsaMathBigintBigIntegerScalarOps_initWithNetI2pCryptoEddsaMathField_withJavaMathBigInteger_(NetI2pCryptoEddsaMathField *f, JavaMathBigInteger *l) {
  J2OBJC_NEW_IMPL(NetI2pCryptoEddsaMathBigintBigIntegerScalarOps, initWithNetI2pCryptoEddsaMathField_withJavaMathBigInteger_, f, l)
}

NetI2pCryptoEddsaMathBigintBigIntegerScalarOps *create_NetI2pCryptoEddsaMathBigintBigIntegerScalarOps_initWithNetI2pCryptoEddsaMathField_withJavaMathBigInteger_(NetI2pCryptoEddsaMathField *f, JavaMathBigInteger *l) {
  J2OBJC_CREATE_IMPL(NetI2pCryptoEddsaMathBigintBigIntegerScalarOps, initWithNetI2pCryptoEddsaMathField_withJavaMathBigInteger_, f, l)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoEddsaMathBigintBigIntegerScalarOps)
