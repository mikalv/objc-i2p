//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/SelfSignedGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoSelfSignedGenerator")
#ifdef RESTRICT_NetI2pCryptoSelfSignedGenerator
#define INCLUDE_ALL_NetI2pCryptoSelfSignedGenerator 0
#else
#define INCLUDE_ALL_NetI2pCryptoSelfSignedGenerator 1
#endif
#undef RESTRICT_NetI2pCryptoSelfSignedGenerator

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoSelfSignedGenerator_) && (INCLUDE_ALL_NetI2pCryptoSelfSignedGenerator || defined(INCLUDE_NetI2pCryptoSelfSignedGenerator))
#define NetI2pCryptoSelfSignedGenerator_

@class IOSObjectArray;
@class JavaSecurityCertX509Certificate;
@class NetI2pCryptoSigType;
@protocol JavaSecurityPrivateKey;
@protocol JavaUtilSet;

@interface NetI2pCryptoSelfSignedGenerator : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (IOSObjectArray *)generateWithNSString:(NSString *)cname
                         withJavaUtilSet:(id<JavaUtilSet>)altNames
                            withNSString:(NSString *)ou
                            withNSString:(NSString *)o
                            withNSString:(NSString *)l
                            withNSString:(NSString *)st
                            withNSString:(NSString *)c
                                 withInt:(jint)validDays
                 withNetI2pCryptoSigType:(NetI2pCryptoSigType *)type;

+ (IOSObjectArray *)generateWithNSString:(NSString *)cname
                            withNSString:(NSString *)ou
                            withNSString:(NSString *)o
                            withNSString:(NSString *)l
                            withNSString:(NSString *)st
                            withNSString:(NSString *)c
                                 withInt:(jint)validDays
                 withNetI2pCryptoSigType:(NetI2pCryptoSigType *)type;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

+ (IOSObjectArray *)renewWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert
                                  withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)jpriv
                                                     withInt:(jint)validDays;

@end

J2OBJC_STATIC_INIT(NetI2pCryptoSelfSignedGenerator)

FOUNDATION_EXPORT void NetI2pCryptoSelfSignedGenerator_init(NetI2pCryptoSelfSignedGenerator *self);

FOUNDATION_EXPORT NetI2pCryptoSelfSignedGenerator *new_NetI2pCryptoSelfSignedGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoSelfSignedGenerator *create_NetI2pCryptoSelfSignedGenerator_init(void);

FOUNDATION_EXPORT IOSObjectArray *NetI2pCryptoSelfSignedGenerator_generateWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_withNetI2pCryptoSigType_(NSString *cname, NSString *ou, NSString *o, NSString *l, NSString *st, NSString *c, jint validDays, NetI2pCryptoSigType *type);

FOUNDATION_EXPORT IOSObjectArray *NetI2pCryptoSelfSignedGenerator_generateWithNSString_withJavaUtilSet_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_withNetI2pCryptoSigType_(NSString *cname, id<JavaUtilSet> altNames, NSString *ou, NSString *o, NSString *l, NSString *st, NSString *c, jint validDays, NetI2pCryptoSigType *type);

FOUNDATION_EXPORT IOSObjectArray *NetI2pCryptoSelfSignedGenerator_renewWithJavaSecurityCertX509Certificate_withJavaSecurityPrivateKey_withInt_(JavaSecurityCertX509Certificate *cert, id<JavaSecurityPrivateKey> jpriv, jint validDays);

FOUNDATION_EXPORT void NetI2pCryptoSelfSignedGenerator_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoSelfSignedGenerator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoSelfSignedGenerator")
