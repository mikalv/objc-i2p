//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/elgamal/spec/ElGamalKeySpec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoElgamalSpecElGamalKeySpec")
#ifdef RESTRICT_NetI2pCryptoElgamalSpecElGamalKeySpec
#define INCLUDE_ALL_NetI2pCryptoElgamalSpecElGamalKeySpec 0
#else
#define INCLUDE_ALL_NetI2pCryptoElgamalSpecElGamalKeySpec 1
#endif
#undef RESTRICT_NetI2pCryptoElgamalSpecElGamalKeySpec

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoElgamalSpecElGamalKeySpec_) && (INCLUDE_ALL_NetI2pCryptoElgamalSpecElGamalKeySpec || defined(INCLUDE_NetI2pCryptoElgamalSpecElGamalKeySpec))
#define NetI2pCryptoElgamalSpecElGamalKeySpec_

#define RESTRICT_JavaSecuritySpecKeySpec 1
#define INCLUDE_JavaSecuritySpecKeySpec 1
#include "java/security/spec/KeySpec.h"

@class NetI2pCryptoElgamalSpecElGamalParameterSpec;

@interface NetI2pCryptoElgamalSpecElGamalKeySpec : NSObject < JavaSecuritySpecKeySpec >

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pCryptoElgamalSpecElGamalParameterSpec:(NetI2pCryptoElgamalSpecElGamalParameterSpec *)spec;

- (NetI2pCryptoElgamalSpecElGamalParameterSpec *)getParams;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoElgamalSpecElGamalKeySpec)

FOUNDATION_EXPORT void NetI2pCryptoElgamalSpecElGamalKeySpec_initWithNetI2pCryptoElgamalSpecElGamalParameterSpec_(NetI2pCryptoElgamalSpecElGamalKeySpec *self, NetI2pCryptoElgamalSpecElGamalParameterSpec *spec);

FOUNDATION_EXPORT NetI2pCryptoElgamalSpecElGamalKeySpec *new_NetI2pCryptoElgamalSpecElGamalKeySpec_initWithNetI2pCryptoElgamalSpecElGamalParameterSpec_(NetI2pCryptoElgamalSpecElGamalParameterSpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalSpecElGamalKeySpec *create_NetI2pCryptoElgamalSpecElGamalKeySpec_initWithNetI2pCryptoElgamalSpecElGamalParameterSpec_(NetI2pCryptoElgamalSpecElGamalParameterSpec *spec);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoElgamalSpecElGamalKeySpec)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoElgamalSpecElGamalKeySpec")
