//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/elgamal/impl/ElGamalPublicKeyImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoElgamalImplElGamalPublicKeyImpl")
#ifdef RESTRICT_NetI2pCryptoElgamalImplElGamalPublicKeyImpl
#define INCLUDE_ALL_NetI2pCryptoElgamalImplElGamalPublicKeyImpl 0
#else
#define INCLUDE_ALL_NetI2pCryptoElgamalImplElGamalPublicKeyImpl 1
#endif
#undef RESTRICT_NetI2pCryptoElgamalImplElGamalPublicKeyImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoElgamalImplElGamalPublicKeyImpl_) && (INCLUDE_ALL_NetI2pCryptoElgamalImplElGamalPublicKeyImpl || defined(INCLUDE_NetI2pCryptoElgamalImplElGamalPublicKeyImpl))
#define NetI2pCryptoElgamalImplElGamalPublicKeyImpl_

#define RESTRICT_NetI2pCryptoElgamalElGamalPublicKey 1
#define INCLUDE_NetI2pCryptoElgamalElGamalPublicKey 1
#include "net/i2p/crypto/elgamal/ElGamalPublicKey.h"

#define RESTRICT_JavaxCryptoInterfacesDHPublicKey 1
#define INCLUDE_JavaxCryptoInterfacesDHPublicKey 1
#include "javax/crypto/interfaces/DHPublicKey.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecuritySpecX509EncodedKeySpec;
@class JavaxCryptoSpecDHParameterSpec;
@class JavaxCryptoSpecDHPublicKeySpec;
@class NetI2pCryptoElgamalSpecElGamalParameterSpec;
@class NetI2pCryptoElgamalSpecElGamalPublicKeySpec;

@interface NetI2pCryptoElgamalImplElGamalPublicKeyImpl : NSObject < NetI2pCryptoElgamalElGamalPublicKey, JavaxCryptoInterfacesDHPublicKey >

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)y
     withNetI2pCryptoElgamalSpecElGamalParameterSpec:(NetI2pCryptoElgamalSpecElGamalParameterSpec *)elSpec;

- (instancetype __nonnull)initWithJavaxCryptoInterfacesDHPublicKey:(id<JavaxCryptoInterfacesDHPublicKey>)key;

- (instancetype __nonnull)initWithJavaxCryptoSpecDHPublicKeySpec:(JavaxCryptoSpecDHPublicKeySpec *)spec;

- (instancetype __nonnull)initWithNetI2pCryptoElgamalElGamalPublicKey:(id<NetI2pCryptoElgamalElGamalPublicKey>)key;

- (instancetype __nonnull)initWithNetI2pCryptoElgamalSpecElGamalPublicKeySpec:(NetI2pCryptoElgamalSpecElGamalPublicKeySpec *)spec;

- (instancetype __nonnull)initWithJavaSecuritySpecX509EncodedKeySpec:(JavaSecuritySpecX509EncodedKeySpec *)spec;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (NetI2pCryptoElgamalSpecElGamalParameterSpec *)getParameters;

- (JavaxCryptoSpecDHParameterSpec *)getParams;

- (JavaMathBigInteger *)getY;

#pragma mark Package-Private

+ (jint)spaceForWithInt:(jint)val;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoElgamalImplElGamalPublicKeyImpl)

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithNetI2pCryptoElgamalSpecElGamalPublicKeySpec_(NetI2pCryptoElgamalImplElGamalPublicKeyImpl *self, NetI2pCryptoElgamalSpecElGamalPublicKeySpec *spec);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *new_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithNetI2pCryptoElgamalSpecElGamalPublicKeySpec_(NetI2pCryptoElgamalSpecElGamalPublicKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *create_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithNetI2pCryptoElgamalSpecElGamalPublicKeySpec_(NetI2pCryptoElgamalSpecElGamalPublicKeySpec *spec);

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaxCryptoSpecDHPublicKeySpec_(NetI2pCryptoElgamalImplElGamalPublicKeyImpl *self, JavaxCryptoSpecDHPublicKeySpec *spec);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *new_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaxCryptoSpecDHPublicKeySpec_(JavaxCryptoSpecDHPublicKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *create_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaxCryptoSpecDHPublicKeySpec_(JavaxCryptoSpecDHPublicKeySpec *spec);

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithNetI2pCryptoElgamalElGamalPublicKey_(NetI2pCryptoElgamalImplElGamalPublicKeyImpl *self, id<NetI2pCryptoElgamalElGamalPublicKey> key);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *new_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithNetI2pCryptoElgamalElGamalPublicKey_(id<NetI2pCryptoElgamalElGamalPublicKey> key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *create_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithNetI2pCryptoElgamalElGamalPublicKey_(id<NetI2pCryptoElgamalElGamalPublicKey> key);

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaxCryptoInterfacesDHPublicKey_(NetI2pCryptoElgamalImplElGamalPublicKeyImpl *self, id<JavaxCryptoInterfacesDHPublicKey> key);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *new_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaxCryptoInterfacesDHPublicKey_(id<JavaxCryptoInterfacesDHPublicKey> key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *create_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaxCryptoInterfacesDHPublicKey_(id<JavaxCryptoInterfacesDHPublicKey> key);

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaMathBigInteger_withNetI2pCryptoElgamalSpecElGamalParameterSpec_(NetI2pCryptoElgamalImplElGamalPublicKeyImpl *self, JavaMathBigInteger *y, NetI2pCryptoElgamalSpecElGamalParameterSpec *elSpec);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *new_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaMathBigInteger_withNetI2pCryptoElgamalSpecElGamalParameterSpec_(JavaMathBigInteger *y, NetI2pCryptoElgamalSpecElGamalParameterSpec *elSpec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *create_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaMathBigInteger_withNetI2pCryptoElgamalSpecElGamalParameterSpec_(JavaMathBigInteger *y, NetI2pCryptoElgamalSpecElGamalParameterSpec *elSpec);

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaSecuritySpecX509EncodedKeySpec_(NetI2pCryptoElgamalImplElGamalPublicKeyImpl *self, JavaSecuritySpecX509EncodedKeySpec *spec);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *new_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaSecuritySpecX509EncodedKeySpec_(JavaSecuritySpecX509EncodedKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPublicKeyImpl *create_NetI2pCryptoElgamalImplElGamalPublicKeyImpl_initWithJavaSecuritySpecX509EncodedKeySpec_(JavaSecuritySpecX509EncodedKeySpec *spec);

FOUNDATION_EXPORT jint NetI2pCryptoElgamalImplElGamalPublicKeyImpl_spaceForWithInt_(jint val);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoElgamalImplElGamalPublicKeyImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoElgamalImplElGamalPublicKeyImpl")
