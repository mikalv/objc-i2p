//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/elgamal/impl/ElGamalPrivateKeyImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl")
#ifdef RESTRICT_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl
#define INCLUDE_ALL_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl 0
#else
#define INCLUDE_ALL_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl 1
#endif
#undef RESTRICT_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_) && (INCLUDE_ALL_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl || defined(INCLUDE_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl))
#define NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_

#define RESTRICT_NetI2pCryptoElgamalElGamalPrivateKey 1
#define INCLUDE_NetI2pCryptoElgamalElGamalPrivateKey 1
#include "net/i2p/crypto/elgamal/ElGamalPrivateKey.h"

#define RESTRICT_JavaxCryptoInterfacesDHPrivateKey 1
#define INCLUDE_JavaxCryptoInterfacesDHPrivateKey 1
#include "javax/crypto/interfaces/DHPrivateKey.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecuritySpecPKCS8EncodedKeySpec;
@class JavaxCryptoSpecDHParameterSpec;
@class JavaxCryptoSpecDHPrivateKeySpec;
@class NetI2pCryptoElgamalSpecElGamalParameterSpec;
@class NetI2pCryptoElgamalSpecElGamalPrivateKeySpec;

@interface NetI2pCryptoElgamalImplElGamalPrivateKeyImpl : NSObject < NetI2pCryptoElgamalElGamalPrivateKey, JavaxCryptoInterfacesDHPrivateKey >

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)x
     withNetI2pCryptoElgamalSpecElGamalParameterSpec:(NetI2pCryptoElgamalSpecElGamalParameterSpec *)elSpec;

- (instancetype __nonnull)initWithJavaxCryptoInterfacesDHPrivateKey:(id<JavaxCryptoInterfacesDHPrivateKey>)key;

- (instancetype __nonnull)initWithJavaxCryptoSpecDHPrivateKeySpec:(JavaxCryptoSpecDHPrivateKeySpec *)spec;

- (instancetype __nonnull)initWithNetI2pCryptoElgamalElGamalPrivateKey:(id<NetI2pCryptoElgamalElGamalPrivateKey>)key;

- (instancetype __nonnull)initWithNetI2pCryptoElgamalSpecElGamalPrivateKeySpec:(NetI2pCryptoElgamalSpecElGamalPrivateKeySpec *)spec;

- (instancetype __nonnull)initWithJavaSecuritySpecPKCS8EncodedKeySpec:(JavaSecuritySpecPKCS8EncodedKeySpec *)spec;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (NetI2pCryptoElgamalSpecElGamalParameterSpec *)getParameters;

- (JavaxCryptoSpecDHParameterSpec *)getParams;

- (JavaMathBigInteger *)getX;

#pragma mark Protected

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoElgamalImplElGamalPrivateKeyImpl)

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_init(NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *self);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *new_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *create_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_init(void);

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithNetI2pCryptoElgamalElGamalPrivateKey_(NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *self, id<NetI2pCryptoElgamalElGamalPrivateKey> key);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *new_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithNetI2pCryptoElgamalElGamalPrivateKey_(id<NetI2pCryptoElgamalElGamalPrivateKey> key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *create_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithNetI2pCryptoElgamalElGamalPrivateKey_(id<NetI2pCryptoElgamalElGamalPrivateKey> key);

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaxCryptoInterfacesDHPrivateKey_(NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *self, id<JavaxCryptoInterfacesDHPrivateKey> key);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *new_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaxCryptoInterfacesDHPrivateKey_(id<JavaxCryptoInterfacesDHPrivateKey> key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *create_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaxCryptoInterfacesDHPrivateKey_(id<JavaxCryptoInterfacesDHPrivateKey> key);

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithNetI2pCryptoElgamalSpecElGamalPrivateKeySpec_(NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *self, NetI2pCryptoElgamalSpecElGamalPrivateKeySpec *spec);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *new_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithNetI2pCryptoElgamalSpecElGamalPrivateKeySpec_(NetI2pCryptoElgamalSpecElGamalPrivateKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *create_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithNetI2pCryptoElgamalSpecElGamalPrivateKeySpec_(NetI2pCryptoElgamalSpecElGamalPrivateKeySpec *spec);

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaxCryptoSpecDHPrivateKeySpec_(NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *self, JavaxCryptoSpecDHPrivateKeySpec *spec);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *new_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaxCryptoSpecDHPrivateKeySpec_(JavaxCryptoSpecDHPrivateKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *create_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaxCryptoSpecDHPrivateKeySpec_(JavaxCryptoSpecDHPrivateKeySpec *spec);

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaMathBigInteger_withNetI2pCryptoElgamalSpecElGamalParameterSpec_(NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *self, JavaMathBigInteger *x, NetI2pCryptoElgamalSpecElGamalParameterSpec *elSpec);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *new_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaMathBigInteger_withNetI2pCryptoElgamalSpecElGamalParameterSpec_(JavaMathBigInteger *x, NetI2pCryptoElgamalSpecElGamalParameterSpec *elSpec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *create_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaMathBigInteger_withNetI2pCryptoElgamalSpecElGamalParameterSpec_(JavaMathBigInteger *x, NetI2pCryptoElgamalSpecElGamalParameterSpec *elSpec);

FOUNDATION_EXPORT void NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaSecuritySpecPKCS8EncodedKeySpec_(NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *self, JavaSecuritySpecPKCS8EncodedKeySpec *spec);

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *new_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaSecuritySpecPKCS8EncodedKeySpec_(JavaSecuritySpecPKCS8EncodedKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalImplElGamalPrivateKeyImpl *create_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl_initWithJavaSecuritySpecPKCS8EncodedKeySpec_(JavaSecuritySpecPKCS8EncodedKeySpec *spec);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoElgamalImplElGamalPrivateKeyImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoElgamalImplElGamalPrivateKeyImpl")
