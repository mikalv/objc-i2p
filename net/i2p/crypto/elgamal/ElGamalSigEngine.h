//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/elgamal/ElGamalSigEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoElgamalElGamalSigEngine")
#ifdef RESTRICT_NetI2pCryptoElgamalElGamalSigEngine
#define INCLUDE_ALL_NetI2pCryptoElgamalElGamalSigEngine 0
#else
#define INCLUDE_ALL_NetI2pCryptoElgamalElGamalSigEngine 1
#endif
#undef RESTRICT_NetI2pCryptoElgamalElGamalSigEngine

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoElgamalElGamalSigEngine_) && (INCLUDE_ALL_NetI2pCryptoElgamalElGamalSigEngine || defined(INCLUDE_NetI2pCryptoElgamalElGamalSigEngine))
#define NetI2pCryptoElgamalElGamalSigEngine_

#define RESTRICT_JavaSecuritySignature 1
#define INCLUDE_JavaSecuritySignature 1
#include "java/security/Signature.h"

@class IOSByteArray;
@class JavaSecurityMessageDigest;
@protocol JavaSecurityPrivateKey;
@protocol JavaSecurityPublicKey;

@interface NetI2pCryptoElgamalElGamalSigEngine : JavaSecuritySignature

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithJavaSecurityMessageDigest:(JavaSecurityMessageDigest *)digest;

#pragma mark Protected

- (id)engineGetParameterWithNSString:(NSString *)param;

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey;

- (void)engineInitVerifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey;

- (void)engineSetParameterWithNSString:(NSString *)param
                                withId:(id)value;

- (IOSByteArray *)engineSign;

- (void)engineUpdateWithByte:(jbyte)b;

- (void)engineUpdateWithByteArray:(IOSByteArray *)b
                          withInt:(jint)off
                          withInt:(jint)len;

- (jboolean)engineVerifyWithByteArray:(IOSByteArray *)sigBytes;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoElgamalElGamalSigEngine)

FOUNDATION_EXPORT void NetI2pCryptoElgamalElGamalSigEngine_init(NetI2pCryptoElgamalElGamalSigEngine *self);

FOUNDATION_EXPORT NetI2pCryptoElgamalElGamalSigEngine *new_NetI2pCryptoElgamalElGamalSigEngine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalElGamalSigEngine *create_NetI2pCryptoElgamalElGamalSigEngine_init(void);

FOUNDATION_EXPORT void NetI2pCryptoElgamalElGamalSigEngine_initWithJavaSecurityMessageDigest_(NetI2pCryptoElgamalElGamalSigEngine *self, JavaSecurityMessageDigest *digest);

FOUNDATION_EXPORT NetI2pCryptoElgamalElGamalSigEngine *new_NetI2pCryptoElgamalElGamalSigEngine_initWithJavaSecurityMessageDigest_(JavaSecurityMessageDigest *digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoElgamalElGamalSigEngine *create_NetI2pCryptoElgamalElGamalSigEngine_initWithJavaSecurityMessageDigest_(JavaSecurityMessageDigest *digest);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoElgamalElGamalSigEngine)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoElgamalElGamalSigEngine")
