//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/Hash384.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoHash384")
#ifdef RESTRICT_NetI2pCryptoHash384
#define INCLUDE_ALL_NetI2pCryptoHash384 0
#else
#define INCLUDE_ALL_NetI2pCryptoHash384 1
#endif
#undef RESTRICT_NetI2pCryptoHash384

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoHash384_) && (INCLUDE_ALL_NetI2pCryptoHash384 || defined(INCLUDE_NetI2pCryptoHash384))
#define NetI2pCryptoHash384_

#define RESTRICT_NetI2pDataSimpleDataStructure 1
#define INCLUDE_NetI2pDataSimpleDataStructure 1
#include "net/i2p/data/SimpleDataStructure.h"

@class IOSByteArray;

@interface NetI2pCryptoHash384 : NetI2pDataSimpleDataStructure
@property (readonly, class) jint HASH_LENGTH NS_SWIFT_NAME(HASH_LENGTH);

+ (jint)HASH_LENGTH;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data;

- (jint)length;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoHash384)

inline jint NetI2pCryptoHash384_get_HASH_LENGTH(void);
#define NetI2pCryptoHash384_HASH_LENGTH 48
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pCryptoHash384, HASH_LENGTH, jint)

FOUNDATION_EXPORT void NetI2pCryptoHash384_init(NetI2pCryptoHash384 *self);

FOUNDATION_EXPORT NetI2pCryptoHash384 *new_NetI2pCryptoHash384_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoHash384 *create_NetI2pCryptoHash384_init(void);

FOUNDATION_EXPORT void NetI2pCryptoHash384_initWithByteArray_(NetI2pCryptoHash384 *self, IOSByteArray *data);

FOUNDATION_EXPORT NetI2pCryptoHash384 *new_NetI2pCryptoHash384_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoHash384 *create_NetI2pCryptoHash384_initWithByteArray_(IOSByteArray *data);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoHash384)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoHash384")
