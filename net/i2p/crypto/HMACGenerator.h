//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/HMACGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoHMACGenerator")
#ifdef RESTRICT_NetI2pCryptoHMACGenerator
#define INCLUDE_ALL_NetI2pCryptoHMACGenerator 0
#else
#define INCLUDE_ALL_NetI2pCryptoHMACGenerator 1
#endif
#undef RESTRICT_NetI2pCryptoHMACGenerator

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoHMACGenerator_) && (INCLUDE_ALL_NetI2pCryptoHMACGenerator || defined(INCLUDE_NetI2pCryptoHMACGenerator))
#define NetI2pCryptoHMACGenerator_

@class IOSByteArray;
@class JavaUtilConcurrentLinkedBlockingQueue;
@class NetI2pDataHash;
@class NetI2pDataSessionKey;
@class NetI2pI2PAppContext;
@class OrgBouncycastleOldcryptoMacsI2PHMac;

@interface NetI2pCryptoHMACGenerator : NSObject {
 @public
  JavaUtilConcurrentLinkedBlockingQueue *_available_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (NetI2pDataHash *)calculateWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key
                                        withByteArray:(IOSByteArray *)data;

- (void)calculateWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key
                            withByteArray:(IOSByteArray *)data
                                  withInt:(jint)offset
                                  withInt:(jint)length
                            withByteArray:(IOSByteArray *)target
                                  withInt:(jint)targetOffset;

- (jboolean)verifyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key
                             withByteArray:(IOSByteArray *)curData
                                   withInt:(jint)curOffset
                                   withInt:(jint)curLength
                             withByteArray:(IOSByteArray *)origMAC
                                   withInt:(jint)origMACOffset
                                   withInt:(jint)origMACLength;

#pragma mark Protected

- (OrgBouncycastleOldcryptoMacsI2PHMac *)acquire;

- (IOSByteArray *)acquireTmp;

- (void)releaseTmpWithByteArray:(IOSByteArray *)tmp;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoHMACGenerator)

J2OBJC_FIELD_SETTER(NetI2pCryptoHMACGenerator, _available_, JavaUtilConcurrentLinkedBlockingQueue *)

FOUNDATION_EXPORT void NetI2pCryptoHMACGenerator_initWithNetI2pI2PAppContext_(NetI2pCryptoHMACGenerator *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pCryptoHMACGenerator *new_NetI2pCryptoHMACGenerator_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoHMACGenerator *create_NetI2pCryptoHMACGenerator_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoHMACGenerator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoHMACGenerator")
