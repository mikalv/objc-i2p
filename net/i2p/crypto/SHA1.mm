//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/SHA1.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/System.h"
#include "java/security/DigestException.h"
#include "java/security/MessageDigest.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "net/i2p/crypto/SHA1.h"
#include "net/i2p/util/SystemVersion.h"

@interface NetI2pCryptoSHA1 () {
 @public
  IOSByteArray *pad_;
  jint padding_;
  jlong bytes_;
  jint hA_;
  jint hB_;
  jint hC_;
  jint hD_;
  jint hE_;
}

- (void)computeBlockWithByteArray:(IOSByteArray *)input
                          withInt:(jint)offset;

@end

J2OBJC_FIELD_SETTER(NetI2pCryptoSHA1, pad_, IOSByteArray *)

inline jboolean NetI2pCryptoSHA1_get__useBitzi(void);
static jboolean NetI2pCryptoSHA1__useBitzi;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(NetI2pCryptoSHA1, _useBitzi, jboolean)

__attribute__((unused)) static void NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(NetI2pCryptoSHA1 *self, IOSByteArray *input, jint offset);

J2OBJC_INITIALIZED_DEFN(NetI2pCryptoSHA1)

@implementation NetI2pCryptoSHA1

+ (jint)HASH_LENGTH {
  return NetI2pCryptoSHA1_HASH_LENGTH;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pCryptoSHA1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaSecurityMessageDigest *)getInstance {
  return NetI2pCryptoSHA1_getInstance();
}

- (id)java_clone {
  NetI2pCryptoSHA1 *that = (NetI2pCryptoSHA1 *) cast_chk([super java_clone], [NetI2pCryptoSHA1 class]);
  JreStrongAssign(&((NetI2pCryptoSHA1 *) nil_chk(that))->pad_, [((IOSByteArray *) nil_chk(self->pad_)) java_clone]);
  return that;
}

- (jint)engineGetDigestLength {
  return NetI2pCryptoSHA1_HASH_LENGTH;
}

- (void)engineReset {
  jint i = 60;
  do {
    *IOSByteArray_GetRef(nil_chk(pad_), i) = (jbyte) (jint) 0x00;
    *IOSByteArray_GetRef(pad_, i + 1) = (jbyte) (jint) 0x00;
    *IOSByteArray_GetRef(pad_, i + 2) = (jbyte) (jint) 0x00;
    *IOSByteArray_GetRef(pad_, i + 3) = (jbyte) (jint) 0x00;
  }
  while ((i -= 4) >= 0);
  padding_ = 0;
  bytes_ = 0;
  [self init__];
}

- (void)init__ {
  hA_ = (jint) 0x67452301;
  hB_ = (jint) 0xefcdab89;
  hC_ = (jint) 0x98badcfe;
  hD_ = (jint) 0x10325476;
  hE_ = (jint) 0xc3d2e1f0;
}

- (void)engineUpdateWithByte:(jbyte)input {
  bytes_++;
  if (padding_ < 63) {
    *IOSByteArray_GetRef(nil_chk(pad_), padding_++) = input;
    return;
  }
  *IOSByteArray_GetRef(nil_chk(pad_), 63) = input;
  NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, pad_, 0);
  padding_ = 0;
}

- (void)engineUpdateWithByteArray:(IOSByteArray *)input
                          withInt:(jint)offset
                          withInt:(jint)len {
  if (offset >= 0 && len >= 0 && offset + len <= ((IOSByteArray *) nil_chk(input))->size_) {
    bytes_ += len;
    jint padlen = 64 - padding_;
    if (padding_ > 0 && len >= padlen) {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(input, offset, pad_, padding_, padlen);
      NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, pad_, 0);
      padding_ = 0;
      offset += padlen;
      len -= padlen;
    }
    while (len >= 512) {
      NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, input, offset);
      NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, input, offset + 64);
      NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, input, offset + 128);
      NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, input, offset + 192);
      NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, input, offset + 256);
      NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, input, offset + 320);
      NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, input, offset + 384);
      NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, input, offset + 448);
      offset += 512;
      len -= 512;
    }
    while (len >= 64) {
      NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, input, offset);
      offset += 64;
      len -= 64;
    }
    if (len > 0) {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(input, offset, pad_, padding_, len);
      padding_ += len;
    }
    return;
  }
  @throw create_JavaLangArrayIndexOutOfBoundsException_initWithInt_(offset);
}

- (IOSByteArray *)engineDigest {
  @try {
    IOSByteArray *hashvalue = [IOSByteArray arrayWithLength:NetI2pCryptoSHA1_HASH_LENGTH];
    [self engineDigestWithByteArray:hashvalue withInt:0 withInt:NetI2pCryptoSHA1_HASH_LENGTH];
    return hashvalue;
  }
  @catch (JavaSecurityDigestException *e) {
    return nil;
  }
}

- (jint)engineDigestWithByteArray:(IOSByteArray *)hashvalue
                          withInt:(jint)offset
                          withInt:(jint)len {
  if (len >= NetI2pCryptoSHA1_HASH_LENGTH) {
    if (((IOSByteArray *) nil_chk(hashvalue))->size_ - offset >= NetI2pCryptoSHA1_HASH_LENGTH) {
      jint i;
      *IOSByteArray_GetRef(nil_chk(pad_), i = padding_) = (jbyte) (jint) 0x80;
      switch (i) {
        case 52:
        *IOSByteArray_GetRef(pad_, 53) = (jbyte) (jint) 0x00;
        case 53:
        *IOSByteArray_GetRef(pad_, 54) = (jbyte) (jint) 0x00;
        case 54:
        *IOSByteArray_GetRef(pad_, 55) = (jbyte) (jint) 0x00;
        case 55:
        break;
        case 56:
        *IOSByteArray_GetRef(pad_, 57) = (jbyte) (jint) 0x00;
        case 57:
        *IOSByteArray_GetRef(pad_, 58) = (jbyte) (jint) 0x00;
        case 58:
        *IOSByteArray_GetRef(pad_, 59) = (jbyte) (jint) 0x00;
        case 59:
        *IOSByteArray_GetRef(pad_, 60) = (jbyte) (jint) 0x00;
        case 60:
        *IOSByteArray_GetRef(pad_, 61) = (jbyte) (jint) 0x00;
        case 61:
        *IOSByteArray_GetRef(pad_, 62) = (jbyte) (jint) 0x00;
        case 62:
        *IOSByteArray_GetRef(pad_, 63) = (jbyte) (jint) 0x00;
        case 63:
        NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, pad_, 0);
        i = 52;
        do {
          *IOSByteArray_GetRef(nil_chk(pad_), i) = (jbyte) (jint) 0x00;
          *IOSByteArray_GetRef(pad_, i + 1) = (jbyte) (jint) 0x00;
          *IOSByteArray_GetRef(pad_, i + 2) = (jbyte) (jint) 0x00;
          *IOSByteArray_GetRef(pad_, i + 3) = (jbyte) (jint) 0x00;
        }
        while ((i -= 4) >= 0);
        break;
        default:
        switch (i & 3) {
          case 3:
          i++;
          break;
          case 2:
          *IOSByteArray_GetRef(pad_, (i += 2) - 1) = (jbyte) (jint) 0x00;
          break;
          case 1:
          *IOSByteArray_GetRef(pad_, (i += 3) - 2) = (jbyte) (jint) 0x00;
          *IOSByteArray_GetRef(pad_, i - 1) = (jbyte) (jint) 0x00;
          break;
          case 0:
          *IOSByteArray_GetRef(pad_, (i += 4) - 3) = (jbyte) (jint) 0x00;
          *IOSByteArray_GetRef(pad_, i - 2) = (jbyte) (jint) 0x00;
          *IOSByteArray_GetRef(pad_, i - 1) = (jbyte) (jint) 0x00;
        }
        do {
          *IOSByteArray_GetRef(pad_, i) = (jbyte) (jint) 0x00;
          *IOSByteArray_GetRef(pad_, i + 1) = (jbyte) (jint) 0x00;
          *IOSByteArray_GetRef(pad_, i + 2) = (jbyte) (jint) 0x00;
          *IOSByteArray_GetRef(pad_, i + 3) = (jbyte) (jint) 0x00;
        }
        while ((i += 4) < 56);
      }
      *IOSByteArray_GetRef(pad_, 56) = (jbyte) (JreRShift32((i = (jint) (JreURShift64(bytes_, 29))), 24));
      *IOSByteArray_GetRef(pad_, 57) = (jbyte) (JreURShift32(i, 16));
      *IOSByteArray_GetRef(pad_, 58) = (jbyte) (JreURShift32(i, 8));
      *IOSByteArray_GetRef(pad_, 59) = (jbyte) i;
      *IOSByteArray_GetRef(pad_, 60) = (jbyte) (JreRShift32((i = JreLShift32((jint) bytes_, 3)), 24));
      *IOSByteArray_GetRef(pad_, 61) = (jbyte) (JreURShift32(i, 16));
      *IOSByteArray_GetRef(pad_, 62) = (jbyte) (JreURShift32(i, 8));
      *IOSByteArray_GetRef(pad_, 63) = (jbyte) i;
      NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, pad_, 0);
      *IOSByteArray_GetRef(hashvalue, offset) = (jbyte) (JreURShift32((i = hA_), 24));
      *IOSByteArray_GetRef(hashvalue, offset + 1) = (jbyte) (JreURShift32(i, 16));
      *IOSByteArray_GetRef(hashvalue, offset + 2) = (jbyte) (JreURShift32(i, 8));
      *IOSByteArray_GetRef(hashvalue, offset + 3) = (jbyte) i;
      *IOSByteArray_GetRef(hashvalue, offset + 4) = (jbyte) (JreURShift32((i = hB_), 24));
      *IOSByteArray_GetRef(hashvalue, offset += 5) = (jbyte) (JreURShift32(i, 16));
      *IOSByteArray_GetRef(hashvalue, offset + 1) = (jbyte) (JreURShift32(i, 8));
      *IOSByteArray_GetRef(hashvalue, offset + 2) = (jbyte) i;
      *IOSByteArray_GetRef(hashvalue, offset + 3) = (jbyte) (JreURShift32((i = hC_), 24));
      *IOSByteArray_GetRef(hashvalue, offset + 4) = (jbyte) (JreURShift32(i, 16));
      *IOSByteArray_GetRef(hashvalue, offset += 5) = (jbyte) (JreURShift32(i, 8));
      *IOSByteArray_GetRef(hashvalue, offset + 1) = (jbyte) i;
      *IOSByteArray_GetRef(hashvalue, offset + 2) = (jbyte) (JreURShift32((i = hD_), 24));
      *IOSByteArray_GetRef(hashvalue, offset + 3) = (jbyte) (JreURShift32(i, 16));
      *IOSByteArray_GetRef(hashvalue, offset + 4) = (jbyte) (JreURShift32(i, 8));
      *IOSByteArray_GetRef(hashvalue, offset += 5) = (jbyte) i;
      *IOSByteArray_GetRef(hashvalue, offset + 1) = (jbyte) (JreURShift32((i = hE_), 24));
      *IOSByteArray_GetRef(hashvalue, offset + 2) = (jbyte) (JreURShift32(i, 16));
      *IOSByteArray_GetRef(hashvalue, offset + 3) = (jbyte) (JreURShift32(i, 8));
      *IOSByteArray_GetRef(hashvalue, offset + 4) = (jbyte) i;
      [self engineReset];
      return NetI2pCryptoSHA1_HASH_LENGTH;
    }
    @throw create_JavaSecurityDigestException_initWithNSString_(@"insufficient space in output buffer to store the digest");
  }
  @throw create_JavaSecurityDigestException_initWithNSString_(@"partial digests not returned");
}

- (void)computeBlockWithByteArray:(IOSByteArray *)input
                          withInt:(jint)offset {
  NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(self, input, offset);
}

- (void)dealloc {
  RELEASE_(pad_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityMessageDigest;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 5, 7, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getInstance);
  methods[2].selector = @selector(java_clone);
  methods[3].selector = @selector(engineGetDigestLength);
  methods[4].selector = @selector(engineReset);
  methods[5].selector = @selector(init__);
  methods[6].selector = @selector(engineUpdateWithByte:);
  methods[7].selector = @selector(engineUpdateWithByteArray:withInt:withInt:);
  methods[8].selector = @selector(engineDigest);
  methods[9].selector = @selector(engineDigestWithByteArray:withInt:withInt:);
  methods[10].selector = @selector(computeBlockWithByteArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "HASH_LENGTH", "I", .constantValue.asInt = NetI2pCryptoSHA1_HASH_LENGTH, 0x18, -1, -1, -1, -1 },
    { "pad_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "padding_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bytes_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hA_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hB_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hC_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hD_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hE_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_useBitzi", "Z", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
  };
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "init", "engineUpdate", "B", "[BII", "engineDigest", "LJavaSecurityDigestException;", "computeBlock", "[BI", &NetI2pCryptoSHA1__useBitzi };
  static const J2ObjcClassInfo _NetI2pCryptoSHA1 = { "SHA1", "net.i2p.crypto", ptrTable, methods, fields, 7, 0x11, 11, 10, -1, -1, -1, -1, -1 };
  return &_NetI2pCryptoSHA1;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

+ (void)initialize {
  if (self == [NetI2pCryptoSHA1 class]) {
    {
      jboolean useBitzi = true;
      if (NetI2pUtilSystemVersion_isApache() || NetI2pUtilSystemVersion_isGNU()) {
        @try {
          JavaSecurityMessageDigest_getInstanceWithNSString_(@"SHA-1");
          useBitzi = false;
        }
        @catch (JavaSecurityNoSuchAlgorithmException *e) {
        }
      }
      NetI2pCryptoSHA1__useBitzi = useBitzi;
    }
    J2OBJC_SET_INITIALIZED(NetI2pCryptoSHA1)
  }
}

@end

void NetI2pCryptoSHA1_init(NetI2pCryptoSHA1 *self) {
  JavaSecurityMessageDigest_initWithNSString_(self, @"SHA-1");
  JreStrongAssignAndConsume(&self->pad_, [IOSByteArray newArrayWithLength:64]);
  [self init__];
}

NetI2pCryptoSHA1 *new_NetI2pCryptoSHA1_init() {
  J2OBJC_NEW_IMPL(NetI2pCryptoSHA1, init)
}

NetI2pCryptoSHA1 *create_NetI2pCryptoSHA1_init() {
  J2OBJC_CREATE_IMPL(NetI2pCryptoSHA1, init)
}

JavaSecurityMessageDigest *NetI2pCryptoSHA1_getInstance() {
  NetI2pCryptoSHA1_initialize();
  if (!NetI2pCryptoSHA1__useBitzi) {
    @try {
      return JavaSecurityMessageDigest_getInstanceWithNSString_(@"SHA-1");
    }
    @catch (JavaSecurityNoSuchAlgorithmException *e) {
    }
  }
  return create_NetI2pCryptoSHA1_init();
}

void NetI2pCryptoSHA1_computeBlockWithByteArray_withInt_(NetI2pCryptoSHA1 *self, IOSByteArray *input, jint offset) {
  jint a;
  jint b;
  jint c;
  jint d;
  jint e;
  jint i00;
  jint i01;
  jint i02;
  jint i03;
  jint i04;
  jint i05;
  jint i06;
  jint i07;
  jint i08;
  jint i09;
  jint i10;
  jint i11;
  jint i12;
  jint i13;
  jint i14;
  jint i15;
  jint unseq$1 = a = self->hA_;
  jint unseq$2 = d = self->hD_;
  e = self->hE_ + ((JreLShift32((unseq$1), 5)) | (JreURShift32(a, 27))) + (jint) 0x5a827999 + (((b = self->hB_) & ((c = self->hC_) ^ (unseq$2))) ^ d) + (i00 = (JreLShift32(IOSByteArray_Get(nil_chk(input), offset), 24)) | (JreLShift32((IOSByteArray_Get(input, offset + 1) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, offset + 2) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 3) & (jint) 0xff));
  jint unseq$3 = offset;
  jint unseq$4 = offset += 5;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x5a827999 + ((a & ((b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c)) ^ c) + (i01 = (JreLShift32(IOSByteArray_Get(input, unseq$3 + 4), 24)) | (JreLShift32((IOSByteArray_Get(input, unseq$4) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, offset + 1) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 2) & (jint) 0xff));
  jint unseq$5 = offset;
  jint unseq$6 = offset;
  jint unseq$7 = offset += 5;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x5a827999 + ((e & ((a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b)) ^ b) + (i02 = (JreLShift32(IOSByteArray_Get(input, unseq$5 + 3), 24)) | (JreLShift32((IOSByteArray_Get(input, unseq$6 + 4) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, unseq$7) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 1) & (jint) 0xff));
  jint unseq$8 = offset;
  jint unseq$9 = offset;
  jint unseq$10 = offset;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x5a827999 + ((d & ((e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a)) ^ a) + (i03 = (JreLShift32(IOSByteArray_Get(input, unseq$8 + 2), 24)) | (JreLShift32((IOSByteArray_Get(input, unseq$9 + 3) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, unseq$10 + 4) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset += 5) & (jint) 0xff));
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x5a827999 + ((c & ((d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e)) ^ e) + (i04 = (JreLShift32(IOSByteArray_Get(input, offset + 1), 24)) | (JreLShift32((IOSByteArray_Get(input, offset + 2) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, offset + 3) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 4) & (jint) 0xff));
  jint unseq$11 = offset += 5;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0x5a827999 + ((b & ((c = (JreLShift32(c, 30)) | (JreURShift32(c, 2))) ^ d)) ^ d) + (i05 = (JreLShift32(IOSByteArray_Get(input, unseq$11), 24)) | (JreLShift32((IOSByteArray_Get(input, offset + 1) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, offset + 2) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 3) & (jint) 0xff));
  jint unseq$12 = offset;
  jint unseq$13 = offset += 5;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x5a827999 + ((a & ((b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c)) ^ c) + (i06 = (JreLShift32(IOSByteArray_Get(input, unseq$12 + 4), 24)) | (JreLShift32((IOSByteArray_Get(input, unseq$13) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, offset + 1) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 2) & (jint) 0xff));
  jint unseq$14 = offset;
  jint unseq$15 = offset;
  jint unseq$16 = offset += 5;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x5a827999 + ((e & ((a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b)) ^ b) + (i07 = (JreLShift32(IOSByteArray_Get(input, unseq$14 + 3), 24)) | (JreLShift32((IOSByteArray_Get(input, unseq$15 + 4) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, unseq$16) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 1) & (jint) 0xff));
  jint unseq$17 = offset;
  jint unseq$18 = offset;
  jint unseq$19 = offset;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x5a827999 + ((d & ((e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a)) ^ a) + (i08 = (JreLShift32(IOSByteArray_Get(input, unseq$17 + 2), 24)) | (JreLShift32((IOSByteArray_Get(input, unseq$18 + 3) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, unseq$19 + 4) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset += 5) & (jint) 0xff));
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x5a827999 + ((c & ((d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e)) ^ e) + (i09 = (JreLShift32(IOSByteArray_Get(input, offset + 1), 24)) | (JreLShift32((IOSByteArray_Get(input, offset + 2) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, offset + 3) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 4) & (jint) 0xff));
  jint unseq$20 = offset += 5;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0x5a827999 + ((b & ((c = (JreLShift32(c, 30)) | (JreURShift32(c, 2))) ^ d)) ^ d) + (i10 = (JreLShift32(IOSByteArray_Get(input, unseq$20), 24)) | (JreLShift32((IOSByteArray_Get(input, offset + 1) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, offset + 2) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 3) & (jint) 0xff));
  jint unseq$21 = offset;
  jint unseq$22 = offset += 5;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x5a827999 + ((a & ((b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c)) ^ c) + (i11 = (JreLShift32(IOSByteArray_Get(input, unseq$21 + 4), 24)) | (JreLShift32((IOSByteArray_Get(input, unseq$22) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, offset + 1) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 2) & (jint) 0xff));
  jint unseq$23 = offset;
  jint unseq$24 = offset;
  jint unseq$25 = offset += 5;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x5a827999 + ((e & ((a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b)) ^ b) + (i12 = (JreLShift32(IOSByteArray_Get(input, unseq$23 + 3), 24)) | (JreLShift32((IOSByteArray_Get(input, unseq$24 + 4) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, unseq$25) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 1) & (jint) 0xff));
  jint unseq$26 = offset;
  jint unseq$27 = offset;
  jint unseq$28 = offset;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x5a827999 + ((d & ((e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a)) ^ a) + (i13 = (JreLShift32(IOSByteArray_Get(input, unseq$26 + 2), 24)) | (JreLShift32((IOSByteArray_Get(input, unseq$27 + 3) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, unseq$28 + 4) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset += 5) & (jint) 0xff));
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x5a827999 + ((c & ((d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e)) ^ e) + (i14 = (JreLShift32(IOSByteArray_Get(input, offset + 1), 24)) | (JreLShift32((IOSByteArray_Get(input, offset + 2) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, offset + 3) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 4) & (jint) 0xff));
  jint unseq$29 = offset += 5;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0x5a827999 + ((b & ((c = (JreLShift32(c, 30)) | (JreURShift32(c, 2))) ^ d)) ^ d) + (i15 = (JreLShift32(IOSByteArray_Get(input, unseq$29), 24)) | (JreLShift32((IOSByteArray_Get(input, offset + 1) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(input, offset + 2) & (jint) 0xff), 8)) | (IOSByteArray_Get(input, offset + 3) & (jint) 0xff));
  jint unseq$30 = i00 ^= i02 ^ i08 ^ i13;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x5a827999 + ((a & ((b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c)) ^ c) + (i00 = (JreLShift32((unseq$30), 1)) | (JreURShift32(i00, 31)));
  jint unseq$31 = i01 ^= i03 ^ i09 ^ i14;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x5a827999 + ((e & ((a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b)) ^ b) + (i01 = (JreLShift32((unseq$31), 1)) | (JreURShift32(i01, 31)));
  jint unseq$32 = i02 ^= i04 ^ i10 ^ i15;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x5a827999 + ((d & ((e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a)) ^ a) + (i02 = (JreLShift32((unseq$32), 1)) | (JreURShift32(i02, 31)));
  jint unseq$33 = i03 ^= i05 ^ i11 ^ i00;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x5a827999 + ((c & ((d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e)) ^ e) + (i03 = (JreLShift32((unseq$33), 1)) | (JreURShift32(i03, 31)));
  jint unseq$34 = i04 ^= i06 ^ i12 ^ i01;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0x6ed9eba1 + (b ^ (c = (JreLShift32(c, 30)) | (JreURShift32(c, 2))) ^ d) + (i04 = (JreLShift32((unseq$34), 1)) | (JreURShift32(i04, 31)));
  jint unseq$35 = i05 ^= i07 ^ i13 ^ i02;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x6ed9eba1 + (a ^ (b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c) + (i05 = (JreLShift32((unseq$35), 1)) | (JreURShift32(i05, 31)));
  jint unseq$36 = i06 ^= i08 ^ i14 ^ i03;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x6ed9eba1 + (e ^ (a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b) + (i06 = (JreLShift32((unseq$36), 1)) | (JreURShift32(i06, 31)));
  jint unseq$37 = i07 ^= i09 ^ i15 ^ i04;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x6ed9eba1 + (d ^ (e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a) + (i07 = (JreLShift32((unseq$37), 1)) | (JreURShift32(i07, 31)));
  jint unseq$38 = i08 ^= i10 ^ i00 ^ i05;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x6ed9eba1 + (c ^ (d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e) + (i08 = (JreLShift32((unseq$38), 1)) | (JreURShift32(i08, 31)));
  jint unseq$39 = i09 ^= i11 ^ i01 ^ i06;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0x6ed9eba1 + (b ^ (c = (JreLShift32(c, 30)) | (JreURShift32(c, 2))) ^ d) + (i09 = (JreLShift32((unseq$39), 1)) | (JreURShift32(i09, 31)));
  jint unseq$40 = i10 ^= i12 ^ i02 ^ i07;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x6ed9eba1 + (a ^ (b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c) + (i10 = (JreLShift32((unseq$40), 1)) | (JreURShift32(i10, 31)));
  jint unseq$41 = i11 ^= i13 ^ i03 ^ i08;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x6ed9eba1 + (e ^ (a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b) + (i11 = (JreLShift32((unseq$41), 1)) | (JreURShift32(i11, 31)));
  jint unseq$42 = i12 ^= i14 ^ i04 ^ i09;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x6ed9eba1 + (d ^ (e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a) + (i12 = (JreLShift32((unseq$42), 1)) | (JreURShift32(i12, 31)));
  jint unseq$43 = i13 ^= i15 ^ i05 ^ i10;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x6ed9eba1 + (c ^ (d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e) + (i13 = (JreLShift32((unseq$43), 1)) | (JreURShift32(i13, 31)));
  jint unseq$44 = i14 ^= i00 ^ i06 ^ i11;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0x6ed9eba1 + (b ^ (c = (JreLShift32(c, 30)) | (JreURShift32(c, 2))) ^ d) + (i14 = (JreLShift32((unseq$44), 1)) | (JreURShift32(i14, 31)));
  jint unseq$45 = i15 ^= i01 ^ i07 ^ i12;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x6ed9eba1 + (a ^ (b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c) + (i15 = (JreLShift32((unseq$45), 1)) | (JreURShift32(i15, 31)));
  jint unseq$46 = i00 ^= i02 ^ i08 ^ i13;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x6ed9eba1 + (e ^ (a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b) + (i00 = (JreLShift32((unseq$46), 1)) | (JreURShift32(i00, 31)));
  jint unseq$47 = i01 ^= i03 ^ i09 ^ i14;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x6ed9eba1 + (d ^ (e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a) + (i01 = (JreLShift32((unseq$47), 1)) | (JreURShift32(i01, 31)));
  jint unseq$48 = i02 ^= i04 ^ i10 ^ i15;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x6ed9eba1 + (c ^ (d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e) + (i02 = (JreLShift32((unseq$48), 1)) | (JreURShift32(i02, 31)));
  jint unseq$49 = i03 ^= i05 ^ i11 ^ i00;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0x6ed9eba1 + (b ^ (c = (JreLShift32(c, 30)) | (JreURShift32(c, 2))) ^ d) + (i03 = (JreLShift32((unseq$49), 1)) | (JreURShift32(i03, 31)));
  jint unseq$50 = i04 ^= i06 ^ i12 ^ i01;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x6ed9eba1 + (a ^ (b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c) + (i04 = (JreLShift32((unseq$50), 1)) | (JreURShift32(i04, 31)));
  jint unseq$51 = i05 ^= i07 ^ i13 ^ i02;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x6ed9eba1 + (e ^ (a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b) + (i05 = (JreLShift32((unseq$51), 1)) | (JreURShift32(i05, 31)));
  jint unseq$52 = i06 ^= i08 ^ i14 ^ i03;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x6ed9eba1 + (d ^ (e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a) + (i06 = (JreLShift32((unseq$52), 1)) | (JreURShift32(i06, 31)));
  jint unseq$53 = i07 ^= i09 ^ i15 ^ i04;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x6ed9eba1 + (c ^ (d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e) + (i07 = (JreLShift32((unseq$53), 1)) | (JreURShift32(i07, 31)));
  jint unseq$54 = c = (JreLShift32(c, 30)) | (JreURShift32(c, 2));
  jint unseq$55 = i08 ^= i10 ^ i00 ^ i05;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0x8f1bbcdc + ((b & (unseq$54)) | ((b | c) & d)) + (i08 = (JreLShift32((unseq$55), 1)) | (JreURShift32(i08, 31)));
  jint unseq$56 = b = (JreLShift32(b, 30)) | (JreURShift32(b, 2));
  jint unseq$57 = i09 ^= i11 ^ i01 ^ i06;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x8f1bbcdc + ((a & (unseq$56)) | ((a | b) & c)) + (i09 = (JreLShift32((unseq$57), 1)) | (JreURShift32(i09, 31)));
  jint unseq$58 = a = (JreLShift32(a, 30)) | (JreURShift32(a, 2));
  jint unseq$59 = i10 ^= i12 ^ i02 ^ i07;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x8f1bbcdc + ((e & (unseq$58)) | ((e | a) & b)) + (i10 = (JreLShift32((unseq$59), 1)) | (JreURShift32(i10, 31)));
  jint unseq$60 = e = (JreLShift32(e, 30)) | (JreURShift32(e, 2));
  jint unseq$61 = i11 ^= i13 ^ i03 ^ i08;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x8f1bbcdc + ((d & (unseq$60)) | ((d | e) & a)) + (i11 = (JreLShift32((unseq$61), 1)) | (JreURShift32(i11, 31)));
  jint unseq$62 = d = (JreLShift32(d, 30)) | (JreURShift32(d, 2));
  jint unseq$63 = i12 ^= i14 ^ i04 ^ i09;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x8f1bbcdc + ((c & (unseq$62)) | ((c | d) & e)) + (i12 = (JreLShift32((unseq$63), 1)) | (JreURShift32(i12, 31)));
  jint unseq$64 = c = (JreLShift32(c, 30)) | (JreURShift32(c, 2));
  jint unseq$65 = i13 ^= i15 ^ i05 ^ i10;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0x8f1bbcdc + ((b & (unseq$64)) | ((b | c) & d)) + (i13 = (JreLShift32((unseq$65), 1)) | (JreURShift32(i13, 31)));
  jint unseq$66 = b = (JreLShift32(b, 30)) | (JreURShift32(b, 2));
  jint unseq$67 = i14 ^= i00 ^ i06 ^ i11;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x8f1bbcdc + ((a & (unseq$66)) | ((a | b) & c)) + (i14 = (JreLShift32((unseq$67), 1)) | (JreURShift32(i14, 31)));
  jint unseq$68 = a = (JreLShift32(a, 30)) | (JreURShift32(a, 2));
  jint unseq$69 = i15 ^= i01 ^ i07 ^ i12;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x8f1bbcdc + ((e & (unseq$68)) | ((e | a) & b)) + (i15 = (JreLShift32((unseq$69), 1)) | (JreURShift32(i15, 31)));
  jint unseq$70 = e = (JreLShift32(e, 30)) | (JreURShift32(e, 2));
  jint unseq$71 = i00 ^= i02 ^ i08 ^ i13;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x8f1bbcdc + ((d & (unseq$70)) | ((d | e) & a)) + (i00 = (JreLShift32((unseq$71), 1)) | (JreURShift32(i00, 31)));
  jint unseq$72 = d = (JreLShift32(d, 30)) | (JreURShift32(d, 2));
  jint unseq$73 = i01 ^= i03 ^ i09 ^ i14;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x8f1bbcdc + ((c & (unseq$72)) | ((c | d) & e)) + (i01 = (JreLShift32((unseq$73), 1)) | (JreURShift32(i01, 31)));
  jint unseq$74 = c = (JreLShift32(c, 30)) | (JreURShift32(c, 2));
  jint unseq$75 = i02 ^= i04 ^ i10 ^ i15;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0x8f1bbcdc + ((b & (unseq$74)) | ((b | c) & d)) + (i02 = (JreLShift32((unseq$75), 1)) | (JreURShift32(i02, 31)));
  jint unseq$76 = b = (JreLShift32(b, 30)) | (JreURShift32(b, 2));
  jint unseq$77 = i03 ^= i05 ^ i11 ^ i00;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x8f1bbcdc + ((a & (unseq$76)) | ((a | b) & c)) + (i03 = (JreLShift32((unseq$77), 1)) | (JreURShift32(i03, 31)));
  jint unseq$78 = a = (JreLShift32(a, 30)) | (JreURShift32(a, 2));
  jint unseq$79 = i04 ^= i06 ^ i12 ^ i01;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x8f1bbcdc + ((e & (unseq$78)) | ((e | a) & b)) + (i04 = (JreLShift32((unseq$79), 1)) | (JreURShift32(i04, 31)));
  jint unseq$80 = e = (JreLShift32(e, 30)) | (JreURShift32(e, 2));
  jint unseq$81 = i05 ^= i07 ^ i13 ^ i02;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x8f1bbcdc + ((d & (unseq$80)) | ((d | e) & a)) + (i05 = (JreLShift32((unseq$81), 1)) | (JreURShift32(i05, 31)));
  jint unseq$82 = d = (JreLShift32(d, 30)) | (JreURShift32(d, 2));
  jint unseq$83 = i06 ^= i08 ^ i14 ^ i03;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x8f1bbcdc + ((c & (unseq$82)) | ((c | d) & e)) + (i06 = (JreLShift32((unseq$83), 1)) | (JreURShift32(i06, 31)));
  jint unseq$84 = c = (JreLShift32(c, 30)) | (JreURShift32(c, 2));
  jint unseq$85 = i07 ^= i09 ^ i15 ^ i04;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0x8f1bbcdc + ((b & (unseq$84)) | ((b | c) & d)) + (i07 = (JreLShift32((unseq$85), 1)) | (JreURShift32(i07, 31)));
  jint unseq$86 = b = (JreLShift32(b, 30)) | (JreURShift32(b, 2));
  jint unseq$87 = i08 ^= i10 ^ i00 ^ i05;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0x8f1bbcdc + ((a & (unseq$86)) | ((a | b) & c)) + (i08 = (JreLShift32((unseq$87), 1)) | (JreURShift32(i08, 31)));
  jint unseq$88 = a = (JreLShift32(a, 30)) | (JreURShift32(a, 2));
  jint unseq$89 = i09 ^= i11 ^ i01 ^ i06;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0x8f1bbcdc + ((e & (unseq$88)) | ((e | a) & b)) + (i09 = (JreLShift32((unseq$89), 1)) | (JreURShift32(i09, 31)));
  jint unseq$90 = e = (JreLShift32(e, 30)) | (JreURShift32(e, 2));
  jint unseq$91 = i10 ^= i12 ^ i02 ^ i07;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0x8f1bbcdc + ((d & (unseq$90)) | ((d | e) & a)) + (i10 = (JreLShift32((unseq$91), 1)) | (JreURShift32(i10, 31)));
  jint unseq$92 = d = (JreLShift32(d, 30)) | (JreURShift32(d, 2));
  jint unseq$93 = i11 ^= i13 ^ i03 ^ i08;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0x8f1bbcdc + ((c & (unseq$92)) | ((c | d) & e)) + (i11 = (JreLShift32((unseq$93), 1)) | (JreURShift32(i11, 31)));
  jint unseq$94 = i12 ^= i14 ^ i04 ^ i09;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0xca62c1d6 + (b ^ (c = (JreLShift32(c, 30)) | (JreURShift32(c, 2))) ^ d) + (i12 = (JreLShift32((unseq$94), 1)) | (JreURShift32(i12, 31)));
  jint unseq$95 = i13 ^= i15 ^ i05 ^ i10;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0xca62c1d6 + (a ^ (b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c) + (i13 = (JreLShift32((unseq$95), 1)) | (JreURShift32(i13, 31)));
  jint unseq$96 = i14 ^= i00 ^ i06 ^ i11;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0xca62c1d6 + (e ^ (a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b) + (i14 = (JreLShift32((unseq$96), 1)) | (JreURShift32(i14, 31)));
  jint unseq$97 = i15 ^= i01 ^ i07 ^ i12;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0xca62c1d6 + (d ^ (e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a) + (i15 = (JreLShift32((unseq$97), 1)) | (JreURShift32(i15, 31)));
  jint unseq$98 = i00 ^= i02 ^ i08 ^ i13;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0xca62c1d6 + (c ^ (d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e) + (i00 = (JreLShift32((unseq$98), 1)) | (JreURShift32(i00, 31)));
  jint unseq$99 = i01 ^= i03 ^ i09 ^ i14;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0xca62c1d6 + (b ^ (c = (JreLShift32(c, 30)) | (JreURShift32(c, 2))) ^ d) + (i01 = (JreLShift32((unseq$99), 1)) | (JreURShift32(i01, 31)));
  jint unseq$100 = i02 ^= i04 ^ i10 ^ i15;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0xca62c1d6 + (a ^ (b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c) + (i02 = (JreLShift32((unseq$100), 1)) | (JreURShift32(i02, 31)));
  jint unseq$101 = i03 ^= i05 ^ i11 ^ i00;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0xca62c1d6 + (e ^ (a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b) + (i03 = (JreLShift32((unseq$101), 1)) | (JreURShift32(i03, 31)));
  jint unseq$102 = i04 ^= i06 ^ i12 ^ i01;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0xca62c1d6 + (d ^ (e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a) + (i04 = (JreLShift32((unseq$102), 1)) | (JreURShift32(i04, 31)));
  jint unseq$103 = i05 ^= i07 ^ i13 ^ i02;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0xca62c1d6 + (c ^ (d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e) + (i05 = (JreLShift32((unseq$103), 1)) | (JreURShift32(i05, 31)));
  jint unseq$104 = i06 ^= i08 ^ i14 ^ i03;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0xca62c1d6 + (b ^ (c = (JreLShift32(c, 30)) | (JreURShift32(c, 2))) ^ d) + (i06 = (JreLShift32((unseq$104), 1)) | (JreURShift32(i06, 31)));
  jint unseq$105 = i07 ^= i09 ^ i15 ^ i04;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0xca62c1d6 + (a ^ (b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c) + (i07 = (JreLShift32((unseq$105), 1)) | (JreURShift32(i07, 31)));
  jint unseq$106 = i08 ^= i10 ^ i00 ^ i05;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0xca62c1d6 + (e ^ (a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b) + (i08 = (JreLShift32((unseq$106), 1)) | (JreURShift32(i08, 31)));
  jint unseq$107 = i09 ^= i11 ^ i01 ^ i06;
  b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0xca62c1d6 + (d ^ (e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a) + (i09 = (JreLShift32((unseq$107), 1)) | (JreURShift32(i09, 31)));
  jint unseq$108 = i10 ^= i12 ^ i02 ^ i07;
  a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0xca62c1d6 + (c ^ (d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e) + (i10 = (JreLShift32((unseq$108), 1)) | (JreURShift32(i10, 31)));
  jint unseq$109 = i11 ^= i13 ^ i03 ^ i08;
  e += ((JreLShift32(a, 5)) | (JreURShift32(a, 27))) + (jint) 0xca62c1d6 + (b ^ (c = (JreLShift32(c, 30)) | (JreURShift32(c, 2))) ^ d) + (i11 = (JreLShift32((unseq$109), 1)) | (JreURShift32(i11, 31)));
  jint unseq$110 = i12 ^= i14 ^ i04 ^ i09;
  d += ((JreLShift32(e, 5)) | (JreURShift32(e, 27))) + (jint) 0xca62c1d6 + (a ^ (b = (JreLShift32(b, 30)) | (JreURShift32(b, 2))) ^ c) + (i12 = (JreLShift32((unseq$110), 1)) | (JreURShift32(i12, 31)));
  jint unseq$111 = i13 ^= i15 ^ i05 ^ i10;
  c += ((JreLShift32(d, 5)) | (JreURShift32(d, 27))) + (jint) 0xca62c1d6 + (e ^ (a = (JreLShift32(a, 30)) | (JreURShift32(a, 2))) ^ b) + (i13 = (JreLShift32((unseq$111), 1)) | (JreURShift32(i13, 31)));
  jint unseq$112 = i14 ^= i00 ^ i06 ^ i11;
  self->hB_ += b += ((JreLShift32(c, 5)) | (JreURShift32(c, 27))) + (jint) 0xca62c1d6 + (d ^ (e = (JreLShift32(e, 30)) | (JreURShift32(e, 2))) ^ a) + (i14 = (JreLShift32((unseq$112), 1)) | (JreURShift32(i14, 31)));
  jint unseq$113 = i15 ^= i01 ^ i07 ^ i12;
  self->hA_ += a += ((JreLShift32(b, 5)) | (JreURShift32(b, 27))) + (jint) 0xca62c1d6 + (c ^ (d = (JreLShift32(d, 30)) | (JreURShift32(d, 2))) ^ e) + (i15 = (JreLShift32((unseq$113), 1)) | (JreURShift32(i15, 31)));
  self->hE_ += e;
  self->hD_ += d;
  self->hC_ += (JreLShift32(c, 30)) | (JreURShift32(c, 2));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pCryptoSHA1)
