//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/crypto/AESEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pCryptoAESEngine")
#ifdef RESTRICT_NetI2pCryptoAESEngine
#define INCLUDE_ALL_NetI2pCryptoAESEngine 0
#else
#define INCLUDE_ALL_NetI2pCryptoAESEngine 1
#endif
#undef RESTRICT_NetI2pCryptoAESEngine

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pCryptoAESEngine_) && (INCLUDE_ALL_NetI2pCryptoAESEngine || defined(INCLUDE_NetI2pCryptoAESEngine))
#define NetI2pCryptoAESEngine_

@class IOSByteArray;
@class NetI2pDataSessionKey;
@class NetI2pI2PAppContext;
@class NetI2pUtilLog;

@interface NetI2pCryptoAESEngine : NSObject {
 @public
  NetI2pUtilLog *_log_;
  NetI2pI2PAppContext *_context_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx;

- (void)decryptWithByteArray:(IOSByteArray *)payload
                     withInt:(jint)payloadIndex
               withByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outIndex
    withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
               withByteArray:(IOSByteArray *)iv
                     withInt:(jint)length;

- (void)decryptWithByteArray:(IOSByteArray *)payload
                     withInt:(jint)payloadIndex
               withByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outIndex
    withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
               withByteArray:(IOSByteArray *)iv
                     withInt:(jint)ivOffset
                     withInt:(jint)length;

- (void)decryptBlockWithByteArray:(IOSByteArray *)payload
                          withInt:(jint)inIndex
         withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
                    withByteArray:(IOSByteArray *)rv
                          withInt:(jint)outIndex;

- (void)encryptWithByteArray:(IOSByteArray *)payload
                     withInt:(jint)payloadIndex
               withByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outIndex
    withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
               withByteArray:(IOSByteArray *)iv
                     withInt:(jint)length;

- (void)encryptWithByteArray:(IOSByteArray *)payload
                     withInt:(jint)payloadIndex
               withByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outIndex
    withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
               withByteArray:(IOSByteArray *)iv
                     withInt:(jint)ivOffset
                     withInt:(jint)length;

- (void)encryptBlockWithByteArray:(IOSByteArray *)payload
                          withInt:(jint)inIndex
         withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outIndex;

- (IOSByteArray *)safeDecryptWithByteArray:(IOSByteArray *)payload
                  withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
                             withByteArray:(IOSByteArray *)iv;

- (IOSByteArray *)safeEncryptWithByteArray:(IOSByteArray *)payload
                  withNetI2pDataSessionKey:(NetI2pDataSessionKey *)sessionKey
                             withByteArray:(IOSByteArray *)iv
                                   withInt:(jint)paddedSize;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pCryptoAESEngine)

J2OBJC_FIELD_SETTER(NetI2pCryptoAESEngine, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pCryptoAESEngine, _context_, NetI2pI2PAppContext *)

FOUNDATION_EXPORT void NetI2pCryptoAESEngine_initWithNetI2pI2PAppContext_(NetI2pCryptoAESEngine *self, NetI2pI2PAppContext *ctx);

FOUNDATION_EXPORT NetI2pCryptoAESEngine *new_NetI2pCryptoAESEngine_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pCryptoAESEngine *create_NetI2pCryptoAESEngine_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *ctx);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pCryptoAESEngine)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pCryptoAESEngine")
