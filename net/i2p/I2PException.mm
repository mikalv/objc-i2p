//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/I2PException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "net/i2p/I2PException.h"

@implementation NetI2pI2PException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pI2PException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)msg {
  NetI2pI2PException_initWithNSString_(self, msg);
  return self;
}

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  NetI2pI2PException_initWithNSString_withJavaLangThrowable_(self, msg, cause);
  return self;
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause {
  NetI2pI2PException_initWithJavaLangThrowable_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[3].selector = @selector(initWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LNSString;LJavaLangThrowable;", "LJavaLangThrowable;" };
  static const J2ObjcClassInfo _NetI2pI2PException = { "I2PException", "net.i2p", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_NetI2pI2PException;
}

@end

void NetI2pI2PException_init(NetI2pI2PException *self) {
  JavaLangException_init(self);
}

NetI2pI2PException *new_NetI2pI2PException_init() {
  J2OBJC_NEW_IMPL(NetI2pI2PException, init)
}

NetI2pI2PException *create_NetI2pI2PException_init() {
  J2OBJC_CREATE_IMPL(NetI2pI2PException, init)
}

void NetI2pI2PException_initWithNSString_(NetI2pI2PException *self, NSString *msg) {
  JavaLangException_initWithNSString_(self, msg);
}

NetI2pI2PException *new_NetI2pI2PException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(NetI2pI2PException, initWithNSString_, msg)
}

NetI2pI2PException *create_NetI2pI2PException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(NetI2pI2PException, initWithNSString_, msg)
}

void NetI2pI2PException_initWithNSString_withJavaLangThrowable_(NetI2pI2PException *self, NSString *msg, JavaLangThrowable *cause) {
  JavaLangException_initWithNSString_withJavaLangThrowable_(self, msg, cause);
}

NetI2pI2PException *new_NetI2pI2PException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(NetI2pI2PException, initWithNSString_withJavaLangThrowable_, msg, cause)
}

NetI2pI2PException *create_NetI2pI2PException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(NetI2pI2PException, initWithNSString_withJavaLangThrowable_, msg, cause)
}

void NetI2pI2PException_initWithJavaLangThrowable_(NetI2pI2PException *self, JavaLangThrowable *cause) {
  JavaLangException_initWithJavaLangThrowable_(self, cause);
}

NetI2pI2PException *new_NetI2pI2PException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(NetI2pI2PException, initWithJavaLangThrowable_, cause)
}

NetI2pI2PException *create_NetI2pI2PException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(NetI2pI2PException, initWithJavaLangThrowable_, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pI2PException)
