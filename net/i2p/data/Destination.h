//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/Destination.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataDestination")
#ifdef RESTRICT_NetI2pDataDestination
#define INCLUDE_ALL_NetI2pDataDestination 0
#else
#define INCLUDE_ALL_NetI2pDataDestination 1
#endif
#undef RESTRICT_NetI2pDataDestination

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataDestination_) && (INCLUDE_ALL_NetI2pDataDestination || defined(INCLUDE_NetI2pDataDestination))
#define NetI2pDataDestination_

#define RESTRICT_NetI2pDataKeysAndCert 1
#define INCLUDE_NetI2pDataKeysAndCert 1
#include "net/i2p/data/KeysAndCert.h"

@class IOSByteArray;
@class JavaIoInputStream;

@interface NetI2pDataDestination : NetI2pDataKeysAndCert

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)s;

+ (void)clearCache;

+ (NetI2pDataDestination *)createWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (jint)readBytesWithByteArray:(IOSByteArray *)source
                       withInt:(jint)offset;

- (jint)size;

- (NSString *)toBase32;

- (NSString *)toBase64;

- (jint)writeBytesWithByteArray:(IOSByteArray *)target
                        withInt:(jint)offset;

@end

J2OBJC_STATIC_INIT(NetI2pDataDestination)

FOUNDATION_EXPORT NetI2pDataDestination *NetI2pDataDestination_createWithJavaIoInputStream_(JavaIoInputStream *inArg);

FOUNDATION_EXPORT void NetI2pDataDestination_init(NetI2pDataDestination *self);

FOUNDATION_EXPORT NetI2pDataDestination *new_NetI2pDataDestination_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataDestination *create_NetI2pDataDestination_init(void);

FOUNDATION_EXPORT void NetI2pDataDestination_initWithNSString_(NetI2pDataDestination *self, NSString *s);

FOUNDATION_EXPORT NetI2pDataDestination *new_NetI2pDataDestination_initWithNSString_(NSString *s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataDestination *create_NetI2pDataDestination_initWithNSString_(NSString *s);

FOUNDATION_EXPORT void NetI2pDataDestination_clearCache(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataDestination)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataDestination")
