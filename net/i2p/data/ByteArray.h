//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/ByteArray.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataByteArray")
#ifdef RESTRICT_NetI2pDataByteArray
#define INCLUDE_ALL_NetI2pDataByteArray 0
#else
#define INCLUDE_ALL_NetI2pDataByteArray 1
#endif
#undef RESTRICT_NetI2pDataByteArray

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataByteArray_) && (INCLUDE_ALL_NetI2pDataByteArray || defined(INCLUDE_NetI2pDataByteArray))
#define NetI2pDataByteArray_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class IOSByteArray;

@interface NetI2pDataByteArray : NSObject < JavaIoSerializable, JavaLangComparable >

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data
                                    withInt:(jint)offset
                                    withInt:(jint)length;

- (jint)compareToWithId:(NetI2pDataByteArray *)ba;

- (jboolean)isEqual:(id)o;

- (IOSByteArray *)getData;

- (jint)getOffset;

- (jint)getValid;

- (NSUInteger)hash;

- (void)setDataWithByteArray:(IOSByteArray *)data;

- (void)setOffsetWithInt:(jint)offset;

- (void)setValidWithInt:(jint)valid;

- (NSString *)toBase64;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataByteArray)

FOUNDATION_EXPORT void NetI2pDataByteArray_init(NetI2pDataByteArray *self);

FOUNDATION_EXPORT NetI2pDataByteArray *new_NetI2pDataByteArray_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataByteArray *create_NetI2pDataByteArray_init(void);

FOUNDATION_EXPORT void NetI2pDataByteArray_initWithByteArray_(NetI2pDataByteArray *self, IOSByteArray *data);

FOUNDATION_EXPORT NetI2pDataByteArray *new_NetI2pDataByteArray_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataByteArray *create_NetI2pDataByteArray_initWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void NetI2pDataByteArray_initWithByteArray_withInt_withInt_(NetI2pDataByteArray *self, IOSByteArray *data, jint offset, jint length);

FOUNDATION_EXPORT NetI2pDataByteArray *new_NetI2pDataByteArray_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint length) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataByteArray *create_NetI2pDataByteArray_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint length);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataByteArray)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataByteArray")
