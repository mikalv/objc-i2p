//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/i2np/DeliveryInstructions.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "net/i2p/data/DataHelper.h"
#include "net/i2p/data/DataStructureImpl.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/data/SessionKey.h"
#include "net/i2p/data/TunnelId.h"
#include "net/i2p/data/i2np/DeliveryInstructions.h"

@interface NetI2pDataI2npDeliveryInstructions () {
 @public
  jint _deliveryMode_;
  NetI2pDataHash *_destinationHash_;
  NetI2pDataHash *_routerHash_;
  NetI2pDataTunnelId *_tunnelId_;
  jboolean _delayRequested_;
  jlong _delaySeconds_;
}

+ (jint)flagModeWithInt:(jint)flags;

+ (jboolean)flagDelayWithInt:(jint)flags;

- (jint)getFlags;

- (jint)getAdditionalInfoSize;

- (jint)getAdditionalInfoWithByteArray:(IOSByteArray *)rv
                               withInt:(jint)offset;

@end

J2OBJC_FIELD_SETTER(NetI2pDataI2npDeliveryInstructions, _destinationHash_, NetI2pDataHash *)
J2OBJC_FIELD_SETTER(NetI2pDataI2npDeliveryInstructions, _routerHash_, NetI2pDataHash *)
J2OBJC_FIELD_SETTER(NetI2pDataI2npDeliveryInstructions, _tunnelId_, NetI2pDataTunnelId *)

inline jint NetI2pDataI2npDeliveryInstructions_get_FLAG_MODE_LOCAL(void);
#define NetI2pDataI2npDeliveryInstructions_FLAG_MODE_LOCAL 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryInstructions, FLAG_MODE_LOCAL, jint)

inline jint NetI2pDataI2npDeliveryInstructions_get_FLAG_MODE_DESTINATION(void);
#define NetI2pDataI2npDeliveryInstructions_FLAG_MODE_DESTINATION 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryInstructions, FLAG_MODE_DESTINATION, jint)

inline jint NetI2pDataI2npDeliveryInstructions_get_FLAG_MODE_ROUTER(void);
#define NetI2pDataI2npDeliveryInstructions_FLAG_MODE_ROUTER 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryInstructions, FLAG_MODE_ROUTER, jint)

inline jint NetI2pDataI2npDeliveryInstructions_get_FLAG_MODE_TUNNEL(void);
#define NetI2pDataI2npDeliveryInstructions_FLAG_MODE_TUNNEL 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryInstructions, FLAG_MODE_TUNNEL, jint)

inline jint NetI2pDataI2npDeliveryInstructions_get_FLAG_ENCRYPTED(void);
#define NetI2pDataI2npDeliveryInstructions_FLAG_ENCRYPTED 128
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryInstructions, FLAG_ENCRYPTED, jint)

inline jint NetI2pDataI2npDeliveryInstructions_get_FLAG_MODE(void);
#define NetI2pDataI2npDeliveryInstructions_FLAG_MODE 96
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryInstructions, FLAG_MODE, jint)

inline jint NetI2pDataI2npDeliveryInstructions_get_FLAG_DELAY(void);
#define NetI2pDataI2npDeliveryInstructions_FLAG_DELAY 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryInstructions, FLAG_DELAY, jint)

__attribute__((unused)) static jint NetI2pDataI2npDeliveryInstructions_flagModeWithInt_(jint flags);

__attribute__((unused)) static jboolean NetI2pDataI2npDeliveryInstructions_flagDelayWithInt_(jint flags);

__attribute__((unused)) static jint NetI2pDataI2npDeliveryInstructions_getFlags(NetI2pDataI2npDeliveryInstructions *self);

__attribute__((unused)) static jint NetI2pDataI2npDeliveryInstructions_getAdditionalInfoSize(NetI2pDataI2npDeliveryInstructions *self);

__attribute__((unused)) static jint NetI2pDataI2npDeliveryInstructions_getAdditionalInfoWithByteArray_withInt_(NetI2pDataI2npDeliveryInstructions *self, IOSByteArray *rv, jint offset);

__attribute__((unused)) static IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$3(void);

__attribute__((unused)) static IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$4(void);

__attribute__((unused)) static IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$5(void);

__attribute__((unused)) static IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$6(void);

__attribute__((unused)) static IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$7(void);

__attribute__((unused)) static IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$8(void);

__attribute__((unused)) static IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$9(void);

__attribute__((unused)) static IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$10(void);

@interface NetI2pDataI2npDeliveryInstructions_LocalInstructions : NetI2pDataI2npDeliveryInstructions

- (instancetype)init;

- (void)setEncryptedWithBoolean:(jboolean)encrypted;

- (void)setEncryptionKeyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key;

- (jint)getDeliveryMode;

- (void)setDeliveryModeWithInt:(jint)mode;

- (void)setDestinationWithNetI2pDataHash:(NetI2pDataHash *)dest;

- (void)setRouterWithNetI2pDataHash:(NetI2pDataHash *)router;

- (void)setTunnelIdWithNetI2pDataTunnelId:(NetI2pDataTunnelId *)id_;

- (void)setDelayRequestedWithBoolean:(jboolean)req;

- (void)setDelaySecondsWithLong:(jlong)seconds;

- (jint)readBytesWithByteArray:(IOSByteArray *)data
                       withInt:(jint)offset;

- (jint)writeBytesWithByteArray:(IOSByteArray *)target
                        withInt:(jint)offset;

- (jint)getSize;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2npDeliveryInstructions_LocalInstructions)

__attribute__((unused)) static void NetI2pDataI2npDeliveryInstructions_LocalInstructions_init(NetI2pDataI2npDeliveryInstructions_LocalInstructions *self);

__attribute__((unused)) static NetI2pDataI2npDeliveryInstructions_LocalInstructions *new_NetI2pDataI2npDeliveryInstructions_LocalInstructions_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static NetI2pDataI2npDeliveryInstructions_LocalInstructions *create_NetI2pDataI2npDeliveryInstructions_LocalInstructions_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2npDeliveryInstructions_LocalInstructions)

J2OBJC_INITIALIZED_DEFN(NetI2pDataI2npDeliveryInstructions)

NetI2pDataI2npDeliveryInstructions *NetI2pDataI2npDeliveryInstructions_LOCAL;

@implementation NetI2pDataI2npDeliveryInstructions

+ (jint)DELIVERY_MODE_LOCAL {
  return NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_LOCAL;
}

+ (jint)DELIVERY_MODE_DESTINATION {
  return NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_DESTINATION;
}

+ (jint)DELIVERY_MODE_ROUTER {
  return NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_ROUTER;
}

+ (jint)DELIVERY_MODE_TUNNEL {
  return NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_TUNNEL;
}

+ (NetI2pDataI2npDeliveryInstructions *)LOCAL {
  return NetI2pDataI2npDeliveryInstructions_LOCAL;
}

+ (NetI2pDataI2npDeliveryInstructions *)createWithByteArray:(IOSByteArray *)data
                                                    withInt:(jint)offset {
  return NetI2pDataI2npDeliveryInstructions_createWithByteArray_withInt_(data, offset);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pDataI2npDeliveryInstructions_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)getEncrypted {
  return false;
}

- (void)setEncryptedWithBoolean:(jboolean)encrypted {
}

- (NetI2pDataSessionKey *)getEncryptionKey {
  return nil;
}

- (void)setEncryptionKeyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key {
}

- (jint)getDeliveryMode {
  return _deliveryMode_;
}

- (void)setDeliveryModeWithInt:(jint)mode {
  _deliveryMode_ = mode;
}

- (NetI2pDataHash *)getDestination {
  return _destinationHash_;
}

- (void)setDestinationWithNetI2pDataHash:(NetI2pDataHash *)dest {
  JreStrongAssign(&_destinationHash_, dest);
}

- (NetI2pDataHash *)getRouter {
  return _routerHash_;
}

- (void)setRouterWithNetI2pDataHash:(NetI2pDataHash *)router {
  JreStrongAssign(&_routerHash_, router);
}

- (NetI2pDataTunnelId *)getTunnelId {
  return _tunnelId_;
}

- (void)setTunnelIdWithNetI2pDataTunnelId:(NetI2pDataTunnelId *)id_ {
  JreStrongAssign(&_tunnelId_, id_);
}

- (jboolean)getDelayRequested {
  return _delayRequested_;
}

- (void)setDelayRequestedWithBoolean:(jboolean)req {
  _delayRequested_ = req;
}

- (jlong)getDelaySeconds {
  return _delaySeconds_;
}

- (void)setDelaySecondsWithLong:(jlong)seconds {
  _delaySeconds_ = seconds;
}

- (void)readBytesWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)readBytesWithByteArray:(IOSByteArray *)data
                       withInt:(jint)offset {
  jint cur = offset;
  jint flags = IOSByteArray_Get(nil_chk(data), cur) & (jint) 0xff;
  cur++;
  [self setDeliveryModeWithInt:NetI2pDataI2npDeliveryInstructions_flagModeWithInt_(flags)];
  {
    NetI2pDataHash *dh;
    NetI2pDataHash *rh;
    NetI2pDataHash *trh;
    switch (NetI2pDataI2npDeliveryInstructions_flagModeWithInt_(flags)) {
      case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_LOCAL:
      break;
      case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_DESTINATION:
      dh = NetI2pDataHash_createWithByteArray_withInt_(data, cur);
      cur += NetI2pDataHash_HASH_LENGTH;
      [self setDestinationWithNetI2pDataHash:dh];
      break;
      case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_ROUTER:
      rh = NetI2pDataHash_createWithByteArray_withInt_(data, cur);
      cur += NetI2pDataHash_HASH_LENGTH;
      [self setRouterWithNetI2pDataHash:rh];
      break;
      case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_TUNNEL:
      trh = NetI2pDataHash_createWithByteArray_withInt_(data, cur);
      cur += NetI2pDataHash_HASH_LENGTH;
      [self setRouterWithNetI2pDataHash:trh];
      [self setTunnelIdWithNetI2pDataTunnelId:create_NetI2pDataTunnelId_initWithLong_(NetI2pDataDataHelper_fromLongWithByteArray_withInt_withInt_(data, cur, 4))];
      cur += 4;
      break;
    }
  }
  if (NetI2pDataI2npDeliveryInstructions_flagDelayWithInt_(flags)) {
    jlong delay = NetI2pDataDataHelper_fromLongWithByteArray_withInt_withInt_(data, cur, 4);
    cur += 4;
    [self setDelayRequestedWithBoolean:true];
    [self setDelaySecondsWithLong:delay];
  }
  else {
    [self setDelayRequestedWithBoolean:false];
  }
  return cur - offset;
}

+ (jint)flagModeWithInt:(jint)flags {
  return NetI2pDataI2npDeliveryInstructions_flagModeWithInt_(flags);
}

+ (jboolean)flagDelayWithInt:(jint)flags {
  return NetI2pDataI2npDeliveryInstructions_flagDelayWithInt_(flags);
}

- (jint)getFlags {
  return NetI2pDataI2npDeliveryInstructions_getFlags(self);
}

- (jint)getAdditionalInfoSize {
  return NetI2pDataI2npDeliveryInstructions_getAdditionalInfoSize(self);
}

- (jint)getAdditionalInfoWithByteArray:(IOSByteArray *)rv
                               withInt:(jint)offset {
  return NetI2pDataI2npDeliveryInstructions_getAdditionalInfoWithByteArray_withInt_(self, rv, offset);
}

- (void)writeBytesWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)writeBytesWithByteArray:(IOSByteArray *)target
                        withInt:(jint)offset {
  if ((_deliveryMode_ < 0) || (_deliveryMode_ > NetI2pDataI2npDeliveryInstructions_FLAG_MODE_TUNNEL)) @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"Invalid data: mode = ", _deliveryMode_));
  jint flags = NetI2pDataI2npDeliveryInstructions_getFlags(self);
  jint origOffset = offset;
  *IOSByteArray_GetRef(nil_chk(target), offset++) = (jbyte) flags;
  offset += NetI2pDataI2npDeliveryInstructions_getAdditionalInfoWithByteArray_withInt_(self, target, offset);
  return offset - origOffset;
}

- (jint)getSize {
  return 1 + NetI2pDataI2npDeliveryInstructions_getAdditionalInfoSize(self);
}

- (jboolean)isEqual:(id)obj {
  if ((obj == nil) || !([obj isKindOfClass:[NetI2pDataI2npDeliveryInstructions class]])) return false;
  NetI2pDataI2npDeliveryInstructions *instr = (NetI2pDataI2npDeliveryInstructions *) cast_chk(obj, [NetI2pDataI2npDeliveryInstructions class]);
  return ([self getDelayRequested] == [((NetI2pDataI2npDeliveryInstructions *) nil_chk(instr)) getDelayRequested]) && ([self getDelaySeconds] == [instr getDelaySeconds]) && ([self getDeliveryMode] == [instr getDeliveryMode]) && NetI2pDataDataHelper_eqWithId_withId_([self getDestination], [instr getDestination]) && NetI2pDataDataHelper_eqWithId_withId_([self getEncryptionKey], [instr getEncryptionKey]) && NetI2pDataDataHelper_eqWithId_withId_([self getRouter], [instr getRouter]) && NetI2pDataDataHelper_eqWithId_withId_([self getTunnelId], [instr getTunnelId]);
}

- (NSUInteger)hash {
  return (jint) [self getDelaySeconds] + [self getDeliveryMode] + NetI2pDataDataHelper_hashCodeWithId_([self getDestination]) + NetI2pDataDataHelper_hashCodeWithId_([self getEncryptionKey]) + NetI2pDataDataHelper_hashCodeWithId_([self getRouter]) + NetI2pDataDataHelper_hashCodeWithId_([self getTunnelId]);
}

- (NSString *)description {
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(128);
  [buf appendWithNSString:@"[DeliveryInstructions: "];
  [buf appendWithNSString:@"\n\tDelivery mode: "];
  switch ([self getDeliveryMode]) {
    case NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_LOCAL:
    [buf appendWithNSString:@"local"];
    break;
    case NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_DESTINATION:
    [buf appendWithNSString:@"destination"];
    break;
    case NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_ROUTER:
    [buf appendWithNSString:@"router"];
    break;
    case NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_TUNNEL:
    [buf appendWithNSString:@"tunnel"];
    break;
  }
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tDelay requested: "])) appendWithBoolean:[self getDelayRequested]];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tDelay seconds: "])) appendWithLong:[self getDelaySeconds]];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tDestination: "])) appendWithId:[self getDestination]];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tEncryption key: "])) appendWithId:[self getEncryptionKey]];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tRouter: "])) appendWithId:[self getRouter]];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tTunnelId: "])) appendWithId:[self getTunnelId]];
  return [buf description];
}

- (void)dealloc {
  RELEASE_(_destinationHash_);
  RELEASE_(_routerHash_);
  RELEASE_(_tunnelId_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNetI2pDataI2npDeliveryInstructions;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, 6, -1 },
    { NULL, "LNetI2pDataSessionKey;", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, 10, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataHash;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataHash;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 14, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataTunnelId;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, 18, -1 },
    { NULL, "V", 0x1, 19, 5, -1, -1, 20, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, 21, -1 },
    { NULL, "V", 0x1, 22, 23, -1, -1, 24, -1 },
    { NULL, "V", 0x1, 25, 26, -1, -1, 27, -1 },
    { NULL, "I", 0x1, 25, 1, 2, -1, -1, -1 },
    { NULL, "I", 0xa, 28, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 29, 12, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 30, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 32, -1, -1, 33, -1 },
    { NULL, "I", 0x1, 31, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 34, 35, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 36, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 37, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(createWithByteArray:withInt:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(getEncrypted);
  methods[3].selector = @selector(setEncryptedWithBoolean:);
  methods[4].selector = @selector(getEncryptionKey);
  methods[5].selector = @selector(setEncryptionKeyWithNetI2pDataSessionKey:);
  methods[6].selector = @selector(getDeliveryMode);
  methods[7].selector = @selector(setDeliveryModeWithInt:);
  methods[8].selector = @selector(getDestination);
  methods[9].selector = @selector(setDestinationWithNetI2pDataHash:);
  methods[10].selector = @selector(getRouter);
  methods[11].selector = @selector(setRouterWithNetI2pDataHash:);
  methods[12].selector = @selector(getTunnelId);
  methods[13].selector = @selector(setTunnelIdWithNetI2pDataTunnelId:);
  methods[14].selector = @selector(getDelayRequested);
  methods[15].selector = @selector(setDelayRequestedWithBoolean:);
  methods[16].selector = @selector(getDelaySeconds);
  methods[17].selector = @selector(setDelaySecondsWithLong:);
  methods[18].selector = @selector(readBytesWithJavaIoInputStream:);
  methods[19].selector = @selector(readBytesWithByteArray:withInt:);
  methods[20].selector = @selector(flagModeWithInt:);
  methods[21].selector = @selector(flagDelayWithInt:);
  methods[22].selector = @selector(getFlags);
  methods[23].selector = @selector(getAdditionalInfoSize);
  methods[24].selector = @selector(getAdditionalInfoWithByteArray:withInt:);
  methods[25].selector = @selector(writeBytesWithJavaIoOutputStream:);
  methods[26].selector = @selector(writeBytesWithByteArray:withInt:);
  methods[27].selector = @selector(getSize);
  methods[28].selector = @selector(isEqual:);
  methods[29].selector = @selector(hash);
  methods[30].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_deliveryMode_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "DELIVERY_MODE_LOCAL", "I", .constantValue.asInt = NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_LOCAL, 0x19, -1, -1, -1, -1 },
    { "DELIVERY_MODE_DESTINATION", "I", .constantValue.asInt = NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_DESTINATION, 0x19, -1, -1, -1, -1 },
    { "DELIVERY_MODE_ROUTER", "I", .constantValue.asInt = NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_ROUTER, 0x19, -1, -1, -1, -1 },
    { "DELIVERY_MODE_TUNNEL", "I", .constantValue.asInt = NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_TUNNEL, 0x19, -1, -1, -1, -1 },
    { "_destinationHash_", "LNetI2pDataHash;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_routerHash_", "LNetI2pDataHash;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_tunnelId_", "LNetI2pDataTunnelId;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_delayRequested_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_delaySeconds_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "FLAG_MODE_LOCAL", "I", .constantValue.asInt = NetI2pDataI2npDeliveryInstructions_FLAG_MODE_LOCAL, 0x1a, -1, -1, -1, -1 },
    { "FLAG_MODE_DESTINATION", "I", .constantValue.asInt = NetI2pDataI2npDeliveryInstructions_FLAG_MODE_DESTINATION, 0x1a, -1, -1, -1, -1 },
    { "FLAG_MODE_ROUTER", "I", .constantValue.asInt = NetI2pDataI2npDeliveryInstructions_FLAG_MODE_ROUTER, 0x1a, -1, -1, -1, -1 },
    { "FLAG_MODE_TUNNEL", "I", .constantValue.asInt = NetI2pDataI2npDeliveryInstructions_FLAG_MODE_TUNNEL, 0x1a, -1, -1, -1, -1 },
    { "FLAG_ENCRYPTED", "I", .constantValue.asInt = NetI2pDataI2npDeliveryInstructions_FLAG_ENCRYPTED, 0x1a, -1, -1, -1, 38 },
    { "FLAG_MODE", "I", .constantValue.asInt = NetI2pDataI2npDeliveryInstructions_FLAG_MODE, 0x1a, -1, -1, -1, -1 },
    { "FLAG_DELAY", "I", .constantValue.asInt = NetI2pDataI2npDeliveryInstructions_FLAG_DELAY, 0x1a, -1, -1, -1, -1 },
    { "LOCAL", "LNetI2pDataI2npDeliveryInstructions;", .constantValue.asLong = 0, 0x19, -1, 39, -1, -1 },
  };
  static const void *ptrTable[] = { "create", "[BI", "LNetI2pDataDataFormatException;", (void *)&NetI2pDataI2npDeliveryInstructions__Annotations$0, "setEncrypted", "Z", (void *)&NetI2pDataI2npDeliveryInstructions__Annotations$1, (void *)&NetI2pDataI2npDeliveryInstructions__Annotations$2, "setEncryptionKey", "LNetI2pDataSessionKey;", (void *)&NetI2pDataI2npDeliveryInstructions__Annotations$3, "setDeliveryMode", "I", "setDestination", "LNetI2pDataHash;", "setRouter", "setTunnelId", "LNetI2pDataTunnelId;", (void *)&NetI2pDataI2npDeliveryInstructions__Annotations$4, "setDelayRequested", (void *)&NetI2pDataI2npDeliveryInstructions__Annotations$5, (void *)&NetI2pDataI2npDeliveryInstructions__Annotations$6, "setDelaySeconds", "J", (void *)&NetI2pDataI2npDeliveryInstructions__Annotations$7, "readBytes", "LJavaIoInputStream;", (void *)&NetI2pDataI2npDeliveryInstructions__Annotations$8, "flagMode", "flagDelay", "getAdditionalInfo", "writeBytes", "LJavaIoOutputStream;", (void *)&NetI2pDataI2npDeliveryInstructions__Annotations$9, "equals", "LNSObject;", "hashCode", "toString", (void *)&NetI2pDataI2npDeliveryInstructions__Annotations$10, &NetI2pDataI2npDeliveryInstructions_LOCAL, "LNetI2pDataI2npDeliveryInstructions_LocalInstructions;" };
  static const J2ObjcClassInfo _NetI2pDataI2npDeliveryInstructions = { "DeliveryInstructions", "net.i2p.data.i2np", ptrTable, methods, fields, 7, 0x1, 31, 18, -1, 40, -1, -1, -1 };
  return &_NetI2pDataI2npDeliveryInstructions;
}

+ (void)initialize {
  if (self == [NetI2pDataI2npDeliveryInstructions class]) {
    JreStrongAssignAndConsume(&NetI2pDataI2npDeliveryInstructions_LOCAL, new_NetI2pDataI2npDeliveryInstructions_LocalInstructions_init());
    J2OBJC_SET_INITIALIZED(NetI2pDataI2npDeliveryInstructions)
  }
}

@end

NetI2pDataI2npDeliveryInstructions *NetI2pDataI2npDeliveryInstructions_createWithByteArray_withInt_(IOSByteArray *data, jint offset) {
  NetI2pDataI2npDeliveryInstructions_initialize();
  if (IOSByteArray_Get(nil_chk(data), offset) == 0) return NetI2pDataI2npDeliveryInstructions_LOCAL;
  NetI2pDataI2npDeliveryInstructions *rv = create_NetI2pDataI2npDeliveryInstructions_init();
  [rv readBytesWithByteArray:data withInt:offset];
  return rv;
}

void NetI2pDataI2npDeliveryInstructions_init(NetI2pDataI2npDeliveryInstructions *self) {
  NetI2pDataDataStructureImpl_init(self);
  self->_deliveryMode_ = -1;
}

NetI2pDataI2npDeliveryInstructions *new_NetI2pDataI2npDeliveryInstructions_init() {
  J2OBJC_NEW_IMPL(NetI2pDataI2npDeliveryInstructions, init)
}

NetI2pDataI2npDeliveryInstructions *create_NetI2pDataI2npDeliveryInstructions_init() {
  J2OBJC_CREATE_IMPL(NetI2pDataI2npDeliveryInstructions, init)
}

jint NetI2pDataI2npDeliveryInstructions_flagModeWithInt_(jint flags) {
  NetI2pDataI2npDeliveryInstructions_initialize();
  jint v = flags & NetI2pDataI2npDeliveryInstructions_FLAG_MODE;
  JreURShiftAssignInt(&v, 5);
  return v;
}

jboolean NetI2pDataI2npDeliveryInstructions_flagDelayWithInt_(jint flags) {
  NetI2pDataI2npDeliveryInstructions_initialize();
  return (0 != (flags & NetI2pDataI2npDeliveryInstructions_FLAG_DELAY));
}

jint NetI2pDataI2npDeliveryInstructions_getFlags(NetI2pDataI2npDeliveryInstructions *self) {
  jint val = 0;
  switch ([self getDeliveryMode]) {
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_LOCAL:
    break;
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_DESTINATION:
    val = JreLShift32(NetI2pDataI2npDeliveryInstructions_FLAG_MODE_DESTINATION, 5);
    break;
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_ROUTER:
    val = JreLShift32(NetI2pDataI2npDeliveryInstructions_FLAG_MODE_ROUTER, 5);
    break;
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_TUNNEL:
    val = JreLShift32(NetI2pDataI2npDeliveryInstructions_FLAG_MODE_TUNNEL, 5);
    break;
  }
  if ([self getDelayRequested]) val |= NetI2pDataI2npDeliveryInstructions_FLAG_DELAY;
  return val;
}

jint NetI2pDataI2npDeliveryInstructions_getAdditionalInfoSize(NetI2pDataI2npDeliveryInstructions *self) {
  jint additionalSize = 0;
  switch ([self getDeliveryMode]) {
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_LOCAL:
    break;
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_DESTINATION:
    if (self->_destinationHash_ == nil) @throw create_JavaLangIllegalStateException_initWithNSString_(@"Destination hash is not set");
    additionalSize += NetI2pDataHash_HASH_LENGTH;
    break;
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_ROUTER:
    if (self->_routerHash_ == nil) @throw create_JavaLangIllegalStateException_initWithNSString_(@"Router hash is not set");
    additionalSize += NetI2pDataHash_HASH_LENGTH;
    break;
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_TUNNEL:
    if ((self->_routerHash_ == nil) || (self->_tunnelId_ == nil)) @throw create_JavaLangIllegalStateException_initWithNSString_(@"Router hash or tunnel ID is not set");
    additionalSize += NetI2pDataHash_HASH_LENGTH;
    additionalSize += 4;
    break;
  }
  if ([self getDelayRequested]) {
    additionalSize += 4;
  }
  return additionalSize;
}

jint NetI2pDataI2npDeliveryInstructions_getAdditionalInfoWithByteArray_withInt_(NetI2pDataI2npDeliveryInstructions *self, IOSByteArray *rv, jint offset) {
  jint origOffset = offset;
  switch ([self getDeliveryMode]) {
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_LOCAL:
    break;
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_DESTINATION:
    if (self->_destinationHash_ == nil) @throw create_JavaLangIllegalStateException_initWithNSString_(@"Destination hash is not set");
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_([self->_destinationHash_ getData], 0, rv, offset, NetI2pDataHash_HASH_LENGTH);
    offset += NetI2pDataHash_HASH_LENGTH;
    break;
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_ROUTER:
    if (self->_routerHash_ == nil) @throw create_JavaLangIllegalStateException_initWithNSString_(@"Router hash is not set");
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_([self->_routerHash_ getData], 0, rv, offset, NetI2pDataHash_HASH_LENGTH);
    offset += NetI2pDataHash_HASH_LENGTH;
    break;
    case NetI2pDataI2npDeliveryInstructions_FLAG_MODE_TUNNEL:
    if ((self->_routerHash_ == nil) || (self->_tunnelId_ == nil)) @throw create_JavaLangIllegalStateException_initWithNSString_(@"Router hash or tunnel ID is not set");
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_([((NetI2pDataHash *) nil_chk(self->_routerHash_)) getData], 0, rv, offset, NetI2pDataHash_HASH_LENGTH);
    offset += NetI2pDataHash_HASH_LENGTH;
    NetI2pDataDataHelper_toLongWithByteArray_withInt_withInt_withLong_(rv, offset, 4, [((NetI2pDataTunnelId *) nil_chk(self->_tunnelId_)) getTunnelId]);
    offset += 4;
    break;
  }
  if ([self getDelayRequested]) {
    NetI2pDataDataHelper_toLongWithByteArray_withInt_withInt_withLong_(rv, offset, 4, [self getDelaySeconds]);
    offset += 4;
  }
  else {
  }
  return offset - origOffset;
}

IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pDataI2npDeliveryInstructions__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pDataI2npDeliveryInstructions)

@implementation NetI2pDataI2npDeliveryInstructions_LocalInstructions

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pDataI2npDeliveryInstructions_LocalInstructions_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setEncryptedWithBoolean:(jboolean)encrypted {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"immutable");
}

- (void)setEncryptionKeyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"immutable");
}

- (jint)getDeliveryMode {
  return NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_LOCAL;
}

- (void)setDeliveryModeWithInt:(jint)mode {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"immutable");
}

- (void)setDestinationWithNetI2pDataHash:(NetI2pDataHash *)dest {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"immutable");
}

- (void)setRouterWithNetI2pDataHash:(NetI2pDataHash *)router {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"immutable");
}

- (void)setTunnelIdWithNetI2pDataTunnelId:(NetI2pDataTunnelId *)id_ {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"immutable");
}

- (void)setDelayRequestedWithBoolean:(jboolean)req {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"immutable");
}

- (void)setDelaySecondsWithLong:(jlong)seconds {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"immutable");
}

- (jint)readBytesWithByteArray:(IOSByteArray *)data
                       withInt:(jint)offset {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"immutable");
}

- (jint)writeBytesWithByteArray:(IOSByteArray *)target
                        withInt:(jint)offset {
  *IOSByteArray_GetRef(nil_chk(target), offset) = 0;
  return 1;
}

- (jint)getSize {
  return 1;
}

- (NSString *)description {
  return @"[DeliveryInstructions: \n\tDelivery mode: local]";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 14, 15, 16, -1, -1, -1 },
    { NULL, "I", 0x1, 17, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 18, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setEncryptedWithBoolean:);
  methods[2].selector = @selector(setEncryptionKeyWithNetI2pDataSessionKey:);
  methods[3].selector = @selector(getDeliveryMode);
  methods[4].selector = @selector(setDeliveryModeWithInt:);
  methods[5].selector = @selector(setDestinationWithNetI2pDataHash:);
  methods[6].selector = @selector(setRouterWithNetI2pDataHash:);
  methods[7].selector = @selector(setTunnelIdWithNetI2pDataTunnelId:);
  methods[8].selector = @selector(setDelayRequestedWithBoolean:);
  methods[9].selector = @selector(setDelaySecondsWithLong:);
  methods[10].selector = @selector(readBytesWithByteArray:withInt:);
  methods[11].selector = @selector(writeBytesWithByteArray:withInt:);
  methods[12].selector = @selector(getSize);
  methods[13].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setEncrypted", "Z", "setEncryptionKey", "LNetI2pDataSessionKey;", "setDeliveryMode", "I", "setDestination", "LNetI2pDataHash;", "setRouter", "setTunnelId", "LNetI2pDataTunnelId;", "setDelayRequested", "setDelaySeconds", "J", "readBytes", "[BI", "LNetI2pDataDataFormatException;", "writeBytes", "toString", "LNetI2pDataI2npDeliveryInstructions;" };
  static const J2ObjcClassInfo _NetI2pDataI2npDeliveryInstructions_LocalInstructions = { "LocalInstructions", "net.i2p.data.i2np", ptrTable, methods, NULL, 7, 0x1a, 14, 0, 19, -1, -1, -1, -1 };
  return &_NetI2pDataI2npDeliveryInstructions_LocalInstructions;
}

@end

void NetI2pDataI2npDeliveryInstructions_LocalInstructions_init(NetI2pDataI2npDeliveryInstructions_LocalInstructions *self) {
  NetI2pDataI2npDeliveryInstructions_init(self);
}

NetI2pDataI2npDeliveryInstructions_LocalInstructions *new_NetI2pDataI2npDeliveryInstructions_LocalInstructions_init() {
  J2OBJC_NEW_IMPL(NetI2pDataI2npDeliveryInstructions_LocalInstructions, init)
}

NetI2pDataI2npDeliveryInstructions_LocalInstructions *create_NetI2pDataI2npDeliveryInstructions_LocalInstructions_init() {
  J2OBJC_CREATE_IMPL(NetI2pDataI2npDeliveryInstructions_LocalInstructions, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pDataI2npDeliveryInstructions_LocalInstructions)
