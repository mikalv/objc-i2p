//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/i2np/I2NPMessageImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataI2npI2NPMessageImpl")
#ifdef RESTRICT_NetI2pDataI2npI2NPMessageImpl
#define INCLUDE_ALL_NetI2pDataI2npI2NPMessageImpl 0
#else
#define INCLUDE_ALL_NetI2pDataI2npI2NPMessageImpl 1
#endif
#undef RESTRICT_NetI2pDataI2npI2NPMessageImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataI2npI2NPMessageImpl_) && (INCLUDE_ALL_NetI2pDataI2npI2NPMessageImpl || defined(INCLUDE_NetI2pDataI2npI2NPMessageImpl))
#define NetI2pDataI2npI2NPMessageImpl_

#define RESTRICT_NetI2pDataDataStructureImpl 1
#define INCLUDE_NetI2pDataDataStructureImpl 1
#include "net/i2p/data/DataStructureImpl.h"

#define RESTRICT_NetI2pDataI2npI2NPMessage 1
#define INCLUDE_NetI2pDataI2npI2NPMessage 1
#include "net/i2p/data/i2np/I2NPMessage.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class NetI2pDataI2npI2NPMessageHandler;
@class NetI2pI2PAppContext;
@class NetI2pUtilLog;
@protocol NetI2pDataI2npI2NPMessageImpl_Builder;

@interface NetI2pDataI2npI2NPMessageImpl : NetI2pDataDataStructureImpl < NetI2pDataI2npI2NPMessage > {
 @public
  NetI2pUtilLog *_log_;
  NetI2pI2PAppContext *_context_;
  jlong _expiration_;
  jlong _uniqueId_;
}
@property (readonly, class) jlong DEFAULT_EXPIRATION_MS NS_SWIFT_NAME(DEFAULT_EXPIRATION_MS);
@property (readonly, class) jint CHECKSUM_LENGTH NS_SWIFT_NAME(CHECKSUM_LENGTH);
@property (readonly, class) jint HEADER_LENGTH NS_SWIFT_NAME(HEADER_LENGTH);

+ (jlong)DEFAULT_EXPIRATION_MS;

+ (jint)CHECKSUM_LENGTH;

+ (jint)HEADER_LENGTH;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

+ (id<NetI2pDataI2npI2NPMessage>)createMessageWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context
                                                              withInt:(jint)type;

+ (id<NetI2pDataI2npI2NPMessage>)fromRawByteArrayWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                                           withByteArray:(IOSByteArray *)buffer
                                                                 withInt:(jint)offset
                                                                 withInt:(jint)len
                                    withNetI2pDataI2npI2NPMessageHandler:(NetI2pDataI2npI2NPMessageHandler *)handler;

+ (id<NetI2pDataI2npI2NPMessage>)fromRawByteArrayNTCP2WithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                                                withByteArray:(IOSByteArray *)buffer
                                                                      withInt:(jint)offset
                                                                      withInt:(jint)len
                                         withNetI2pDataI2npI2NPMessageHandler:(NetI2pDataI2npI2NPMessageHandler *)handler;

- (jlong)getMessageExpiration;

- (jint)getMessageSize;

- (jint)getRawMessageSize;

- (jlong)getUniqueId;

- (jint)readBytesWithByteArray:(IOSByteArray *)data
                       withInt:(jint)type
                       withInt:(jint)offset;

- (jint)readBytesWithByteArray:(IOSByteArray *)data
                       withInt:(jint)type
                       withInt:(jint)offset
                       withInt:(jint)maxLen;

- (void)readBytesWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (void)readMessageWithByteArray:(IOSByteArray *)data
                         withInt:(jint)offset
                         withInt:(jint)dataSize
                         withInt:(jint)type
withNetI2pDataI2npI2NPMessageHandler:(NetI2pDataI2npI2NPMessageHandler *)handler;

+ (void)registerBuilderWithNetI2pDataI2npI2NPMessageImpl_Builder:(id<NetI2pDataI2npI2NPMessageImpl_Builder>)builder
                                                         withInt:(jint)type;

- (void)setMessageExpirationWithLong:(jlong)exp;

- (void)setUniqueIdWithLong:(jlong)id_;

- (IOSByteArray *)toByteArray;

- (jint)toByteArrayWithByteArray:(IOSByteArray *)buffer;

- (jint)toByteArrayWithByteArray:(IOSByteArray *)buffer
                         withInt:(jint)off;

- (jint)toRawByteArrayWithByteArray:(IOSByteArray *)buffer;

- (jint)toRawByteArrayNTCP2WithByteArray:(IOSByteArray *)buffer
                                 withInt:(jint)off;

- (void)writeBytesWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

#pragma mark Protected

- (jint)calculateWrittenLength;

- (jint)writeMessageBodyWithByteArray:(IOSByteArray *)outArg
                              withInt:(jint)curIndex;

@end

J2OBJC_STATIC_INIT(NetI2pDataI2npI2NPMessageImpl)

J2OBJC_FIELD_SETTER(NetI2pDataI2npI2NPMessageImpl, _log_, NetI2pUtilLog *)
J2OBJC_FIELD_SETTER(NetI2pDataI2npI2NPMessageImpl, _context_, NetI2pI2PAppContext *)

inline jlong NetI2pDataI2npI2NPMessageImpl_get_DEFAULT_EXPIRATION_MS(void);
#define NetI2pDataI2npI2NPMessageImpl_DEFAULT_EXPIRATION_MS 60000LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npI2NPMessageImpl, DEFAULT_EXPIRATION_MS, jlong)

inline jint NetI2pDataI2npI2NPMessageImpl_get_CHECKSUM_LENGTH(void);
#define NetI2pDataI2npI2NPMessageImpl_CHECKSUM_LENGTH 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npI2NPMessageImpl, CHECKSUM_LENGTH, jint)

inline jint NetI2pDataI2npI2NPMessageImpl_get_HEADER_LENGTH(void);
#define NetI2pDataI2npI2NPMessageImpl_HEADER_LENGTH 16
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npI2NPMessageImpl, HEADER_LENGTH, jint)

FOUNDATION_EXPORT void NetI2pDataI2npI2NPMessageImpl_registerBuilderWithNetI2pDataI2npI2NPMessageImpl_Builder_withInt_(id<NetI2pDataI2npI2NPMessageImpl_Builder> builder, jint type);

FOUNDATION_EXPORT void NetI2pDataI2npI2NPMessageImpl_initWithNetI2pI2PAppContext_(NetI2pDataI2npI2NPMessageImpl *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT id<NetI2pDataI2npI2NPMessage> NetI2pDataI2npI2NPMessageImpl_fromRawByteArrayWithNetI2pI2PAppContext_withByteArray_withInt_withInt_withNetI2pDataI2npI2NPMessageHandler_(NetI2pI2PAppContext *ctx, IOSByteArray *buffer, jint offset, jint len, NetI2pDataI2npI2NPMessageHandler *handler);

FOUNDATION_EXPORT id<NetI2pDataI2npI2NPMessage> NetI2pDataI2npI2NPMessageImpl_fromRawByteArrayNTCP2WithNetI2pI2PAppContext_withByteArray_withInt_withInt_withNetI2pDataI2npI2NPMessageHandler_(NetI2pI2PAppContext *ctx, IOSByteArray *buffer, jint offset, jint len, NetI2pDataI2npI2NPMessageHandler *handler);

FOUNDATION_EXPORT id<NetI2pDataI2npI2NPMessage> NetI2pDataI2npI2NPMessageImpl_createMessageWithNetI2pI2PAppContext_withInt_(NetI2pI2PAppContext *context, jint type);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2npI2NPMessageImpl)

#endif

#if !defined (NetI2pDataI2npI2NPMessageImpl_Builder_) && (INCLUDE_ALL_NetI2pDataI2npI2NPMessageImpl || defined(INCLUDE_NetI2pDataI2npI2NPMessageImpl_Builder))
#define NetI2pDataI2npI2NPMessageImpl_Builder_

@class NetI2pI2PAppContext;
@protocol NetI2pDataI2npI2NPMessage;

@protocol NetI2pDataI2npI2NPMessageImpl_Builder < JavaObject >

- (id<NetI2pDataI2npI2NPMessage>)buildWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2npI2NPMessageImpl_Builder)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2npI2NPMessageImpl_Builder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataI2npI2NPMessageImpl")
