//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/i2np/BuildResponseRecord.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataI2npBuildResponseRecord")
#ifdef RESTRICT_NetI2pDataI2npBuildResponseRecord
#define INCLUDE_ALL_NetI2pDataI2npBuildResponseRecord 0
#else
#define INCLUDE_ALL_NetI2pDataI2npBuildResponseRecord 1
#endif
#undef RESTRICT_NetI2pDataI2npBuildResponseRecord

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataI2npBuildResponseRecord_) && (INCLUDE_ALL_NetI2pDataI2npBuildResponseRecord || defined(INCLUDE_NetI2pDataI2npBuildResponseRecord))
#define NetI2pDataI2npBuildResponseRecord_

@class IOSByteArray;
@class NetI2pDataI2npEncryptedBuildRecord;
@class NetI2pDataSessionKey;
@class NetI2pI2PAppContext;

@interface NetI2pDataI2npBuildResponseRecord : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (NetI2pDataI2npEncryptedBuildRecord *)createWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                                              withInt:(jint)status
                                             withNetI2pDataSessionKey:(NetI2pDataSessionKey *)replyKey
                                                        withByteArray:(IOSByteArray *)replyIV
                                                             withLong:(jlong)responseMessageId;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2npBuildResponseRecord)

FOUNDATION_EXPORT void NetI2pDataI2npBuildResponseRecord_init(NetI2pDataI2npBuildResponseRecord *self);

FOUNDATION_EXPORT NetI2pDataI2npBuildResponseRecord *new_NetI2pDataI2npBuildResponseRecord_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2npBuildResponseRecord *create_NetI2pDataI2npBuildResponseRecord_init(void);

FOUNDATION_EXPORT NetI2pDataI2npEncryptedBuildRecord *NetI2pDataI2npBuildResponseRecord_createWithNetI2pI2PAppContext_withInt_withNetI2pDataSessionKey_withByteArray_withLong_(NetI2pI2PAppContext *ctx, jint status, NetI2pDataSessionKey *replyKey, IOSByteArray *replyIV, jlong responseMessageId);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2npBuildResponseRecord)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataI2npBuildResponseRecord")
