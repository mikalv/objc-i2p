//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/i2np/DatabaseLookupMessage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataI2npDatabaseLookupMessage")
#ifdef RESTRICT_NetI2pDataI2npDatabaseLookupMessage
#define INCLUDE_ALL_NetI2pDataI2npDatabaseLookupMessage 0
#else
#define INCLUDE_ALL_NetI2pDataI2npDatabaseLookupMessage 1
#endif
#undef RESTRICT_NetI2pDataI2npDatabaseLookupMessage

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataI2npDatabaseLookupMessage_) && (INCLUDE_ALL_NetI2pDataI2npDatabaseLookupMessage || defined(INCLUDE_NetI2pDataI2npDatabaseLookupMessage))
#define NetI2pDataI2npDatabaseLookupMessage_

#define RESTRICT_NetI2pDataI2npFastI2NPMessageImpl 1
#define INCLUDE_NetI2pDataI2npFastI2NPMessageImpl 1
#include "net/i2p/data/i2np/FastI2NPMessageImpl.h"

@class IOSByteArray;
@class NetI2pDataHash;
@class NetI2pDataI2npDatabaseLookupMessage_Type;
@class NetI2pDataRouterRouterInfo;
@class NetI2pDataSessionKey;
@class NetI2pDataSessionTag;
@class NetI2pDataTunnelId;
@class NetI2pI2PAppContext;
@protocol JavaUtilCollection;
@protocol JavaUtilSet;

@interface NetI2pDataI2npDatabaseLookupMessage : NetI2pDataI2npFastI2NPMessageImpl
@property (readonly, class) jint MESSAGE_TYPE NS_SWIFT_NAME(MESSAGE_TYPE);

+ (jint)MESSAGE_TYPE;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context
                                          withBoolean:(jboolean)locallyCreated;

- (void)addDontIncludePeerWithNetI2pDataHash:(NetI2pDataHash *)peer;

- (void)addDontIncludePeersWithJavaUtilCollection:(id<JavaUtilCollection>)peers;

- (jboolean)isEqual:(id)object;

- (id<JavaUtilSet>)getDontIncludePeers;

- (NetI2pDataHash *)getFrom;

- (NetI2pDataSessionKey *)getReplyKey;

- (NetI2pDataSessionTag *)getReplyTag;

- (NetI2pDataTunnelId *)getReplyTunnel;

- (NetI2pDataHash *)getSearchKey;

- (NetI2pDataI2npDatabaseLookupMessage_Type *)getSearchType;

- (jint)getType;

- (NSUInteger)hash;

- (void)readMessageWithByteArray:(IOSByteArray *)data
                         withInt:(jint)offset
                         withInt:(jint)dataSize
                         withInt:(jint)type;

- (void)setDontIncludePeersWithJavaUtilCollection:(id<JavaUtilCollection>)peers;

- (void)setFromWithNetI2pDataHash:(NetI2pDataHash *)from;

- (void)setReplySessionWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)encryptKey
                       withNetI2pDataSessionTag:(NetI2pDataSessionTag *)encryptTag;

- (void)setReplyTunnelWithNetI2pDataTunnelId:(NetI2pDataTunnelId *)replyTunnel;

- (void)setSearchKeyWithNetI2pDataHash:(NetI2pDataHash *)key;

- (void)setSearchTypeWithNetI2pDataI2npDatabaseLookupMessage_Type:(NetI2pDataI2npDatabaseLookupMessage_Type *)type;

+ (jboolean)supportsEncryptedRepliesWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)to;

- (NSString *)description;

#pragma mark Protected

- (jint)calculateWrittenLength;

- (jint)writeMessageBodyWithByteArray:(IOSByteArray *)outArg
                              withInt:(jint)curIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2npDatabaseLookupMessage)

inline jint NetI2pDataI2npDatabaseLookupMessage_get_MESSAGE_TYPE(void);
#define NetI2pDataI2npDatabaseLookupMessage_MESSAGE_TYPE 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDatabaseLookupMessage, MESSAGE_TYPE, jint)

FOUNDATION_EXPORT void NetI2pDataI2npDatabaseLookupMessage_initWithNetI2pI2PAppContext_(NetI2pDataI2npDatabaseLookupMessage *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pDataI2npDatabaseLookupMessage *new_NetI2pDataI2npDatabaseLookupMessage_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2npDatabaseLookupMessage *create_NetI2pDataI2npDatabaseLookupMessage_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

FOUNDATION_EXPORT void NetI2pDataI2npDatabaseLookupMessage_initWithNetI2pI2PAppContext_withBoolean_(NetI2pDataI2npDatabaseLookupMessage *self, NetI2pI2PAppContext *context, jboolean locallyCreated);

FOUNDATION_EXPORT NetI2pDataI2npDatabaseLookupMessage *new_NetI2pDataI2npDatabaseLookupMessage_initWithNetI2pI2PAppContext_withBoolean_(NetI2pI2PAppContext *context, jboolean locallyCreated) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2npDatabaseLookupMessage *create_NetI2pDataI2npDatabaseLookupMessage_initWithNetI2pI2PAppContext_withBoolean_(NetI2pI2PAppContext *context, jboolean locallyCreated);

FOUNDATION_EXPORT jboolean NetI2pDataI2npDatabaseLookupMessage_supportsEncryptedRepliesWithNetI2pDataRouterRouterInfo_(NetI2pDataRouterRouterInfo *to);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2npDatabaseLookupMessage)

#endif

#if !defined (NetI2pDataI2npDatabaseLookupMessage_Type_) && (INCLUDE_ALL_NetI2pDataI2npDatabaseLookupMessage || defined(INCLUDE_NetI2pDataI2npDatabaseLookupMessage_Type))
#define NetI2pDataI2npDatabaseLookupMessage_Type_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pDataI2npDatabaseLookupMessage_Type_Enum) {
  NetI2pDataI2npDatabaseLookupMessage_Type_Enum_ANY = 0,
  NetI2pDataI2npDatabaseLookupMessage_Type_Enum_LS = 1,
  NetI2pDataI2npDatabaseLookupMessage_Type_Enum_RI = 2,
  NetI2pDataI2npDatabaseLookupMessage_Type_Enum_EXPL = 3,
};

@interface NetI2pDataI2npDatabaseLookupMessage_Type : JavaLangEnum

@property (readonly, class, nonnull) NetI2pDataI2npDatabaseLookupMessage_Type *ANY NS_SWIFT_NAME(ANY);
@property (readonly, class, nonnull) NetI2pDataI2npDatabaseLookupMessage_Type *LS NS_SWIFT_NAME(LS);
@property (readonly, class, nonnull) NetI2pDataI2npDatabaseLookupMessage_Type *RI NS_SWIFT_NAME(RI);
@property (readonly, class, nonnull) NetI2pDataI2npDatabaseLookupMessage_Type *EXPL NS_SWIFT_NAME(EXPL);
+ (NetI2pDataI2npDatabaseLookupMessage_Type * __nonnull)ANY;

+ (NetI2pDataI2npDatabaseLookupMessage_Type * __nonnull)LS;

+ (NetI2pDataI2npDatabaseLookupMessage_Type * __nonnull)RI;

+ (NetI2pDataI2npDatabaseLookupMessage_Type * __nonnull)EXPL;

#pragma mark Public

+ (NetI2pDataI2npDatabaseLookupMessage_Type *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pDataI2npDatabaseLookupMessage_Type_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pDataI2npDatabaseLookupMessage_Type)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pDataI2npDatabaseLookupMessage_Type *NetI2pDataI2npDatabaseLookupMessage_Type_values_[];

inline NetI2pDataI2npDatabaseLookupMessage_Type *NetI2pDataI2npDatabaseLookupMessage_Type_get_ANY(void);
J2OBJC_ENUM_CONSTANT(NetI2pDataI2npDatabaseLookupMessage_Type, ANY)

inline NetI2pDataI2npDatabaseLookupMessage_Type *NetI2pDataI2npDatabaseLookupMessage_Type_get_LS(void);
J2OBJC_ENUM_CONSTANT(NetI2pDataI2npDatabaseLookupMessage_Type, LS)

inline NetI2pDataI2npDatabaseLookupMessage_Type *NetI2pDataI2npDatabaseLookupMessage_Type_get_RI(void);
J2OBJC_ENUM_CONSTANT(NetI2pDataI2npDatabaseLookupMessage_Type, RI)

inline NetI2pDataI2npDatabaseLookupMessage_Type *NetI2pDataI2npDatabaseLookupMessage_Type_get_EXPL(void);
J2OBJC_ENUM_CONSTANT(NetI2pDataI2npDatabaseLookupMessage_Type, EXPL)

FOUNDATION_EXPORT IOSObjectArray *NetI2pDataI2npDatabaseLookupMessage_Type_values(void);

FOUNDATION_EXPORT NetI2pDataI2npDatabaseLookupMessage_Type *NetI2pDataI2npDatabaseLookupMessage_Type_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pDataI2npDatabaseLookupMessage_Type *NetI2pDataI2npDatabaseLookupMessage_Type_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2npDatabaseLookupMessage_Type)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataI2npDatabaseLookupMessage")
