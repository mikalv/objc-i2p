//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/i2np/DeliveryInstructions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataI2npDeliveryInstructions")
#ifdef RESTRICT_NetI2pDataI2npDeliveryInstructions
#define INCLUDE_ALL_NetI2pDataI2npDeliveryInstructions 0
#else
#define INCLUDE_ALL_NetI2pDataI2npDeliveryInstructions 1
#endif
#undef RESTRICT_NetI2pDataI2npDeliveryInstructions

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataI2npDeliveryInstructions_) && (INCLUDE_ALL_NetI2pDataI2npDeliveryInstructions || defined(INCLUDE_NetI2pDataI2npDeliveryInstructions))
#define NetI2pDataI2npDeliveryInstructions_

#define RESTRICT_NetI2pDataDataStructureImpl 1
#define INCLUDE_NetI2pDataDataStructureImpl 1
#include "net/i2p/data/DataStructureImpl.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class NetI2pDataHash;
@class NetI2pDataSessionKey;
@class NetI2pDataTunnelId;

@interface NetI2pDataI2npDeliveryInstructions : NetI2pDataDataStructureImpl
@property (readonly, class) jint DELIVERY_MODE_LOCAL NS_SWIFT_NAME(DELIVERY_MODE_LOCAL);
@property (readonly, class) jint DELIVERY_MODE_DESTINATION NS_SWIFT_NAME(DELIVERY_MODE_DESTINATION);
@property (readonly, class) jint DELIVERY_MODE_ROUTER NS_SWIFT_NAME(DELIVERY_MODE_ROUTER);
@property (readonly, class) jint DELIVERY_MODE_TUNNEL NS_SWIFT_NAME(DELIVERY_MODE_TUNNEL);
@property (readonly, class, strong) NetI2pDataI2npDeliveryInstructions *LOCAL NS_SWIFT_NAME(LOCAL);

+ (jint)DELIVERY_MODE_LOCAL;

+ (jint)DELIVERY_MODE_DESTINATION;

+ (jint)DELIVERY_MODE_ROUTER;

+ (jint)DELIVERY_MODE_TUNNEL;

+ (NetI2pDataI2npDeliveryInstructions *)LOCAL;

#pragma mark Public

- (instancetype __nonnull)init;

+ (NetI2pDataI2npDeliveryInstructions *)createWithByteArray:(IOSByteArray *)data
                                                    withInt:(jint)offset;

- (jboolean)isEqual:(id)obj;

- (jboolean)getDelayRequested;

- (jlong)getDelaySeconds;

- (jint)getDeliveryMode;

- (NetI2pDataHash *)getDestination;

- (jboolean)getEncrypted;

- (NetI2pDataSessionKey *)getEncryptionKey;

- (NetI2pDataHash *)getRouter;

- (jint)getSize;

- (NetI2pDataTunnelId *)getTunnelId;

- (NSUInteger)hash;

- (jint)readBytesWithByteArray:(IOSByteArray *)data
                       withInt:(jint)offset;

- (void)readBytesWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (void)setDelayRequestedWithBoolean:(jboolean)req;

- (void)setDelaySecondsWithLong:(jlong)seconds;

- (void)setDeliveryModeWithInt:(jint)mode;

- (void)setDestinationWithNetI2pDataHash:(NetI2pDataHash *)dest;

- (void)setEncryptedWithBoolean:(jboolean)encrypted;

- (void)setEncryptionKeyWithNetI2pDataSessionKey:(NetI2pDataSessionKey *)key;

- (void)setRouterWithNetI2pDataHash:(NetI2pDataHash *)router;

- (void)setTunnelIdWithNetI2pDataTunnelId:(NetI2pDataTunnelId *)id_;

- (NSString *)description;

- (jint)writeBytesWithByteArray:(IOSByteArray *)target
                        withInt:(jint)offset;

- (void)writeBytesWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

@end

J2OBJC_STATIC_INIT(NetI2pDataI2npDeliveryInstructions)

inline jint NetI2pDataI2npDeliveryInstructions_get_DELIVERY_MODE_LOCAL(void);
#define NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_LOCAL 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryInstructions, DELIVERY_MODE_LOCAL, jint)

inline jint NetI2pDataI2npDeliveryInstructions_get_DELIVERY_MODE_DESTINATION(void);
#define NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_DESTINATION 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryInstructions, DELIVERY_MODE_DESTINATION, jint)

inline jint NetI2pDataI2npDeliveryInstructions_get_DELIVERY_MODE_ROUTER(void);
#define NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_ROUTER 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryInstructions, DELIVERY_MODE_ROUTER, jint)

inline jint NetI2pDataI2npDeliveryInstructions_get_DELIVERY_MODE_TUNNEL(void);
#define NetI2pDataI2npDeliveryInstructions_DELIVERY_MODE_TUNNEL 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryInstructions, DELIVERY_MODE_TUNNEL, jint)

inline NetI2pDataI2npDeliveryInstructions *NetI2pDataI2npDeliveryInstructions_get_LOCAL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NetI2pDataI2npDeliveryInstructions *NetI2pDataI2npDeliveryInstructions_LOCAL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pDataI2npDeliveryInstructions, LOCAL, NetI2pDataI2npDeliveryInstructions *)

FOUNDATION_EXPORT NetI2pDataI2npDeliveryInstructions *NetI2pDataI2npDeliveryInstructions_createWithByteArray_withInt_(IOSByteArray *data, jint offset);

FOUNDATION_EXPORT void NetI2pDataI2npDeliveryInstructions_init(NetI2pDataI2npDeliveryInstructions *self);

FOUNDATION_EXPORT NetI2pDataI2npDeliveryInstructions *new_NetI2pDataI2npDeliveryInstructions_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2npDeliveryInstructions *create_NetI2pDataI2npDeliveryInstructions_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2npDeliveryInstructions)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataI2npDeliveryInstructions")
