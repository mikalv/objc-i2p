//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/i2np/DeliveryStatusMessage.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuilder.h"
#include "net/i2p/I2PAppContext.h"
#include "net/i2p/data/DataHelper.h"
#include "net/i2p/data/i2np/DeliveryStatusMessage.h"
#include "net/i2p/data/i2np/FastI2NPMessageImpl.h"
#include "net/i2p/data/i2np/I2NPMessageException.h"
#include "net/i2p/util/Clock.h"

@interface NetI2pDataI2npDeliveryStatusMessage () {
 @public
  jlong _id_;
  jlong _arrival_;
}

@end

inline jlong NetI2pDataI2npDeliveryStatusMessage_get_MAX_MSG_ID(void);
#define NetI2pDataI2npDeliveryStatusMessage_MAX_MSG_ID 4294967295LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npDeliveryStatusMessage, MAX_MSG_ID, jlong)

@implementation NetI2pDataI2npDeliveryStatusMessage

+ (jint)MESSAGE_TYPE {
  return NetI2pDataI2npDeliveryStatusMessage_MESSAGE_TYPE;
}

- (instancetype)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context {
  NetI2pDataI2npDeliveryStatusMessage_initWithNetI2pI2PAppContext_(self, context);
  return self;
}

- (jlong)getMessageId {
  return _id_;
}

- (void)setMessageIdWithLong:(jlong)id_ {
  if (_id_ >= 0) @throw create_JavaLangIllegalStateException_init();
  if (id_ < 0 || id_ > NetI2pDataI2npDeliveryStatusMessage_MAX_MSG_ID) @throw create_JavaLangIllegalArgumentException_init();
  _id_ = id_;
}

- (jlong)getArrival {
  return _arrival_;
}

- (void)setArrivalWithLong:(jlong)arrival {
  if (_arrival_ >= 0) _hasChecksum_ = false;
  _arrival_ = arrival;
}

- (void)readMessageWithByteArray:(IOSByteArray *)data
                         withInt:(jint)offset
                         withInt:(jint)dataSize
                         withInt:(jint)type {
  if (type != NetI2pDataI2npDeliveryStatusMessage_MESSAGE_TYPE) @throw create_NetI2pDataI2npI2NPMessageException_initWithNSString_(@"Message type is incorrect for this message");
  jint curIndex = offset;
  _id_ = NetI2pDataDataHelper_fromLongWithByteArray_withInt_withInt_(data, curIndex, 4);
  curIndex += 4;
  _arrival_ = NetI2pDataDataHelper_fromLongWithByteArray_withInt_withInt_(data, curIndex, NetI2pDataDataHelper_DATE_LENGTH);
}

- (jint)calculateWrittenLength {
  return 4 + NetI2pDataDataHelper_DATE_LENGTH;
}

- (jint)writeMessageBodyWithByteArray:(IOSByteArray *)outArg
                              withInt:(jint)curIndex {
  if ((_id_ < 0) || (_arrival_ <= 0)) @throw create_NetI2pDataI2npI2NPMessageException_initWithNSString_(@"Not enough data to write out");
  NetI2pDataDataHelper_toLongWithByteArray_withInt_withInt_withLong_(outArg, curIndex, 4, _id_);
  curIndex += 4;
  NetI2pDataDataHelper_toLongWithByteArray_withInt_withInt_withLong_(outArg, curIndex, NetI2pDataDataHelper_DATE_LENGTH, _arrival_);
  curIndex += NetI2pDataDataHelper_DATE_LENGTH;
  return curIndex;
}

- (jint)getType {
  return NetI2pDataI2npDeliveryStatusMessage_MESSAGE_TYPE;
}

- (NSUInteger)hash {
  return (jint) [self getMessageId] ^ (jint) [self getArrival];
}

- (jboolean)isEqual:(id)object {
  if ((object != nil) && ([object isKindOfClass:[NetI2pDataI2npDeliveryStatusMessage class]])) {
    NetI2pDataI2npDeliveryStatusMessage *msg = (NetI2pDataI2npDeliveryStatusMessage *) cast_chk(object, [NetI2pDataI2npDeliveryStatusMessage class]);
    return _id_ == [((NetI2pDataI2npDeliveryStatusMessage *) nil_chk(msg)) getMessageId] && _arrival_ == [msg getArrival];
  }
  else {
    return false;
  }
}

- (NSString *)description {
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_init();
  [buf appendWithNSString:@"[DeliveryStatusMessage: "];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tMessage ID: "])) appendWithLong:[self getMessageId]];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tArrival: "])) appendWithLong:[((NetI2pUtilClock *) nil_chk([((NetI2pI2PAppContext *) nil_chk(_context_)) clock])) now] - _arrival_];
  [buf appendWithNSString:@"ms in the past"];
  [buf appendWithNSString:@"]"];
  return [buf description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 7, 8, 6, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pI2PAppContext:);
  methods[1].selector = @selector(getMessageId);
  methods[2].selector = @selector(setMessageIdWithLong:);
  methods[3].selector = @selector(getArrival);
  methods[4].selector = @selector(setArrivalWithLong:);
  methods[5].selector = @selector(readMessageWithByteArray:withInt:withInt:withInt:);
  methods[6].selector = @selector(calculateWrittenLength);
  methods[7].selector = @selector(writeMessageBodyWithByteArray:withInt:);
  methods[8].selector = @selector(getType);
  methods[9].selector = @selector(hash);
  methods[10].selector = @selector(isEqual:);
  methods[11].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MESSAGE_TYPE", "I", .constantValue.asInt = NetI2pDataI2npDeliveryStatusMessage_MESSAGE_TYPE, 0x19, -1, -1, -1, -1 },
    { "_id_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_arrival_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "MAX_MSG_ID", "J", .constantValue.asLong = NetI2pDataI2npDeliveryStatusMessage_MAX_MSG_ID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pI2PAppContext;", "setMessageId", "J", "setArrival", "readMessage", "[BIII", "LNetI2pDataI2npI2NPMessageException;", "writeMessageBody", "[BI", "hashCode", "equals", "LNSObject;", "toString" };
  static const J2ObjcClassInfo _NetI2pDataI2npDeliveryStatusMessage = { "DeliveryStatusMessage", "net.i2p.data.i2np", ptrTable, methods, fields, 7, 0x1, 12, 4, -1, -1, -1, -1, -1 };
  return &_NetI2pDataI2npDeliveryStatusMessage;
}

@end

void NetI2pDataI2npDeliveryStatusMessage_initWithNetI2pI2PAppContext_(NetI2pDataI2npDeliveryStatusMessage *self, NetI2pI2PAppContext *context) {
  NetI2pDataI2npFastI2NPMessageImpl_initWithNetI2pI2PAppContext_(self, context);
  self->_id_ = -1;
  self->_arrival_ = -1;
}

NetI2pDataI2npDeliveryStatusMessage *new_NetI2pDataI2npDeliveryStatusMessage_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) {
  J2OBJC_NEW_IMPL(NetI2pDataI2npDeliveryStatusMessage, initWithNetI2pI2PAppContext_, context)
}

NetI2pDataI2npDeliveryStatusMessage *create_NetI2pDataI2npDeliveryStatusMessage_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) {
  J2OBJC_CREATE_IMPL(NetI2pDataI2npDeliveryStatusMessage, initWithNetI2pI2PAppContext_, context)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pDataI2npDeliveryStatusMessage)
