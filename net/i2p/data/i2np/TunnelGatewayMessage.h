//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/i2np/TunnelGatewayMessage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataI2npTunnelGatewayMessage")
#ifdef RESTRICT_NetI2pDataI2npTunnelGatewayMessage
#define INCLUDE_ALL_NetI2pDataI2npTunnelGatewayMessage 0
#else
#define INCLUDE_ALL_NetI2pDataI2npTunnelGatewayMessage 1
#endif
#undef RESTRICT_NetI2pDataI2npTunnelGatewayMessage

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataI2npTunnelGatewayMessage_) && (INCLUDE_ALL_NetI2pDataI2npTunnelGatewayMessage || defined(INCLUDE_NetI2pDataI2npTunnelGatewayMessage))
#define NetI2pDataI2npTunnelGatewayMessage_

#define RESTRICT_NetI2pDataI2npFastI2NPMessageImpl 1
#define INCLUDE_NetI2pDataI2npFastI2NPMessageImpl 1
#include "net/i2p/data/i2np/FastI2NPMessageImpl.h"

@class IOSByteArray;
@class NetI2pDataI2npI2NPMessageHandler;
@class NetI2pDataTunnelId;
@class NetI2pI2PAppContext;
@protocol NetI2pDataI2npI2NPMessage;

@interface NetI2pDataI2npTunnelGatewayMessage : NetI2pDataI2npFastI2NPMessageImpl
@property (readonly, class) jint MESSAGE_TYPE NS_SWIFT_NAME(MESSAGE_TYPE);

+ (jint)MESSAGE_TYPE;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (jboolean)isEqual:(id)object;

- (id<NetI2pDataI2npI2NPMessage>)getMessage;

- (NetI2pDataTunnelId *)getTunnelId;

- (jint)getType;

- (NSUInteger)hash;

- (void)readMessageWithByteArray:(IOSByteArray *)data
                         withInt:(jint)offset
                         withInt:(jint)dataSize
                         withInt:(jint)type;

- (void)readMessageWithByteArray:(IOSByteArray *)data
                         withInt:(jint)offset
                         withInt:(jint)dataSize
                         withInt:(jint)type
withNetI2pDataI2npI2NPMessageHandler:(NetI2pDataI2npI2NPMessageHandler *)handler;

- (void)setMessageWithNetI2pDataI2npI2NPMessage:(id<NetI2pDataI2npI2NPMessage>)msg;

- (void)setTunnelIdWithNetI2pDataTunnelId:(NetI2pDataTunnelId *)id_;

- (NSString *)description;

#pragma mark Protected

- (jint)calculateWrittenLength;

- (jint)writeMessageBodyWithByteArray:(IOSByteArray *)outArg
                              withInt:(jint)curIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2npTunnelGatewayMessage)

inline jint NetI2pDataI2npTunnelGatewayMessage_get_MESSAGE_TYPE(void);
#define NetI2pDataI2npTunnelGatewayMessage_MESSAGE_TYPE 19
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npTunnelGatewayMessage, MESSAGE_TYPE, jint)

FOUNDATION_EXPORT void NetI2pDataI2npTunnelGatewayMessage_initWithNetI2pI2PAppContext_(NetI2pDataI2npTunnelGatewayMessage *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pDataI2npTunnelGatewayMessage *new_NetI2pDataI2npTunnelGatewayMessage_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2npTunnelGatewayMessage *create_NetI2pDataI2npTunnelGatewayMessage_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2npTunnelGatewayMessage)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataI2npTunnelGatewayMessage")
