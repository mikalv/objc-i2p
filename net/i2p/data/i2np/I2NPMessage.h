//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/i2np/I2NPMessage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataI2npI2NPMessage")
#ifdef RESTRICT_NetI2pDataI2npI2NPMessage
#define INCLUDE_ALL_NetI2pDataI2npI2NPMessage 0
#else
#define INCLUDE_ALL_NetI2pDataI2npI2NPMessage 1
#endif
#undef RESTRICT_NetI2pDataI2npI2NPMessage

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataI2npI2NPMessage_) && (INCLUDE_ALL_NetI2pDataI2npI2NPMessage || defined(INCLUDE_NetI2pDataI2npI2NPMessage))
#define NetI2pDataI2npI2NPMessage_

#define RESTRICT_NetI2pDataDataStructure 1
#define INCLUDE_NetI2pDataDataStructure 1
#include "net/i2p/data/DataStructure.h"

@class IOSByteArray;
@class NetI2pDataI2npI2NPMessageHandler;

@protocol NetI2pDataI2npI2NPMessage < NetI2pDataDataStructure, JavaObject >

- (jint)readBytesWithByteArray:(IOSByteArray *)data
                       withInt:(jint)type
                       withInt:(jint)offset;

- (jint)readBytesWithByteArray:(IOSByteArray *)data
                       withInt:(jint)type
                       withInt:(jint)offset
                       withInt:(jint)maxLen;

- (void)readMessageWithByteArray:(IOSByteArray *)data
                         withInt:(jint)offset
                         withInt:(jint)dataSize
                         withInt:(jint)type;

- (void)readMessageWithByteArray:(IOSByteArray *)data
                         withInt:(jint)offset
                         withInt:(jint)dataSize
                         withInt:(jint)type
withNetI2pDataI2npI2NPMessageHandler:(NetI2pDataI2npI2NPMessageHandler *)handler;

- (jint)getType;

- (jlong)getUniqueId;

- (void)setUniqueIdWithLong:(jlong)id_;

- (jlong)getMessageExpiration;

- (void)setMessageExpirationWithLong:(jlong)exp;

- (jint)getMessageSize;

- (jint)getRawMessageSize;

- (jint)toByteArrayWithByteArray:(IOSByteArray *)buffer;

- (jint)toByteArrayWithByteArray:(IOSByteArray *)buffer
                         withInt:(jint)off;

- (jint)toRawByteArrayWithByteArray:(IOSByteArray *)buffer;

- (jint)toRawByteArrayNTCP2WithByteArray:(IOSByteArray *)buffer
                                 withInt:(jint)off;

@end

@interface NetI2pDataI2npI2NPMessage : NSObject
@property (readonly, class) jlong MAX_ID_VALUE NS_SWIFT_NAME(MAX_ID_VALUE);
@property (readonly, class) jint MAX_SIZE NS_SWIFT_NAME(MAX_SIZE);

+ (jlong)MAX_ID_VALUE;

+ (jint)MAX_SIZE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2npI2NPMessage)

inline jlong NetI2pDataI2npI2NPMessage_get_MAX_ID_VALUE(void);
#define NetI2pDataI2npI2NPMessage_MAX_ID_VALUE 4294967295LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npI2NPMessage, MAX_ID_VALUE, jlong)

inline jint NetI2pDataI2npI2NPMessage_get_MAX_SIZE(void);
#define NetI2pDataI2npI2NPMessage_MAX_SIZE 65536
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2npI2NPMessage, MAX_SIZE, jint)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2npI2NPMessage)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataI2npI2NPMessage")
