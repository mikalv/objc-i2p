//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/i2np/I2NPMessage.java
//

#include "J2ObjC_source.h"
#include "net/i2p/data/i2np/I2NPMessage.h"

@implementation NetI2pDataI2npI2NPMessage

+ (jlong)MAX_ID_VALUE {
  return NetI2pDataI2npI2NPMessage_MAX_ID_VALUE;
}

+ (jint)MAX_SIZE {
  return NetI2pDataI2npI2NPMessage_MAX_SIZE;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "I", 0x401, 0, 3, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 3, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 5, 2, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 6, 7, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 8, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 9, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 12, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 13, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(readBytesWithByteArray:withInt:withInt:);
  methods[1].selector = @selector(readBytesWithByteArray:withInt:withInt:withInt:);
  methods[2].selector = @selector(readMessageWithByteArray:withInt:withInt:withInt:);
  methods[3].selector = @selector(readMessageWithByteArray:withInt:withInt:withInt:withNetI2pDataI2npI2NPMessageHandler:);
  methods[4].selector = @selector(getType);
  methods[5].selector = @selector(getUniqueId);
  methods[6].selector = @selector(setUniqueIdWithLong:);
  methods[7].selector = @selector(getMessageExpiration);
  methods[8].selector = @selector(setMessageExpirationWithLong:);
  methods[9].selector = @selector(getMessageSize);
  methods[10].selector = @selector(getRawMessageSize);
  methods[11].selector = @selector(toByteArrayWithByteArray:);
  methods[12].selector = @selector(toByteArrayWithByteArray:withInt:);
  methods[13].selector = @selector(toRawByteArrayWithByteArray:);
  methods[14].selector = @selector(toRawByteArrayNTCP2WithByteArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_ID_VALUE", "J", .constantValue.asLong = NetI2pDataI2npI2NPMessage_MAX_ID_VALUE, 0x19, -1, -1, -1, -1 },
    { "MAX_SIZE", "I", .constantValue.asInt = NetI2pDataI2npI2NPMessage_MAX_SIZE, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "readBytes", "[BII", "LNetI2pDataI2npI2NPMessageException;", "[BIII", "readMessage", "[BIIILNetI2pDataI2npI2NPMessageHandler;", "setUniqueId", "J", "setMessageExpiration", "toByteArray", "[B", "[BI", "toRawByteArray", "toRawByteArrayNTCP2" };
  static const J2ObjcClassInfo _NetI2pDataI2npI2NPMessage = { "I2NPMessage", "net.i2p.data.i2np", ptrTable, methods, fields, 7, 0x609, 15, 2, -1, -1, -1, -1, -1 };
  return &_NetI2pDataI2npI2NPMessage;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(NetI2pDataI2npI2NPMessage)
