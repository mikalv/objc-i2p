//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/router/RouterIdentity.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataRouterRouterIdentity")
#ifdef RESTRICT_NetI2pDataRouterRouterIdentity
#define INCLUDE_ALL_NetI2pDataRouterRouterIdentity 0
#else
#define INCLUDE_ALL_NetI2pDataRouterRouterIdentity 1
#endif
#undef RESTRICT_NetI2pDataRouterRouterIdentity

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataRouterRouterIdentity_) && (INCLUDE_ALL_NetI2pDataRouterRouterIdentity || defined(INCLUDE_NetI2pDataRouterRouterIdentity))
#define NetI2pDataRouterRouterIdentity_

#define RESTRICT_NetI2pDataKeysAndCert 1
#define INCLUDE_NetI2pDataKeysAndCert 1
#include "net/i2p/data/KeysAndCert.h"

@interface NetI2pDataRouterRouterIdentity : NetI2pDataKeysAndCert

#pragma mark Public

- (instancetype __nonnull)init;

- (jboolean)isEqual:(id)o;

- (jboolean)isHidden;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataRouterRouterIdentity)

FOUNDATION_EXPORT void NetI2pDataRouterRouterIdentity_init(NetI2pDataRouterRouterIdentity *self);

FOUNDATION_EXPORT NetI2pDataRouterRouterIdentity *new_NetI2pDataRouterRouterIdentity_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataRouterRouterIdentity *create_NetI2pDataRouterRouterIdentity_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataRouterRouterIdentity)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataRouterRouterIdentity")
