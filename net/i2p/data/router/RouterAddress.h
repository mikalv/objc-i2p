//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/router/RouterAddress.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataRouterRouterAddress")
#ifdef RESTRICT_NetI2pDataRouterRouterAddress
#define INCLUDE_ALL_NetI2pDataRouterRouterAddress 0
#else
#define INCLUDE_ALL_NetI2pDataRouterRouterAddress 1
#endif
#undef RESTRICT_NetI2pDataRouterRouterAddress

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataRouterRouterAddress_) && (INCLUDE_ALL_NetI2pDataRouterRouterAddress || defined(INCLUDE_NetI2pDataRouterRouterAddress))
#define NetI2pDataRouterRouterAddress_

#define RESTRICT_NetI2pDataDataStructureImpl 1
#define INCLUDE_NetI2pDataDataStructureImpl 1
#include "net/i2p/data/DataStructureImpl.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaUtilDate;
@class JavaUtilProperties;
@class NetI2pUtilOrderedProperties;
@protocol JavaUtilMap;

@interface NetI2pDataRouterRouterAddress : NetI2pDataDataStructureImpl
@property (readonly, copy, class) NSString *PROP_HOST NS_SWIFT_NAME(PROP_HOST);
@property (readonly, copy, class) NSString *PROP_PORT NS_SWIFT_NAME(PROP_PORT);

+ (NSString *)PROP_HOST;

+ (NSString *)PROP_PORT;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)style
           withNetI2pUtilOrderedProperties:(NetI2pUtilOrderedProperties *)options
                                   withInt:(jint)cost;

- (jboolean)deepEqualsWithNetI2pDataRouterRouterAddress:(NetI2pDataRouterRouterAddress *)addr;

- (jboolean)isEqual:(id)object;

- (jint)getCost;

- (JavaUtilDate *)getExpiration;

- (jlong)getExpirationTime;

- (NSString *)getHost;

- (IOSByteArray *)getIP;

- (NSString *)getOptionWithNSString:(NSString *)opt;

- (JavaUtilProperties *)getOptions;

- (id<JavaUtilMap>)getOptionsMap;

- (jint)getPort;

- (NSString *)getTransportStyle;

- (NSUInteger)hash;

- (void)readBytesWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (void)setCostWithInt:(jint)cost;

- (void)setExpirationWithJavaUtilDate:(JavaUtilDate *)expiration;

- (void)setOptionsWithJavaUtilProperties:(JavaUtilProperties *)options;

- (void)setTransportStyleWithNSString:(NSString *)transportStyle;

- (NSString *)description;

- (void)writeBytesWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

@end

J2OBJC_STATIC_INIT(NetI2pDataRouterRouterAddress)

inline NSString *NetI2pDataRouterRouterAddress_get_PROP_HOST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pDataRouterRouterAddress_PROP_HOST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pDataRouterRouterAddress, PROP_HOST, NSString *)

inline NSString *NetI2pDataRouterRouterAddress_get_PROP_PORT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pDataRouterRouterAddress_PROP_PORT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pDataRouterRouterAddress, PROP_PORT, NSString *)

FOUNDATION_EXPORT void NetI2pDataRouterRouterAddress_init(NetI2pDataRouterRouterAddress *self);

FOUNDATION_EXPORT NetI2pDataRouterRouterAddress *new_NetI2pDataRouterRouterAddress_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataRouterRouterAddress *create_NetI2pDataRouterRouterAddress_init(void);

FOUNDATION_EXPORT void NetI2pDataRouterRouterAddress_initWithNSString_withNetI2pUtilOrderedProperties_withInt_(NetI2pDataRouterRouterAddress *self, NSString *style, NetI2pUtilOrderedProperties *options, jint cost);

FOUNDATION_EXPORT NetI2pDataRouterRouterAddress *new_NetI2pDataRouterRouterAddress_initWithNSString_withNetI2pUtilOrderedProperties_withInt_(NSString *style, NetI2pUtilOrderedProperties *options, jint cost) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataRouterRouterAddress *create_NetI2pDataRouterRouterAddress_initWithNSString_withNetI2pUtilOrderedProperties_withInt_(NSString *style, NetI2pUtilOrderedProperties *options, jint cost);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataRouterRouterAddress)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataRouterRouterAddress")
