//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/router/RouterPrivateKeyFile.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataRouterRouterPrivateKeyFile")
#ifdef RESTRICT_NetI2pDataRouterRouterPrivateKeyFile
#define INCLUDE_ALL_NetI2pDataRouterRouterPrivateKeyFile 0
#else
#define INCLUDE_ALL_NetI2pDataRouterRouterPrivateKeyFile 1
#endif
#undef RESTRICT_NetI2pDataRouterRouterPrivateKeyFile

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataRouterRouterPrivateKeyFile_) && (INCLUDE_ALL_NetI2pDataRouterRouterPrivateKeyFile || defined(INCLUDE_NetI2pDataRouterRouterPrivateKeyFile))
#define NetI2pDataRouterRouterPrivateKeyFile_

#define RESTRICT_NetI2pDataPrivateKeyFile 1
#define INCLUDE_NetI2pDataPrivateKeyFile 1
#include "net/i2p/data/PrivateKeyFile.h"

@class IOSByteArray;
@class JavaIoFile;
@class JavaIoInputStream;
@class NetI2pDataCertificate;
@class NetI2pDataDestination;
@class NetI2pDataPrivateKey;
@class NetI2pDataPublicKey;
@class NetI2pDataRouterRouterIdentity;
@class NetI2pDataSigningPrivateKey;
@class NetI2pDataSigningPublicKey;
@protocol NetI2pClientI2PClient;
@protocol NetI2pClientI2PSession;

@interface NetI2pDataRouterRouterPrivateKeyFile : NetI2pDataPrivateKeyFile

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)file;

- (NetI2pDataRouterRouterIdentity *)getRouterIdentity;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)arg0
                   withNetI2pClientI2PClient:(id<NetI2pClientI2PClient>)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)arg0
                  withNetI2pClientI2PSession:(id<NetI2pClientI2PSession>)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)arg0
                   withNetI2pDataDestination:(NetI2pDataDestination *)arg1
                    withNetI2pDataPrivateKey:(NetI2pDataPrivateKey *)arg2
             withNetI2pDataSigningPrivateKey:(NetI2pDataSigningPrivateKey *)arg3 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)arg0
                     withNetI2pDataPublicKey:(NetI2pDataPublicKey *)arg1
              withNetI2pDataSigningPublicKey:(NetI2pDataSigningPublicKey *)arg2
                   withNetI2pDataCertificate:(NetI2pDataCertificate *)arg3
                    withNetI2pDataPrivateKey:(NetI2pDataPrivateKey *)arg4
             withNetI2pDataSigningPrivateKey:(NetI2pDataSigningPrivateKey *)arg5 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)arg0
                     withNetI2pDataPublicKey:(NetI2pDataPublicKey *)arg1
              withNetI2pDataSigningPublicKey:(NetI2pDataSigningPublicKey *)arg2
                   withNetI2pDataCertificate:(NetI2pDataCertificate *)arg3
                    withNetI2pDataPrivateKey:(NetI2pDataPrivateKey *)arg4
             withNetI2pDataSigningPrivateKey:(NetI2pDataSigningPrivateKey *)arg5
                               withByteArray:(IOSByteArray *)arg6 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataRouterRouterPrivateKeyFile)

FOUNDATION_EXPORT void NetI2pDataRouterRouterPrivateKeyFile_initWithJavaIoFile_(NetI2pDataRouterRouterPrivateKeyFile *self, JavaIoFile *file);

FOUNDATION_EXPORT NetI2pDataRouterRouterPrivateKeyFile *new_NetI2pDataRouterRouterPrivateKeyFile_initWithJavaIoFile_(JavaIoFile *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataRouterRouterPrivateKeyFile *create_NetI2pDataRouterRouterPrivateKeyFile_initWithJavaIoFile_(JavaIoFile *file);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataRouterRouterPrivateKeyFile)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataRouterRouterPrivateKeyFile")
