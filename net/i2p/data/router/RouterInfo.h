//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: router/java/src/net/i2p/data/router/RouterInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataRouterRouterInfo")
#ifdef RESTRICT_NetI2pDataRouterRouterInfo
#define INCLUDE_ALL_NetI2pDataRouterRouterInfo 0
#else
#define INCLUDE_ALL_NetI2pDataRouterRouterInfo 1
#endif
#undef RESTRICT_NetI2pDataRouterRouterInfo

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataRouterRouterInfo_) && (INCLUDE_ALL_NetI2pDataRouterRouterInfo || defined(INCLUDE_NetI2pDataRouterRouterInfo))
#define NetI2pDataRouterRouterInfo_

#define RESTRICT_NetI2pDataDatabaseEntry 1
#define INCLUDE_NetI2pDataDatabaseEntry 1
#include "net/i2p/data/DatabaseEntry.h"

@class IOSByteArray;
@class IOSObjectArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaUtilProperties;
@class NetI2pDataKeysAndCert;
@class NetI2pDataRouterRouterAddress;
@class NetI2pDataRouterRouterIdentity;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface NetI2pDataRouterRouterInfo : NetI2pDataDatabaseEntry
@property (readonly, copy, class) NSString *PROP_NETWORK_ID NS_SWIFT_NAME(PROP_NETWORK_ID);
@property (readonly, copy, class) NSString *PROP_CAPABILITIES NS_SWIFT_NAME(PROP_CAPABILITIES);
@property (readonly, class) jchar CAPABILITY_HIDDEN NS_SWIFT_NAME(CAPABILITY_HIDDEN);
@property (readonly, copy, class) NSString *BW_CAPABILITY_CHARS NS_SWIFT_NAME(BW_CAPABILITY_CHARS);

+ (NSString *)PROP_NETWORK_ID;

+ (NSString *)PROP_CAPABILITIES;

+ (jchar)CAPABILITY_HIDDEN;

+ (NSString *)BW_CAPABILITY_CHARS;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNetI2pDataRouterRouterInfo:(NetI2pDataRouterRouterInfo *)old;

- (jboolean)isEqual:(id)object;

- (jint)getAddressCount;

- (id<JavaUtilCollection>)getAddresses;

- (NSString *)getBandwidthTier;

- (NSString *)getCapabilities;

- (jlong)getDate;

- (NetI2pDataRouterRouterIdentity *)getIdentity;

- (NetI2pDataKeysAndCert *)getKeysAndCert;

- (jint)getNetworkId;

- (NSString *)getOptionWithNSString:(NSString *)opt;

- (JavaUtilProperties *)getOptions;

- (id<JavaUtilMap>)getOptionsMap;

- (id<JavaUtilSet>)getPeers;

- (jlong)getPublished;

- (NetI2pDataRouterRouterAddress *)getTargetAddressWithNSString:(NSString *)transportStyle;

- (id<JavaUtilList>)getTargetAddressesWithNSString:(NSString *)transportStyle;

- (id<JavaUtilList>)getTargetAddressesWithNSString:(NSString *)transportStyle1
                                      withNSString:(NSString *)transportStyle2;

- (jint)getType;

- (NSString *)getVersion;

- (NSUInteger)hash;

- (jboolean)isCurrentWithLong:(jlong)maxAgeMs;

- (jboolean)isHidden;

- (jboolean)isValid;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (void)readBytesWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (void)readBytesWithJavaIoInputStream:(JavaIoInputStream *)inArg
                           withBoolean:(jboolean)verifySig;

- (void)setAddressesWithJavaUtilCollection:(id<JavaUtilCollection>)addresses;

- (void)setIdentityWithNetI2pDataRouterRouterIdentity:(NetI2pDataRouterRouterIdentity *)ident;

- (void)setOptionsWithJavaUtilProperties:(JavaUtilProperties *)options;

- (void)setPeersWithJavaUtilSet:(id<JavaUtilSet>)peers;

- (void)setPublishedWithLong:(jlong)published;

- (NSString *)description;

- (jboolean)verifySignature;

- (void)writeBytesWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

#pragma mark Protected

- (IOSByteArray *)getBytes;

@end

J2OBJC_STATIC_INIT(NetI2pDataRouterRouterInfo)

inline NSString *NetI2pDataRouterRouterInfo_get_PROP_NETWORK_ID(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pDataRouterRouterInfo_PROP_NETWORK_ID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pDataRouterRouterInfo, PROP_NETWORK_ID, NSString *)

inline NSString *NetI2pDataRouterRouterInfo_get_PROP_CAPABILITIES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pDataRouterRouterInfo_PROP_CAPABILITIES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pDataRouterRouterInfo, PROP_CAPABILITIES, NSString *)

inline jchar NetI2pDataRouterRouterInfo_get_CAPABILITY_HIDDEN(void);
#define NetI2pDataRouterRouterInfo_CAPABILITY_HIDDEN 'H'
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataRouterRouterInfo, CAPABILITY_HIDDEN, jchar)

inline NSString *NetI2pDataRouterRouterInfo_get_BW_CAPABILITY_CHARS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetI2pDataRouterRouterInfo_BW_CAPABILITY_CHARS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pDataRouterRouterInfo, BW_CAPABILITY_CHARS, NSString *)

FOUNDATION_EXPORT void NetI2pDataRouterRouterInfo_init(NetI2pDataRouterRouterInfo *self);

FOUNDATION_EXPORT NetI2pDataRouterRouterInfo *new_NetI2pDataRouterRouterInfo_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataRouterRouterInfo *create_NetI2pDataRouterRouterInfo_init(void);

FOUNDATION_EXPORT void NetI2pDataRouterRouterInfo_initWithNetI2pDataRouterRouterInfo_(NetI2pDataRouterRouterInfo *self, NetI2pDataRouterRouterInfo *old);

FOUNDATION_EXPORT NetI2pDataRouterRouterInfo *new_NetI2pDataRouterRouterInfo_initWithNetI2pDataRouterRouterInfo_(NetI2pDataRouterRouterInfo *old) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataRouterRouterInfo *create_NetI2pDataRouterRouterInfo_initWithNetI2pDataRouterRouterInfo_(NetI2pDataRouterRouterInfo *old);

FOUNDATION_EXPORT void NetI2pDataRouterRouterInfo_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataRouterRouterInfo)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataRouterRouterInfo")
