//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/DataFormatException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "net/i2p/I2PException.h"
#include "net/i2p/data/DataFormatException.h"

@implementation NetI2pDataDataFormatException

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)t {
  NetI2pDataDataFormatException_initWithNSString_withJavaLangThrowable_(self, msg, t);
  return self;
}

- (instancetype)initWithNSString:(NSString *)msg {
  NetI2pDataDataFormatException_initWithNSString_(self, msg);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;", "LNSString;" };
  static const J2ObjcClassInfo _NetI2pDataDataFormatException = { "DataFormatException", "net.i2p.data", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_NetI2pDataDataFormatException;
}

@end

void NetI2pDataDataFormatException_initWithNSString_withJavaLangThrowable_(NetI2pDataDataFormatException *self, NSString *msg, JavaLangThrowable *t) {
  NetI2pI2PException_initWithNSString_withJavaLangThrowable_(self, msg, t);
}

NetI2pDataDataFormatException *new_NetI2pDataDataFormatException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *t) {
  J2OBJC_NEW_IMPL(NetI2pDataDataFormatException, initWithNSString_withJavaLangThrowable_, msg, t)
}

NetI2pDataDataFormatException *create_NetI2pDataDataFormatException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *t) {
  J2OBJC_CREATE_IMPL(NetI2pDataDataFormatException, initWithNSString_withJavaLangThrowable_, msg, t)
}

void NetI2pDataDataFormatException_initWithNSString_(NetI2pDataDataFormatException *self, NSString *msg) {
  NetI2pI2PException_initWithNSString_(self, msg);
}

NetI2pDataDataFormatException *new_NetI2pDataDataFormatException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(NetI2pDataDataFormatException, initWithNSString_, msg)
}

NetI2pDataDataFormatException *create_NetI2pDataDataFormatException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(NetI2pDataDataFormatException, initWithNSString_, msg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pDataDataFormatException)
