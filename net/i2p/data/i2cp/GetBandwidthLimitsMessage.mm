//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/i2cp/GetBandwidthLimitsMessage.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/InputStream.h"
#include "java/lang/StringBuilder.h"
#include "net/i2p/data/i2cp/GetBandwidthLimitsMessage.h"
#include "net/i2p/data/i2cp/I2CPMessageImpl.h"

@implementation NetI2pDataI2cpGetBandwidthLimitsMessage

+ (jint)MESSAGE_TYPE {
  return NetI2pDataI2cpGetBandwidthLimitsMessage_MESSAGE_TYPE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pDataI2cpGetBandwidthLimitsMessage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)doReadMessageWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                   withInt:(jint)size {
}

- (IOSByteArray *)doWriteMessage {
  IOSByteArray *rv = [IOSByteArray arrayWithLength:0];
  return rv;
}

- (jint)getType {
  return NetI2pDataI2cpGetBandwidthLimitsMessage_MESSAGE_TYPE;
}

- (NSString *)description {
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_init();
  [buf appendWithNSString:@"[GetBandwidthLimitsMessage]"];
  return [buf description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(doReadMessageWithJavaIoInputStream:withInt:);
  methods[2].selector = @selector(doWriteMessage);
  methods[3].selector = @selector(getType);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MESSAGE_TYPE", "I", .constantValue.asInt = NetI2pDataI2cpGetBandwidthLimitsMessage_MESSAGE_TYPE, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "doReadMessage", "LJavaIoInputStream;I", "LNetI2pDataI2cpI2CPMessageException;LJavaIoIOException;", "toString" };
  static const J2ObjcClassInfo _NetI2pDataI2cpGetBandwidthLimitsMessage = { "GetBandwidthLimitsMessage", "net.i2p.data.i2cp", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_NetI2pDataI2cpGetBandwidthLimitsMessage;
}

@end

void NetI2pDataI2cpGetBandwidthLimitsMessage_init(NetI2pDataI2cpGetBandwidthLimitsMessage *self) {
  NetI2pDataI2cpI2CPMessageImpl_init(self);
}

NetI2pDataI2cpGetBandwidthLimitsMessage *new_NetI2pDataI2cpGetBandwidthLimitsMessage_init() {
  J2OBJC_NEW_IMPL(NetI2pDataI2cpGetBandwidthLimitsMessage, init)
}

NetI2pDataI2cpGetBandwidthLimitsMessage *create_NetI2pDataI2cpGetBandwidthLimitsMessage_init() {
  J2OBJC_CREATE_IMPL(NetI2pDataI2cpGetBandwidthLimitsMessage, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pDataI2cpGetBandwidthLimitsMessage)
