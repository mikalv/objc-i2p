//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/i2cp/SessionStatusMessage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataI2cpSessionStatusMessage")
#ifdef RESTRICT_NetI2pDataI2cpSessionStatusMessage
#define INCLUDE_ALL_NetI2pDataI2cpSessionStatusMessage 0
#else
#define INCLUDE_ALL_NetI2pDataI2cpSessionStatusMessage 1
#endif
#undef RESTRICT_NetI2pDataI2cpSessionStatusMessage

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataI2cpSessionStatusMessage_) && (INCLUDE_ALL_NetI2pDataI2cpSessionStatusMessage || defined(INCLUDE_NetI2pDataI2cpSessionStatusMessage))
#define NetI2pDataI2cpSessionStatusMessage_

#define RESTRICT_NetI2pDataI2cpI2CPMessageImpl 1
#define INCLUDE_NetI2pDataI2cpI2CPMessageImpl 1
#include "net/i2p/data/i2cp/I2CPMessageImpl.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class NetI2pDataI2cpSessionId;

@interface NetI2pDataI2cpSessionStatusMessage : NetI2pDataI2cpI2CPMessageImpl
@property (readonly, class) jint MESSAGE_TYPE NS_SWIFT_NAME(MESSAGE_TYPE);
@property (readonly, class) jint STATUS_DESTROYED NS_SWIFT_NAME(STATUS_DESTROYED);
@property (readonly, class) jint STATUS_CREATED NS_SWIFT_NAME(STATUS_CREATED);
@property (readonly, class) jint STATUS_UPDATED NS_SWIFT_NAME(STATUS_UPDATED);
@property (readonly, class) jint STATUS_INVALID NS_SWIFT_NAME(STATUS_INVALID);
@property (readonly, class) jint STATUS_REFUSED NS_SWIFT_NAME(STATUS_REFUSED);

+ (jint)MESSAGE_TYPE;

+ (jint)STATUS_DESTROYED;

+ (jint)STATUS_CREATED;

+ (jint)STATUS_UPDATED;

+ (jint)STATUS_INVALID;

+ (jint)STATUS_REFUSED;

#pragma mark Public

- (instancetype __nonnull)init;

- (NetI2pDataI2cpSessionId *)getSessionId;

- (jint)getStatus;

- (jint)getType;

- (NetI2pDataI2cpSessionId *)sessionId;

- (void)setSessionIdWithNetI2pDataI2cpSessionId:(NetI2pDataI2cpSessionId *)id_;

- (void)setStatusWithInt:(jint)status;

- (NSString *)description;

#pragma mark Protected

- (void)doReadMessageWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                   withInt:(jint)size;

- (IOSByteArray *)doWriteMessage;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2cpSessionStatusMessage)

inline jint NetI2pDataI2cpSessionStatusMessage_get_MESSAGE_TYPE(void);
#define NetI2pDataI2cpSessionStatusMessage_MESSAGE_TYPE 20
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2cpSessionStatusMessage, MESSAGE_TYPE, jint)

inline jint NetI2pDataI2cpSessionStatusMessage_get_STATUS_DESTROYED(void);
#define NetI2pDataI2cpSessionStatusMessage_STATUS_DESTROYED 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2cpSessionStatusMessage, STATUS_DESTROYED, jint)

inline jint NetI2pDataI2cpSessionStatusMessage_get_STATUS_CREATED(void);
#define NetI2pDataI2cpSessionStatusMessage_STATUS_CREATED 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2cpSessionStatusMessage, STATUS_CREATED, jint)

inline jint NetI2pDataI2cpSessionStatusMessage_get_STATUS_UPDATED(void);
#define NetI2pDataI2cpSessionStatusMessage_STATUS_UPDATED 2
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2cpSessionStatusMessage, STATUS_UPDATED, jint)

inline jint NetI2pDataI2cpSessionStatusMessage_get_STATUS_INVALID(void);
#define NetI2pDataI2cpSessionStatusMessage_STATUS_INVALID 3
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2cpSessionStatusMessage, STATUS_INVALID, jint)

inline jint NetI2pDataI2cpSessionStatusMessage_get_STATUS_REFUSED(void);
#define NetI2pDataI2cpSessionStatusMessage_STATUS_REFUSED 4
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2cpSessionStatusMessage, STATUS_REFUSED, jint)

FOUNDATION_EXPORT void NetI2pDataI2cpSessionStatusMessage_init(NetI2pDataI2cpSessionStatusMessage *self);

FOUNDATION_EXPORT NetI2pDataI2cpSessionStatusMessage *new_NetI2pDataI2cpSessionStatusMessage_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2cpSessionStatusMessage *create_NetI2pDataI2cpSessionStatusMessage_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2cpSessionStatusMessage)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataI2cpSessionStatusMessage")
