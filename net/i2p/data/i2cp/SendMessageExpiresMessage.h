//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/i2cp/SendMessageExpiresMessage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataI2cpSendMessageExpiresMessage")
#ifdef RESTRICT_NetI2pDataI2cpSendMessageExpiresMessage
#define INCLUDE_ALL_NetI2pDataI2cpSendMessageExpiresMessage 0
#else
#define INCLUDE_ALL_NetI2pDataI2cpSendMessageExpiresMessage 1
#endif
#undef RESTRICT_NetI2pDataI2cpSendMessageExpiresMessage

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataI2cpSendMessageExpiresMessage_) && (INCLUDE_ALL_NetI2pDataI2cpSendMessageExpiresMessage || defined(INCLUDE_NetI2pDataI2cpSendMessageExpiresMessage))
#define NetI2pDataI2cpSendMessageExpiresMessage_

#define RESTRICT_NetI2pDataI2cpSendMessageMessage 1
#define INCLUDE_NetI2pDataI2cpSendMessageMessage 1
#include "net/i2p/data/i2cp/SendMessageMessage.h"

@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaUtilDate;
@class NetI2pDataDateAndFlags;

@interface NetI2pDataI2cpSendMessageExpiresMessage : NetI2pDataI2cpSendMessageMessage
@property (readonly, class) jint MESSAGE_TYPE NS_SWIFT_NAME(MESSAGE_TYPE);

+ (jint)MESSAGE_TYPE;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNetI2pDataDateAndFlags:(NetI2pDataDateAndFlags *)options;

- (JavaUtilDate *)getExpiration;

- (jlong)getExpirationTime;

- (jint)getFlags;

- (jint)getType;

- (void)readMessageWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                 withInt:(jint)length
                                 withInt:(jint)type;

- (void)setExpirationWithJavaUtilDate:(JavaUtilDate *)d;

- (void)setExpirationWithLong:(jlong)d;

- (void)setFlagsWithInt:(jint)f;

- (NSString *)description;

- (void)writeMessageWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2cpSendMessageExpiresMessage)

inline jint NetI2pDataI2cpSendMessageExpiresMessage_get_MESSAGE_TYPE(void);
#define NetI2pDataI2cpSendMessageExpiresMessage_MESSAGE_TYPE 36
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2cpSendMessageExpiresMessage, MESSAGE_TYPE, jint)

FOUNDATION_EXPORT void NetI2pDataI2cpSendMessageExpiresMessage_init(NetI2pDataI2cpSendMessageExpiresMessage *self);

FOUNDATION_EXPORT NetI2pDataI2cpSendMessageExpiresMessage *new_NetI2pDataI2cpSendMessageExpiresMessage_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2cpSendMessageExpiresMessage *create_NetI2pDataI2cpSendMessageExpiresMessage_init(void);

FOUNDATION_EXPORT void NetI2pDataI2cpSendMessageExpiresMessage_initWithNetI2pDataDateAndFlags_(NetI2pDataI2cpSendMessageExpiresMessage *self, NetI2pDataDateAndFlags *options);

FOUNDATION_EXPORT NetI2pDataI2cpSendMessageExpiresMessage *new_NetI2pDataI2cpSendMessageExpiresMessage_initWithNetI2pDataDateAndFlags_(NetI2pDataDateAndFlags *options) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2cpSendMessageExpiresMessage *create_NetI2pDataI2cpSendMessageExpiresMessage_initWithNetI2pDataDateAndFlags_(NetI2pDataDateAndFlags *options);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2cpSendMessageExpiresMessage)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataI2cpSendMessageExpiresMessage")
