//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/i2cp/SessionStatusMessage.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/StringBuilder.h"
#include "net/i2p/data/DataFormatException.h"
#include "net/i2p/data/DataHelper.h"
#include "net/i2p/data/i2cp/I2CPMessageException.h"
#include "net/i2p/data/i2cp/I2CPMessageImpl.h"
#include "net/i2p/data/i2cp/SessionId.h"
#include "net/i2p/data/i2cp/SessionStatusMessage.h"

@interface NetI2pDataI2cpSessionStatusMessage () {
 @public
  NetI2pDataI2cpSessionId *_sessionId_;
  jint _status_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pDataI2cpSessionStatusMessage, _sessionId_, NetI2pDataI2cpSessionId *)

@implementation NetI2pDataI2cpSessionStatusMessage

+ (jint)MESSAGE_TYPE {
  return NetI2pDataI2cpSessionStatusMessage_MESSAGE_TYPE;
}

+ (jint)STATUS_DESTROYED {
  return NetI2pDataI2cpSessionStatusMessage_STATUS_DESTROYED;
}

+ (jint)STATUS_CREATED {
  return NetI2pDataI2cpSessionStatusMessage_STATUS_CREATED;
}

+ (jint)STATUS_UPDATED {
  return NetI2pDataI2cpSessionStatusMessage_STATUS_UPDATED;
}

+ (jint)STATUS_INVALID {
  return NetI2pDataI2cpSessionStatusMessage_STATUS_INVALID;
}

+ (jint)STATUS_REFUSED {
  return NetI2pDataI2cpSessionStatusMessage_STATUS_REFUSED;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pDataI2cpSessionStatusMessage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NetI2pDataI2cpSessionId *)getSessionId {
  return _sessionId_;
}

- (NetI2pDataI2cpSessionId *)sessionId {
  return _sessionId_;
}

- (void)setSessionIdWithNetI2pDataI2cpSessionId:(NetI2pDataI2cpSessionId *)id_ {
  JreStrongAssign(&_sessionId_, id_);
}

- (jint)getStatus {
  return _status_;
}

- (void)setStatusWithInt:(jint)status {
  _status_ = status;
}

- (void)doReadMessageWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                   withInt:(jint)size {
  @try {
    JreStrongAssignAndConsume(&_sessionId_, new_NetI2pDataI2cpSessionId_init());
    [_sessionId_ readBytesWithJavaIoInputStream:inArg];
    _status_ = (jint) NetI2pDataDataHelper_readLongWithJavaIoInputStream_withInt_(inArg, 1);
  }
  @catch (NetI2pDataDataFormatException *dfe) {
    @throw create_NetI2pDataI2cpI2CPMessageException_initWithNSString_withJavaLangThrowable_(@"Unable to load the message data", dfe);
  }
}

- (IOSByteArray *)doWriteMessage {
  if (_sessionId_ == nil) @throw create_NetI2pDataI2cpI2CPMessageException_initWithNSString_(@"Unable to write out the message as there is not enough data");
  JavaIoByteArrayOutputStream *os = create_JavaIoByteArrayOutputStream_initWithInt_(64);
  @try {
    [((NetI2pDataI2cpSessionId *) nil_chk(_sessionId_)) writeBytesWithJavaIoOutputStream:os];
    NetI2pDataDataHelper_writeLongWithJavaIoOutputStream_withInt_withLong_(os, 1, _status_);
  }
  @catch (NetI2pDataDataFormatException *dfe) {
    @throw create_NetI2pDataI2cpI2CPMessageException_initWithNSString_withJavaLangThrowable_(@"Error writing out the message data", dfe);
  }
  return [os toByteArray];
}

- (jint)getType {
  return NetI2pDataI2cpSessionStatusMessage_MESSAGE_TYPE;
}

- (NSString *)description {
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_init();
  [buf appendWithNSString:@"[SessionStatusMessage: "];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tSessionId: "])) appendWithId:[self getSessionId]];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tStatus: "])) appendWithInt:[self getStatus]];
  [buf appendWithNSString:@"]"];
  return [buf description];
}

- (void)dealloc {
  RELEASE_(_sessionId_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataI2cpSessionId;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataI2cpSessionId;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, 6, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 6, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getSessionId);
  methods[2].selector = @selector(sessionId);
  methods[3].selector = @selector(setSessionIdWithNetI2pDataI2cpSessionId:);
  methods[4].selector = @selector(getStatus);
  methods[5].selector = @selector(setStatusWithInt:);
  methods[6].selector = @selector(doReadMessageWithJavaIoInputStream:withInt:);
  methods[7].selector = @selector(doWriteMessage);
  methods[8].selector = @selector(getType);
  methods[9].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MESSAGE_TYPE", "I", .constantValue.asInt = NetI2pDataI2cpSessionStatusMessage_MESSAGE_TYPE, 0x19, -1, -1, -1, -1 },
    { "_sessionId_", "LNetI2pDataI2cpSessionId;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_status_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "STATUS_DESTROYED", "I", .constantValue.asInt = NetI2pDataI2cpSessionStatusMessage_STATUS_DESTROYED, 0x19, -1, -1, -1, -1 },
    { "STATUS_CREATED", "I", .constantValue.asInt = NetI2pDataI2cpSessionStatusMessage_STATUS_CREATED, 0x19, -1, -1, -1, -1 },
    { "STATUS_UPDATED", "I", .constantValue.asInt = NetI2pDataI2cpSessionStatusMessage_STATUS_UPDATED, 0x19, -1, -1, -1, -1 },
    { "STATUS_INVALID", "I", .constantValue.asInt = NetI2pDataI2cpSessionStatusMessage_STATUS_INVALID, 0x19, -1, -1, -1, -1 },
    { "STATUS_REFUSED", "I", .constantValue.asInt = NetI2pDataI2cpSessionStatusMessage_STATUS_REFUSED, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setSessionId", "LNetI2pDataI2cpSessionId;", "setStatus", "I", "doReadMessage", "LJavaIoInputStream;I", "LNetI2pDataI2cpI2CPMessageException;LJavaIoIOException;", "toString" };
  static const J2ObjcClassInfo _NetI2pDataI2cpSessionStatusMessage = { "SessionStatusMessage", "net.i2p.data.i2cp", ptrTable, methods, fields, 7, 0x1, 10, 8, -1, -1, -1, -1, -1 };
  return &_NetI2pDataI2cpSessionStatusMessage;
}

@end

void NetI2pDataI2cpSessionStatusMessage_init(NetI2pDataI2cpSessionStatusMessage *self) {
  NetI2pDataI2cpI2CPMessageImpl_init(self);
  [self setStatusWithInt:NetI2pDataI2cpSessionStatusMessage_STATUS_INVALID];
}

NetI2pDataI2cpSessionStatusMessage *new_NetI2pDataI2cpSessionStatusMessage_init() {
  J2OBJC_NEW_IMPL(NetI2pDataI2cpSessionStatusMessage, init)
}

NetI2pDataI2cpSessionStatusMessage *create_NetI2pDataI2cpSessionStatusMessage_init() {
  J2OBJC_CREATE_IMPL(NetI2pDataI2cpSessionStatusMessage, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pDataI2cpSessionStatusMessage)
