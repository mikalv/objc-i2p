//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/i2cp/HostLookupMessage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataI2cpHostLookupMessage")
#ifdef RESTRICT_NetI2pDataI2cpHostLookupMessage
#define INCLUDE_ALL_NetI2pDataI2cpHostLookupMessage 0
#else
#define INCLUDE_ALL_NetI2pDataI2cpHostLookupMessage 1
#endif
#undef RESTRICT_NetI2pDataI2cpHostLookupMessage

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataI2cpHostLookupMessage_) && (INCLUDE_ALL_NetI2pDataI2cpHostLookupMessage || defined(INCLUDE_NetI2pDataI2cpHostLookupMessage))
#define NetI2pDataI2cpHostLookupMessage_

#define RESTRICT_NetI2pDataI2cpI2CPMessageImpl 1
#define INCLUDE_NetI2pDataI2cpI2CPMessageImpl 1
#include "net/i2p/data/i2cp/I2CPMessageImpl.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class NetI2pDataHash;
@class NetI2pDataI2cpSessionId;

@interface NetI2pDataI2cpHostLookupMessage : NetI2pDataI2cpI2CPMessageImpl
@property (readonly, class) jint MESSAGE_TYPE NS_SWIFT_NAME(MESSAGE_TYPE);
@property (readonly, class) jint LOOKUP_HASH NS_SWIFT_NAME(LOOKUP_HASH);
@property (readonly, class) jint LOOKUP_HOST NS_SWIFT_NAME(LOOKUP_HOST);

+ (jint)MESSAGE_TYPE;

+ (jint)LOOKUP_HASH;

+ (jint)LOOKUP_HOST;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNetI2pDataI2cpSessionId:(NetI2pDataI2cpSessionId *)id_
                                       withNetI2pDataHash:(NetI2pDataHash *)h
                                                 withLong:(jlong)reqID
                                                 withLong:(jlong)timeout;

- (instancetype __nonnull)initWithNetI2pDataI2cpSessionId:(NetI2pDataI2cpSessionId *)id_
                                             withNSString:(NSString *)host
                                                 withLong:(jlong)reqID
                                                 withLong:(jlong)timeout;

- (NetI2pDataHash *)getHash;

- (NSString *)getHostname;

- (jint)getLookupType;

- (jlong)getReqID;

- (NetI2pDataI2cpSessionId *)getSessionId;

- (jlong)getTimeout;

- (jint)getType;

- (NetI2pDataI2cpSessionId *)sessionId;

- (NSString *)description;

#pragma mark Protected

- (void)doReadMessageWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                   withInt:(jint)size;

- (IOSByteArray *)doWriteMessage;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2cpHostLookupMessage)

inline jint NetI2pDataI2cpHostLookupMessage_get_MESSAGE_TYPE(void);
#define NetI2pDataI2cpHostLookupMessage_MESSAGE_TYPE 38
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2cpHostLookupMessage, MESSAGE_TYPE, jint)

inline jint NetI2pDataI2cpHostLookupMessage_get_LOOKUP_HASH(void);
#define NetI2pDataI2cpHostLookupMessage_LOOKUP_HASH 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2cpHostLookupMessage, LOOKUP_HASH, jint)

inline jint NetI2pDataI2cpHostLookupMessage_get_LOOKUP_HOST(void);
#define NetI2pDataI2cpHostLookupMessage_LOOKUP_HOST 1
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataI2cpHostLookupMessage, LOOKUP_HOST, jint)

FOUNDATION_EXPORT void NetI2pDataI2cpHostLookupMessage_init(NetI2pDataI2cpHostLookupMessage *self);

FOUNDATION_EXPORT NetI2pDataI2cpHostLookupMessage *new_NetI2pDataI2cpHostLookupMessage_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2cpHostLookupMessage *create_NetI2pDataI2cpHostLookupMessage_init(void);

FOUNDATION_EXPORT void NetI2pDataI2cpHostLookupMessage_initWithNetI2pDataI2cpSessionId_withNetI2pDataHash_withLong_withLong_(NetI2pDataI2cpHostLookupMessage *self, NetI2pDataI2cpSessionId *id_, NetI2pDataHash *h, jlong reqID, jlong timeout);

FOUNDATION_EXPORT NetI2pDataI2cpHostLookupMessage *new_NetI2pDataI2cpHostLookupMessage_initWithNetI2pDataI2cpSessionId_withNetI2pDataHash_withLong_withLong_(NetI2pDataI2cpSessionId *id_, NetI2pDataHash *h, jlong reqID, jlong timeout) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2cpHostLookupMessage *create_NetI2pDataI2cpHostLookupMessage_initWithNetI2pDataI2cpSessionId_withNetI2pDataHash_withLong_withLong_(NetI2pDataI2cpSessionId *id_, NetI2pDataHash *h, jlong reqID, jlong timeout);

FOUNDATION_EXPORT void NetI2pDataI2cpHostLookupMessage_initWithNetI2pDataI2cpSessionId_withNSString_withLong_withLong_(NetI2pDataI2cpHostLookupMessage *self, NetI2pDataI2cpSessionId *id_, NSString *host, jlong reqID, jlong timeout);

FOUNDATION_EXPORT NetI2pDataI2cpHostLookupMessage *new_NetI2pDataI2cpHostLookupMessage_initWithNetI2pDataI2cpSessionId_withNSString_withLong_withLong_(NetI2pDataI2cpSessionId *id_, NSString *host, jlong reqID, jlong timeout) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2cpHostLookupMessage *create_NetI2pDataI2cpHostLookupMessage_initWithNetI2pDataI2cpSessionId_withNSString_withLong_withLong_(NetI2pDataI2cpSessionId *id_, NSString *host, jlong reqID, jlong timeout);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2cpHostLookupMessage)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataI2cpHostLookupMessage")
