//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/i2cp/SessionConfig.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataI2cpSessionConfig")
#ifdef RESTRICT_NetI2pDataI2cpSessionConfig
#define INCLUDE_ALL_NetI2pDataI2cpSessionConfig 0
#else
#define INCLUDE_ALL_NetI2pDataI2cpSessionConfig 1
#endif
#undef RESTRICT_NetI2pDataI2cpSessionConfig

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataI2cpSessionConfig_) && (INCLUDE_ALL_NetI2pDataI2cpSessionConfig || defined(INCLUDE_NetI2pDataI2cpSessionConfig))
#define NetI2pDataI2cpSessionConfig_

#define RESTRICT_NetI2pDataDataStructureImpl 1
#define INCLUDE_NetI2pDataDataStructureImpl 1
#include "net/i2p/data/DataStructureImpl.h"

@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaUtilDate;
@class JavaUtilProperties;
@class NetI2pDataDestination;
@class NetI2pDataSignature;
@class NetI2pDataSigningPrivateKey;

@interface NetI2pDataI2cpSessionConfig : NetI2pDataDataStructureImpl

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNetI2pDataDestination:(NetI2pDataDestination *)dest;

- (jboolean)isEqual:(id)object;

- (JavaUtilDate *)getCreationDate;

- (NetI2pDataDestination *)getDestination;

- (JavaUtilProperties *)getOptions;

- (NetI2pDataSignature *)getSignature;

- (NSUInteger)hash;

- (void)readBytesWithJavaIoInputStream:(JavaIoInputStream *)rawConfig;

- (void)setCreationDateWithJavaUtilDate:(JavaUtilDate *)date;

- (void)setOptionsWithJavaUtilProperties:(JavaUtilProperties *)options;

- (void)setSignatureWithNetI2pDataSignature:(NetI2pDataSignature *)sig;

- (void)signSessionConfigWithNetI2pDataSigningPrivateKey:(NetI2pDataSigningPrivateKey *)signingKey;

- (jboolean)tooOld;

- (NSString *)description;

- (jboolean)verifySignature;

- (void)writeBytesWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2cpSessionConfig)

FOUNDATION_EXPORT void NetI2pDataI2cpSessionConfig_init(NetI2pDataI2cpSessionConfig *self);

FOUNDATION_EXPORT NetI2pDataI2cpSessionConfig *new_NetI2pDataI2cpSessionConfig_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2cpSessionConfig *create_NetI2pDataI2cpSessionConfig_init(void);

FOUNDATION_EXPORT void NetI2pDataI2cpSessionConfig_initWithNetI2pDataDestination_(NetI2pDataI2cpSessionConfig *self, NetI2pDataDestination *dest);

FOUNDATION_EXPORT NetI2pDataI2cpSessionConfig *new_NetI2pDataI2cpSessionConfig_initWithNetI2pDataDestination_(NetI2pDataDestination *dest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2cpSessionConfig *create_NetI2pDataI2cpSessionConfig_initWithNetI2pDataDestination_(NetI2pDataDestination *dest);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2cpSessionConfig)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataI2cpSessionConfig")
