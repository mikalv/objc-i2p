//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/i2cp/DestReplyMessage.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/StringBuilder.h"
#include "net/i2p/data/DataFormatException.h"
#include "net/i2p/data/Destination.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/data/i2cp/DestReplyMessage.h"
#include "net/i2p/data/i2cp/I2CPMessageException.h"
#include "net/i2p/data/i2cp/I2CPMessageImpl.h"

@interface NetI2pDataI2cpDestReplyMessage () {
 @public
  NetI2pDataDestination *_dest_;
  NetI2pDataHash *_hash_;
}

@end

J2OBJC_FIELD_SETTER(NetI2pDataI2cpDestReplyMessage, _dest_, NetI2pDataDestination *)
J2OBJC_FIELD_SETTER(NetI2pDataI2cpDestReplyMessage, _hash_, NetI2pDataHash *)

@implementation NetI2pDataI2cpDestReplyMessage

+ (jint)MESSAGE_TYPE {
  return NetI2pDataI2cpDestReplyMessage_MESSAGE_TYPE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pDataI2cpDestReplyMessage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNetI2pDataDestination:(NetI2pDataDestination *)d {
  NetI2pDataI2cpDestReplyMessage_initWithNetI2pDataDestination_(self, d);
  return self;
}

- (instancetype)initWithNetI2pDataHash:(NetI2pDataHash *)h {
  NetI2pDataI2cpDestReplyMessage_initWithNetI2pDataHash_(self, h);
  return self;
}

- (NetI2pDataDestination *)getDestination {
  return _dest_;
}

- (NetI2pDataHash *)getHash {
  return _hash_;
}

- (void)doReadMessageWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                   withInt:(jint)size {
  if (size == 0) {
    JreStrongAssign(&_dest_, nil);
    JreStrongAssign(&_hash_, nil);
  }
  else {
    @try {
      if (size == NetI2pDataHash_HASH_LENGTH) {
        JreStrongAssign(&_hash_, NetI2pDataHash_createWithJavaIoInputStream_(inArg));
      }
      else {
        JreStrongAssign(&_dest_, NetI2pDataDestination_createWithJavaIoInputStream_(inArg));
      }
    }
    @catch (NetI2pDataDataFormatException *dfe) {
      JreStrongAssign(&_dest_, nil);
      JreStrongAssign(&_hash_, nil);
    }
  }
}

- (IOSByteArray *)doWriteMessage {
  if (_dest_ == nil) {
    if (_hash_ == nil) return [IOSByteArray arrayWithLength:0];
    return [_hash_ getData];
  }
  JavaIoByteArrayOutputStream *os = create_JavaIoByteArrayOutputStream_initWithInt_([_dest_ size]);
  @try {
    [((NetI2pDataDestination *) nil_chk(_dest_)) writeBytesWithJavaIoOutputStream:os];
  }
  @catch (NetI2pDataDataFormatException *dfe) {
    @throw create_NetI2pDataI2cpI2CPMessageException_initWithNSString_withJavaLangThrowable_(@"Error writing out the dest", dfe);
  }
  return [os toByteArray];
}

- (jint)getType {
  return NetI2pDataI2cpDestReplyMessage_MESSAGE_TYPE;
}

- (NSString *)description {
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_init();
  [buf appendWithNSString:@"[DestReplyMessage: "];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tDestination: "])) appendWithId:_dest_];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithNSString:@"\n\tHash: "])) appendWithId:_hash_];
  [buf appendWithNSString:@"]"];
  return [buf description];
}

- (void)dealloc {
  RELEASE_(_dest_);
  RELEASE_(_hash_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataDestination;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataHash;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, 4, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 4, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNetI2pDataDestination:);
  methods[2].selector = @selector(initWithNetI2pDataHash:);
  methods[3].selector = @selector(getDestination);
  methods[4].selector = @selector(getHash);
  methods[5].selector = @selector(doReadMessageWithJavaIoInputStream:withInt:);
  methods[6].selector = @selector(doWriteMessage);
  methods[7].selector = @selector(getType);
  methods[8].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MESSAGE_TYPE", "I", .constantValue.asInt = NetI2pDataI2cpDestReplyMessage_MESSAGE_TYPE, 0x19, -1, -1, -1, -1 },
    { "_dest_", "LNetI2pDataDestination;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_hash_", "LNetI2pDataHash;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNetI2pDataDestination;", "LNetI2pDataHash;", "doReadMessage", "LJavaIoInputStream;I", "LNetI2pDataI2cpI2CPMessageException;LJavaIoIOException;", "toString" };
  static const J2ObjcClassInfo _NetI2pDataI2cpDestReplyMessage = { "DestReplyMessage", "net.i2p.data.i2cp", ptrTable, methods, fields, 7, 0x1, 9, 3, -1, -1, -1, -1, -1 };
  return &_NetI2pDataI2cpDestReplyMessage;
}

@end

void NetI2pDataI2cpDestReplyMessage_init(NetI2pDataI2cpDestReplyMessage *self) {
  NetI2pDataI2cpI2CPMessageImpl_init(self);
}

NetI2pDataI2cpDestReplyMessage *new_NetI2pDataI2cpDestReplyMessage_init() {
  J2OBJC_NEW_IMPL(NetI2pDataI2cpDestReplyMessage, init)
}

NetI2pDataI2cpDestReplyMessage *create_NetI2pDataI2cpDestReplyMessage_init() {
  J2OBJC_CREATE_IMPL(NetI2pDataI2cpDestReplyMessage, init)
}

void NetI2pDataI2cpDestReplyMessage_initWithNetI2pDataDestination_(NetI2pDataI2cpDestReplyMessage *self, NetI2pDataDestination *d) {
  NetI2pDataI2cpI2CPMessageImpl_init(self);
  JreStrongAssign(&self->_dest_, d);
}

NetI2pDataI2cpDestReplyMessage *new_NetI2pDataI2cpDestReplyMessage_initWithNetI2pDataDestination_(NetI2pDataDestination *d) {
  J2OBJC_NEW_IMPL(NetI2pDataI2cpDestReplyMessage, initWithNetI2pDataDestination_, d)
}

NetI2pDataI2cpDestReplyMessage *create_NetI2pDataI2cpDestReplyMessage_initWithNetI2pDataDestination_(NetI2pDataDestination *d) {
  J2OBJC_CREATE_IMPL(NetI2pDataI2cpDestReplyMessage, initWithNetI2pDataDestination_, d)
}

void NetI2pDataI2cpDestReplyMessage_initWithNetI2pDataHash_(NetI2pDataI2cpDestReplyMessage *self, NetI2pDataHash *h) {
  NetI2pDataI2cpI2CPMessageImpl_init(self);
  JreStrongAssign(&self->_hash_, h);
}

NetI2pDataI2cpDestReplyMessage *new_NetI2pDataI2cpDestReplyMessage_initWithNetI2pDataHash_(NetI2pDataHash *h) {
  J2OBJC_NEW_IMPL(NetI2pDataI2cpDestReplyMessage, initWithNetI2pDataHash_, h)
}

NetI2pDataI2cpDestReplyMessage *create_NetI2pDataI2cpDestReplyMessage_initWithNetI2pDataHash_(NetI2pDataHash *h) {
  J2OBJC_CREATE_IMPL(NetI2pDataI2cpDestReplyMessage, initWithNetI2pDataHash_, h)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pDataI2cpDestReplyMessage)
