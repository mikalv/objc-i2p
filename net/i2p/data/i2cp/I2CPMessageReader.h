//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/i2cp/I2CPMessageReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataI2cpI2CPMessageReader")
#ifdef RESTRICT_NetI2pDataI2cpI2CPMessageReader
#define INCLUDE_ALL_NetI2pDataI2cpI2CPMessageReader 0
#else
#define INCLUDE_ALL_NetI2pDataI2cpI2CPMessageReader 1
#endif
#undef RESTRICT_NetI2pDataI2cpI2CPMessageReader

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataI2cpI2CPMessageReader_) && (INCLUDE_ALL_NetI2pDataI2cpI2CPMessageReader || defined(INCLUDE_NetI2pDataI2cpI2CPMessageReader))
#define NetI2pDataI2cpI2CPMessageReader_

@class JavaIoInputStream;
@class JavaLangThread;
@class JavaUtilConcurrentAtomicAtomicLong;
@class NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner;
@protocol NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener;

@interface NetI2pDataI2cpI2CPMessageReader : NSObject {
 @public
  id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener> _listener_;
  NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner *_reader_;
  JavaLangThread *_readerThread_;
}
@property (readonly, class, strong) JavaUtilConcurrentAtomicAtomicLong *__readerId NS_SWIFT_NAME(__readerId);

+ (JavaUtilConcurrentAtomicAtomicLong *)__readerId;

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)stream
withNetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener:(id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener>)lsnr;

- (id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener>)getListener;

- (void)pauseReading;

- (void)resumeReading;

- (void)setListenerWithNetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener:(id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener>)lsnr;

- (void)startReading;

- (void)stopReading;

#pragma mark Protected

- (instancetype __nonnull)initWithNetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener:(id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener>)lsnr;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pDataI2cpI2CPMessageReader)

J2OBJC_FIELD_SETTER(NetI2pDataI2cpI2CPMessageReader, _listener_, id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener>)
J2OBJC_FIELD_SETTER(NetI2pDataI2cpI2CPMessageReader, _reader_, NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner *)
J2OBJC_FIELD_SETTER(NetI2pDataI2cpI2CPMessageReader, _readerThread_, JavaLangThread *)

inline JavaUtilConcurrentAtomicAtomicLong *NetI2pDataI2cpI2CPMessageReader_get___readerId(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicLong *NetI2pDataI2cpI2CPMessageReader___readerId;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetI2pDataI2cpI2CPMessageReader, __readerId, JavaUtilConcurrentAtomicAtomicLong *)

FOUNDATION_EXPORT void NetI2pDataI2cpI2CPMessageReader_initWithJavaIoInputStream_withNetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener_(NetI2pDataI2cpI2CPMessageReader *self, JavaIoInputStream *stream, id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener> lsnr);

FOUNDATION_EXPORT NetI2pDataI2cpI2CPMessageReader *new_NetI2pDataI2cpI2CPMessageReader_initWithJavaIoInputStream_withNetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener_(JavaIoInputStream *stream, id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener> lsnr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2cpI2CPMessageReader *create_NetI2pDataI2cpI2CPMessageReader_initWithJavaIoInputStream_withNetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener_(JavaIoInputStream *stream, id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener> lsnr);

FOUNDATION_EXPORT void NetI2pDataI2cpI2CPMessageReader_initWithNetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener_(NetI2pDataI2cpI2CPMessageReader *self, id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener> lsnr);

FOUNDATION_EXPORT NetI2pDataI2cpI2CPMessageReader *new_NetI2pDataI2cpI2CPMessageReader_initWithNetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener_(id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener> lsnr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2cpI2CPMessageReader *create_NetI2pDataI2cpI2CPMessageReader_initWithNetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener_(id<NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener> lsnr);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2cpI2CPMessageReader)

#endif

#if !defined (NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener_) && (INCLUDE_ALL_NetI2pDataI2cpI2CPMessageReader || defined(INCLUDE_NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener))
#define NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener_

@class JavaLangException;
@class NetI2pDataI2cpI2CPMessageReader;
@protocol NetI2pDataI2cpI2CPMessage;

@protocol NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener < JavaObject >

- (void)messageReceivedWithNetI2pDataI2cpI2CPMessageReader:(NetI2pDataI2cpI2CPMessageReader *)reader
                             withNetI2pDataI2cpI2CPMessage:(id<NetI2pDataI2cpI2CPMessage>)message;

- (void)readErrorWithNetI2pDataI2cpI2CPMessageReader:(NetI2pDataI2cpI2CPMessageReader *)reader
                               withJavaLangException:(JavaLangException *)error;

- (void)disconnectedWithNetI2pDataI2cpI2CPMessageReader:(NetI2pDataI2cpI2CPMessageReader *)reader;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2cpI2CPMessageReader_I2CPMessageEventListener)

#endif

#if !defined (NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner_) && (INCLUDE_ALL_NetI2pDataI2cpI2CPMessageReader || defined(INCLUDE_NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner))
#define NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class NetI2pDataI2cpI2CPMessageReader;

@interface NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner : NSObject < JavaLangRunnable > {
 @public
  volatile_jboolean _doRun_;
  volatile_jboolean _stayAlive_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pDataI2cpI2CPMessageReader:(NetI2pDataI2cpI2CPMessageReader *)outer$;

- (void)cancelRunner;

- (void)pauseRunner;

- (void)resumeRunner;

- (void)run;

#pragma mark Protected

- (void)run2;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner)

FOUNDATION_EXPORT void NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner_initWithNetI2pDataI2cpI2CPMessageReader_(NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner *self, NetI2pDataI2cpI2CPMessageReader *outer$);

FOUNDATION_EXPORT NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner *new_NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner_initWithNetI2pDataI2cpI2CPMessageReader_(NetI2pDataI2cpI2CPMessageReader *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner *create_NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner_initWithNetI2pDataI2cpI2CPMessageReader_(NetI2pDataI2cpI2CPMessageReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataI2cpI2CPMessageReader_I2CPMessageReaderRunner)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataI2cpI2CPMessageReader")
