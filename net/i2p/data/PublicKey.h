//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/PublicKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataPublicKey")
#ifdef RESTRICT_NetI2pDataPublicKey
#define INCLUDE_ALL_NetI2pDataPublicKey 0
#else
#define INCLUDE_ALL_NetI2pDataPublicKey 1
#endif
#undef RESTRICT_NetI2pDataPublicKey

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataPublicKey_) && (INCLUDE_ALL_NetI2pDataPublicKey || defined(INCLUDE_NetI2pDataPublicKey))
#define NetI2pDataPublicKey_

#define RESTRICT_NetI2pDataSimpleDataStructure 1
#define INCLUDE_NetI2pDataSimpleDataStructure 1
#include "net/i2p/data/SimpleDataStructure.h"

@class IOSByteArray;
@class JavaIoInputStream;

@interface NetI2pDataPublicKey : NetI2pDataSimpleDataStructure
@property (readonly, class) jint KEYSIZE_BYTES NS_SWIFT_NAME(KEYSIZE_BYTES);

+ (jint)KEYSIZE_BYTES;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data;

- (instancetype __nonnull)initWithNSString:(NSString *)base64Data;

+ (void)clearCache;

+ (NetI2pDataPublicKey *)createWithByteArray:(IOSByteArray *)data
                                     withInt:(jint)off;

+ (NetI2pDataPublicKey *)createWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (jint)length;

@end

J2OBJC_STATIC_INIT(NetI2pDataPublicKey)

inline jint NetI2pDataPublicKey_get_KEYSIZE_BYTES(void);
#define NetI2pDataPublicKey_KEYSIZE_BYTES 256
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataPublicKey, KEYSIZE_BYTES, jint)

FOUNDATION_EXPORT NetI2pDataPublicKey *NetI2pDataPublicKey_createWithByteArray_withInt_(IOSByteArray *data, jint off);

FOUNDATION_EXPORT NetI2pDataPublicKey *NetI2pDataPublicKey_createWithJavaIoInputStream_(JavaIoInputStream *inArg);

FOUNDATION_EXPORT void NetI2pDataPublicKey_init(NetI2pDataPublicKey *self);

FOUNDATION_EXPORT NetI2pDataPublicKey *new_NetI2pDataPublicKey_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataPublicKey *create_NetI2pDataPublicKey_init(void);

FOUNDATION_EXPORT void NetI2pDataPublicKey_initWithByteArray_(NetI2pDataPublicKey *self, IOSByteArray *data);

FOUNDATION_EXPORT NetI2pDataPublicKey *new_NetI2pDataPublicKey_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataPublicKey *create_NetI2pDataPublicKey_initWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void NetI2pDataPublicKey_initWithNSString_(NetI2pDataPublicKey *self, NSString *base64Data);

FOUNDATION_EXPORT NetI2pDataPublicKey *new_NetI2pDataPublicKey_initWithNSString_(NSString *base64Data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataPublicKey *create_NetI2pDataPublicKey_initWithNSString_(NSString *base64Data);

FOUNDATION_EXPORT void NetI2pDataPublicKey_clearCache(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataPublicKey)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataPublicKey")
