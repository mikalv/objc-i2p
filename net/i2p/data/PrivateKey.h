//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/PrivateKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataPrivateKey")
#ifdef RESTRICT_NetI2pDataPrivateKey
#define INCLUDE_ALL_NetI2pDataPrivateKey 0
#else
#define INCLUDE_ALL_NetI2pDataPrivateKey 1
#endif
#undef RESTRICT_NetI2pDataPrivateKey

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataPrivateKey_) && (INCLUDE_ALL_NetI2pDataPrivateKey || defined(INCLUDE_NetI2pDataPrivateKey))
#define NetI2pDataPrivateKey_

#define RESTRICT_NetI2pDataSimpleDataStructure 1
#define INCLUDE_NetI2pDataSimpleDataStructure 1
#include "net/i2p/data/SimpleDataStructure.h"

@class IOSByteArray;
@class NetI2pDataPublicKey;

@interface NetI2pDataPrivateKey : NetI2pDataSimpleDataStructure
@property (readonly, class) jint KEYSIZE_BYTES NS_SWIFT_NAME(KEYSIZE_BYTES);

+ (jint)KEYSIZE_BYTES;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data;

- (instancetype __nonnull)initWithNSString:(NSString *)base64Data;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

- (jint)length;

- (NetI2pDataPublicKey *)toPublic;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataPrivateKey)

inline jint NetI2pDataPrivateKey_get_KEYSIZE_BYTES(void);
#define NetI2pDataPrivateKey_KEYSIZE_BYTES 256
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataPrivateKey, KEYSIZE_BYTES, jint)

FOUNDATION_EXPORT void NetI2pDataPrivateKey_init(NetI2pDataPrivateKey *self);

FOUNDATION_EXPORT NetI2pDataPrivateKey *new_NetI2pDataPrivateKey_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataPrivateKey *create_NetI2pDataPrivateKey_init(void);

FOUNDATION_EXPORT void NetI2pDataPrivateKey_initWithByteArray_(NetI2pDataPrivateKey *self, IOSByteArray *data);

FOUNDATION_EXPORT NetI2pDataPrivateKey *new_NetI2pDataPrivateKey_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataPrivateKey *create_NetI2pDataPrivateKey_initWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void NetI2pDataPrivateKey_initWithNSString_(NetI2pDataPrivateKey *self, NSString *base64Data);

FOUNDATION_EXPORT NetI2pDataPrivateKey *new_NetI2pDataPrivateKey_initWithNSString_(NSString *base64Data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataPrivateKey *create_NetI2pDataPrivateKey_initWithNSString_(NSString *base64Data);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataPrivateKey)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataPrivateKey")
