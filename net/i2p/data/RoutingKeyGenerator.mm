//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/RoutingKeyGenerator.java
//

#include "J2ObjC_source.h"
#include "net/i2p/I2PAppContext.h"
#include "net/i2p/data/Hash.h"
#include "net/i2p/data/RoutingKeyGenerator.h"

@implementation NetI2pDataRoutingKeyGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pDataRoutingKeyGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NetI2pDataRoutingKeyGenerator *)getInstance {
  return NetI2pDataRoutingKeyGenerator_getInstance();
}

- (jlong)getLastChanged {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NetI2pDataHash *)getRoutingKeyWithNetI2pDataHash:(NetI2pDataHash *)origKey {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataRoutingKeyGenerator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataHash;", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getInstance);
  methods[2].selector = @selector(getLastChanged);
  methods[3].selector = @selector(getRoutingKeyWithNetI2pDataHash:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getRoutingKey", "LNetI2pDataHash;" };
  static const J2ObjcClassInfo _NetI2pDataRoutingKeyGenerator = { "RoutingKeyGenerator", "net.i2p.data", ptrTable, methods, NULL, 7, 0x401, 4, 0, -1, -1, -1, -1, -1 };
  return &_NetI2pDataRoutingKeyGenerator;
}

@end

void NetI2pDataRoutingKeyGenerator_init(NetI2pDataRoutingKeyGenerator *self) {
  NSObject_init(self);
}

NetI2pDataRoutingKeyGenerator *NetI2pDataRoutingKeyGenerator_getInstance() {
  NetI2pDataRoutingKeyGenerator_initialize();
  return [((NetI2pI2PAppContext *) nil_chk(NetI2pI2PAppContext_getGlobalContext())) routingKeyGenerator];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pDataRoutingKeyGenerator)
