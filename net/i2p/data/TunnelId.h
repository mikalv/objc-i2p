//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/data/TunnelId.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pDataTunnelId")
#ifdef RESTRICT_NetI2pDataTunnelId
#define INCLUDE_ALL_NetI2pDataTunnelId 0
#else
#define INCLUDE_ALL_NetI2pDataTunnelId 1
#endif
#undef RESTRICT_NetI2pDataTunnelId

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pDataTunnelId_) && (INCLUDE_ALL_NetI2pDataTunnelId || defined(INCLUDE_NetI2pDataTunnelId))
#define NetI2pDataTunnelId_

#define RESTRICT_NetI2pDataDataStructureImpl 1
#define INCLUDE_NetI2pDataDataStructureImpl 1
#include "net/i2p/data/DataStructureImpl.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;

@interface NetI2pDataTunnelId : NetI2pDataDataStructureImpl
@property (readonly, class) jlong MAX_ID_VALUE NS_SWIFT_NAME(MAX_ID_VALUE);

+ (jlong)MAX_ID_VALUE;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithLong:(jlong)id_;

- (jboolean)isEqual:(id)obj;

- (void)fromByteArrayWithByteArray:(IOSByteArray *)data;

- (jlong)getTunnelId;

- (NSUInteger)hash;

- (void)readBytesWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (void)setTunnelIdWithLong:(jlong)id_;

- (IOSByteArray *)toByteArray;

- (NSString *)description;

- (void)writeBytesWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pDataTunnelId)

inline jlong NetI2pDataTunnelId_get_MAX_ID_VALUE(void);
#define NetI2pDataTunnelId_MAX_ID_VALUE 4294967295LL
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pDataTunnelId, MAX_ID_VALUE, jlong)

FOUNDATION_EXPORT void NetI2pDataTunnelId_init(NetI2pDataTunnelId *self);

FOUNDATION_EXPORT NetI2pDataTunnelId *new_NetI2pDataTunnelId_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataTunnelId *create_NetI2pDataTunnelId_init(void);

FOUNDATION_EXPORT void NetI2pDataTunnelId_initWithLong_(NetI2pDataTunnelId *self, jlong id_);

FOUNDATION_EXPORT NetI2pDataTunnelId *new_NetI2pDataTunnelId_initWithLong_(jlong id_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pDataTunnelId *create_NetI2pDataTunnelId_initWithLong_(jlong id_);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pDataTunnelId)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pDataTunnelId")
