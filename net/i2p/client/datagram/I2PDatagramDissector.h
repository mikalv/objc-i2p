//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/client/datagram/I2PDatagramDissector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pClientDatagramI2PDatagramDissector")
#ifdef RESTRICT_NetI2pClientDatagramI2PDatagramDissector
#define INCLUDE_ALL_NetI2pClientDatagramI2PDatagramDissector 0
#else
#define INCLUDE_ALL_NetI2pClientDatagramI2PDatagramDissector 1
#endif
#undef RESTRICT_NetI2pClientDatagramI2PDatagramDissector

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pClientDatagramI2PDatagramDissector_) && (INCLUDE_ALL_NetI2pClientDatagramI2PDatagramDissector || defined(INCLUDE_NetI2pClientDatagramI2PDatagramDissector))
#define NetI2pClientDatagramI2PDatagramDissector_

@class IOSByteArray;
@class NetI2pDataDestination;
@class NetI2pDataHash;

@interface NetI2pClientDatagramI2PDatagramDissector : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (NetI2pDataHash *)extractHash;

- (IOSByteArray *)extractPayload;

- (NetI2pDataDestination *)extractSender;

- (NetI2pDataHash *)getHash;

- (IOSByteArray *)getPayload;

- (NetI2pDataDestination *)getSender;

- (void)loadI2PDatagramWithByteArray:(IOSByteArray *)dgram;

- (void)verifySignature;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pClientDatagramI2PDatagramDissector)

FOUNDATION_EXPORT void NetI2pClientDatagramI2PDatagramDissector_init(NetI2pClientDatagramI2PDatagramDissector *self);

FOUNDATION_EXPORT NetI2pClientDatagramI2PDatagramDissector *new_NetI2pClientDatagramI2PDatagramDissector_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pClientDatagramI2PDatagramDissector *create_NetI2pClientDatagramI2PDatagramDissector_init(void);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pClientDatagramI2PDatagramDissector)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pClientDatagramI2PDatagramDissector")
