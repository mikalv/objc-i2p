//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/client/datagram/I2PInvalidDatagramException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pClientDatagramI2PInvalidDatagramException")
#ifdef RESTRICT_NetI2pClientDatagramI2PInvalidDatagramException
#define INCLUDE_ALL_NetI2pClientDatagramI2PInvalidDatagramException 0
#else
#define INCLUDE_ALL_NetI2pClientDatagramI2PInvalidDatagramException 1
#endif
#undef RESTRICT_NetI2pClientDatagramI2PInvalidDatagramException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pClientDatagramI2PInvalidDatagramException_) && (INCLUDE_ALL_NetI2pClientDatagramI2PInvalidDatagramException || defined(INCLUDE_NetI2pClientDatagramI2PInvalidDatagramException))
#define NetI2pClientDatagramI2PInvalidDatagramException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class JavaLangThrowable;

@interface NetI2pClientDatagramI2PInvalidDatagramException : JavaLangException

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)s;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pClientDatagramI2PInvalidDatagramException)

FOUNDATION_EXPORT void NetI2pClientDatagramI2PInvalidDatagramException_init(NetI2pClientDatagramI2PInvalidDatagramException *self);

FOUNDATION_EXPORT NetI2pClientDatagramI2PInvalidDatagramException *new_NetI2pClientDatagramI2PInvalidDatagramException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pClientDatagramI2PInvalidDatagramException *create_NetI2pClientDatagramI2PInvalidDatagramException_init(void);

FOUNDATION_EXPORT void NetI2pClientDatagramI2PInvalidDatagramException_initWithNSString_(NetI2pClientDatagramI2PInvalidDatagramException *self, NSString *s);

FOUNDATION_EXPORT NetI2pClientDatagramI2PInvalidDatagramException *new_NetI2pClientDatagramI2PInvalidDatagramException_initWithNSString_(NSString *s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pClientDatagramI2PInvalidDatagramException *create_NetI2pClientDatagramI2PInvalidDatagramException_initWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pClientDatagramI2PInvalidDatagramException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pClientDatagramI2PInvalidDatagramException")
