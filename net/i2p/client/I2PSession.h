//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/client/I2PSession.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pClientI2PSession")
#ifdef RESTRICT_NetI2pClientI2PSession
#define INCLUDE_ALL_NetI2pClientI2PSession 0
#else
#define INCLUDE_ALL_NetI2pClientI2PSession 1
#endif
#undef RESTRICT_NetI2pClientI2PSession

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pClientI2PSession_) && (INCLUDE_ALL_NetI2pClientI2PSession || defined(INCLUDE_NetI2pClientI2PSession))
#define NetI2pClientI2PSession_

@class IOSByteArray;
@class IOSIntArray;
@class JavaIoInputStream;
@class JavaUtilProperties;
@class NetI2pClientSendMessageOptions;
@class NetI2pDataDestination;
@class NetI2pDataHash;
@class NetI2pDataPrivateKey;
@class NetI2pDataSessionKey;
@class NetI2pDataSigningPrivateKey;
@protocol JavaUtilList;
@protocol JavaUtilSet;
@protocol NetI2pClientI2PSessionListener;
@protocol NetI2pClientI2PSessionMuxedListener;
@protocol NetI2pClientSendMessageStatusListener;

@protocol NetI2pClientI2PSession < JavaObject >

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)proto
                                         withInt:(jint)fromport
                                         withInt:(jint)toport;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                        withNetI2pDataSessionKey:(NetI2pDataSessionKey *)keyUsed
                                 withJavaUtilSet:(id<JavaUtilSet>)tagsSent;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size
                        withNetI2pDataSessionKey:(NetI2pDataSessionKey *)keyUsed
                                 withJavaUtilSet:(id<JavaUtilSet>)tagsSent;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size
                        withNetI2pDataSessionKey:(NetI2pDataSessionKey *)keyUsed
                                 withJavaUtilSet:(id<JavaUtilSet>)tagsSent
                                        withLong:(jlong)expire;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size
                        withNetI2pDataSessionKey:(NetI2pDataSessionKey *)keyUsed
                                 withJavaUtilSet:(id<JavaUtilSet>)tagsSent
                                         withInt:(jint)proto
                                         withInt:(jint)fromPort
                                         withInt:(jint)toPort;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size
                        withNetI2pDataSessionKey:(NetI2pDataSessionKey *)keyUsed
                                 withJavaUtilSet:(id<JavaUtilSet>)tagsSent
                                        withLong:(jlong)expire
                                         withInt:(jint)proto
                                         withInt:(jint)fromPort
                                         withInt:(jint)toPort;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size
                        withNetI2pDataSessionKey:(NetI2pDataSessionKey *)keyUsed
                                 withJavaUtilSet:(id<JavaUtilSet>)tagsSent
                                        withLong:(jlong)expire
                                         withInt:(jint)proto
                                         withInt:(jint)fromPort
                                         withInt:(jint)toPort
                                         withInt:(jint)flags;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size
                                         withInt:(jint)proto
                                         withInt:(jint)fromPort
                                         withInt:(jint)toPort
              withNetI2pClientSendMessageOptions:(NetI2pClientSendMessageOptions *)options;

- (jlong)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                withByteArray:(IOSByteArray *)payload
                                      withInt:(jint)offset
                                      withInt:(jint)size
                                      withInt:(jint)proto
                                      withInt:(jint)fromPort
                                      withInt:(jint)toPort
           withNetI2pClientSendMessageOptions:(NetI2pClientSendMessageOptions *)options
    withNetI2pClientSendMessageStatusListener:(id<NetI2pClientSendMessageStatusListener>)listener;

- (IOSByteArray *)receiveMessageWithInt:(jint)msgId;

- (void)reportAbuseWithInt:(jint)msgId
                   withInt:(jint)severity;

- (void)setSessionListenerWithNetI2pClientI2PSessionListener:(id<NetI2pClientI2PSessionListener>)lsnr;

- (void)destroySession;

- (id<NetI2pClientI2PSession>)addSubsessionWithJavaIoInputStream:(JavaIoInputStream *)privateKeyStream
                                          withJavaUtilProperties:(JavaUtilProperties *)opts;

- (void)removeSubsessionWithNetI2pClientI2PSession:(id<NetI2pClientI2PSession>)session;

- (id<JavaUtilList>)getSubsessions;

- (void)connect;

- (jboolean)isClosed;

- (NetI2pDataDestination *)getMyDestination;

- (NetI2pDataPrivateKey *)getDecryptionKey;

- (NetI2pDataSigningPrivateKey *)getPrivateKey;

- (NetI2pDataDestination *)lookupDestWithNetI2pDataHash:(NetI2pDataHash *)h;

- (NetI2pDataDestination *)lookupDestWithNetI2pDataHash:(NetI2pDataHash *)h
                                               withLong:(jlong)maxWait;

- (NetI2pDataDestination *)lookupDestWithNSString:(NSString *)name;

- (NetI2pDataDestination *)lookupDestWithNSString:(NSString *)name
                                         withLong:(jlong)maxWait;

- (void)updateOptionsWithJavaUtilProperties:(JavaUtilProperties *)options;

- (IOSIntArray *)bandwidthLimits;

- (void)addSessionListenerWithNetI2pClientI2PSessionListener:(id<NetI2pClientI2PSessionListener>)lsnr
                                                     withInt:(jint)proto
                                                     withInt:(jint)port;

- (void)addMuxedSessionListenerWithNetI2pClientI2PSessionMuxedListener:(id<NetI2pClientI2PSessionMuxedListener>)l
                                                               withInt:(jint)proto
                                                               withInt:(jint)port;

- (void)removeListenerWithInt:(jint)proto
                      withInt:(jint)port;

@end

@interface NetI2pClientI2PSession : NSObject
@property (readonly, class) jint PORT_ANY NS_SWIFT_NAME(PORT_ANY);
@property (readonly, class) jint PORT_UNSPECIFIED NS_SWIFT_NAME(PORT_UNSPECIFIED);
@property (readonly, class) jint PROTO_ANY NS_SWIFT_NAME(PROTO_ANY);
@property (readonly, class) jint PROTO_UNSPECIFIED NS_SWIFT_NAME(PROTO_UNSPECIFIED);
@property (readonly, class) jint PROTO_STREAMING NS_SWIFT_NAME(PROTO_STREAMING);
@property (readonly, class) jint PROTO_DATAGRAM NS_SWIFT_NAME(PROTO_DATAGRAM);
@property (readonly, class) jint PROTO_DATAGRAM_RAW NS_SWIFT_NAME(PROTO_DATAGRAM_RAW);

+ (jint)PORT_ANY;

+ (jint)PORT_UNSPECIFIED;

+ (jint)PROTO_ANY;

+ (jint)PROTO_UNSPECIFIED;

+ (jint)PROTO_STREAMING;

+ (jint)PROTO_DATAGRAM;

+ (jint)PROTO_DATAGRAM_RAW;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pClientI2PSession)

inline jint NetI2pClientI2PSession_get_PORT_ANY(void);
#define NetI2pClientI2PSession_PORT_ANY 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pClientI2PSession, PORT_ANY, jint)

inline jint NetI2pClientI2PSession_get_PORT_UNSPECIFIED(void);
#define NetI2pClientI2PSession_PORT_UNSPECIFIED 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pClientI2PSession, PORT_UNSPECIFIED, jint)

inline jint NetI2pClientI2PSession_get_PROTO_ANY(void);
#define NetI2pClientI2PSession_PROTO_ANY 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pClientI2PSession, PROTO_ANY, jint)

inline jint NetI2pClientI2PSession_get_PROTO_UNSPECIFIED(void);
#define NetI2pClientI2PSession_PROTO_UNSPECIFIED 0
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pClientI2PSession, PROTO_UNSPECIFIED, jint)

inline jint NetI2pClientI2PSession_get_PROTO_STREAMING(void);
#define NetI2pClientI2PSession_PROTO_STREAMING 6
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pClientI2PSession, PROTO_STREAMING, jint)

inline jint NetI2pClientI2PSession_get_PROTO_DATAGRAM(void);
#define NetI2pClientI2PSession_PROTO_DATAGRAM 17
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pClientI2PSession, PROTO_DATAGRAM, jint)

inline jint NetI2pClientI2PSession_get_PROTO_DATAGRAM_RAW(void);
#define NetI2pClientI2PSession_PROTO_DATAGRAM_RAW 18
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pClientI2PSession, PROTO_DATAGRAM_RAW, jint)

J2OBJC_TYPE_LITERAL_HEADER(NetI2pClientI2PSession)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pClientI2PSession")
