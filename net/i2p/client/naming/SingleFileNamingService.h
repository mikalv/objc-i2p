//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/client/naming/SingleFileNamingService.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pClientNamingSingleFileNamingService")
#ifdef RESTRICT_NetI2pClientNamingSingleFileNamingService
#define INCLUDE_ALL_NetI2pClientNamingSingleFileNamingService 0
#else
#define INCLUDE_ALL_NetI2pClientNamingSingleFileNamingService 1
#endif
#undef RESTRICT_NetI2pClientNamingSingleFileNamingService

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pClientNamingSingleFileNamingService_) && (INCLUDE_ALL_NetI2pClientNamingSingleFileNamingService || defined(INCLUDE_NetI2pClientNamingSingleFileNamingService))
#define NetI2pClientNamingSingleFileNamingService_

#define RESTRICT_NetI2pClientNamingNamingService 1
#define INCLUDE_NetI2pClientNamingNamingService 1
#include "net/i2p/client/naming/NamingService.h"

@class JavaIoWriter;
@class JavaUtilProperties;
@class NetI2pDataDestination;
@class NetI2pI2PAppContext;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface NetI2pClientNamingSingleFileNamingService : NetI2pClientNamingNamingService

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context
                                         withNSString:(NSString *)filename;

- (void)export__WithJavaIoWriter:(JavaIoWriter *)outArg
          withJavaUtilProperties:(JavaUtilProperties *)options;

- (id<JavaUtilMap>)getBase64EntriesWithJavaUtilProperties:(JavaUtilProperties *)options;

- (id<JavaUtilMap>)getEntriesWithJavaUtilProperties:(JavaUtilProperties *)options;

- (NSString *)getName;

- (id<JavaUtilSet>)getNamesWithJavaUtilProperties:(JavaUtilProperties *)options;

- (NetI2pDataDestination *)lookupWithNSString:(NSString *)hostname
                       withJavaUtilProperties:(JavaUtilProperties *)lookupOptions
                       withJavaUtilProperties:(JavaUtilProperties *)storedOptions;

- (jboolean)putWithNSString:(NSString *)hostname
  withNetI2pDataDestination:(NetI2pDataDestination *)d
     withJavaUtilProperties:(JavaUtilProperties *)options;

- (jboolean)putIfAbsentWithNSString:(NSString *)hostname
          withNetI2pDataDestination:(NetI2pDataDestination *)d
             withJavaUtilProperties:(JavaUtilProperties *)options;

- (jboolean)removeWithNSString:(NSString *)hostname
        withJavaUtilProperties:(JavaUtilProperties *)options;

- (NSString *)reverseLookupWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                              withJavaUtilProperties:(JavaUtilProperties *)options;

- (void)shutdown;

- (jint)sizeWithJavaUtilProperties:(JavaUtilProperties *)options;

+ (void)writeOptionsWithJavaUtilProperties:(JavaUtilProperties *)options
                          withJavaIoWriter:(JavaIoWriter *)outArg;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pClientNamingSingleFileNamingService)

FOUNDATION_EXPORT void NetI2pClientNamingSingleFileNamingService_initWithNetI2pI2PAppContext_withNSString_(NetI2pClientNamingSingleFileNamingService *self, NetI2pI2PAppContext *context, NSString *filename);

FOUNDATION_EXPORT NetI2pClientNamingSingleFileNamingService *new_NetI2pClientNamingSingleFileNamingService_initWithNetI2pI2PAppContext_withNSString_(NetI2pI2PAppContext *context, NSString *filename) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pClientNamingSingleFileNamingService *create_NetI2pClientNamingSingleFileNamingService_initWithNetI2pI2PAppContext_withNSString_(NetI2pI2PAppContext *context, NSString *filename);

FOUNDATION_EXPORT void NetI2pClientNamingSingleFileNamingService_writeOptionsWithJavaUtilProperties_withJavaIoWriter_(JavaUtilProperties *options, JavaIoWriter *outArg);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pClientNamingSingleFileNamingService)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pClientNamingSingleFileNamingService")
