//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/client/impl/MessageState.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pClientImplMessageState")
#ifdef RESTRICT_NetI2pClientImplMessageState
#define INCLUDE_ALL_NetI2pClientImplMessageState 0
#else
#define INCLUDE_ALL_NetI2pClientImplMessageState 1
#endif
#undef RESTRICT_NetI2pClientImplMessageState

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pClientImplMessageState_) && (INCLUDE_ALL_NetI2pClientImplMessageState || defined(INCLUDE_NetI2pClientImplMessageState))
#define NetI2pClientImplMessageState_

@class NetI2pDataI2cpMessageId;
@class NetI2pI2PAppContext;
@protocol NetI2pClientI2PSession;
@protocol NetI2pClientSendMessageStatusListener;

@interface NetI2pClientImplMessageState : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                             withLong:(jlong)nonce
                           withNetI2pClientI2PSession:(id<NetI2pClientI2PSession>)session
                                             withLong:(jlong)expires
            withNetI2pClientSendMessageStatusListener:(id<NetI2pClientSendMessageStatusListener>)listener;

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                             withLong:(jlong)nonce
                                         withNSString:(NSString *)prefix;

- (void)cancel;

- (jlong)getElapsed;

- (jlong)getExpires;

- (NetI2pDataI2cpMessageId *)getMessageId;

- (void)receiveWithInt:(jint)status;

- (void)setMessageIdWithNetI2pDataI2cpMessageId:(NetI2pDataI2cpMessageId *)id_;

- (void)waitForAcceptWithLong:(jlong)expiration;

- (jboolean)wasAccepted;

- (jboolean)wasSuccessful;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pClientImplMessageState)

FOUNDATION_EXPORT void NetI2pClientImplMessageState_initWithNetI2pI2PAppContext_withLong_withNSString_(NetI2pClientImplMessageState *self, NetI2pI2PAppContext *ctx, jlong nonce, NSString *prefix);

FOUNDATION_EXPORT NetI2pClientImplMessageState *new_NetI2pClientImplMessageState_initWithNetI2pI2PAppContext_withLong_withNSString_(NetI2pI2PAppContext *ctx, jlong nonce, NSString *prefix) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pClientImplMessageState *create_NetI2pClientImplMessageState_initWithNetI2pI2PAppContext_withLong_withNSString_(NetI2pI2PAppContext *ctx, jlong nonce, NSString *prefix);

FOUNDATION_EXPORT void NetI2pClientImplMessageState_initWithNetI2pI2PAppContext_withLong_withNetI2pClientI2PSession_withLong_withNetI2pClientSendMessageStatusListener_(NetI2pClientImplMessageState *self, NetI2pI2PAppContext *ctx, jlong nonce, id<NetI2pClientI2PSession> session, jlong expires, id<NetI2pClientSendMessageStatusListener> listener);

FOUNDATION_EXPORT NetI2pClientImplMessageState *new_NetI2pClientImplMessageState_initWithNetI2pI2PAppContext_withLong_withNetI2pClientI2PSession_withLong_withNetI2pClientSendMessageStatusListener_(NetI2pI2PAppContext *ctx, jlong nonce, id<NetI2pClientI2PSession> session, jlong expires, id<NetI2pClientSendMessageStatusListener> listener) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pClientImplMessageState *create_NetI2pClientImplMessageState_initWithNetI2pI2PAppContext_withLong_withNetI2pClientI2PSession_withLong_withNetI2pClientSendMessageStatusListener_(NetI2pI2PAppContext *ctx, jlong nonce, id<NetI2pClientI2PSession> session, jlong expires, id<NetI2pClientSendMessageStatusListener> listener);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pClientImplMessageState)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pClientImplMessageState")
