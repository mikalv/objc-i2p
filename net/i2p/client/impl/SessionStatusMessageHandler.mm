//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/client/impl/SessionStatusMessageHandler.java
//

#include "J2ObjC_source.h"
#include "net/i2p/I2PAppContext.h"
#include "net/i2p/client/I2PSessionException.h"
#include "net/i2p/client/impl/HandlerImpl.h"
#include "net/i2p/client/impl/I2PSessionImpl.h"
#include "net/i2p/client/impl/SessionStatusMessageHandler.h"
#include "net/i2p/data/i2cp/I2CPMessage.h"
#include "net/i2p/data/i2cp/SessionId.h"
#include "net/i2p/data/i2cp/SessionStatusMessage.h"
#include "net/i2p/util/Log.h"

@implementation NetI2pClientImplSessionStatusMessageHandler

- (instancetype)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context {
  NetI2pClientImplSessionStatusMessageHandler_initWithNetI2pI2PAppContext_(self, context);
  return self;
}

- (void)handleMessageWithNetI2pDataI2cpI2CPMessage:(id<NetI2pDataI2cpI2CPMessage>)message
                withNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)session {
  if ([((NetI2pUtilLog *) nil_chk(_log_)) shouldLogWithInt:NetI2pUtilLog_DEBUG]) [_log_ debugWithNSString:JreStrcat("$@", @"Handle message ", message)];
  NetI2pDataI2cpSessionStatusMessage *msg = (NetI2pDataI2cpSessionStatusMessage *) cast_chk(message, [NetI2pDataI2cpSessionStatusMessage class]);
  [((NetI2pClientImplI2PSessionImpl *) nil_chk(session)) setSessionIdWithNetI2pDataI2cpSessionId:[((NetI2pDataI2cpSessionStatusMessage *) nil_chk(msg)) getSessionId]];
  switch ([msg getStatus]) {
    case NetI2pDataI2cpSessionStatusMessage_STATUS_CREATED:
    [_log_ infoWithNSString:@"Session created successfully"];
    break;
    case NetI2pDataI2cpSessionStatusMessage_STATUS_DESTROYED:
    [_log_ warnWithNSString:@"Session destroyed"];
    [session propogateErrorWithNSString:@"Destroyed" withJavaLangThrowable:create_NetI2pClientI2PSessionException_initWithNSString_(@"Session Status Message received")];
    [session reconnect];
    break;
    case NetI2pDataI2cpSessionStatusMessage_STATUS_INVALID:
    [_log_ warnWithNSString:@"Session invalid"];
    [session propogateErrorWithNSString:@"Invalid" withJavaLangThrowable:create_NetI2pClientI2PSessionException_initWithNSString_(@"Session Status Message received")];
    [session destroySession];
    break;
    case NetI2pDataI2cpSessionStatusMessage_STATUS_UPDATED:
    [_log_ infoWithNSString:@"Session status updated"];
    break;
    default:
    if ([_log_ shouldLogWithInt:NetI2pUtilLog_WARN]) [_log_ warnWithNSString:JreStrcat("$I", @"Unknown session status sent: ", [msg getStatus])];
  }
  return;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNetI2pI2PAppContext:);
  methods[1].selector = @selector(handleMessageWithNetI2pDataI2cpI2CPMessage:withNetI2pClientImplI2PSessionImpl:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNetI2pI2PAppContext;", "handleMessage", "LNetI2pDataI2cpI2CPMessage;LNetI2pClientImplI2PSessionImpl;" };
  static const J2ObjcClassInfo _NetI2pClientImplSessionStatusMessageHandler = { "SessionStatusMessageHandler", "net.i2p.client.impl", ptrTable, methods, NULL, 7, 0x0, 2, 0, -1, -1, -1, -1, -1 };
  return &_NetI2pClientImplSessionStatusMessageHandler;
}

@end

void NetI2pClientImplSessionStatusMessageHandler_initWithNetI2pI2PAppContext_(NetI2pClientImplSessionStatusMessageHandler *self, NetI2pI2PAppContext *context) {
  NetI2pClientImplHandlerImpl_initWithNetI2pI2PAppContext_withInt_(self, context, NetI2pDataI2cpSessionStatusMessage_MESSAGE_TYPE);
}

NetI2pClientImplSessionStatusMessageHandler *new_NetI2pClientImplSessionStatusMessageHandler_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) {
  J2OBJC_NEW_IMPL(NetI2pClientImplSessionStatusMessageHandler, initWithNetI2pI2PAppContext_, context)
}

NetI2pClientImplSessionStatusMessageHandler *create_NetI2pClientImplSessionStatusMessageHandler_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) {
  J2OBJC_CREATE_IMPL(NetI2pClientImplSessionStatusMessageHandler, initWithNetI2pI2PAppContext_, context)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pClientImplSessionStatusMessageHandler)
