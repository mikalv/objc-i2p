//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/client/impl/I2CPMessageProducer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pClientImplI2CPMessageProducer")
#ifdef RESTRICT_NetI2pClientImplI2CPMessageProducer
#define INCLUDE_ALL_NetI2pClientImplI2CPMessageProducer 0
#else
#define INCLUDE_ALL_NetI2pClientImplI2CPMessageProducer 1
#endif
#undef RESTRICT_NetI2pClientImplI2CPMessageProducer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pClientImplI2CPMessageProducer_) && (INCLUDE_ALL_NetI2pClientImplI2CPMessageProducer || defined(INCLUDE_NetI2pClientImplI2CPMessageProducer))
#define NetI2pClientImplI2CPMessageProducer_

@class IOSByteArray;
@class NetI2pClientImplI2PSessionImpl;
@class NetI2pClientSendMessageOptions;
@class NetI2pDataDestination;
@class NetI2pDataLeaseSet;
@class NetI2pDataPrivateKey;
@class NetI2pDataSessionKey;
@class NetI2pDataSessionTag;
@class NetI2pDataSigningPrivateKey;
@class NetI2pI2PAppContext;
@protocol JavaUtilSet;

@interface NetI2pClientImplI2CPMessageProducer : NSObject
@property (readonly, class) jboolean END_TO_END_CRYPTO NS_SWIFT_NAME(END_TO_END_CRYPTO);

+ (jboolean)END_TO_END_CRYPTO;

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context;

- (void)connectWithNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)session;

- (void)createLeaseSetWithNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)session
                                  withNetI2pDataLeaseSet:(NetI2pDataLeaseSet *)leaseSet
                         withNetI2pDataSigningPrivateKey:(NetI2pDataSigningPrivateKey *)signingPriv
                                withNetI2pDataPrivateKey:(NetI2pDataPrivateKey *)priv;

- (void)disconnectWithNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)session;

- (void)reportAbuseWithNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)session
                                              withInt:(jint)msgId
                                              withInt:(jint)severity;

- (void)sendMessageWithNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)session
                            withNetI2pDataDestination:(NetI2pDataDestination *)dest
                                             withLong:(jlong)nonce
                                        withByteArray:(IOSByteArray *)payload
                                             withLong:(jlong)expires
                                              withInt:(jint)flags;

- (void)sendMessageWithNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)session
                            withNetI2pDataDestination:(NetI2pDataDestination *)dest
                                             withLong:(jlong)nonce
                                        withByteArray:(IOSByteArray *)payload
                   withNetI2pClientSendMessageOptions:(NetI2pClientSendMessageOptions *)options;

- (void)sendMessageWithNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)session
                            withNetI2pDataDestination:(NetI2pDataDestination *)dest
                                             withLong:(jlong)nonce
                                        withByteArray:(IOSByteArray *)payload
                             withNetI2pDataSessionTag:(NetI2pDataSessionTag *)tag
                             withNetI2pDataSessionKey:(NetI2pDataSessionKey *)key
                                      withJavaUtilSet:(id<JavaUtilSet>)tags
                             withNetI2pDataSessionKey:(NetI2pDataSessionKey *)newKey
                                             withLong:(jlong)expires;

- (void)updateBandwidthWithNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)session;

- (void)updateTunnelsWithNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)session
                                                withInt:(jint)tunnels;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pClientImplI2CPMessageProducer)

inline jboolean NetI2pClientImplI2CPMessageProducer_get_END_TO_END_CRYPTO(void);
#define NetI2pClientImplI2CPMessageProducer_END_TO_END_CRYPTO false
J2OBJC_STATIC_FIELD_CONSTANT(NetI2pClientImplI2CPMessageProducer, END_TO_END_CRYPTO, jboolean)

FOUNDATION_EXPORT void NetI2pClientImplI2CPMessageProducer_initWithNetI2pI2PAppContext_(NetI2pClientImplI2CPMessageProducer *self, NetI2pI2PAppContext *context);

FOUNDATION_EXPORT NetI2pClientImplI2CPMessageProducer *new_NetI2pClientImplI2CPMessageProducer_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pClientImplI2CPMessageProducer *create_NetI2pClientImplI2CPMessageProducer_initWithNetI2pI2PAppContext_(NetI2pI2PAppContext *context);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pClientImplI2CPMessageProducer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pClientImplI2CPMessageProducer")
