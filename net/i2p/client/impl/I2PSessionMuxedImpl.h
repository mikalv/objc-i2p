//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/client/impl/I2PSessionMuxedImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pClientImplI2PSessionMuxedImpl")
#ifdef RESTRICT_NetI2pClientImplI2PSessionMuxedImpl
#define INCLUDE_ALL_NetI2pClientImplI2PSessionMuxedImpl 0
#else
#define INCLUDE_ALL_NetI2pClientImplI2PSessionMuxedImpl 1
#endif
#undef RESTRICT_NetI2pClientImplI2PSessionMuxedImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pClientImplI2PSessionMuxedImpl_) && (INCLUDE_ALL_NetI2pClientImplI2PSessionMuxedImpl || defined(INCLUDE_NetI2pClientImplI2PSessionMuxedImpl))
#define NetI2pClientImplI2PSessionMuxedImpl_

#define RESTRICT_NetI2pClientImplI2PSessionImpl2 1
#define INCLUDE_NetI2pClientImplI2PSessionImpl2 1
#include "net/i2p/client/impl/I2PSessionImpl2.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaUtilProperties;
@class NetI2pClientImplI2PClientMessageHandlerMap;
@class NetI2pClientImplI2PSessionImpl;
@class NetI2pClientSendMessageOptions;
@class NetI2pDataDestination;
@class NetI2pDataI2cpMessagePayloadMessage;
@class NetI2pDataSessionKey;
@class NetI2pI2PAppContext;
@protocol JavaUtilSet;
@protocol NetI2pClientI2PSessionListener;
@protocol NetI2pClientI2PSessionMuxedListener;
@protocol NetI2pClientSendMessageStatusListener;

@interface NetI2pClientImplI2PSessionMuxedImpl : NetI2pClientImplI2PSessionImpl2

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)ctx
                                withJavaIoInputStream:(JavaIoInputStream *)destKeyStream
                               withJavaUtilProperties:(JavaUtilProperties *)options;

- (void)addMuxedSessionListenerWithNetI2pClientI2PSessionMuxedListener:(id<NetI2pClientI2PSessionMuxedListener>)l
                                                               withInt:(jint)proto
                                                               withInt:(jint)port;

- (void)addNewMessageWithNetI2pDataI2cpMessagePayloadMessage:(NetI2pDataI2cpMessagePayloadMessage *)msg;

- (void)addSessionListenerWithNetI2pClientI2PSessionListener:(id<NetI2pClientI2PSessionListener>)lsnr
                                                     withInt:(jint)proto
                                                     withInt:(jint)port;

- (void)removeListenerWithInt:(jint)proto
                      withInt:(jint)port;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)proto
                                         withInt:(jint)fromport
                                         withInt:(jint)toport;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size
                                         withInt:(jint)proto
                                         withInt:(jint)fromPort
                                         withInt:(jint)toPort
              withNetI2pClientSendMessageOptions:(NetI2pClientSendMessageOptions *)options;

- (jlong)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                withByteArray:(IOSByteArray *)payload
                                      withInt:(jint)offset
                                      withInt:(jint)size
                                      withInt:(jint)proto
                                      withInt:(jint)fromPort
                                      withInt:(jint)toPort
           withNetI2pClientSendMessageOptions:(NetI2pClientSendMessageOptions *)options
    withNetI2pClientSendMessageStatusListener:(id<NetI2pClientSendMessageStatusListener>)listener;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size
                        withNetI2pDataSessionKey:(NetI2pDataSessionKey *)keyUsed
                                 withJavaUtilSet:(id<JavaUtilSet>)tagsSent
                                         withInt:(jint)proto
                                         withInt:(jint)fromport
                                         withInt:(jint)toport;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size
                        withNetI2pDataSessionKey:(NetI2pDataSessionKey *)keyUsed
                                 withJavaUtilSet:(id<JavaUtilSet>)tagsSent
                                        withLong:(jlong)expires;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size
                        withNetI2pDataSessionKey:(NetI2pDataSessionKey *)keyUsed
                                 withJavaUtilSet:(id<JavaUtilSet>)tagsSent
                                        withLong:(jlong)expires
                                         withInt:(jint)proto
                                         withInt:(jint)fromPort
                                         withInt:(jint)toPort;

- (jboolean)sendMessageWithNetI2pDataDestination:(NetI2pDataDestination *)dest
                                   withByteArray:(IOSByteArray *)payload
                                         withInt:(jint)offset
                                         withInt:(jint)size
                        withNetI2pDataSessionKey:(NetI2pDataSessionKey *)keyUsed
                                 withJavaUtilSet:(id<JavaUtilSet>)tagsSent
                                        withLong:(jlong)expires
                                         withInt:(jint)proto
                                         withInt:(jint)fromPort
                                         withInt:(jint)toPort
                                         withInt:(jint)flags;

- (void)setSessionListenerWithNetI2pClientI2PSessionListener:(id<NetI2pClientI2PSessionListener>)lsnr;

#pragma mark Protected

- (instancetype __nonnull)initWithNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)primary
                                           withJavaIoInputStream:(JavaIoInputStream *)destKeyStream
                                          withJavaUtilProperties:(JavaUtilProperties *)options;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)arg0
                               withJavaUtilProperties:(JavaUtilProperties *)arg1
       withNetI2pClientImplI2PClientMessageHandlerMap:(NetI2pClientImplI2PClientMessageHandlerMap *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pClientImplI2PSessionMuxedImpl)

FOUNDATION_EXPORT void NetI2pClientImplI2PSessionMuxedImpl_initWithNetI2pI2PAppContext_withJavaIoInputStream_withJavaUtilProperties_(NetI2pClientImplI2PSessionMuxedImpl *self, NetI2pI2PAppContext *ctx, JavaIoInputStream *destKeyStream, JavaUtilProperties *options);

FOUNDATION_EXPORT NetI2pClientImplI2PSessionMuxedImpl *new_NetI2pClientImplI2PSessionMuxedImpl_initWithNetI2pI2PAppContext_withJavaIoInputStream_withJavaUtilProperties_(NetI2pI2PAppContext *ctx, JavaIoInputStream *destKeyStream, JavaUtilProperties *options) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pClientImplI2PSessionMuxedImpl *create_NetI2pClientImplI2PSessionMuxedImpl_initWithNetI2pI2PAppContext_withJavaIoInputStream_withJavaUtilProperties_(NetI2pI2PAppContext *ctx, JavaIoInputStream *destKeyStream, JavaUtilProperties *options);

FOUNDATION_EXPORT void NetI2pClientImplI2PSessionMuxedImpl_initWithNetI2pClientImplI2PSessionImpl_withJavaIoInputStream_withJavaUtilProperties_(NetI2pClientImplI2PSessionMuxedImpl *self, NetI2pClientImplI2PSessionImpl *primary, JavaIoInputStream *destKeyStream, JavaUtilProperties *options);

FOUNDATION_EXPORT NetI2pClientImplI2PSessionMuxedImpl *new_NetI2pClientImplI2PSessionMuxedImpl_initWithNetI2pClientImplI2PSessionImpl_withJavaIoInputStream_withJavaUtilProperties_(NetI2pClientImplI2PSessionImpl *primary, JavaIoInputStream *destKeyStream, JavaUtilProperties *options) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pClientImplI2PSessionMuxedImpl *create_NetI2pClientImplI2PSessionMuxedImpl_initWithNetI2pClientImplI2PSessionImpl_withJavaIoInputStream_withJavaUtilProperties_(NetI2pClientImplI2PSessionImpl *primary, JavaIoInputStream *destKeyStream, JavaUtilProperties *options);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pClientImplI2PSessionMuxedImpl)

#endif

#if !defined (NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier_) && (INCLUDE_ALL_NetI2pClientImplI2PSessionMuxedImpl || defined(INCLUDE_NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier))
#define NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier_

#define RESTRICT_NetI2pClientImplI2PSessionImpl 1
#define INCLUDE_NetI2pClientImplI2PSessionImpl_AvailabilityNotifier 1
#include "net/i2p/client/impl/I2PSessionImpl.h"

@class NetI2pClientImplI2PSessionMuxedImpl;

@interface NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier : NetI2pClientImplI2PSessionImpl_AvailabilityNotifier

#pragma mark Public

- (instancetype __nonnull)initWithNetI2pClientImplI2PSessionMuxedImpl:(NetI2pClientImplI2PSessionMuxedImpl *)outer$;

- (void)availableWithLong:(jlong)msgId
                  withInt:(jint)size;

- (void)availableWithLong:(jlong)msgId
                  withInt:(jint)size
                  withInt:(jint)proto
                  withInt:(jint)fromPort
                  withInt:(jint)toPort;

- (void)run;

- (void)stopNotifying;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNetI2pClientImplI2PSessionImpl:(NetI2pClientImplI2PSessionImpl *)outer$ NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier)

FOUNDATION_EXPORT void NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier_initWithNetI2pClientImplI2PSessionMuxedImpl_(NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier *self, NetI2pClientImplI2PSessionMuxedImpl *outer$);

FOUNDATION_EXPORT NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier *new_NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier_initWithNetI2pClientImplI2PSessionMuxedImpl_(NetI2pClientImplI2PSessionMuxedImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier *create_NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier_initWithNetI2pClientImplI2PSessionMuxedImpl_(NetI2pClientImplI2PSessionMuxedImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pClientImplI2PSessionMuxedImpl_MuxedAvailabilityNotifier)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pClientImplI2PSessionMuxedImpl")
