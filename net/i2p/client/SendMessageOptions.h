//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/client/SendMessageOptions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetI2pClientSendMessageOptions")
#ifdef RESTRICT_NetI2pClientSendMessageOptions
#define INCLUDE_ALL_NetI2pClientSendMessageOptions 0
#else
#define INCLUDE_ALL_NetI2pClientSendMessageOptions 1
#endif
#undef RESTRICT_NetI2pClientSendMessageOptions

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetI2pClientSendMessageOptions_) && (INCLUDE_ALL_NetI2pClientSendMessageOptions || defined(INCLUDE_NetI2pClientSendMessageOptions))
#define NetI2pClientSendMessageOptions_

#define RESTRICT_NetI2pDataDateAndFlags 1
#define INCLUDE_NetI2pDataDateAndFlags 1
#include "net/i2p/data/DateAndFlags.h"

@class JavaUtilDate;
@class NetI2pClientSendMessageOptions_GzipOption;
@class NetI2pClientSendMessageOptions_Reliability;

@interface NetI2pClientSendMessageOptions : NetI2pDataDateAndFlags

#pragma mark Public

- (instancetype __nonnull)init;

- (NetI2pClientSendMessageOptions_GzipOption *)getGzip;

- (NetI2pClientSendMessageOptions_Reliability *)getReliability;

+ (NetI2pClientSendMessageOptions_Reliability *)getReliabilityWithInt:(jint)flags;

- (jboolean)getSendLeaseSet;

+ (jboolean)getSendLeaseSetWithInt:(jint)flags;

- (jint)getTagsToSend;

+ (jint)getTagsToSendWithInt:(jint)flags;

- (jint)getTagThreshold;

+ (jint)getTagThresholdWithInt:(jint)flags;

- (void)setGzipWithBoolean:(jboolean)yes;

- (void)setReliabilityWithNetI2pClientSendMessageOptions_Reliability:(NetI2pClientSendMessageOptions_Reliability *)r;

- (void)setSendLeaseSetWithBoolean:(jboolean)yes;

- (void)setTagsToSendWithInt:(jint)tags;

- (void)setTagThresholdWithInt:(jint)tags;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaUtilDate:(JavaUtilDate *)arg0
                                       withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLong:(jlong)arg0
                               withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(NetI2pClientSendMessageOptions)

FOUNDATION_EXPORT void NetI2pClientSendMessageOptions_init(NetI2pClientSendMessageOptions *self);

FOUNDATION_EXPORT NetI2pClientSendMessageOptions *new_NetI2pClientSendMessageOptions_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetI2pClientSendMessageOptions *create_NetI2pClientSendMessageOptions_init(void);

FOUNDATION_EXPORT jboolean NetI2pClientSendMessageOptions_getSendLeaseSetWithInt_(jint flags);

FOUNDATION_EXPORT jint NetI2pClientSendMessageOptions_getTagsToSendWithInt_(jint flags);

FOUNDATION_EXPORT jint NetI2pClientSendMessageOptions_getTagThresholdWithInt_(jint flags);

FOUNDATION_EXPORT NetI2pClientSendMessageOptions_Reliability *NetI2pClientSendMessageOptions_getReliabilityWithInt_(jint flags);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pClientSendMessageOptions)

#endif

#if !defined (NetI2pClientSendMessageOptions_Reliability_) && (INCLUDE_ALL_NetI2pClientSendMessageOptions || defined(INCLUDE_NetI2pClientSendMessageOptions_Reliability))
#define NetI2pClientSendMessageOptions_Reliability_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pClientSendMessageOptions_Reliability_Enum) {
  NetI2pClientSendMessageOptions_Reliability_Enum_DEFAULT = 0,
  NetI2pClientSendMessageOptions_Reliability_Enum_BEST_EFFORT = 1,
  NetI2pClientSendMessageOptions_Reliability_Enum_GUARANTEED = 2,
  NetI2pClientSendMessageOptions_Reliability_Enum_UNDEFINED = 3,
};

@interface NetI2pClientSendMessageOptions_Reliability : JavaLangEnum

@property (readonly, class, nonnull) NetI2pClientSendMessageOptions_Reliability *DEFAULT NS_SWIFT_NAME(DEFAULT);
@property (readonly, class, nonnull) NetI2pClientSendMessageOptions_Reliability *BEST_EFFORT NS_SWIFT_NAME(BEST_EFFORT);
@property (readonly, class, nonnull) NetI2pClientSendMessageOptions_Reliability *GUARANTEED NS_SWIFT_NAME(GUARANTEED);
@property (readonly, class, nonnull) NetI2pClientSendMessageOptions_Reliability *UNDEFINED NS_SWIFT_NAME(UNDEFINED);
+ (NetI2pClientSendMessageOptions_Reliability * __nonnull)DEFAULT;

+ (NetI2pClientSendMessageOptions_Reliability * __nonnull)BEST_EFFORT;

+ (NetI2pClientSendMessageOptions_Reliability * __nonnull)GUARANTEED;

+ (NetI2pClientSendMessageOptions_Reliability * __nonnull)UNDEFINED;

#pragma mark Public

+ (NetI2pClientSendMessageOptions_Reliability *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pClientSendMessageOptions_Reliability_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pClientSendMessageOptions_Reliability)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pClientSendMessageOptions_Reliability *NetI2pClientSendMessageOptions_Reliability_values_[];

inline NetI2pClientSendMessageOptions_Reliability *NetI2pClientSendMessageOptions_Reliability_get_DEFAULT(void);
J2OBJC_ENUM_CONSTANT(NetI2pClientSendMessageOptions_Reliability, DEFAULT)

inline NetI2pClientSendMessageOptions_Reliability *NetI2pClientSendMessageOptions_Reliability_get_BEST_EFFORT(void);
J2OBJC_ENUM_CONSTANT(NetI2pClientSendMessageOptions_Reliability, BEST_EFFORT)

inline NetI2pClientSendMessageOptions_Reliability *NetI2pClientSendMessageOptions_Reliability_get_GUARANTEED(void);
J2OBJC_ENUM_CONSTANT(NetI2pClientSendMessageOptions_Reliability, GUARANTEED)

inline NetI2pClientSendMessageOptions_Reliability *NetI2pClientSendMessageOptions_Reliability_get_UNDEFINED(void);
J2OBJC_ENUM_CONSTANT(NetI2pClientSendMessageOptions_Reliability, UNDEFINED)

FOUNDATION_EXPORT IOSObjectArray *NetI2pClientSendMessageOptions_Reliability_values(void);

FOUNDATION_EXPORT NetI2pClientSendMessageOptions_Reliability *NetI2pClientSendMessageOptions_Reliability_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pClientSendMessageOptions_Reliability *NetI2pClientSendMessageOptions_Reliability_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pClientSendMessageOptions_Reliability)

#endif

#if !defined (NetI2pClientSendMessageOptions_GzipOption_) && (INCLUDE_ALL_NetI2pClientSendMessageOptions || defined(INCLUDE_NetI2pClientSendMessageOptions_GzipOption))
#define NetI2pClientSendMessageOptions_GzipOption_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, NetI2pClientSendMessageOptions_GzipOption_Enum) {
  NetI2pClientSendMessageOptions_GzipOption_Enum_DEFAULT = 0,
  NetI2pClientSendMessageOptions_GzipOption_Enum_GZIP_OFF = 1,
  NetI2pClientSendMessageOptions_GzipOption_Enum_GZIP_ON = 2,
};

@interface NetI2pClientSendMessageOptions_GzipOption : JavaLangEnum

@property (readonly, class, nonnull) NetI2pClientSendMessageOptions_GzipOption *DEFAULT NS_SWIFT_NAME(DEFAULT);
@property (readonly, class, nonnull) NetI2pClientSendMessageOptions_GzipOption *GZIP_OFF NS_SWIFT_NAME(GZIP_OFF);
@property (readonly, class, nonnull) NetI2pClientSendMessageOptions_GzipOption *GZIP_ON NS_SWIFT_NAME(GZIP_ON);
+ (NetI2pClientSendMessageOptions_GzipOption * __nonnull)DEFAULT;

+ (NetI2pClientSendMessageOptions_GzipOption * __nonnull)GZIP_OFF;

+ (NetI2pClientSendMessageOptions_GzipOption * __nonnull)GZIP_ON;

#pragma mark Public

+ (NetI2pClientSendMessageOptions_GzipOption *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (NetI2pClientSendMessageOptions_GzipOption_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(NetI2pClientSendMessageOptions_GzipOption)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT NetI2pClientSendMessageOptions_GzipOption *NetI2pClientSendMessageOptions_GzipOption_values_[];

inline NetI2pClientSendMessageOptions_GzipOption *NetI2pClientSendMessageOptions_GzipOption_get_DEFAULT(void);
J2OBJC_ENUM_CONSTANT(NetI2pClientSendMessageOptions_GzipOption, DEFAULT)

inline NetI2pClientSendMessageOptions_GzipOption *NetI2pClientSendMessageOptions_GzipOption_get_GZIP_OFF(void);
J2OBJC_ENUM_CONSTANT(NetI2pClientSendMessageOptions_GzipOption, GZIP_OFF)

inline NetI2pClientSendMessageOptions_GzipOption *NetI2pClientSendMessageOptions_GzipOption_get_GZIP_ON(void);
J2OBJC_ENUM_CONSTANT(NetI2pClientSendMessageOptions_GzipOption, GZIP_ON)

FOUNDATION_EXPORT IOSObjectArray *NetI2pClientSendMessageOptions_GzipOption_values(void);

FOUNDATION_EXPORT NetI2pClientSendMessageOptions_GzipOption *NetI2pClientSendMessageOptions_GzipOption_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT NetI2pClientSendMessageOptions_GzipOption *NetI2pClientSendMessageOptions_GzipOption_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(NetI2pClientSendMessageOptions_GzipOption)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetI2pClientSendMessageOptions")
