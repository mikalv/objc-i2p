//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/net/i2p/client/I2PSimpleClient.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/Deprecated.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Properties.h"
#include "net/i2p/I2PAppContext.h"
#include "net/i2p/client/I2PSession.h"
#include "net/i2p/client/I2PSimpleClient.h"
#include "net/i2p/client/impl/I2PSimpleSession.h"
#include "net/i2p/crypto/SigType.h"
#include "net/i2p/data/Certificate.h"
#include "net/i2p/data/Destination.h"

__attribute__((unused)) static IOSObjectArray *NetI2pClientI2PSimpleClient__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *NetI2pClientI2PSimpleClient__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *NetI2pClientI2PSimpleClient__Annotations$2(void);

@implementation NetI2pClientI2PSimpleClient

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetI2pClientI2PSimpleClient_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NetI2pDataDestination *)createDestinationWithJavaIoOutputStream:(JavaIoOutputStream *)destKeyStream {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (NetI2pDataDestination *)createDestinationWithJavaIoOutputStream:(JavaIoOutputStream *)destKeyStream
                                           withNetI2pCryptoSigType:(NetI2pCryptoSigType *)type {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (NetI2pDataDestination *)createDestinationWithJavaIoOutputStream:(JavaIoOutputStream *)destKeyStream
                                         withNetI2pDataCertificate:(NetI2pDataCertificate *)cert {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (id<NetI2pClientI2PSession>)createSessionWithJavaIoInputStream:(JavaIoInputStream *)destKeyStream
                                          withJavaUtilProperties:(JavaUtilProperties *)options {
  return [self createSessionWithNetI2pI2PAppContext:NetI2pI2PAppContext_getGlobalContext() withJavaUtilProperties:options];
}

- (id<NetI2pClientI2PSession>)createSessionWithNetI2pI2PAppContext:(NetI2pI2PAppContext *)context
                                            withJavaUtilProperties:(JavaUtilProperties *)options {
  return create_NetI2pClientImplI2PSimpleSession_initWithNetI2pI2PAppContext_withJavaUtilProperties_(context, options);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNetI2pDataDestination;", 0x1, 0, 1, 2, -1, 3, -1 },
    { NULL, "LNetI2pDataDestination;", 0x1, 0, 4, 2, -1, 5, -1 },
    { NULL, "LNetI2pDataDestination;", 0x1, 0, 6, 2, -1, 7, -1 },
    { NULL, "LNetI2pClientI2PSession;", 0x1, 8, 9, 10, -1, -1, -1 },
    { NULL, "LNetI2pClientI2PSession;", 0x1, 8, 11, 10, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createDestinationWithJavaIoOutputStream:);
  methods[2].selector = @selector(createDestinationWithJavaIoOutputStream:withNetI2pCryptoSigType:);
  methods[3].selector = @selector(createDestinationWithJavaIoOutputStream:withNetI2pDataCertificate:);
  methods[4].selector = @selector(createSessionWithJavaIoInputStream:withJavaUtilProperties:);
  methods[5].selector = @selector(createSessionWithNetI2pI2PAppContext:withJavaUtilProperties:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createDestination", "LJavaIoOutputStream;", "LNetI2pI2PException;LJavaIoIOException;", (void *)&NetI2pClientI2PSimpleClient__Annotations$0, "LJavaIoOutputStream;LNetI2pCryptoSigType;", (void *)&NetI2pClientI2PSimpleClient__Annotations$1, "LJavaIoOutputStream;LNetI2pDataCertificate;", (void *)&NetI2pClientI2PSimpleClient__Annotations$2, "createSession", "LJavaIoInputStream;LJavaUtilProperties;", "LNetI2pClientI2PSessionException;", "LNetI2pI2PAppContext;LJavaUtilProperties;" };
  static const J2ObjcClassInfo _NetI2pClientI2PSimpleClient = { "I2PSimpleClient", "net.i2p.client", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, -1, -1, -1, -1 };
  return &_NetI2pClientI2PSimpleClient;
}

@end

void NetI2pClientI2PSimpleClient_init(NetI2pClientI2PSimpleClient *self) {
  NSObject_init(self);
}

NetI2pClientI2PSimpleClient *new_NetI2pClientI2PSimpleClient_init() {
  J2OBJC_NEW_IMPL(NetI2pClientI2PSimpleClient, init)
}

NetI2pClientI2PSimpleClient *create_NetI2pClientI2PSimpleClient_init() {
  J2OBJC_CREATE_IMPL(NetI2pClientI2PSimpleClient, init)
}

IOSObjectArray *NetI2pClientI2PSimpleClient__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pClientI2PSimpleClient__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *NetI2pClientI2PSimpleClient__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetI2pClientI2PSimpleClient)
