//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/gnu/crypto/prng/FortunaStandalone.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GnuCryptoPrngFortunaStandalone")
#ifdef RESTRICT_GnuCryptoPrngFortunaStandalone
#define INCLUDE_ALL_GnuCryptoPrngFortunaStandalone 0
#else
#define INCLUDE_ALL_GnuCryptoPrngFortunaStandalone 1
#endif
#undef RESTRICT_GnuCryptoPrngFortunaStandalone

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GnuCryptoPrngFortunaStandalone_) && (INCLUDE_ALL_GnuCryptoPrngFortunaStandalone || defined(INCLUDE_GnuCryptoPrngFortunaStandalone))
#define GnuCryptoPrngFortunaStandalone_

#define RESTRICT_GnuCryptoPrngBasePRNGStandalone 1
#define INCLUDE_GnuCryptoPrngBasePRNGStandalone 1
#include "gnu/crypto/prng/BasePRNGStandalone.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

#define RESTRICT_GnuCryptoPrngRandomEventListenerStandalone 1
#define INCLUDE_GnuCryptoPrngRandomEventListenerStandalone 1
#include "gnu/crypto/prng/RandomEventListenerStandalone.h"

@class GnuCryptoPrngFortunaStandalone_Generator;
@class GnuCryptoPrngRandomEventStandalone;
@class IOSByteArray;
@class IOSObjectArray;
@protocol JavaUtilMap;

@interface GnuCryptoPrngFortunaStandalone : GnuCryptoPrngBasePRNGStandalone < JavaIoSerializable, GnuCryptoPrngRandomEventListenerStandalone > {
 @public
  GnuCryptoPrngFortunaStandalone_Generator *generator_;
  IOSObjectArray *pools_;
  jlong lastReseed_;
  jint pool_;
  jint pool0Count_;
  jint reseedCount_;
}
@property (readonly, class) jint NUM_POOLS NS_SWIFT_NAME(NUM_POOLS);
@property (readonly, class) jint MIN_POOL_SIZE NS_SWIFT_NAME(MIN_POOL_SIZE);
@property (readonly, copy, class) NSString *SEED NS_SWIFT_NAME(SEED);

+ (jint)NUM_POOLS;

+ (jint)MIN_POOL_SIZE;

+ (NSString *)SEED;

#pragma mark Public

- (instancetype __nonnull)init;

- (void)addRandomByteWithByte:(jbyte)b;

- (void)addRandomBytesWithByteArray:(IOSByteArray *)buf
                            withInt:(jint)offset
                            withInt:(jint)length;

- (void)addRandomEventWithGnuCryptoPrngRandomEventStandalone:(GnuCryptoPrngRandomEventStandalone *)event;

- (void)fillBlock;

- (void)seedWithByteArray:(IOSByteArray *)val;

- (void)setupWithJavaUtilMap:(id<JavaUtilMap>)attributes;

#pragma mark Protected

- (void)allocBuffer OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuCryptoPrngFortunaStandalone)

J2OBJC_FIELD_SETTER(GnuCryptoPrngFortunaStandalone, generator_, GnuCryptoPrngFortunaStandalone_Generator *)
J2OBJC_FIELD_SETTER(GnuCryptoPrngFortunaStandalone, pools_, IOSObjectArray *)

inline jint GnuCryptoPrngFortunaStandalone_get_NUM_POOLS(void);
#define GnuCryptoPrngFortunaStandalone_NUM_POOLS 32
J2OBJC_STATIC_FIELD_CONSTANT(GnuCryptoPrngFortunaStandalone, NUM_POOLS, jint)

inline jint GnuCryptoPrngFortunaStandalone_get_MIN_POOL_SIZE(void);
#define GnuCryptoPrngFortunaStandalone_MIN_POOL_SIZE 64
J2OBJC_STATIC_FIELD_CONSTANT(GnuCryptoPrngFortunaStandalone, MIN_POOL_SIZE, jint)

inline NSString *GnuCryptoPrngFortunaStandalone_get_SEED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *GnuCryptoPrngFortunaStandalone_SEED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GnuCryptoPrngFortunaStandalone, SEED, NSString *)

FOUNDATION_EXPORT void GnuCryptoPrngFortunaStandalone_init(GnuCryptoPrngFortunaStandalone *self);

FOUNDATION_EXPORT GnuCryptoPrngFortunaStandalone *new_GnuCryptoPrngFortunaStandalone_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GnuCryptoPrngFortunaStandalone *create_GnuCryptoPrngFortunaStandalone_init(void);

J2OBJC_TYPE_LITERAL_HEADER(GnuCryptoPrngFortunaStandalone)

#endif

#if !defined (GnuCryptoPrngFortunaStandalone_Generator_) && (INCLUDE_ALL_GnuCryptoPrngFortunaStandalone || defined(INCLUDE_GnuCryptoPrngFortunaStandalone_Generator))
#define GnuCryptoPrngFortunaStandalone_Generator_

#define RESTRICT_GnuCryptoPrngBasePRNGStandalone 1
#define INCLUDE_GnuCryptoPrngBasePRNGStandalone 1
#include "gnu/crypto/prng/BasePRNGStandalone.h"

@class IOSByteArray;
@protocol JavaUtilMap;

@interface GnuCryptoPrngFortunaStandalone_Generator : GnuCryptoPrngBasePRNGStandalone < NSCopying >

#pragma mark Public

- (instancetype __nonnull)init;

- (void)addRandomByteWithByte:(jbyte)b;

- (void)addRandomBytesWithByteArray:(IOSByteArray *)seed
                            withInt:(jint)offset
                            withInt:(jint)length;

- (void)fillBlock;

- (jbyte)nextByte;

- (void)nextBytesWithByteArray:(IOSByteArray *)outArg
                       withInt:(jint)offset
                       withInt:(jint)length;

- (void)setupWithJavaUtilMap:(id<JavaUtilMap>)attributes;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuCryptoPrngFortunaStandalone_Generator)

FOUNDATION_EXPORT void GnuCryptoPrngFortunaStandalone_Generator_init(GnuCryptoPrngFortunaStandalone_Generator *self);

FOUNDATION_EXPORT GnuCryptoPrngFortunaStandalone_Generator *new_GnuCryptoPrngFortunaStandalone_Generator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GnuCryptoPrngFortunaStandalone_Generator *create_GnuCryptoPrngFortunaStandalone_Generator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(GnuCryptoPrngFortunaStandalone_Generator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GnuCryptoPrngFortunaStandalone")
