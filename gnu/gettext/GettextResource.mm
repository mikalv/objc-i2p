//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/gnu/gettext/GettextResource.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "gnu/gettext/GettextResource.h"
#include "java/io/PrintStream.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/Long.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Modifier.h"
#include "java/util/MissingResourceException.h"
#include "java/util/ResourceBundle.h"

@interface GnuGettextGettextResource ()

+ (NSString *)gettextnullWithJavaUtilResourceBundle:(JavaUtilResourceBundle *)catalog
                                       withNSString:(NSString *)msgid;

+ (NSString *)ngettextnullWithJavaUtilResourceBundle:(JavaUtilResourceBundle *)catalog
                                        withNSString:(NSString *)msgid
                                            withLong:(jlong)n;

@end

inline NSString *GnuGettextGettextResource_get_CONTEXT_GLUE(void);
static NSString *GnuGettextGettextResource_CONTEXT_GLUE = @"\x04";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GnuGettextGettextResource, CONTEXT_GLUE, NSString *)

__attribute__((unused)) static NSString *GnuGettextGettextResource_gettextnullWithJavaUtilResourceBundle_withNSString_(JavaUtilResourceBundle *catalog, NSString *msgid);

__attribute__((unused)) static NSString *GnuGettextGettextResource_ngettextnullWithJavaUtilResourceBundle_withNSString_withLong_(JavaUtilResourceBundle *catalog, NSString *msgid, jlong n);

jboolean GnuGettextGettextResource_verbose = false;

@implementation GnuGettextGettextResource

+ (jboolean)verbose {
  return GnuGettextGettextResource_verbose;
}

+ (void)setVerbose:(jboolean)value {
  GnuGettextGettextResource_verbose = value;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GnuGettextGettextResource_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)gettextnullWithJavaUtilResourceBundle:(JavaUtilResourceBundle *)catalog
                                       withNSString:(NSString *)msgid {
  return GnuGettextGettextResource_gettextnullWithJavaUtilResourceBundle_withNSString_(catalog, msgid);
}

+ (NSString *)gettextWithJavaUtilResourceBundle:(JavaUtilResourceBundle *)catalog
                                   withNSString:(NSString *)msgid {
  return GnuGettextGettextResource_gettextWithJavaUtilResourceBundle_withNSString_(catalog, msgid);
}

+ (NSString *)ngettextnullWithJavaUtilResourceBundle:(JavaUtilResourceBundle *)catalog
                                        withNSString:(NSString *)msgid
                                            withLong:(jlong)n {
  return GnuGettextGettextResource_ngettextnullWithJavaUtilResourceBundle_withNSString_withLong_(catalog, msgid, n);
}

+ (NSString *)ngettextWithJavaUtilResourceBundle:(JavaUtilResourceBundle *)catalog
                                    withNSString:(NSString *)msgid
                                    withNSString:(NSString *)msgid_plural
                                        withLong:(jlong)n {
  return GnuGettextGettextResource_ngettextWithJavaUtilResourceBundle_withNSString_withNSString_withLong_(catalog, msgid, msgid_plural, n);
}

+ (NSString *)pgettextWithJavaUtilResourceBundle:(JavaUtilResourceBundle *)catalog
                                    withNSString:(NSString *)msgctxt
                                    withNSString:(NSString *)msgid {
  return GnuGettextGettextResource_pgettextWithJavaUtilResourceBundle_withNSString_withNSString_(catalog, msgctxt, msgid);
}

+ (NSString *)npgettextWithJavaUtilResourceBundle:(JavaUtilResourceBundle *)catalog
                                     withNSString:(NSString *)msgctxt
                                     withNSString:(NSString *)msgid
                                     withNSString:(NSString *)msgid_plural
                                         withLong:(jlong)n {
  return GnuGettextGettextResource_npgettextWithJavaUtilResourceBundle_withNSString_withNSString_withNSString_withLong_(catalog, msgctxt, msgid, msgid_plural, n);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(gettextnullWithJavaUtilResourceBundle:withNSString:);
  methods[2].selector = @selector(gettextWithJavaUtilResourceBundle:withNSString:);
  methods[3].selector = @selector(ngettextnullWithJavaUtilResourceBundle:withNSString:withLong:);
  methods[4].selector = @selector(ngettextWithJavaUtilResourceBundle:withNSString:withNSString:withLong:);
  methods[5].selector = @selector(pgettextWithJavaUtilResourceBundle:withNSString:withNSString:);
  methods[6].selector = @selector(npgettextWithJavaUtilResourceBundle:withNSString:withNSString:withNSString:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "verbose", "Z", .constantValue.asLong = 0, 0x9, -1, 11, -1, -1 },
    { "CONTEXT_GLUE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
  };
  static const void *ptrTable[] = { "gettextnull", "LJavaUtilResourceBundle;LNSString;", "gettext", "ngettextnull", "LJavaUtilResourceBundle;LNSString;J", "ngettext", "LJavaUtilResourceBundle;LNSString;LNSString;J", "pgettext", "LJavaUtilResourceBundle;LNSString;LNSString;", "npgettext", "LJavaUtilResourceBundle;LNSString;LNSString;LNSString;J", &GnuGettextGettextResource_verbose, &GnuGettextGettextResource_CONTEXT_GLUE };
  static const J2ObjcClassInfo _GnuGettextGettextResource = { "GettextResource", "gnu.gettext", ptrTable, methods, fields, 7, 0x401, 7, 2, -1, -1, -1, -1, -1 };
  return &_GnuGettextGettextResource;
}

@end

void GnuGettextGettextResource_init(GnuGettextGettextResource *self) {
  JavaUtilResourceBundle_init(self);
}

NSString *GnuGettextGettextResource_gettextnullWithJavaUtilResourceBundle_withNSString_(JavaUtilResourceBundle *catalog, NSString *msgid) {
  GnuGettextGettextResource_initialize();
  @try {
    return (NSString *) cast_chk([((JavaUtilResourceBundle *) nil_chk(catalog)) getObjectWithNSString:msgid], [NSString class]);
  }
  @catch (JavaUtilMissingResourceException *e) {
    return nil;
  }
}

NSString *GnuGettextGettextResource_gettextWithJavaUtilResourceBundle_withNSString_(JavaUtilResourceBundle *catalog, NSString *msgid) {
  GnuGettextGettextResource_initialize();
  NSString *result = GnuGettextGettextResource_gettextnullWithJavaUtilResourceBundle_withNSString_(catalog, msgid);
  if (result != nil) return result;
  return msgid;
}

NSString *GnuGettextGettextResource_ngettextnullWithJavaUtilResourceBundle_withNSString_withLong_(JavaUtilResourceBundle *catalog, NSString *msgid, jlong n) {
  GnuGettextGettextResource_initialize();
  JavaUtilResourceBundle *origCatalog = catalog;
  do {
    if (GnuGettextGettextResource_verbose) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"ngettext on ", catalog)];
    JavaLangReflectMethod *handleGetObjectMethod = nil;
    JavaLangReflectMethod *getParentMethod = nil;
    @try {
      handleGetObjectMethod = [[((JavaUtilResourceBundle *) nil_chk(catalog)) java_getClass] getMethod:@"handleGetObject" parameterTypes:[IOSObjectArray arrayWithObjects:(id[]){ NSString_class_() } count:1 type:IOSClass_class_()]];
      getParentMethod = [[catalog java_getClass] getMethod:@"getParent" parameterTypes:[IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]];
    }
    @catch (JavaLangNoSuchMethodException *e) {
    }
    @catch (JavaLangSecurityException *e) {
    }
    if (GnuGettextGettextResource_verbose) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$Z$Z", @"handleGetObject = ", (handleGetObjectMethod != nil), @", getParent = ", (getParentMethod != nil))];
    if (handleGetObjectMethod != nil && JavaLangReflectModifier_isPublicWithInt_([handleGetObjectMethod getModifiers]) && getParentMethod != nil) {
      JavaLangReflectMethod *lookupMethod = nil;
      JavaLangReflectMethod *pluralEvalMethod = nil;
      @try {
        lookupMethod = [[catalog java_getClass] getMethod:@"lookup" parameterTypes:[IOSObjectArray arrayWithObjects:(id[]){ NSString_class_() } count:1 type:IOSClass_class_()]];
        pluralEvalMethod = [[catalog java_getClass] getMethod:@"pluralEval" parameterTypes:[IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(JavaLangLong, TYPE) } count:1 type:IOSClass_class_()]];
      }
      @catch (JavaLangNoSuchMethodException *e) {
      }
      @catch (JavaLangSecurityException *e) {
      }
      if (GnuGettextGettextResource_verbose) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$Z$Z", @"lookup = ", (lookupMethod != nil), @", pluralEval = ", (pluralEvalMethod != nil))];
      if (lookupMethod != nil && pluralEvalMethod != nil) {
        id localValue = nil;
        @try {
          localValue = [lookupMethod invokeWithId:catalog withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ msgid } count:1 type:NSObject_class_()]];
        }
        @catch (JavaLangIllegalAccessException *e) {
          [e printStackTrace];
        }
        @catch (JavaLangReflectInvocationTargetException *e) {
          [((JavaLangThrowable *) nil_chk([e getTargetException])) printStackTrace];
        }
        if (localValue != nil) {
          if (GnuGettextGettextResource_verbose) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"localValue = ", localValue)];
          if ([localValue isKindOfClass:[NSString class]]) return (NSString *) cast_chk(localValue, [NSString class]);
          else {
            IOSObjectArray *pluralforms = (IOSObjectArray *) cast_check(localValue, IOSClass_arrayType(NSString_class_(), 1));
            jlong i = 0;
            @try {
              i = [((JavaLangLong *) nil_chk(((JavaLangLong *) cast_chk([pluralEvalMethod invokeWithId:catalog withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(n) } count:1 type:NSObject_class_()]], [JavaLangLong class])))) longLongValue];
              if (!(i >= 0 && i < pluralforms->size_)) i = 0;
            }
            @catch (JavaLangIllegalAccessException *e) {
              [e printStackTrace];
            }
            @catch (JavaLangReflectInvocationTargetException *e) {
              [((JavaLangThrowable *) nil_chk([e getTargetException])) printStackTrace];
            }
            return IOSObjectArray_Get(pluralforms, (jint) i);
          }
        }
      }
      else {
        id localValue = nil;
        @try {
          localValue = [handleGetObjectMethod invokeWithId:catalog withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ msgid } count:1 type:NSObject_class_()]];
        }
        @catch (JavaLangIllegalAccessException *e) {
          [e printStackTrace];
        }
        @catch (JavaLangReflectInvocationTargetException *e) {
          [((JavaLangThrowable *) nil_chk([e getTargetException])) printStackTrace];
        }
        if (localValue != nil) {
          if (GnuGettextGettextResource_verbose) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"localValue = ", localValue)];
          return (NSString *) cast_chk(localValue, [NSString class]);
        }
      }
      id parentCatalog = catalog;
      @try {
        parentCatalog = [getParentMethod invokeWithId:catalog withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
      }
      @catch (JavaLangIllegalAccessException *e) {
        [e printStackTrace];
      }
      @catch (JavaLangReflectInvocationTargetException *e) {
        [((JavaLangThrowable *) nil_chk([e getTargetException])) printStackTrace];
      }
      if (parentCatalog != catalog) catalog = (JavaUtilResourceBundle *) cast_chk(parentCatalog, [JavaUtilResourceBundle class]);
      else break;
    }
    else break;
  }
  while (catalog != nil);
  if (catalog != nil) {
    id value;
    @try {
      value = [catalog getObjectWithNSString:msgid];
    }
    @catch (JavaUtilMissingResourceException *e) {
      value = nil;
    }
    if (value != nil) return (NSString *) cast_chk(value, [NSString class]);
  }
  return nil;
}

NSString *GnuGettextGettextResource_ngettextWithJavaUtilResourceBundle_withNSString_withNSString_withLong_(JavaUtilResourceBundle *catalog, NSString *msgid, NSString *msgid_plural, jlong n) {
  GnuGettextGettextResource_initialize();
  NSString *result = GnuGettextGettextResource_ngettextnullWithJavaUtilResourceBundle_withNSString_withLong_(catalog, msgid, n);
  if (result != nil) return result;
  return (n != 1 ? msgid_plural : msgid);
}

NSString *GnuGettextGettextResource_pgettextWithJavaUtilResourceBundle_withNSString_withNSString_(JavaUtilResourceBundle *catalog, NSString *msgctxt, NSString *msgid) {
  GnuGettextGettextResource_initialize();
  NSString *result = GnuGettextGettextResource_gettextnullWithJavaUtilResourceBundle_withNSString_(catalog, JreStrcat("$$$", msgctxt, GnuGettextGettextResource_CONTEXT_GLUE, msgid));
  if (result != nil) return result;
  return msgid;
}

NSString *GnuGettextGettextResource_npgettextWithJavaUtilResourceBundle_withNSString_withNSString_withNSString_withLong_(JavaUtilResourceBundle *catalog, NSString *msgctxt, NSString *msgid, NSString *msgid_plural, jlong n) {
  GnuGettextGettextResource_initialize();
  NSString *result = GnuGettextGettextResource_ngettextnullWithJavaUtilResourceBundle_withNSString_withLong_(catalog, JreStrcat("$$$", msgctxt, GnuGettextGettextResource_CONTEXT_GLUE, msgid), n);
  if (result != nil) return result;
  return (n != 1 ? msgid_plural : msgid);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GnuGettextGettextResource)
