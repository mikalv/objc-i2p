//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/java/src/gnu/getopt/Getopt.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GnuGetoptGetopt")
#ifdef RESTRICT_GnuGetoptGetopt
#define INCLUDE_ALL_GnuGetoptGetopt 0
#else
#define INCLUDE_ALL_GnuGetoptGetopt 1
#endif
#undef RESTRICT_GnuGetoptGetopt

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GnuGetoptGetopt_) && (INCLUDE_ALL_GnuGetoptGetopt || defined(INCLUDE_GnuGetoptGetopt))
#define GnuGetoptGetopt_

@class IOSObjectArray;

@interface GnuGetoptGetopt : NSObject {
 @public
  NSString *optarg_;
  jint optind__;
  jboolean opterr__;
  jint optopt__;
  NSString *nextchar_;
  NSString *optstring_;
  IOSObjectArray *long_options_;
  jboolean long_only_;
  jint longind_;
  jboolean posixly_correct_;
  jboolean longopt_handled_;
  jint first_nonopt_;
  jint last_nonopt_;
  IOSObjectArray *argv_;
  jint ordering_;
  NSString *progname_;
}
@property (readonly, class) jint REQUIRE_ORDER NS_SWIFT_NAME(REQUIRE_ORDER);
@property (readonly, class) jint PERMUTE NS_SWIFT_NAME(PERMUTE);
@property (readonly, class) jint RETURN_IN_ORDER NS_SWIFT_NAME(RETURN_IN_ORDER);

+ (jint)REQUIRE_ORDER;

+ (jint)PERMUTE;

+ (jint)RETURN_IN_ORDER;

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)progname
                         withNSStringArray:(IOSObjectArray *)argv
                              withNSString:(NSString *)optstring;

- (instancetype __nonnull)initWithNSString:(NSString *)progname
                         withNSStringArray:(IOSObjectArray *)argv
                              withNSString:(NSString *)optstring
                 withGnuGetoptLongOptArray:(IOSObjectArray *)long_options;

- (instancetype __nonnull)initWithNSString:(NSString *)progname
                         withNSStringArray:(IOSObjectArray *)argv
                              withNSString:(NSString *)optstring
                 withGnuGetoptLongOptArray:(IOSObjectArray *)long_options
                               withBoolean:(jboolean)long_only;

- (jint)getLongind;

- (jint)getopt;

- (NSString *)getOptarg;

- (jint)getOptind;

- (jint)getOptopt;

- (void)setArgvWithNSStringArray:(IOSObjectArray *)argv;

- (void)setOpterrWithBoolean:(jboolean)opterr_;

- (void)setOptindWithInt:(jint)optind_;

- (void)setOptstringWithNSString:(NSString *)optstring;

#pragma mark Protected

- (jint)checkLongOption;

- (void)exchangeWithNSStringArray:(IOSObjectArray *)argv;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuGetoptGetopt)

J2OBJC_FIELD_SETTER(GnuGetoptGetopt, optarg_, NSString *)
J2OBJC_FIELD_SETTER(GnuGetoptGetopt, nextchar_, NSString *)
J2OBJC_FIELD_SETTER(GnuGetoptGetopt, optstring_, NSString *)
J2OBJC_FIELD_SETTER(GnuGetoptGetopt, long_options_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GnuGetoptGetopt, argv_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GnuGetoptGetopt, progname_, NSString *)

inline jint GnuGetoptGetopt_get_REQUIRE_ORDER(void);
#define GnuGetoptGetopt_REQUIRE_ORDER 1
J2OBJC_STATIC_FIELD_CONSTANT(GnuGetoptGetopt, REQUIRE_ORDER, jint)

inline jint GnuGetoptGetopt_get_PERMUTE(void);
#define GnuGetoptGetopt_PERMUTE 2
J2OBJC_STATIC_FIELD_CONSTANT(GnuGetoptGetopt, PERMUTE, jint)

inline jint GnuGetoptGetopt_get_RETURN_IN_ORDER(void);
#define GnuGetoptGetopt_RETURN_IN_ORDER 3
J2OBJC_STATIC_FIELD_CONSTANT(GnuGetoptGetopt, RETURN_IN_ORDER, jint)

FOUNDATION_EXPORT void GnuGetoptGetopt_initWithNSString_withNSStringArray_withNSString_(GnuGetoptGetopt *self, NSString *progname, IOSObjectArray *argv, NSString *optstring);

FOUNDATION_EXPORT GnuGetoptGetopt *new_GnuGetoptGetopt_initWithNSString_withNSStringArray_withNSString_(NSString *progname, IOSObjectArray *argv, NSString *optstring) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GnuGetoptGetopt *create_GnuGetoptGetopt_initWithNSString_withNSStringArray_withNSString_(NSString *progname, IOSObjectArray *argv, NSString *optstring);

FOUNDATION_EXPORT void GnuGetoptGetopt_initWithNSString_withNSStringArray_withNSString_withGnuGetoptLongOptArray_(GnuGetoptGetopt *self, NSString *progname, IOSObjectArray *argv, NSString *optstring, IOSObjectArray *long_options);

FOUNDATION_EXPORT GnuGetoptGetopt *new_GnuGetoptGetopt_initWithNSString_withNSStringArray_withNSString_withGnuGetoptLongOptArray_(NSString *progname, IOSObjectArray *argv, NSString *optstring, IOSObjectArray *long_options) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GnuGetoptGetopt *create_GnuGetoptGetopt_initWithNSString_withNSStringArray_withNSString_withGnuGetoptLongOptArray_(NSString *progname, IOSObjectArray *argv, NSString *optstring, IOSObjectArray *long_options);

FOUNDATION_EXPORT void GnuGetoptGetopt_initWithNSString_withNSStringArray_withNSString_withGnuGetoptLongOptArray_withBoolean_(GnuGetoptGetopt *self, NSString *progname, IOSObjectArray *argv, NSString *optstring, IOSObjectArray *long_options, jboolean long_only);

FOUNDATION_EXPORT GnuGetoptGetopt *new_GnuGetoptGetopt_initWithNSString_withNSStringArray_withNSString_withGnuGetoptLongOptArray_withBoolean_(NSString *progname, IOSObjectArray *argv, NSString *optstring, IOSObjectArray *long_options, jboolean long_only) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GnuGetoptGetopt *create_GnuGetoptGetopt_initWithNSString_withNSStringArray_withNSString_withGnuGetoptLongOptArray_withBoolean_(NSString *progname, IOSObjectArray *argv, NSString *optstring, IOSObjectArray *long_options, jboolean long_only);

J2OBJC_TYPE_LITERAL_HEADER(GnuGetoptGetopt)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GnuGetoptGetopt")
